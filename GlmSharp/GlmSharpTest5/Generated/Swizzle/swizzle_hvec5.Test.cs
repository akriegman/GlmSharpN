using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Numerics;
using System.Linq;
using NUnit.Framework;
using Newtonsoft.Json;
using GlmSharp;

// ReSharper disable InconsistentNaming

namespace GlmSharpTest.Generated.Swizzle
{
    [TestFixture]
    public class HalfSwizzleVec5Test
    {

        [Test]
        public void xyzwvuts()
        {
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-9), new Half(7), new Half(1.5));
                var v = ov.swizzle.xx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(6), new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.xxx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4), new Half(5.5), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.xxxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5), new Half(4.5), new Half(3.5), new Half(-3));
                var v = ov.swizzle.xxxxx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3), new Half(3.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.xxxxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8.5), new Half(5.5), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.xxxxz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(-2), new Half(-9), new Half(7.5));
                var v = ov.swizzle.xxxxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2), new Half(-1), new Half(4), new Half(6));
                var v = ov.swizzle.xxxxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(-9), new Half(-7), new Half(3.5));
                var v = ov.swizzle.xxxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), Half.Zero, new Half(-4), new Half(-3.5));
                var v = ov.swizzle.xxxyx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(-8.5), new Half(9.5), new Half(5.5));
                var v = ov.swizzle.xxxyy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(8.5), new Half(2), new Half(-3));
                var v = ov.swizzle.xxxyz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4.5), new Half(9), new Half(-7.5), new Half(4));
                var v = ov.swizzle.xxxyw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(-6), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.xxxyv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4.5), new Half(0.5), new Half(-2.5), new Half(2));
                var v = ov.swizzle.xxxz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4.5), new Half(-7), new Half(-2.5), new Half(-4.5));
                var v = ov.swizzle.xxxzx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(-7.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.xxxzy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1), new Half(-3), new Half(-5.5), new Half(9.5));
                var v = ov.swizzle.xxxzz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3), new Half(8), new Half(1.5), Half.One);
                var v = ov.swizzle.xxxzw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(6.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.xxxzv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5.5), new Half(-9), Half.One, new Half(1.5));
                var v = ov.swizzle.xxxw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(4.5), new Half(6.5), Half.One);
                var v = ov.swizzle.xxxwx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4), new Half(-2), new Half(-7), new Half(6));
                var v = ov.swizzle.xxxwy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3), new Half(9.5), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.xxxwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9.5), new Half(2.5), new Half(-6.5), new Half(-2.5));
                var v = ov.swizzle.xxxww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3.5), new Half(8.5), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.xxxwv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1.5), new Half(4), new Half(7), new Half(9.5));
                var v = ov.swizzle.xxxv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-9.5), new Half(-9), new Half(-7));
                var v = ov.swizzle.xxxvx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7), new Half(-7), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.xxxvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(1.5), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.xxxvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(5), new Half(-4), new Half(-7));
                var v = ov.swizzle.xxxvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3), new Half(5.5), new Half(-5), Half.One);
                var v = ov.swizzle.xxxvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(8), new Half(8), new Half(-3.5));
                var v = ov.swizzle.xxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(3), new Half(-8), new Half(5.5));
                var v = ov.swizzle.xxyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2.5), new Half(-9.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.xxyxx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(9), new Half(7.5), new Half(7));
                var v = ov.swizzle.xxyxy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5.5), new Half(-4), new Half(7), new Half(-5.5));
                var v = ov.swizzle.xxyxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6.5), new Half(0.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.xxyxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(5), new Half(5), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.xxyxv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8), new Half(7), new Half(6.5), Half.Zero);
                var v = ov.swizzle.xxyy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(-3), new Half(-0.5), new Half(5.5));
                var v = ov.swizzle.xxyyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7.5), new Half(1.5), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.xxyyy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(8.5), new Half(6), new Half(2));
                var v = ov.swizzle.xxyyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), Half.Zero, new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.xxyyw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9), new Half(-3), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.xxyyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), Half.One, new Half(-4.5), new Half(4));
                var v = ov.swizzle.xxyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5.5), new Half(-4), new Half(7.5), new Half(-2.5));
                var v = ov.swizzle.xxyzx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(-4.5), new Half(-3), new Half(-4));
                var v = ov.swizzle.xxyzy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(1.5), Half.Zero, Half.Zero, new Half(0.5));
                var v = ov.swizzle.xxyzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), new Half(8.5), new Half(-5), new Half(6.5));
                var v = ov.swizzle.xxyzw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(7), new Half(-5.5), new Half(7), new Half(8.5));
                var v = ov.swizzle.xxyzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(-1.5), Half.Zero, new Half(-9));
                var v = ov.swizzle.xxyw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6.5), new Half(5), new Half(-4.5), new Half(-4));
                var v = ov.swizzle.xxywx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), Half.One, new Half(-9), new Half(3.5));
                var v = ov.swizzle.xxywy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4.5), new Half(-1.5), new Half(9), new Half(-1.5));
                var v = ov.swizzle.xxywz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(-2), new Half(4.5), new Half(-5));
                var v = ov.swizzle.xxyww;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-2.5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.xxywv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), new Half(5), new Half(8.5), new Half(-8));
                var v = ov.swizzle.xxyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4.5), new Half(-5.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.xxyvx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4.5), new Half(-5), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.xxyvy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(-9), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.xxyvz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(-4), new Half(-9.5), new Half(-1.5));
                var v = ov.swizzle.xxyvw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(4.5), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.xxyvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(-7), new Half(-8.5), new Half(5));
                var v = ov.swizzle.xxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4), new Half(2), Half.One, new Half(9.5));
                var v = ov.swizzle.xxzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(3.5), new Half(-9.5), new Half(-6.5));
                var v = ov.swizzle.xxzxx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4.5), new Half(-3.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.xxzxy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9), new Half(4), new Half(4), new Half(7.5));
                var v = ov.swizzle.xxzxz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8.5), new Half(-4.5), new Half(-1), new Half(-8));
                var v = ov.swizzle.xxzxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(7.5), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.xxzxv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(4.5), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.xxzy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(-7), new Half(-6.5), new Half(7));
                var v = ov.swizzle.xxzyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2.5), new Half(4.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.xxzyy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), new Half(-6.5), new Half(5), new Half(8));
                var v = ov.swizzle.xxzyz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3), new Half(-2), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.xxzyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1.5), new Half(2.5), new Half(-5.5), new Half(9));
                var v = ov.swizzle.xxzyv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(9), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.xxzz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(4), new Half(-8.5), Half.Zero);
                var v = ov.swizzle.xxzzx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(-7.5), new Half(6.5), new Half(2));
                var v = ov.swizzle.xxzzy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4), new Half(-1.5), new Half(7), new Half(-2));
                var v = ov.swizzle.xxzzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(2.5), new Half(-5), new Half(8));
                var v = ov.swizzle.xxzzw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6.5), new Half(-1), new Half(3), new Half(2.5));
                var v = ov.swizzle.xxzzv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(3.5), new Half(-4), new Half(0.5));
                var v = ov.swizzle.xxzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(8), new Half(8), new Half(-2.5));
                var v = ov.swizzle.xxzwx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(2), new Half(4), new Half(-2));
                var v = ov.swizzle.xxzwy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8.5), new Half(-6), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.xxzwz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-5.5), new Half(-2), new Half(7.5));
                var v = ov.swizzle.xxzww;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(5.5), new Half(-7), new Half(7.5));
                var v = ov.swizzle.xxzwv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-0.5), Half.Zero, new Half(-1.5), new Half(9));
                var v = ov.swizzle.xxzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(8.5), new Half(8), new Half(5), new Half(-9));
                var v = ov.swizzle.xxzvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-9.5), new Half(-9.5), new Half(6));
                var v = ov.swizzle.xxzvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4), new Half(-1.5), new Half(2), new Half(-5));
                var v = ov.swizzle.xxzvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8.5), new Half(0.5), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.xxzvw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-8.5), new Half(-6), new Half(0.5));
                var v = ov.swizzle.xxzvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7.5), new Half(2.5), new Half(-2), new Half(7));
                var v = ov.swizzle.xxw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(-4), new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.xxwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3), new Half(9), new Half(2), new Half(1.5));
                var v = ov.swizzle.xxwxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8.5), new Half(3), new Half(5), new Half(9.5));
                var v = ov.swizzle.xxwxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(2.5), Half.One, new Half(-2.5));
                var v = ov.swizzle.xxwxz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(-2), new Half(-1.5), new Half(-9));
                var v = ov.swizzle.xxwxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7), new Half(3.5), new Half(-6), new Half(-6));
                var v = ov.swizzle.xxwxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3), new Half(7), new Half(-3), new Half(0.5));
                var v = ov.swizzle.xxwy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(3.5), new Half(-5), new Half(-9));
                var v = ov.swizzle.xxwyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(-1.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.xxwyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(-6), new Half(-7), new Half(3));
                var v = ov.swizzle.xxwyz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(0.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.xxwyw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.Zero, new Half(-4.5), new Half(-7), new Half(2.5));
                var v = ov.swizzle.xxwyv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9), new Half(3.5), new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.xxwz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3), new Half(1.5), new Half(-5), new Half(-4));
                var v = ov.swizzle.xxwzx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9.5), new Half(-8), new Half(-6.5), new Half(0.5));
                var v = ov.swizzle.xxwzy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), new Half(-6), new Half(-4.5), new Half(7));
                var v = ov.swizzle.xxwzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.Zero, new Half(-6), new Half(-3), new Half(5));
                var v = ov.swizzle.xxwzw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(-6.5), new Half(4), new Half(-4));
                var v = ov.swizzle.xxwzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(-6), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.xxww;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8), Half.One, new Half(6), new Half(9));
                var v = ov.swizzle.xxwwx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3.5), Half.One, new Half(2), new Half(-7));
                var v = ov.swizzle.xxwwy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2), new Half(7), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.xxwwz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), Half.Zero, new Half(8), new Half(-9.5));
                var v = ov.swizzle.xxwww;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-8.5), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.xxwwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(-2.5), Half.One, new Half(0.5));
                var v = ov.swizzle.xxwv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6.5), new Half(5.5), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.xxwvx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9), new Half(8), new Half(-6), new Half(9));
                var v = ov.swizzle.xxwvy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(-4), new Half(6.5), new Half(3.5));
                var v = ov.swizzle.xxwvz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4), new Half(-1.5), new Half(-6.5), new Half(7));
                var v = ov.swizzle.xxwvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), new Half(7), Half.One, new Half(-6.5));
                var v = ov.swizzle.xxwvv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(-8.5), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.xxv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5), new Half(9.5), new Half(-3), new Half(4));
                var v = ov.swizzle.xxvx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6), new Half(-3.5), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.xxvxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6), new Half(-4.5), new Half(8.5), Half.One);
                var v = ov.swizzle.xxvxy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-5.5), new Half(-2.5), new Half(-8));
                var v = ov.swizzle.xxvxz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(4), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.xxvxw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(4.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.xxvxv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), new Half(-8.5), new Half(-2.5), Half.One);
                var v = ov.swizzle.xxvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), Half.Zero, new Half(2.5), new Half(4));
                var v = ov.swizzle.xxvyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(5), new Half(-1), new Half(-3));
                var v = ov.swizzle.xxvyy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), new Half(9), Half.Zero, new Half(5));
                var v = ov.swizzle.xxvyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2), new Half(4.5), new Half(9), new Half(-2));
                var v = ov.swizzle.xxvyw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.xxvyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-2.5), new Half(-4.5), new Half(8.5));
                var v = ov.swizzle.xxvz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(7.5), new Half(7.5), new Half(-1.5));
                var v = ov.swizzle.xxvzx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(2.5), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.xxvzy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4.5), new Half(3.5), new Half(-8.5), new Half(7));
                var v = ov.swizzle.xxvzz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5), new Half(3.5), new Half(2.5), new Half(-3));
                var v = ov.swizzle.xxvzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), new Half(-1), new Half(-6), new Half(3.5));
                var v = ov.swizzle.xxvzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(-9), new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.xxvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(-8.5), new Half(-3), new Half(5));
                var v = ov.swizzle.xxvwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(-2), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.xxvwy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-2), new Half(-6), new Half(-5));
                var v = ov.swizzle.xxvwz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8), new Half(-4.5), new Half(-4), new Half(7.5));
                var v = ov.swizzle.xxvww;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(4.5), new Half(-3), new Half(7.5));
                var v = ov.swizzle.xxvwv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(-7.5), new Half(3), new Half(-7));
                var v = ov.swizzle.xxvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(6), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.xxvvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(-8.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.xxvvy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(-7.5), new Half(4), new Half(-7));
                var v = ov.swizzle.xxvvz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(4.5), Half.Zero, new Half(-9.5));
                var v = ov.swizzle.xxvvw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(5), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.xxvvv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(8), new Half(-5), new Half(3.5));
                var v = ov.swizzle.xy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(8), new Half(4.5), new Half(3));
                var v = ov.swizzle.xyx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3), new Half(-8.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.xyxx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(9), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.xyxxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5), new Half(-0.5), new Half(5.5), new Half(-7));
                var v = ov.swizzle.xyxxy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(-8.5), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.xyxxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4), new Half(-8), new Half(8), new Half(-8));
                var v = ov.swizzle.xyxxw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.xyxxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(-1.5), Half.Zero, new Half(0.5));
                var v = ov.swizzle.xyxy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(9), new Half(1.5), new Half(-9.5));
                var v = ov.swizzle.xyxyx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(9.5), new Half(-2), new Half(6), new Half(7));
                var v = ov.swizzle.xyxyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7), new Half(-3), new Half(8.5), new Half(2));
                var v = ov.swizzle.xyxyz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(-5.5), new Half(-9.5), new Half(-1.5));
                var v = ov.swizzle.xyxyw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4.5), new Half(-2), new Half(6), Half.Zero);
                var v = ov.swizzle.xyxyv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7.5), new Half(-2.5), new Half(-7), new Half(-6));
                var v = ov.swizzle.xyxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8), new Half(-1.5), new Half(5), new Half(8));
                var v = ov.swizzle.xyxzx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-0.5), new Half(4), new Half(9.5));
                var v = ov.swizzle.xyxzy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(-2), Half.One, new Half(9));
                var v = ov.swizzle.xyxzz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(7), new Half(-9.5), new Half(4));
                var v = ov.swizzle.xyxzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.One, new Half(8), new Half(-3), new Half(8));
                var v = ov.swizzle.xyxzv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(2), new Half(0.5), new Half(-5.5));
                var v = ov.swizzle.xyxw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2), new Half(5.5), new Half(1.5), new Half(-8));
                var v = ov.swizzle.xyxwx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(7), new Half(-0.5), new Half(-4));
                var v = ov.swizzle.xyxwy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-9), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.xyxwz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6.5), new Half(9), new Half(7.5), Half.Zero);
                var v = ov.swizzle.xyxww;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5), new Half(7), new Half(-3), Half.Zero);
                var v = ov.swizzle.xyxwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(-6), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.xyxv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(8.5), new Half(-9.5), new Half(6));
                var v = ov.swizzle.xyxvx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-9.5), new Half(-5.5), new Half(-9));
                var v = ov.swizzle.xyxvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(-8), new Half(5), new Half(-2));
                var v = ov.swizzle.xyxvz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7.5), new Half(-0.5), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.xyxvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9.5), new Half(5), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.xyxvv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4), new Half(-7.5), new Half(0.5), new Half(-0.5));
                var v = ov.swizzle.xyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(-1), new Half(4.5), new Half(-6));
                var v = ov.swizzle.xyyx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2), new Half(8.5), new Half(-3), new Half(8));
                var v = ov.swizzle.xyyxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(-3.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.xyyxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), Half.One, Half.Zero, new Half(-4.5));
                var v = ov.swizzle.xyyxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(-7), new Half(-6), new Half(5));
                var v = ov.swizzle.xyyxw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2), new Half(8), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.xyyxv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(0.5), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.xyyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5), new Half(-6.5), new Half(-0.5), new Half(6.5));
                var v = ov.swizzle.xyyyx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6.5), new Half(-6), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.xyyyy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(-2.5), new Half(-2), new Half(4));
                var v = ov.swizzle.xyyyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(-7.5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.xyyyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(5.5), new Half(-1.5), new Half(8.5));
                var v = ov.swizzle.xyyyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3.5), Half.Zero, new Half(-5.5), new Half(8));
                var v = ov.swizzle.xyyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3), new Half(2.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.xyyzx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-3), new Half(3), new Half(-3));
                var v = ov.swizzle.xyyzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4), new Half(-4.5), new Half(-4.5), new Half(-9));
                var v = ov.swizzle.xyyzz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), new Half(6.5), new Half(3.5), new Half(7));
                var v = ov.swizzle.xyyzw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(-4.5), new Half(-2), new Half(6.5));
                var v = ov.swizzle.xyyzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9), new Half(4.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.xyyw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7.5), new Half(1.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.xyywx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(5), new Half(-2), Half.One);
                var v = ov.swizzle.xyywy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), new Half(-8), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.xyywz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(-1), new Half(9), new Half(-4));
                var v = ov.swizzle.xyyww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7.5), new Half(7), new Half(-7), new Half(-2));
                var v = ov.swizzle.xyywv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(-9.5), new Half(-4.5), new Half(7));
                var v = ov.swizzle.xyyv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(-8.5), new Half(-1), new Half(4.5));
                var v = ov.swizzle.xyyvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(2), new Half(8), new Half(5));
                var v = ov.swizzle.xyyvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9), new Half(-4.5), new Half(1.5), new Half(9.5));
                var v = ov.swizzle.xyyvz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6), new Half(3.5), new Half(-2), new Half(9.5));
                var v = ov.swizzle.xyyvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), new Half(-4.5), new Half(-7), new Half(-5));
                var v = ov.swizzle.xyyvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(-4), new Half(9), new Half(6.5));
                var v = ov.swizzle.xyz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7.5), new Half(-8.5), new Half(4), new Half(-8));
                var v = ov.swizzle.xyzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8), new Half(7), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.xyzxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8.5), new Half(2), new Half(3), new Half(2.5));
                var v = ov.swizzle.xyzxy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(-7), new Half(-8), new Half(5));
                var v = ov.swizzle.xyzxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5.5), new Half(8), new Half(-4.5), new Half(-6));
                var v = ov.swizzle.xyzxw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(4), new Half(5.5), new Half(-2));
                var v = ov.swizzle.xyzxv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(9.5), new Half(2.5), new Half(-2), new Half(-9.5));
                var v = ov.swizzle.xyzy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(7.5), new Half(-8.5), new Half(-3), new Half(-1));
                var v = ov.swizzle.xyzyx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8), new Half(5.5), new Half(-3), new Half(-7));
                var v = ov.swizzle.xyzyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(-7.5), new Half(-4.5), new Half(-6));
                var v = ov.swizzle.xyzyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(6.5), new Half(4), new Half(3.5));
                var v = ov.swizzle.xyzyw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3), new Half(6.5), new Half(-1.5), new Half(3));
                var v = ov.swizzle.xyzyv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(-3), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.xyzz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6), new Half(0.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.xyzzx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(3), new Half(6), new Half(6));
                var v = ov.swizzle.xyzzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(6.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.xyzzz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(-9), new Half(-9.5), Half.One);
                var v = ov.swizzle.xyzzw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2), new Half(-2.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.xyzzv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.Zero, new Half(3.5), new Half(8), new Half(-5));
                var v = ov.swizzle.xyzw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(9), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.xyzwx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(8.5), new Half(2.5), new Half(-3));
                var v = ov.swizzle.xyzwy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(-0.5), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.xyzwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7), new Half(-1.5), new Half(4), new Half(5.5));
                var v = ov.swizzle.xyzww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), new Half(3.5), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.xyzwv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(-2), new Half(3.5), new Half(4));
                var v = ov.swizzle.xyzv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(4.5), new Half(1.5), new Half(-3));
                var v = ov.swizzle.xyzvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(6.5), new Half(-5), new Half(6.5));
                var v = ov.swizzle.xyzvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(-2.5), new Half(6), new Half(-7.5));
                var v = ov.swizzle.xyzvz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3), new Half(-0.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.xyzvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2), new Half(-1.5), new Half(-4), new Half(1.5));
                var v = ov.swizzle.xyzvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-4.5), new Half(-4), new Half(-3));
                var v = ov.swizzle.xyw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4), new Half(5), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.xywx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(8.5), new Half(-4.5), new Half(8.5));
                var v = ov.swizzle.xywxx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(-4), new Half(7), new Half(4));
                var v = ov.swizzle.xywxy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(-3.5), Half.One, new Half(2.5));
                var v = ov.swizzle.xywxz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-0.5), new Half(1.5), new Half(3.5), new Half(4.5));
                var v = ov.swizzle.xywxw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(-8.5), Half.Zero, new Half(2));
                var v = ov.swizzle.xywxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(-6.5), Half.One, new Half(-0.5));
                var v = ov.swizzle.xywy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(8.5), new Half(5.5), new Half(9.5));
                var v = ov.swizzle.xywyx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(4), new Half(-7.5), new Half(9.5));
                var v = ov.swizzle.xywyy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8.5), new Half(-9.5), new Half(8), new Half(-9));
                var v = ov.swizzle.xywyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-5.5), new Half(-8.5), new Half(5));
                var v = ov.swizzle.xywyw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-3), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.xywyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(7.5), new Half(-7.5), new Half(3));
                var v = ov.swizzle.xywz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(-2), new Half(-9), new Half(-7));
                var v = ov.swizzle.xywzx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9.5), new Half(0.5), new Half(2), new Half(9.5));
                var v = ov.swizzle.xywzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(8), new Half(3.5), new Half(3));
                var v = ov.swizzle.xywzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-0.5), new Half(-2), new Half(-7.5), new Half(1.5));
                var v = ov.swizzle.xywzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), Half.One, new Half(6.5), new Half(-1));
                var v = ov.swizzle.xywzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(4), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.xyww;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8), new Half(-7.5), new Half(-9), new Half(3));
                var v = ov.swizzle.xywwx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), Half.One, new Half(1.5), new Half(-4));
                var v = ov.swizzle.xywwy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(-8.5), new Half(-7.5), new Half(-3));
                var v = ov.swizzle.xywwz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4), new Half(-9), new Half(0.5), new Half(0.5));
                var v = ov.swizzle.xywww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(-5), new Half(1.5), new Half(-5.5));
                var v = ov.swizzle.xywwv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(-6), new Half(8), new Half(4));
                var v = ov.swizzle.xywv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4.5), new Half(-6), new Half(-6), new Half(-4.5));
                var v = ov.swizzle.xywvx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(0.5), new Half(0.5), new Half(9));
                var v = ov.swizzle.xywvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(-9.5), new Half(8), new Half(-9));
                var v = ov.swizzle.xywvz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9.5), new Half(-9.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.xywvw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(-5), new Half(-4.5), new Half(2));
                var v = ov.swizzle.xywvv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2), new Half(0.5), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.xyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1), new Half(2.5), new Half(-2.5), Half.One);
                var v = ov.swizzle.xyvx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(4), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.xyvxx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(-0.5), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.xyvxy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3.5), new Half(6), new Half(-2), new Half(3.5));
                var v = ov.swizzle.xyvxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5), new Half(1.5), new Half(2.5), new Half(6.5));
                var v = ov.swizzle.xyvxw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(1.5), new Half(-4), new Half(-8));
                var v = ov.swizzle.xyvxv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2), new Half(5.5), Half.Zero, new Half(9));
                var v = ov.swizzle.xyvy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(3.5), new Half(7), Half.Zero);
                var v = ov.swizzle.xyvyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(-5.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.xyvyy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4.5), new Half(3.5), Half.Zero, new Half(6));
                var v = ov.swizzle.xyvyz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(-9), Half.One, new Half(-4));
                var v = ov.swizzle.xyvyw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(9.5), new Half(1.5), new Half(3));
                var v = ov.swizzle.xyvyv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), new Half(1.5), new Half(-9), new Half(-2.5));
                var v = ov.swizzle.xyvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-9.5), new Half(-1.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.xyvzx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(9.5), new Half(-2), new Half(-3));
                var v = ov.swizzle.xyvzy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(1.5), new Half(6), new Half(7), new Half(2));
                var v = ov.swizzle.xyvzz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(0.5), new Half(6), new Half(6.5));
                var v = ov.swizzle.xyvzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(4.5), new Half(-2.5), new Half(-3.5));
                var v = ov.swizzle.xyvzv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), Half.One, new Half(3), Half.One);
                var v = ov.swizzle.xyvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(4), new Half(8.5), new Half(5));
                var v = ov.swizzle.xyvwx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(-7.5), new Half(-1), new Half(6));
                var v = ov.swizzle.xyvwy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6.5), new Half(6), new Half(-0.5), new Half(3.5));
                var v = ov.swizzle.xyvwz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3), new Half(2.5), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.xyvww;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(-5.5), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.xyvwv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), Half.One, new Half(-4.5), new Half(-4));
                var v = ov.swizzle.xyvv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(1.5), new Half(5.5), new Half(9), new Half(-3));
                var v = ov.swizzle.xyvvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(8), Half.One, new Half(-0.5));
                var v = ov.swizzle.xyvvy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(-9.5), Half.Zero, new Half(7));
                var v = ov.swizzle.xyvvz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2.5), new Half(5), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.xyvvw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3), new Half(-3), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.xyvvv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9), new Half(-7.5), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.xz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(7.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.xzx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(7.5), new Half(-6), new Half(-6));
                var v = ov.swizzle.xzxx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4), new Half(0.5), new Half(8.5), new Half(-6));
                var v = ov.swizzle.xzxxx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-5.5), new Half(-6), new Half(3.5));
                var v = ov.swizzle.xzxxy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), new Half(8), new Half(1.5), new Half(-1));
                var v = ov.swizzle.xzxxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(-6.5), new Half(-9.5), new Half(2));
                var v = ov.swizzle.xzxxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4), new Half(-7.5), new Half(-8.5), Half.One);
                var v = ov.swizzle.xzxxv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(-6.5), new Half(6.5), new Half(-1));
                var v = ov.swizzle.xzxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-0.5), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.xzxyx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(-4), new Half(7.5), new Half(-9.5));
                var v = ov.swizzle.xzxyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(6), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.xzxyz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2.5), new Half(6), new Half(-4.5), new Half(3));
                var v = ov.swizzle.xzxyw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-7), new Half(-4), new Half(-8));
                var v = ov.swizzle.xzxyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7.5), new Half(9), new Half(7.5), new Half(6.5));
                var v = ov.swizzle.xzxz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(-2.5), new Half(4), new Half(-5));
                var v = ov.swizzle.xzxzx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(1.5), new Half(3), new Half(-2));
                var v = ov.swizzle.xzxzy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-3.5), Half.Zero, Half.One);
                var v = ov.swizzle.xzxzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-1.5), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.xzxzw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(7.5), new Half(3.5), new Half(2.5));
                var v = ov.swizzle.xzxzv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(-5), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.xzxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-7), Half.Zero, new Half(-7));
                var v = ov.swizzle.xzxwx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), Half.One, new Half(-8), new Half(-2));
                var v = ov.swizzle.xzxwy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(3), new Half(-3), new Half(-7));
                var v = ov.swizzle.xzxwz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(-7), new Half(-2), new Half(-5));
                var v = ov.swizzle.xzxww;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(9), new Half(4), new Half(4));
                var v = ov.swizzle.xzxwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(4.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.xzxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6), new Half(2.5), new Half(-6), new Half(5.5));
                var v = ov.swizzle.xzxvx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(-4.5), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.xzxvy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(9), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.xzxvz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-5.5), new Half(-7), new Half(-8));
                var v = ov.swizzle.xzxvw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(2), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.xzxvv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4.5), new Half(-2), new Half(6.5), new Half(-2));
                var v = ov.swizzle.xzy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4), new Half(-0.5), new Half(2), new Half(-5));
                var v = ov.swizzle.xzyx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(-2.5), new Half(-8), new Half(3.5));
                var v = ov.swizzle.xzyxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(3.5), new Half(-6.5), new Half(-9));
                var v = ov.swizzle.xzyxy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5.5), new Half(-7.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.xzyxz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4), new Half(-7), new Half(5.5), new Half(8));
                var v = ov.swizzle.xzyxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(8), new Half(2.5), new Half(-4));
                var v = ov.swizzle.xzyxv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6), new Half(-0.5), new Half(-2), new Half(3));
                var v = ov.swizzle.xzyy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(7), new Half(-3), new Half(-5));
                var v = ov.swizzle.xzyyx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(6), new Half(-6.5), new Half(1.5));
                var v = ov.swizzle.xzyyy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.One, new Half(-9), new Half(4), new Half(-9));
                var v = ov.swizzle.xzyyz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2), new Half(-7.5), new Half(-1.5), new Half(2));
                var v = ov.swizzle.xzyyw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6.5), new Half(3.5), new Half(3.5), new Half(-3));
                var v = ov.swizzle.xzyyv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5.5), new Half(5.5), new Half(3), new Half(4));
                var v = ov.swizzle.xzyz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(-7.5), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.xzyzx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(9), new Half(-5), new Half(-7));
                var v = ov.swizzle.xzyzy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(4.5), new Half(3), new Half(8));
                var v = ov.swizzle.xzyzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), new Half(3), new Half(-4), new Half(-6));
                var v = ov.swizzle.xzyzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), Half.Zero, new Half(9), new Half(-5.5));
                var v = ov.swizzle.xzyzv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-5), new Half(-4), new Half(9.5), new Half(-2.5));
                var v = ov.swizzle.xzyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3), new Half(2), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.xzywx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9.5), new Half(9.5), new Half(7), new Half(-8.5));
                var v = ov.swizzle.xzywy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(7), new Half(-2), Half.Zero);
                var v = ov.swizzle.xzywz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.One, new Half(0.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.xzyww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(1.5), new Half(-7.5), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.xzywv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8), new Half(-3), new Half(5.5), new Half(-1));
                var v = ov.swizzle.xzyv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(9), new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.xzyvx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-6), new Half(-6.5), new Half(-1.5));
                var v = ov.swizzle.xzyvy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(6.5), new Half(2.5), new Half(4.5));
                var v = ov.swizzle.xzyvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4.5), new Half(-0.5), new Half(8), Half.Zero);
                var v = ov.swizzle.xzyvw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5.5), new Half(0.5), new Half(-2.5), new Half(4.5));
                var v = ov.swizzle.xzyvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(1.5), new Half(-5), new Half(0.5), new Half(3));
                var v = ov.swizzle.xzz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(3), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.xzzx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(-8.5), new Half(1.5), new Half(-2));
                var v = ov.swizzle.xzzxx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(6), new Half(6.5), new Half(2.5));
                var v = ov.swizzle.xzzxy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5.5), new Half(-0.5), new Half(4.5), new Half(-4));
                var v = ov.swizzle.xzzxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(3), new Half(5.5), new Half(-2.5));
                var v = ov.swizzle.xzzxw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(-6.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.xzzxv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), new Half(-4.5), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.xzzy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), new Half(9.5), new Half(4.5), new Half(-6));
                var v = ov.swizzle.xzzyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(7.5), new Half(6.5), new Half(-2));
                var v = ov.swizzle.xzzyy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(3.5), new Half(4.5), new Half(6.5));
                var v = ov.swizzle.xzzyz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-9.5), new Half(-6), new Half(-2));
                var v = ov.swizzle.xzzyw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(8), new Half(9), new Half(9.5));
                var v = ov.swizzle.xzzyv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8), new Half(-1.5), new Half(-8), new Half(-4));
                var v = ov.swizzle.xzzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), Half.Zero, new Half(-3.5), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.xzzzx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(4.5), new Half(-9), new Half(2.5));
                var v = ov.swizzle.xzzzy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(0.5), new Half(6), new Half(-6.5), new Half(-0.5));
                var v = ov.swizzle.xzzzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(-0.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.xzzzw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9.5), new Half(9), new Half(8), new Half(7));
                var v = ov.swizzle.xzzzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7.5), new Half(-0.5), new Half(5.5), new Half(9));
                var v = ov.swizzle.xzzw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7), new Half(-9.5), new Half(-6.5), new Half(2));
                var v = ov.swizzle.xzzwx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(-8.5), new Half(-4), new Half(-0.5));
                var v = ov.swizzle.xzzwy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7), Half.One, new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.xzzwz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7.5), new Half(-3.5), new Half(-8.5), new Half(-9));
                var v = ov.swizzle.xzzww;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(1.5), new Half(-4), new Half(-7));
                var v = ov.swizzle.xzzwv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(-7), new Half(4), new Half(-3));
                var v = ov.swizzle.xzzv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(9.5), new Half(9), new Half(-9.5));
                var v = ov.swizzle.xzzvx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(-6.5), new Half(-9.5), new Half(2.5));
                var v = ov.swizzle.xzzvy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(-6), new Half(6), new Half(-0.5));
                var v = ov.swizzle.xzzvz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7.5), new Half(-4.5), new Half(-4.5), new Half(-7.5));
                var v = ov.swizzle.xzzvw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(7), new Half(-6), new Half(-7.5));
                var v = ov.swizzle.xzzvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(6), new Half(5), new Half(3.5));
                var v = ov.swizzle.xzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(-7), Half.Zero, new Half(3));
                var v = ov.swizzle.xzwx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(2.5), new Half(3), new Half(-4));
                var v = ov.swizzle.xzwxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4), new Half(6), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.xzwxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4), new Half(-4.5), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.xzwxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(2.5), new Half(-7.5), new Half(2));
                var v = ov.swizzle.xzwxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-6.5), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.xzwxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(-8), new Half(-2.5), new Half(-2.5));
                var v = ov.swizzle.xzwy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9.5), new Half(-5), new Half(2), new Half(-7.5));
                var v = ov.swizzle.xzwyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(-7.5), new Half(-1), new Half(6));
                var v = ov.swizzle.xzwyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-9), new Half(-5.5), new Half(1.5));
                var v = ov.swizzle.xzwyz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.Zero, new Half(-7.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.xzwyw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(4.5), new Half(8.5), new Half(-5));
                var v = ov.swizzle.xzwyv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5.5), new Half(4), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.xzwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(-9), new Half(2), new Half(-9));
                var v = ov.swizzle.xzwzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-0.5), new Half(-7.5), new Half(2), new Half(7));
                var v = ov.swizzle.xzwzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5.5), new Half(-8.5), new Half(-6), new Half(5));
                var v = ov.swizzle.xzwzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(9.5), new Half(6.5), new Half(9.5));
                var v = ov.swizzle.xzwzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7.5), Half.Zero, new Half(5), new Half(-2.5));
                var v = ov.swizzle.xzwzv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4.5), new Half(-7), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.xzww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(6), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.xzwwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9), new Half(-6), new Half(5), new Half(-8.5));
                var v = ov.swizzle.xzwwy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(-9), new Half(9), new Half(-5));
                var v = ov.swizzle.xzwwz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(-9), new Half(3.5), new Half(-4));
                var v = ov.swizzle.xzwww;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(7), new Half(-6), new Half(2));
                var v = ov.swizzle.xzwwv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5.5), new Half(-4), new Half(-5), new Half(0.5));
                var v = ov.swizzle.xzwv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(3.5), new Half(0.5), new Half(-1));
                var v = ov.swizzle.xzwvx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), new Half(9.5), new Half(-7.5), new Half(4));
                var v = ov.swizzle.xzwvy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4), new Half(4.5), new Half(-6), Half.One);
                var v = ov.swizzle.xzwvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(0.5), new Half(1.5), new Half(-2));
                var v = ov.swizzle.xzwvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-6.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.xzwvv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(0.5), new Half(-9), new Half(3));
                var v = ov.swizzle.xzv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), Half.Zero, new Half(-5), new Half(5.5));
                var v = ov.swizzle.xzvx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(-1.5), new Half(8.5), new Half(8));
                var v = ov.swizzle.xzvxx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), new Half(7.5), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.xzvxy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(1.5), new Half(2.5), new Half(-5), new Half(6.5));
                var v = ov.swizzle.xzvxz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-6.5), new Half(2), new Half(2));
                var v = ov.swizzle.xzvxw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-9), new Half(5), new Half(9.5));
                var v = ov.swizzle.xzvxv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(-9.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.xzvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(-9), new Half(-9.5), new Half(-6));
                var v = ov.swizzle.xzvyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(2.5), new Half(-7.5), new Half(-5));
                var v = ov.swizzle.xzvyy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(4.5), new Half(0.5), Half.One);
                var v = ov.swizzle.xzvyz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(-6), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.xzvyw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(7.5), new Half(-3), new Half(-8));
                var v = ov.swizzle.xzvyv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5), new Half(-6.5), new Half(8.5), new Half(6.5));
                var v = ov.swizzle.xzvz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-9), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.xzvzx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3), new Half(-2), new Half(8.5), new Half(-4));
                var v = ov.swizzle.xzvzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), Half.Zero, new Half(-1.5), new Half(-7));
                var v = ov.swizzle.xzvzz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-0.5), new Half(3), new Half(-9.5));
                var v = ov.swizzle.xzvzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(6.5), Half.One, new Half(8.5));
                var v = ov.swizzle.xzvzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(5), new Half(2), new Half(-9.5));
                var v = ov.swizzle.xzvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(1.5), new Half(3.5), new Half(-3.5), new Half(3));
                var v = ov.swizzle.xzvwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(5), new Half(9.5), new Half(-7.5));
                var v = ov.swizzle.xzvwy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-0.5), new Half(-8), new Half(8), new Half(4));
                var v = ov.swizzle.xzvwz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(8), new Half(6.5), new Half(8));
                var v = ov.swizzle.xzvww;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7), new Half(-9), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.xzvwv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(-8), new Half(0.5), new Half(9));
                var v = ov.swizzle.xzvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6), new Half(9), new Half(-9), new Half(8.5));
                var v = ov.swizzle.xzvvx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(-4), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.xzvvy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(-0.5), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.xzvvz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(-2.5), new Half(6.5), new Half(-1));
                var v = ov.swizzle.xzvvw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7.5), new Half(9), new Half(4.5), new Half(-9));
                var v = ov.swizzle.xzvvv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(-5), new Half(2), new Half(3));
                var v = ov.swizzle.xw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(-5), new Half(0.5), new Half(7));
                var v = ov.swizzle.xwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9), new Half(8.5), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.xwxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(-5.5), new Half(-7.5), new Half(-0.5));
                var v = ov.swizzle.xwxxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(7.5), new Half(6), Half.Zero);
                var v = ov.swizzle.xwxxy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9.5), new Half(-8.5), new Half(-9), new Half(2));
                var v = ov.swizzle.xwxxz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(-5), Half.Zero, new Half(9.5));
                var v = ov.swizzle.xwxxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(-2), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.xwxxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(8.5), new Half(-4), new Half(-2));
                var v = ov.swizzle.xwxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4.5), new Half(-7), new Half(-3), new Half(2));
                var v = ov.swizzle.xwxyx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3), new Half(-1.5), new Half(4), new Half(7));
                var v = ov.swizzle.xwxyy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-5), new Half(8), Half.One, new Half(6.5));
                var v = ov.swizzle.xwxyz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(5.5), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.xwxyw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(8.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.xwxyv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2.5), new Half(2), new Half(-6.5), new Half(-6.5));
                var v = ov.swizzle.xwxz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-6.5), new Half(5.5), new Half(7.5));
                var v = ov.swizzle.xwxzx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7.5), new Half(8), new Half(-7), new Half(3.5));
                var v = ov.swizzle.xwxzy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-1), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.xwxzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5.5), new Half(9), new Half(-3.5), new Half(-7.5));
                var v = ov.swizzle.xwxzw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(-1), new Half(-6.5), new Half(8));
                var v = ov.swizzle.xwxzv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6.5), new Half(5), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.xwxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1), new Half(4), new Half(-8.5), new Half(-1));
                var v = ov.swizzle.xwxwx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(-3), new Half(4), new Half(-5.5));
                var v = ov.swizzle.xwxwy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6.5), new Half(-9), new Half(4.5), new Half(-1.5));
                var v = ov.swizzle.xwxwz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), new Half(5), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.xwxww;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7), new Half(-7), Half.Zero, new Half(8));
                var v = ov.swizzle.xwxwv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8), new Half(9.5), new Half(-2.5), new Half(7.5));
                var v = ov.swizzle.xwxv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(-1), new Half(-9), new Half(-3));
                var v = ov.swizzle.xwxvx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4), new Half(-0.5), new Half(-8.5), new Half(5));
                var v = ov.swizzle.xwxvy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(5), Half.One, new Half(-2.5));
                var v = ov.swizzle.xwxvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-7), new Half(5.5), new Half(-5));
                var v = ov.swizzle.xwxvw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-6.5), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.xwxvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4.5), new Half(4), new Half(-3), new Half(4.5));
                var v = ov.swizzle.xwy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2.5), new Half(-3.5), new Half(6), new Half(7));
                var v = ov.swizzle.xwyx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2), new Half(9.5), new Half(-7.5), new Half(5.5));
                var v = ov.swizzle.xwyxx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3), new Half(-5.5), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.xwyxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-5), new Half(-3), new Half(-6));
                var v = ov.swizzle.xwyxz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(4), new Half(-2), new Half(1.5));
                var v = ov.swizzle.xwyxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(4.5), new Half(0.5), new Half(8));
                var v = ov.swizzle.xwyxv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.Zero, new Half(-7), new Half(-2.5), Half.Zero);
                var v = ov.swizzle.xwyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(8.5), new Half(4.5), new Half(8));
                var v = ov.swizzle.xwyyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(4.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.xwyyy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5), new Half(5), new Half(6.5), new Half(2));
                var v = ov.swizzle.xwyyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9.5), new Half(1.5), new Half(6.5), new Half(-7));
                var v = ov.swizzle.xwyyw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(-4), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.xwyyv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8), new Half(8), new Half(-4), new Half(6.5));
                var v = ov.swizzle.xwyz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2.5), new Half(6.5), new Half(-7), new Half(-2));
                var v = ov.swizzle.xwyzx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(-9.5), new Half(4), new Half(5.5));
                var v = ov.swizzle.xwyzy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(4), new Half(-5.5), new Half(-0.5));
                var v = ov.swizzle.xwyzz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(8.5), new Half(-1.5), new Half(-6));
                var v = ov.swizzle.xwyzw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-9.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.xwyzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(-6.5), new Half(-4), new Half(-5.5));
                var v = ov.swizzle.xwyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(-8.5), new Half(3), Half.Zero);
                var v = ov.swizzle.xwywx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(-0.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.xwywy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(-2.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.xwywz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(0.5), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.xwyww;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-8.5), new Half(7.5), new Half(-7));
                var v = ov.swizzle.xwywv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6), new Half(-3.5), new Half(-9.5), new Half(1.5));
                var v = ov.swizzle.xwyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(5), new Half(-9.5), new Half(3.5));
                var v = ov.swizzle.xwyvx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), Half.One, new Half(-5.5), new Half(-4));
                var v = ov.swizzle.xwyvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(9.5), new Half(-4), new Half(-5), new Half(7.5));
                var v = ov.swizzle.xwyvz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6.5), new Half(-9.5), new Half(9), new Half(9.5));
                var v = ov.swizzle.xwyvw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(7.5), new Half(-4), new Half(-2.5));
                var v = ov.swizzle.xwyvv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1), new Half(-5.5), new Half(-3.5), new Half(-7.5));
                var v = ov.swizzle.xwz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(9), new Half(3.5), new Half(6));
                var v = ov.swizzle.xwzx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), new Half(6), new Half(7), new Half(-6));
                var v = ov.swizzle.xwzxx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7.5), new Half(5), new Half(-2), new Half(-2.5));
                var v = ov.swizzle.xwzxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6), new Half(6), Half.Zero, new Half(8.5));
                var v = ov.swizzle.xwzxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2.5), new Half(-7), new Half(-9.5), new Half(3.5));
                var v = ov.swizzle.xwzxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(2.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.xwzxv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-5), Half.One, new Half(4));
                var v = ov.swizzle.xwzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(-9.5), new Half(7), new Half(8));
                var v = ov.swizzle.xwzyx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(-3), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.xwzyy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), new Half(-4.5), new Half(-3.5), new Half(-0.5));
                var v = ov.swizzle.xwzyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-5.5), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.xwzyw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(-0.5), Half.Zero, new Half(2.5));
                var v = ov.swizzle.xwzyv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-4), new Half(6.5), new Half(2));
                var v = ov.swizzle.xwzz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(3), new Half(6), new Half(7.5));
                var v = ov.swizzle.xwzzx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3.5), new Half(8.5), new Half(1.5), new Half(-4));
                var v = ov.swizzle.xwzzy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-6.5), new Half(2.5), new Half(-8));
                var v = ov.swizzle.xwzzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7), new Half(5), new Half(3), new Half(5.5));
                var v = ov.swizzle.xwzzw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8), new Half(-3.5), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.xwzzv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.Zero, new Half(-9.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.xwzw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(-6), new Half(1.5), new Half(-6));
                var v = ov.swizzle.xwzwx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6.5), new Half(-9), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.xwzwy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(2.5), new Half(-5), new Half(8));
                var v = ov.swizzle.xwzwz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(7.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.xwzww;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6.5), new Half(-1), Half.Zero, new Half(3.5));
                var v = ov.swizzle.xwzwv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(-0.5), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.xwzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6), new Half(-6.5), new Half(-8), new Half(1.5));
                var v = ov.swizzle.xwzvx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8.5), new Half(2.5), new Half(-6), new Half(8));
                var v = ov.swizzle.xwzvy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-7), new Half(-8.5), new Half(5));
                var v = ov.swizzle.xwzvz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4.5), new Half(-2), new Half(5), new Half(-4));
                var v = ov.swizzle.xwzvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3), new Half(7.5), new Half(9), new Half(-4.5));
                var v = ov.swizzle.xwzvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(-5), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.xww;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), new Half(4.5), new Half(-5), new Half(-5));
                var v = ov.swizzle.xwwx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5.5), new Half(-4), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.xwwxx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(-8.5), new Half(-3), Half.One);
                var v = ov.swizzle.xwwxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(-0.5), new Half(5.5), new Half(0.5));
                var v = ov.swizzle.xwwxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(-6.5), new Half(-1), new Half(-3));
                var v = ov.swizzle.xwwxw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-3), new Half(3.5), new Half(5));
                var v = ov.swizzle.xwwxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(4.5), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.xwwy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), Half.One, new Half(5), new Half(-6.5));
                var v = ov.swizzle.xwwyx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(-1.5), new Half(-3), new Half(3));
                var v = ov.swizzle.xwwyy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7.5), new Half(-5.5), new Half(8), new Half(-3.5));
                var v = ov.swizzle.xwwyz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3), new Half(-9.5), new Half(7), new Half(-5));
                var v = ov.swizzle.xwwyw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(-6.5), new Half(2), new Half(-2));
                var v = ov.swizzle.xwwyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-8.5), new Half(-8), new Half(9));
                var v = ov.swizzle.xwwz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(-2.5), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.xwwzx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8), new Half(-6.5), new Half(-3), new Half(-1));
                var v = ov.swizzle.xwwzy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(9), new Half(6), Half.One);
                var v = ov.swizzle.xwwzz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4.5), new Half(4), new Half(6), new Half(9.5));
                var v = ov.swizzle.xwwzw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(-3.5), new Half(-9), new Half(2));
                var v = ov.swizzle.xwwzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1), new Half(9.5), new Half(4.5), new Half(9));
                var v = ov.swizzle.xwww;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), new Half(-1), new Half(3), new Half(-7));
                var v = ov.swizzle.xwwwx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(2.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.xwwwy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(7), new Half(7.5), new Half(-8));
                var v = ov.swizzle.xwwwz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.Zero, new Half(-7), Half.Zero, new Half(0.5));
                var v = ov.swizzle.xwwww;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(-4), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.xwwwv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(8), new Half(-0.5), new Half(2.5));
                var v = ov.swizzle.xwwv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(-0.5), new Half(2), new Half(2));
                var v = ov.swizzle.xwwvx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(5), new Half(-0.5), new Half(-2.5));
                var v = ov.swizzle.xwwvy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(-2.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.xwwvz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(-0.5), Half.One, new Half(3));
                var v = ov.swizzle.xwwvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), new Half(8.5), new Half(3), new Half(-8.5));
                var v = ov.swizzle.xwwvv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), new Half(2.5), new Half(-5), new Half(2.5));
                var v = ov.swizzle.xwv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2.5), new Half(2), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.xwvx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(0.5), new Half(4), new Half(4.5), new Half(-2));
                var v = ov.swizzle.xwvxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5.5), new Half(-2.5), new Half(-4), new Half(4));
                var v = ov.swizzle.xwvxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-1.5), new Half(5), new Half(-1.5));
                var v = ov.swizzle.xwvxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9.5), new Half(6), new Half(-3.5), new Half(3.5));
                var v = ov.swizzle.xwvxw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(-4.5), new Half(-8.5), Half.Zero);
                var v = ov.swizzle.xwvxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7), new Half(1.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.xwvy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(2), new Half(7.5), new Half(4));
                var v = ov.swizzle.xwvyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(4.5), new Half(0.5), new Half(-3));
                var v = ov.swizzle.xwvyy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6), new Half(-4.5), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.xwvyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1.5), new Half(-2.5), new Half(-3.5), new Half(2));
                var v = ov.swizzle.xwvyw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9.5), new Half(-7), new Half(1.5), new Half(-0.5));
                var v = ov.swizzle.xwvyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4), new Half(-6.5), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.xwvz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(0.5), new Half(1.5), new Half(4));
                var v = ov.swizzle.xwvzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(0.5), Half.One, new Half(-8));
                var v = ov.swizzle.xwvzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(-7), new Half(-3), new Half(0.5));
                var v = ov.swizzle.xwvzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5.5), new Half(-3.5), new Half(5.5), new Half(-9));
                var v = ov.swizzle.xwvzw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-0.5), new Half(4), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.xwvzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3), new Half(-1), new Half(8), new Half(-6));
                var v = ov.swizzle.xwvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), Half.One, new Half(7), new Half(9.5));
                var v = ov.swizzle.xwvwx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(3.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.xwvwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8.5), new Half(-3.5), new Half(8), new Half(4));
                var v = ov.swizzle.xwvwz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(3), Half.One, new Half(5.5));
                var v = ov.swizzle.xwvww;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(-1.5), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.xwvwv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9.5), new Half(5.5), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.xwvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(-8.5), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.xwvvx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(8), new Half(-3), new Half(1.5));
                var v = ov.swizzle.xwvvy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(0.5), new Half(-4), new Half(-4));
                var v = ov.swizzle.xwvvz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3), new Half(5.5), new Half(0.5), new Half(8.5));
                var v = ov.swizzle.xwvvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(8), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.xwvvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(-3.5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.xv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(9.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.xvx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7), Half.Zero, new Half(5.5), new Half(-3));
                var v = ov.swizzle.xvxx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(0.5), new Half(-1), new Half(-9));
                var v = ov.swizzle.xvxxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-4), Half.One, new Half(-8));
                var v = ov.swizzle.xvxxy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(4), new Half(6.5), new Half(7));
                var v = ov.swizzle.xvxxz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7.5), new Half(8), new Half(2), new Half(-2.5));
                var v = ov.swizzle.xvxxw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(-7.5), new Half(6.5), new Half(2.5));
                var v = ov.swizzle.xvxxv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-9.5), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.xvxy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3), Half.Zero, new Half(-7), new Half(-6.5));
                var v = ov.swizzle.xvxyx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(8.5), new Half(3.5), new Half(2.5));
                var v = ov.swizzle.xvxyy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5), new Half(-4.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.xvxyz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6), new Half(2), new Half(2), new Half(6));
                var v = ov.swizzle.xvxyw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8), new Half(8.5), new Half(8), Half.One);
                var v = ov.swizzle.xvxyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(4.5), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.xvxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7), new Half(-0.5), new Half(-3.5), new Half(2.5));
                var v = ov.swizzle.xvxzx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-1.5), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.xvxzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.xvxzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(-4), Half.Zero, new Half(7.5));
                var v = ov.swizzle.xvxzw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(-7), new Half(-8), new Half(-3));
                var v = ov.swizzle.xvxzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4), new Half(2.5), new Half(-6), new Half(6));
                var v = ov.swizzle.xvxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(-9.5), new Half(9), new Half(3));
                var v = ov.swizzle.xvxwx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6), new Half(8.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.xvxwy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-0.5), new Half(-9.5), new Half(3));
                var v = ov.swizzle.xvxwz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(-1.5), new Half(-9), new Half(5.5));
                var v = ov.swizzle.xvxww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(3.5), new Half(-8.5), new Half(4));
                var v = ov.swizzle.xvxwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(0.5), new Half(-1), new Half(-3), new Half(-5));
                var v = ov.swizzle.xvxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2), new Half(-2), new Half(6), new Half(-1));
                var v = ov.swizzle.xvxvx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(4), new Half(6), new Half(9.5));
                var v = ov.swizzle.xvxvy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(7.5), new Half(-9.5), new Half(5));
                var v = ov.swizzle.xvxvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9), new Half(7.5), new Half(-5), new Half(-1));
                var v = ov.swizzle.xvxvw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(-3), new Half(-8.5), new Half(3));
                var v = ov.swizzle.xvxvv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(9.5), new Half(5), new Half(-4));
                var v = ov.swizzle.xvy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(-4.5), Half.One, new Half(8));
                var v = ov.swizzle.xvyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(-6.5), new Half(8), new Half(-4.5));
                var v = ov.swizzle.xvyxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(-8.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.xvyxy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.Zero, new Half(-4), new Half(-6), new Half(-3));
                var v = ov.swizzle.xvyxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(5.5), new Half(2), new Half(2.5));
                var v = ov.swizzle.xvyxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(1.5), new Half(2), new Half(5.5));
                var v = ov.swizzle.xvyxv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(8.5), new Half(3.5), Half.Zero);
                var v = ov.swizzle.xvyy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(6.5), new Half(-2), new Half(-3.5));
                var v = ov.swizzle.xvyyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), new Half(-0.5), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.xvyyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(2.5), new Half(-6), new Half(-6));
                var v = ov.swizzle.xvyyz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-6.5), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.xvyyw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(-7.5), new Half(8), new Half(-4));
                var v = ov.swizzle.xvyyv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4.5), new Half(-9.5), new Half(-4), new Half(7.5));
                var v = ov.swizzle.xvyz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(-1.5), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.xvyzx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4), new Half(2), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.xvyzy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(5), new Half(-8), new Half(7.5));
                var v = ov.swizzle.xvyzz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6), new Half(-5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.xvyzw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5.5), new Half(5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.xvyzv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8), new Half(-2.5), new Half(7.5), new Half(5));
                var v = ov.swizzle.xvyw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6), new Half(-6), new Half(3.5), new Half(-9));
                var v = ov.swizzle.xvywx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(-3), new Half(6.5), new Half(-9));
                var v = ov.swizzle.xvywy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5), new Half(4.5), new Half(5.5), new Half(3));
                var v = ov.swizzle.xvywz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(3), new Half(-1), new Half(-6));
                var v = ov.swizzle.xvyww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9), new Half(3.5), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.xvywv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(0.5), new Half(-3.5), new Half(4));
                var v = ov.swizzle.xvyv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8), new Half(4), new Half(-5.5), new Half(7));
                var v = ov.swizzle.xvyvx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(-2), new Half(9.5), new Half(4.5));
                var v = ov.swizzle.xvyvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3.5), new Half(-8), new Half(8), new Half(-1));
                var v = ov.swizzle.xvyvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.One, new Half(-1), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.xvyvw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4), new Half(-6), new Half(-7.5), new Half(2.5));
                var v = ov.swizzle.xvyvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4), new Half(-6.5), new Half(5), new Half(7));
                var v = ov.swizzle.xvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-2.5), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.xvzx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1), new Half(-1), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.xvzxx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(4), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.xvzxy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(-4.5), new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.xvzxz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4), new Half(7.5), new Half(5.5), new Half(3.5));
                var v = ov.swizzle.xvzxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(-6.5), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.xvzxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4), new Half(5), new Half(1.5), new Half(-5));
                var v = ov.swizzle.xvzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6), new Half(-3.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.xvzyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(1.5), new Half(-7.5), new Half(-4), new Half(-6));
                var v = ov.swizzle.xvzyy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(8.5), new Half(6.5), new Half(-2));
                var v = ov.swizzle.xvzyz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-0.5), Half.One, new Half(-4), new Half(7.5));
                var v = ov.swizzle.xvzyw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(1.5), new Half(9.5), new Half(5));
                var v = ov.swizzle.xvzyv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(-8), Half.Zero, new Half(8));
                var v = ov.swizzle.xvzz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(-4), new Half(2), new Half(-2));
                var v = ov.swizzle.xvzzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6), new Half(6), new Half(2), new Half(8));
                var v = ov.swizzle.xvzzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(-5.5), new Half(-9.5), new Half(-5));
                var v = ov.swizzle.xvzzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(-3.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.xvzzw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(2.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.xvzzv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(-3.5), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.xvzw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3), new Half(-8.5), new Half(4), new Half(5));
                var v = ov.swizzle.xvzwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3.5), new Half(5.5), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.xvzwy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6.5), new Half(9.5), new Half(4), new Half(-9));
                var v = ov.swizzle.xvzwz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(-2), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.xvzww;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.Zero, new Half(8.5), Half.One, new Half(-2.5));
                var v = ov.swizzle.xvzwv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3.5), new Half(-9.5), new Half(3.5), new Half(-9));
                var v = ov.swizzle.xvzv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(3.5), new Half(-4), new Half(-2));
                var v = ov.swizzle.xvzvx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1), new Half(-9), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.xvzvy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(2), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.xvzvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), new Half(-1.5), new Half(-5), new Half(6.5));
                var v = ov.swizzle.xvzvw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4), new Half(2), new Half(1.5), new Half(2));
                var v = ov.swizzle.xvzvv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5), new Half(-9.5), new Half(-7), new Half(8.5));
                var v = ov.swizzle.xvw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6), new Half(2), new Half(5), Half.Zero);
                var v = ov.swizzle.xvwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(-3.5), new Half(3.5), new Half(-3));
                var v = ov.swizzle.xvwxx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(7.5), Half.One, new Half(-7.5));
                var v = ov.swizzle.xvwxy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-6), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.xvwxz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5), new Half(4), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.xvwxw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), Half.One, new Half(-1), new Half(-6));
                var v = ov.swizzle.xvwxv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(1.5), Half.One, new Half(-6), new Half(-5.5));
                var v = ov.swizzle.xvwy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5), new Half(6.5), new Half(-7.5), new Half(-6));
                var v = ov.swizzle.xvwyx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8), new Half(4.5), new Half(2), new Half(3.5));
                var v = ov.swizzle.xvwyy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), Half.Zero, new Half(8), new Half(-5.5));
                var v = ov.swizzle.xvwyz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(8.5), new Half(6.5), new Half(-0.5), new Half(5.5));
                var v = ov.swizzle.xvwyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(4), new Half(-7.5), new Half(6));
                var v = ov.swizzle.xvwyv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2.5), new Half(-5), new Half(-8), new Half(-9.5));
                var v = ov.swizzle.xvwz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6), new Half(-7.5), new Half(-8), new Half(0.5));
                var v = ov.swizzle.xvwzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(3.5), new Half(7), new Half(-9));
                var v = ov.swizzle.xvwzy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(2), new Half(3), new Half(3));
                var v = ov.swizzle.xvwzz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), new Half(2.5), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.xvwzw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5.5), new Half(-3), new Half(-8.5), new Half(1.5));
                var v = ov.swizzle.xvwzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(-4), new Half(-6), new Half(1.5));
                var v = ov.swizzle.xvww;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(-7), new Half(-7.5), new Half(-7.5));
                var v = ov.swizzle.xvwwx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4.5), new Half(-7.5), new Half(-9), new Half(-2));
                var v = ov.swizzle.xvwwy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5), new Half(-1.5), new Half(-1), new Half(8));
                var v = ov.swizzle.xvwwz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8.5), Half.Zero, new Half(-9), new Half(-9.5));
                var v = ov.swizzle.xvwww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4.5), new Half(-1.5), new Half(9.5), new Half(-2.5));
                var v = ov.swizzle.xvwwv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), Half.One, new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.xvwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2.5), new Half(-8), new Half(-7), new Half(6.5));
                var v = ov.swizzle.xvwvx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(-9.5), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.xvwvy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(-4), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.xvwvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), Half.One, new Half(-2), new Half(9));
                var v = ov.swizzle.xvwvw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(5.5), new Half(5.5), new Half(-6.5));
                var v = ov.swizzle.xvwvv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(-8), new Half(5.5), new Half(5));
                var v = ov.swizzle.xvv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(5.5), new Half(-9.5), Half.One);
                var v = ov.swizzle.xvvx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(-1), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.xvvxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8), new Half(-9), new Half(-8), new Half(-8));
                var v = ov.swizzle.xvvxy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8.5), new Half(-4), new Half(-6), new Half(9.5));
                var v = ov.swizzle.xvvxz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.One, new Half(0.5), new Half(-6), new Half(6));
                var v = ov.swizzle.xvvxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(-7.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.xvvxv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7), new Half(-4.5), new Half(-7), Half.One);
                var v = ov.swizzle.xvvy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(4.5), new Half(-4), new Half(-5));
                var v = ov.swizzle.xvvyx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6.5), new Half(-2.5), new Half(-4.5), new Half(-6.5));
                var v = ov.swizzle.xvvyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-8), new Half(-8), new Half(9));
                var v = ov.swizzle.xvvyz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.Zero, Half.One, new Half(6.5), new Half(5.5));
                var v = ov.swizzle.xvvyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-9.5), new Half(-3), new Half(0.5));
                var v = ov.swizzle.xvvyv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-7), new Half(6), new Half(-8));
                var v = ov.swizzle.xvvz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(2), new Half(-7), Half.Zero);
                var v = ov.swizzle.xvvzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), Half.Zero, Half.One, new Half(8.5));
                var v = ov.swizzle.xvvzy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(4), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.xvvzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(4), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.xvvzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5), new Half(-0.5), new Half(-8.5), new Half(2));
                var v = ov.swizzle.xvvzv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(-8.5), new Half(-6.5), new Half(9.5));
                var v = ov.swizzle.xvvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(-8.5), new Half(7), new Half(-3));
                var v = ov.swizzle.xvvwx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), Half.Zero, new Half(-7), new Half(5.5));
                var v = ov.swizzle.xvvwy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, Half.Zero, new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.xvvwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-0.5), new Half(-3.5), new Half(-9.5), Half.One);
                var v = ov.swizzle.xvvww;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, new Half(2.5), new Half(5), new Half(9));
                var v = ov.swizzle.xvvwv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(-7.5), new Half(-4), new Half(-6));
                var v = ov.swizzle.xvvv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5), new Half(-8), Half.One, new Half(2));
                var v = ov.swizzle.xvvvx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2.5), new Half(7.5), new Half(-9.5), new Half(-2));
                var v = ov.swizzle.xvvvy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4), new Half(-2.5), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.xvvvz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(1.5), new Half(7.5), new Half(-8));
                var v = ov.swizzle.xvvvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), Half.One, new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.xvvvv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1.5), new Half(-5), new Half(7.5), new Half(-8));
                var v = ov.swizzle.yx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(-3.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.yxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(8.5), new Half(5.5), new Half(-0.5));
                var v = ov.swizzle.yxxx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(6), new Half(7), new Half(2.5));
                var v = ov.swizzle.yxxxx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(3), new Half(-4.5), new Half(3));
                var v = ov.swizzle.yxxxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2), new Half(-5.5), new Half(6.5), new Half(-8.5));
                var v = ov.swizzle.yxxxz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(6.5), new Half(3), new Half(6));
                var v = ov.swizzle.yxxxw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), Half.Zero, Half.One, new Half(5.5));
                var v = ov.swizzle.yxxxv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(-3.5), new Half(-1.5), new Half(5));
                var v = ov.swizzle.yxxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6), new Half(6.5), new Half(8), new Half(-3.5));
                var v = ov.swizzle.yxxyx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(3.5), new Half(-1.5), new Half(-2));
                var v = ov.swizzle.yxxyy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5.5), new Half(0.5), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.yxxyz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(0.5), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.yxxyw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(5.5), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.yxxyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(4), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.yxxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(-5), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.yxxzx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-6), new Half(-5), new Half(9), new Half(-8));
                var v = ov.swizzle.yxxzy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(8), new Half(1.5), new Half(-5.5));
                var v = ov.swizzle.yxxzz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(5), new Half(4), new Half(-0.5));
                var v = ov.swizzle.yxxzw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7.5), new Half(6), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.yxxzv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(7), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.yxxw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(-9.5), new Half(6), new Half(-3));
                var v = ov.swizzle.yxxwx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(9), new Half(-5), new Half(3.5));
                var v = ov.swizzle.yxxwy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-8.5), Half.One, new Half(-8.5));
                var v = ov.swizzle.yxxwz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(4), new Half(4), new Half(2));
                var v = ov.swizzle.yxxww;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3.5), Half.Zero, new Half(-6.5), new Half(-5.5));
                var v = ov.swizzle.yxxwv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9), new Half(-5.5), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.yxxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7), new Half(1.5), new Half(7.5), new Half(6));
                var v = ov.swizzle.yxxvx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), Half.One, new Half(-9), new Half(-2.5));
                var v = ov.swizzle.yxxvy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8), new Half(1.5), new Half(-2), Half.Zero);
                var v = ov.swizzle.yxxvz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7), new Half(5), new Half(9), new Half(6.5));
                var v = ov.swizzle.yxxvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(3), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.yxxvv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(7.5), new Half(-6.5), new Half(-1));
                var v = ov.swizzle.yxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(-3.5), new Half(3.5), new Half(8));
                var v = ov.swizzle.yxyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(-5.5), new Half(5.5), new Half(-5.5));
                var v = ov.swizzle.yxyxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(-4.5), new Half(-7), new Half(1.5));
                var v = ov.swizzle.yxyxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(-0.5), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.yxyxz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4), new Half(-4), new Half(-2.5), Half.One);
                var v = ov.swizzle.yxyxw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(9), new Half(-2), new Half(-9.5));
                var v = ov.swizzle.yxyxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(-8), new Half(8), new Half(9));
                var v = ov.swizzle.yxyy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(1.5), new Half(7.5), new Half(3), new Half(-8));
                var v = ov.swizzle.yxyyx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), new Half(9), new Half(-3.5), new Half(-1.5));
                var v = ov.swizzle.yxyyy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(1.5), new Half(-3.5), new Half(0.5), new Half(-7));
                var v = ov.swizzle.yxyyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(-4), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.yxyyw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(8.5), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.yxyyv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(-3), new Half(-5), new Half(8));
                var v = ov.swizzle.yxyz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8.5), new Half(-7), new Half(7), new Half(4));
                var v = ov.swizzle.yxyzx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7.5), new Half(-3.5), new Half(4), new Half(4.5));
                var v = ov.swizzle.yxyzy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3), new Half(-1.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.yxyzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9), new Half(-9), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.yxyzw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(-9), new Half(-7.5), new Half(5));
                var v = ov.swizzle.yxyzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(4), new Half(3), Half.One);
                var v = ov.swizzle.yxyw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9.5), new Half(5.5), new Half(-7), new Half(-4));
                var v = ov.swizzle.yxywx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), new Half(-8), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.yxywy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3), new Half(8), new Half(4), new Half(3.5));
                var v = ov.swizzle.yxywz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(9.5), new Half(4.5), new Half(-7.5));
                var v = ov.swizzle.yxyww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(-8), new Half(-3.5), new Half(-7.5));
                var v = ov.swizzle.yxywv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9), new Half(4.5), Half.One, new Half(-1.5));
                var v = ov.swizzle.yxyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2.5), new Half(-6.5), new Half(3), Half.One);
                var v = ov.swizzle.yxyvx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), new Half(-1), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.yxyvy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(2.5), new Half(5.5), new Half(5.5));
                var v = ov.swizzle.yxyvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1), new Half(-5), new Half(-0.5), new Half(5));
                var v = ov.swizzle.yxyvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3.5), new Half(-1), new Half(-7.5), new Half(3));
                var v = ov.swizzle.yxyvv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2), new Half(8), new Half(5.5), new Half(-9));
                var v = ov.swizzle.yxz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(-6), new Half(7.5), new Half(-5));
                var v = ov.swizzle.yxzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(5), new Half(2), new Half(-7.5));
                var v = ov.swizzle.yxzxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2), new Half(-5), Half.One, new Half(-9));
                var v = ov.swizzle.yxzxy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1.5), new Half(-7.5), new Half(0.5), Half.Zero);
                var v = ov.swizzle.yxzxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(5), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.yxzxw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7.5), Half.Zero, new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.yxzxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9.5), new Half(-6), new Half(5), new Half(5));
                var v = ov.swizzle.yxzy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4.5), new Half(4.5), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.yxzyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4), new Half(-2), new Half(6), new Half(-5));
                var v = ov.swizzle.yxzyy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(8), new Half(2), new Half(6));
                var v = ov.swizzle.yxzyz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(-9), new Half(4.5), new Half(5.5));
                var v = ov.swizzle.yxzyw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(-9.5), Half.One, new Half(-5.5));
                var v = ov.swizzle.yxzyv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9.5), new Half(6), new Half(-4), new Half(-3));
                var v = ov.swizzle.yxzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6.5), new Half(8), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.yxzzx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3.5), Half.One, new Half(6.5), new Half(9.5));
                var v = ov.swizzle.yxzzy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(8.5), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.yxzzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(8.5), new Half(2.5), new Half(4));
                var v = ov.swizzle.yxzzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(-8.5), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.yxzzv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4), new Half(2.5), new Half(7.5), new Half(-4));
                var v = ov.swizzle.yxzw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8.5), new Half(8.5), new Half(4.5), new Half(-6.5));
                var v = ov.swizzle.yxzwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(-3), new Half(6), new Half(5.5));
                var v = ov.swizzle.yxzwy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-7.5), new Half(4.5), new Half(-6));
                var v = ov.swizzle.yxzwz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7), new Half(8.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.yxzww;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7.5), new Half(-4), new Half(8), new Half(-6.5));
                var v = ov.swizzle.yxzwv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(8.5), new Half(-2), new Half(-0.5));
                var v = ov.swizzle.yxzv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), Half.One, new Half(3), new Half(-6.5), new Half(-9));
                var v = ov.swizzle.yxzvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4.5), new Half(3), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.yxzvy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.Zero, new Half(1.5), new Half(7.5), new Half(-4));
                var v = ov.swizzle.yxzvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9.5), new Half(-3.5), new Half(4.5), new Half(4.5));
                var v = ov.swizzle.yxzvw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(5), new Half(-3.5), new Half(7));
                var v = ov.swizzle.yxzvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(0.5), new Half(-1), new Half(-2));
                var v = ov.swizzle.yxw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-1), Half.Zero, new Half(-8), new Half(-0.5));
                var v = ov.swizzle.yxwx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(9.5), new Half(-5), new Half(5.5));
                var v = ov.swizzle.yxwxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), Half.Zero, new Half(6.5), new Half(8));
                var v = ov.swizzle.yxwxy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(-7), new Half(4.5), new Half(-4));
                var v = ov.swizzle.yxwxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(4), new Half(-7), new Half(8.5));
                var v = ov.swizzle.yxwxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(-8), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.yxwxv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(2.5), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.yxwy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9.5), new Half(-3), new Half(8), new Half(-5.5));
                var v = ov.swizzle.yxwyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.Zero, new Half(-2), new Half(8.5), new Half(9.5));
                var v = ov.swizzle.yxwyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5), new Half(9), new Half(-7), Half.One);
                var v = ov.swizzle.yxwyz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(6.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.yxwyw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6), new Half(-5.5), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.yxwyv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7.5), new Half(-5.5), new Half(4.5), new Half(9.5));
                var v = ov.swizzle.yxwz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7.5), new Half(-5), new Half(-6), new Half(-8));
                var v = ov.swizzle.yxwzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(8), new Half(9), new Half(-9));
                var v = ov.swizzle.yxwzy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(5), new Half(-7), new Half(-7.5));
                var v = ov.swizzle.yxwzz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), Half.Zero, new Half(-4), new Half(-4));
                var v = ov.swizzle.yxwzw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), new Half(4.5), new Half(-4.5), new Half(8.5));
                var v = ov.swizzle.yxwzv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(3.5), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.yxww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(-7), new Half(8.5), new Half(8));
                var v = ov.swizzle.yxwwx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(1.5), new Half(3.5), new Half(9.5), new Half(4.5));
                var v = ov.swizzle.yxwwy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9.5), new Half(-3.5), new Half(-9), new Half(-0.5));
                var v = ov.swizzle.yxwwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(6), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.yxwww;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6.5), new Half(9), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.yxwwv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2.5), new Half(-0.5), new Half(-7), new Half(2.5));
                var v = ov.swizzle.yxwv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(-1.5), new Half(-9), new Half(-7.5));
                var v = ov.swizzle.yxwvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(7), new Half(7), new Half(-1.5));
                var v = ov.swizzle.yxwvy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2.5), Half.One, new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.yxwvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7.5), new Half(-6), new Half(6.5), new Half(3.5));
                var v = ov.swizzle.yxwvw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8), new Half(6.5), new Half(-3.5), new Half(-7.5));
                var v = ov.swizzle.yxwvv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(6.5), new Half(-3.5), new Half(-2.5));
                var v = ov.swizzle.yxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(-6), new Half(6), new Half(2));
                var v = ov.swizzle.yxvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(7), new Half(6.5), new Half(4.5));
                var v = ov.swizzle.yxvxx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(8.5), new Half(8), new Half(-0.5));
                var v = ov.swizzle.yxvxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4.5), new Half(0.5), new Half(5.5), new Half(-4.5));
                var v = ov.swizzle.yxvxz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-2), new Half(3.5), new Half(-5.5), new Half(7));
                var v = ov.swizzle.yxvxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(2), new Half(6.5), new Half(-8.5));
                var v = ov.swizzle.yxvxv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(-8.5), new Half(-8.5), new Half(-9.5));
                var v = ov.swizzle.yxvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(5.5), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.yxvyx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), new Half(-9), Half.One, new Half(-1.5));
                var v = ov.swizzle.yxvyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9), new Half(-2.5), new Half(6.5), new Half(7));
                var v = ov.swizzle.yxvyz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), Half.One, Half.One, new Half(-3.5));
                var v = ov.swizzle.yxvyw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(2.5), new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.yxvyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8), new Half(-1), new Half(-5), new Half(6));
                var v = ov.swizzle.yxvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3), new Half(-7), new Half(-0.5), new Half(-1.5));
                var v = ov.swizzle.yxvzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9.5), new Half(-3), new Half(-6), new Half(8));
                var v = ov.swizzle.yxvzy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(1.5), new Half(6.5), new Half(-6));
                var v = ov.swizzle.yxvzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.Zero, new Half(5), new Half(-0.5), new Half(-5));
                var v = ov.swizzle.yxvzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(-9), new Half(5.5), new Half(-5.5));
                var v = ov.swizzle.yxvzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(6.5), new Half(6.5), Half.One);
                var v = ov.swizzle.yxvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3), new Half(3), new Half(5.5), new Half(-4.5));
                var v = ov.swizzle.yxvwx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3.5), new Half(8.5), new Half(8), new Half(8));
                var v = ov.swizzle.yxvwy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(-4.5), new Half(3.5), Half.Zero);
                var v = ov.swizzle.yxvwz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7), new Half(6.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.yxvww;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-7.5), new Half(9.5), new Half(4.5));
                var v = ov.swizzle.yxvwv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3.5), new Half(-7.5), new Half(4), new Half(4.5));
                var v = ov.swizzle.yxvv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(-6), new Half(-4), Half.Zero);
                var v = ov.swizzle.yxvvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1.5), new Half(6.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.yxvvy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.One, new Half(6.5), new Half(-8.5), new Half(8));
                var v = ov.swizzle.yxvvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7), new Half(-4.5), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.yxvvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), new Half(-4), new Half(0.5), new Half(-5.5));
                var v = ov.swizzle.yxvvv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), new Half(4), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.yy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(4.5), new Half(-4), new Half(3.5));
                var v = ov.swizzle.yyx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(-1), new Half(2.5), new Half(-9));
                var v = ov.swizzle.yyxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8.5), new Half(-4.5), new Half(-3.5), new Half(-2.5));
                var v = ov.swizzle.yyxxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), Half.Zero, new Half(1.5), new Half(-3.5));
                var v = ov.swizzle.yyxxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8), new Half(-1.5), new Half(-5.5), new Half(-9));
                var v = ov.swizzle.yyxxz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(-3.5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.yyxxw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5.5), new Half(6.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.yyxxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(-6.5), new Half(-1.5), new Half(5));
                var v = ov.swizzle.yyxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(2.5), new Half(-6), new Half(4));
                var v = ov.swizzle.yyxyx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.One, new Half(-1.5), new Half(2), new Half(8));
                var v = ov.swizzle.yyxyy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(-3), new Half(-4), new Half(8.5));
                var v = ov.swizzle.yyxyz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(-1), new Half(5.5), new Half(4));
                var v = ov.swizzle.yyxyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(-8.5), new Half(5.5), new Half(-9));
                var v = ov.swizzle.yyxyv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(7.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.yyxz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5.5), new Half(-3), new Half(-4.5), new Half(4));
                var v = ov.swizzle.yyxzx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(-2), new Half(-9), new Half(-6.5));
                var v = ov.swizzle.yyxzy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(-5.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.yyxzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(-7.5), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.yyxzw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(-2.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.yyxzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-5.5), new Half(6.5), new Half(7.5), new Half(-3));
                var v = ov.swizzle.yyxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(-4), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.yyxwx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8), new Half(-2.5), new Half(9), new Half(-9.5));
                var v = ov.swizzle.yyxwy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(2.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.yyxwz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), Half.Zero, new Half(6.5), new Half(9.5));
                var v = ov.swizzle.yyxww;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(8), new Half(-9.5), new Half(1.5));
                var v = ov.swizzle.yyxwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(-0.5), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.yyxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-5), new Half(5), new Half(-2));
                var v = ov.swizzle.yyxvx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1.5), new Half(8.5), new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.yyxvy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), new Half(-2), new Half(8), new Half(3.5));
                var v = ov.swizzle.yyxvz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-5), new Half(4), new Half(-8.5));
                var v = ov.swizzle.yyxvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), Half.Zero, new Half(7.5), new Half(1.5));
                var v = ov.swizzle.yyxvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4.5), new Half(3.5), new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.yyy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(4.5), new Half(-3.5), new Half(-4.5));
                var v = ov.swizzle.yyyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(-3.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.yyyxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(-9), new Half(9), new Half(0.5));
                var v = ov.swizzle.yyyxy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), Half.Zero, new Half(-2.5), new Half(-5));
                var v = ov.swizzle.yyyxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(-4.5), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.yyyxw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9), new Half(-8), new Half(-4), new Half(4));
                var v = ov.swizzle.yyyxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(4), new Half(5.5), new Half(9));
                var v = ov.swizzle.yyyy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), new Half(-3.5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.yyyyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(-5), new Half(8), new Half(7.5));
                var v = ov.swizzle.yyyyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4), new Half(0.5), new Half(6), new Half(3.5));
                var v = ov.swizzle.yyyyz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(5), new Half(-9), new Half(-8));
                var v = ov.swizzle.yyyyw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(-8.5), new Half(5), new Half(-4));
                var v = ov.swizzle.yyyyv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(-2), new Half(5.5), new Half(8));
                var v = ov.swizzle.yyyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(-5.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.yyyzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(-6), new Half(-6), new Half(4.5));
                var v = ov.swizzle.yyyzy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7), new Half(-6), new Half(-5), new Half(3.5));
                var v = ov.swizzle.yyyzz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(-1), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.yyyzw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-0.5), new Half(-3.5), new Half(-7), new Half(-5));
                var v = ov.swizzle.yyyzv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7), new Half(-9.5), new Half(-1), new Half(7));
                var v = ov.swizzle.yyyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5), new Half(-9), Half.Zero, new Half(-1));
                var v = ov.swizzle.yyywx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8.5), new Half(0.5), new Half(6), new Half(-5.5));
                var v = ov.swizzle.yyywy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9), new Half(-0.5), new Half(-5.5), new Half(-2.5));
                var v = ov.swizzle.yyywz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(6), new Half(-3), new Half(7));
                var v = ov.swizzle.yyyww;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(1.5), new Half(7), new Half(-5));
                var v = ov.swizzle.yyywv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(6), new Half(-4.5), new Half(5));
                var v = ov.swizzle.yyyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(4), new Half(8), new Half(1.5));
                var v = ov.swizzle.yyyvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(-6), new Half(4), new Half(-9.5));
                var v = ov.swizzle.yyyvy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(3), new Half(6.5), new Half(-5));
                var v = ov.swizzle.yyyvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(2), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.yyyvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.One, new Half(7), new Half(2), new Half(3.5));
                var v = ov.swizzle.yyyvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5), new Half(-1), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.yyz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4), new Half(4), Half.One, new Half(-6.5));
                var v = ov.swizzle.yyzx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4), new Half(-8.5), new Half(3.5), new Half(2));
                var v = ov.swizzle.yyzxx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), Half.One, new Half(2.5), new Half(-6.5));
                var v = ov.swizzle.yyzxy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(2), new Half(4.5), new Half(2.5), Half.One);
                var v = ov.swizzle.yyzxz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5.5), new Half(-7), new Half(6.5), new Half(-0.5));
                var v = ov.swizzle.yyzxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), Half.One, new Half(-5), new Half(5.5));
                var v = ov.swizzle.yyzxv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9), new Half(1.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.yyzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4.5), new Half(2), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.yyzyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9), new Half(8), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.yyzyy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9.5), new Half(-6), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.yyzyz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(-8), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.yyzyw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(7), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.yyzyv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(6), new Half(8.5), new Half(3.5));
                var v = ov.swizzle.yyzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(-1), new Half(8.5), new Half(-2));
                var v = ov.swizzle.yyzzx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-7.5), new Half(5), Half.One);
                var v = ov.swizzle.yyzzy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(-0.5), new Half(5), new Half(-6));
                var v = ov.swizzle.yyzzz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.Zero, new Half(-7.5), new Half(7.5), Half.One);
                var v = ov.swizzle.yyzzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(7), new Half(-6), new Half(1.5));
                var v = ov.swizzle.yyzzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3.5), new Half(1.5), new Half(-0.5), new Half(-6));
                var v = ov.swizzle.yyzw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(-1), new Half(4.5), new Half(-3));
                var v = ov.swizzle.yyzwx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(-8), new Half(7), new Half(5.5));
                var v = ov.swizzle.yyzwy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8.5), new Half(-2), new Half(-7.5), new Half(6.5));
                var v = ov.swizzle.yyzwz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7), new Half(2), new Half(5.5), new Half(-6.5));
                var v = ov.swizzle.yyzww;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(0.5), new Half(8), new Half(6.5), new Half(3));
                var v = ov.swizzle.yyzwv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3), new Half(4.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.yyzv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(2.5), new Half(0.5), new Half(-4));
                var v = ov.swizzle.yyzvx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4), new Half(5.5), new Half(2.5), new Half(-3));
                var v = ov.swizzle.yyzvy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6.5), new Half(-4), new Half(2), new Half(8));
                var v = ov.swizzle.yyzvz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), new Half(-4.5), new Half(-9), new Half(4));
                var v = ov.swizzle.yyzvw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5.5), new Half(5.5), new Half(6), new Half(4));
                var v = ov.swizzle.yyzvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(-5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.yyw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4.5), new Half(-1), new Half(8), new Half(9.5));
                var v = ov.swizzle.yywx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(-7.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.yywxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(9), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.yywxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(6), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.yywxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(-6), new Half(2), new Half(3.5));
                var v = ov.swizzle.yywxw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4), new Half(-3.5), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.yywxv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(3), new Half(7.5), new Half(-4));
                var v = ov.swizzle.yywy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2), new Half(5), new Half(2), new Half(-4.5));
                var v = ov.swizzle.yywyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(-7), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.yywyy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4), new Half(-3), new Half(4.5), new Half(-6));
                var v = ov.swizzle.yywyz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(-1.5), new Half(-8), new Half(6));
                var v = ov.swizzle.yywyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(8), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.yywyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9.5), new Half(6.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.yywz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8), new Half(-3), new Half(8), new Half(4.5));
                var v = ov.swizzle.yywzx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2), new Half(3), Half.One, new Half(-1.5));
                var v = ov.swizzle.yywzy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-2.5), new Half(-9.5), Half.Zero);
                var v = ov.swizzle.yywzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.Zero, new Half(1.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.yywzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(-3.5), new Half(0.5), new Half(2.5));
                var v = ov.swizzle.yywzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-0.5), new Half(-4), new Half(-5));
                var v = ov.swizzle.yyww;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(-2.5), new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.yywwx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(4), Half.Zero, new Half(9.5));
                var v = ov.swizzle.yywwy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(-3.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.yywwz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(1.5), new Half(-1.5), new Half(-6), new Half(1.5));
                var v = ov.swizzle.yywww;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-0.5), new Half(-3.5), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.yywwv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6.5), new Half(-6.5), new Half(-6), new Half(5.5));
                var v = ov.swizzle.yywv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7.5), new Half(-0.5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.yywvx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4), new Half(-2.5), new Half(0.5), new Half(-6));
                var v = ov.swizzle.yywvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6.5), new Half(1.5), new Half(-2), new Half(-0.5));
                var v = ov.swizzle.yywvz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(6.5), new Half(5), new Half(-2));
                var v = ov.swizzle.yywvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(-4), new Half(-6.5), new Half(4));
                var v = ov.swizzle.yywvv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5.5), new Half(4.5), new Half(-6), new Half(8.5));
                var v = ov.swizzle.yyv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(-1.5), new Half(5), new Half(-3.5));
                var v = ov.swizzle.yyvx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4), new Half(8.5), new Half(4), new Half(-4));
                var v = ov.swizzle.yyvxx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3), new Half(8.5), Half.Zero, new Half(4.5));
                var v = ov.swizzle.yyvxy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8.5), new Half(-5), new Half(2), new Half(-3));
                var v = ov.swizzle.yyvxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(-8), new Half(4), new Half(-2.5));
                var v = ov.swizzle.yyvxw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(8), new Half(6), new Half(-6.5), new Half(9));
                var v = ov.swizzle.yyvxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-2), new Half(2.5), new Half(-4));
                var v = ov.swizzle.yyvy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7), new Half(-4.5), new Half(-4.5), new Half(3));
                var v = ov.swizzle.yyvyx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(1.5), new Half(2.5), new Half(3));
                var v = ov.swizzle.yyvyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(-4), new Half(-1.5), new Half(0.5));
                var v = ov.swizzle.yyvyz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(1.5), new Half(2), new Half(-5.5));
                var v = ov.swizzle.yyvyw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(-6.5), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.yyvyv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-6), new Half(5.5), new Half(-3.5));
                var v = ov.swizzle.yyvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(6), new Half(-3.5), new Half(-7));
                var v = ov.swizzle.yyvzx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(-0.5), new Half(9.5), new Half(6));
                var v = ov.swizzle.yyvzy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(-3.5), Half.Zero, new Half(-7.5));
                var v = ov.swizzle.yyvzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(-8), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.yyvzw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(8), new Half(7), new Half(8.5));
                var v = ov.swizzle.yyvzv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5.5), new Half(6), new Half(7.5), new Half(-3.5));
                var v = ov.swizzle.yyvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2), new Half(6.5), new Half(5), new Half(-6));
                var v = ov.swizzle.yyvwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-2.5), new Half(-2), new Half(-5.5));
                var v = ov.swizzle.yyvwy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9.5), new Half(2.5), new Half(5.5), new Half(-2.5));
                var v = ov.swizzle.yyvwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-5), new Half(-6.5), new Half(7.5), new Half(7));
                var v = ov.swizzle.yyvww;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9.5), new Half(-6.5), new Half(2), new Half(7));
                var v = ov.swizzle.yyvwv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), new Half(8.5), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.yyvv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(2.5), new Half(-4), new Half(8.5));
                var v = ov.swizzle.yyvvx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(-9.5), new Half(-4.5), new Half(7));
                var v = ov.swizzle.yyvvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(5), new Half(7), new Half(-1.5));
                var v = ov.swizzle.yyvvz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5.5), new Half(-4), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.yyvvw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.One, new Half(9), new Half(0.5), new Half(3));
                var v = ov.swizzle.yyvvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9), new Half(3.5), new Half(7.5), new Half(-5));
                var v = ov.swizzle.yz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(9.5), new Half(-3), new Half(2));
                var v = ov.swizzle.yzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2.5), new Half(-8), new Half(6.5), new Half(2.5));
                var v = ov.swizzle.yzxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5.5), new Half(7.5), new Half(-0.5), new Half(6.5));
                var v = ov.swizzle.yzxxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5), new Half(-5), new Half(-5), new Half(9));
                var v = ov.swizzle.yzxxy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8), new Half(-7), new Half(-1), new Half(7.5));
                var v = ov.swizzle.yzxxz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5.5), new Half(2), new Half(-1), new Half(-1));
                var v = ov.swizzle.yzxxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4), new Half(-7.5), new Half(9), new Half(-7));
                var v = ov.swizzle.yzxxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(8), new Half(3.5), new Half(5), new Half(-0.5));
                var v = ov.swizzle.yzxy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7), new Half(-7), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.yzxyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(-8.5), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.yzxyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4), new Half(-9), new Half(-1.5), new Half(9));
                var v = ov.swizzle.yzxyz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(-1.5), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.yzxyw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4.5), new Half(7), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.yzxyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-2.5), new Half(-2), new Half(9.5));
                var v = ov.swizzle.yzxz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8.5), new Half(9), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.yzxzx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(-1.5), new Half(-8), new Half(0.5));
                var v = ov.swizzle.yzxzy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), new Half(9), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.yzxzz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3.5), new Half(4.5), Half.Zero, new Half(5.5));
                var v = ov.swizzle.yzxzw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(-8), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.yzxzv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(0.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.yzxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(8), new Half(4.5), new Half(-6.5));
                var v = ov.swizzle.yzxwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(3.5), new Half(-1.5), new Half(-8.5));
                var v = ov.swizzle.yzxwy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(9), new Half(-4.5), new Half(6));
                var v = ov.swizzle.yzxwz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6), new Half(-3.5), new Half(-0.5), new Half(6));
                var v = ov.swizzle.yzxww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(-2.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.yzxwv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(-2.5), new Half(9.5), new Half(-4));
                var v = ov.swizzle.yzxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(-8), new Half(3), new Half(6.5));
                var v = ov.swizzle.yzxvx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(-5), new Half(7.5), new Half(4));
                var v = ov.swizzle.yzxvy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(5), new Half(-9.5), new Half(5));
                var v = ov.swizzle.yzxvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(2.5), new Half(-6), new Half(7.5));
                var v = ov.swizzle.yzxvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), Half.One, new Half(3), new Half(-7.5));
                var v = ov.swizzle.yzxvv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-0.5), new Half(2.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.yzy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(4.5), new Half(-4), new Half(2));
                var v = ov.swizzle.yzyx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-0.5), new Half(6), new Half(-1.5), new Half(7));
                var v = ov.swizzle.yzyxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(-1.5), new Half(-5.5), new Half(0.5));
                var v = ov.swizzle.yzyxy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(7), new Half(-1), Half.Zero);
                var v = ov.swizzle.yzyxz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-2), Half.One, new Half(4));
                var v = ov.swizzle.yzyxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(-4), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.yzyxv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4), new Half(-8), new Half(9.5), new Half(-7));
                var v = ov.swizzle.yzyy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7.5), new Half(1.5), new Half(-7), new Half(-8));
                var v = ov.swizzle.yzyyx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(4), new Half(8), new Half(-4));
                var v = ov.swizzle.yzyyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(-7), new Half(-4), new Half(-8.5));
                var v = ov.swizzle.yzyyz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7.5), new Half(-8.5), new Half(7.5), new Half(-5.5));
                var v = ov.swizzle.yzyyw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4.5), new Half(2.5), new Half(9), new Half(6));
                var v = ov.swizzle.yzyyv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(-4.5), new Half(5), new Half(7.5));
                var v = ov.swizzle.yzyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), new Half(-0.5), new Half(7), new Half(-8.5));
                var v = ov.swizzle.yzyzx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(0.5), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.yzyzy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(3), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.yzyzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(9.5), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.yzyzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(-8.5), new Half(-5), new Half(9.5));
                var v = ov.swizzle.yzyzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5), new Half(-7.5), new Half(-1), new Half(2.5));
                var v = ov.swizzle.yzyw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(8.5), new Half(-1), new Half(4));
                var v = ov.swizzle.yzywx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4), new Half(9), new Half(3.5), new Half(-8));
                var v = ov.swizzle.yzywy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(-1.5), new Half(3), new Half(-4));
                var v = ov.swizzle.yzywz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(4), new Half(-4), new Half(4));
                var v = ov.swizzle.yzyww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6), new Half(-5.5), new Half(-6.5), new Half(8));
                var v = ov.swizzle.yzywv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(-4), new Half(8), new Half(4));
                var v = ov.swizzle.yzyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.Zero, new Half(-9), Half.Zero, new Half(2));
                var v = ov.swizzle.yzyvx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7), new Half(2.5), new Half(-5.5), new Half(9));
                var v = ov.swizzle.yzyvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4), new Half(6), new Half(-7.5), new Half(5));
                var v = ov.swizzle.yzyvz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(-8), Half.One, new Half(-1.5));
                var v = ov.swizzle.yzyvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(8), new Half(6), new Half(-0.5));
                var v = ov.swizzle.yzyvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(-6), new Half(2), new Half(-1.5));
                var v = ov.swizzle.yzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), Half.One, new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.yzzx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(-2.5), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.yzzxx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(-8.5), new Half(4), new Half(7));
                var v = ov.swizzle.yzzxy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8), Half.One, new Half(-7), new Half(-3));
                var v = ov.swizzle.yzzxz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-5.5), new Half(-3), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.yzzxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(-3), new Half(-2), new Half(-2.5));
                var v = ov.swizzle.yzzxv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(1.5), new Half(0.5), new Half(6.5), new Half(-5.5));
                var v = ov.swizzle.yzzy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(-9), new Half(2), new Half(-0.5));
                var v = ov.swizzle.yzzyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(-7), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.yzzyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(3), new Half(8.5), new Half(9.5));
                var v = ov.swizzle.yzzyz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(9.5), new Half(-0.5), new Half(-6));
                var v = ov.swizzle.yzzyw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8), new Half(-8.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.yzzyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(-5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.yzzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6), new Half(-4.5), new Half(-9.5), new Half(2));
                var v = ov.swizzle.yzzzx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(9.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.yzzzy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7), new Half(4.5), new Half(6.5), new Half(2.5));
                var v = ov.swizzle.yzzzz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(-4), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.yzzzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2.5), Half.One, new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.yzzzv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-1), new Half(-9), new Half(6));
                var v = ov.swizzle.yzzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3), new Half(3), new Half(3.5), new Half(-2));
                var v = ov.swizzle.yzzwx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(-5.5), new Half(6.5), new Half(-6.5));
                var v = ov.swizzle.yzzwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(-2), new Half(8.5), new Half(-7.5));
                var v = ov.swizzle.yzzwz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(-4.5), new Half(-6), new Half(6));
                var v = ov.swizzle.yzzww;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-2.5), Half.One, new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.yzzwv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(4), new Half(5.5), new Half(-5));
                var v = ov.swizzle.yzzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(-9.5), new Half(-8.5), new Half(8));
                var v = ov.swizzle.yzzvx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), Half.One, new Half(-5.5), new Half(-2));
                var v = ov.swizzle.yzzvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(-7), new Half(-0.5), new Half(2));
                var v = ov.swizzle.yzzvz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(3), new Half(7.5), new Half(0.5));
                var v = ov.swizzle.yzzvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), new Half(5.5), new Half(-3), new Half(-2));
                var v = ov.swizzle.yzzvv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.One, new Half(8), new Half(-2), new Half(2.5));
                var v = ov.swizzle.yzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(0.5), new Half(-1.5), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.yzwx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(0.5), new Half(-0.5), new Half(2.5));
                var v = ov.swizzle.yzwxx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), Half.Zero, new Half(3), new Half(-5.5));
                var v = ov.swizzle.yzwxy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(-3), new Half(1.5), new Half(8));
                var v = ov.swizzle.yzwxz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.One, new Half(7), new Half(5), new Half(-2));
                var v = ov.swizzle.yzwxw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(7), new Half(8), new Half(-4));
                var v = ov.swizzle.yzwxv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5.5), new Half(-0.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.yzwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7), new Half(6.5), new Half(1.5), new Half(3));
                var v = ov.swizzle.yzwyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(-4), new Half(5), Half.One);
                var v = ov.swizzle.yzwyy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6), new Half(1.5), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.yzwyz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(-8), new Half(3), new Half(2.5));
                var v = ov.swizzle.yzwyw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(-6.5), new Half(8), new Half(-7.5));
                var v = ov.swizzle.yzwyv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5), new Half(-8.5), new Half(-6), new Half(3));
                var v = ov.swizzle.yzwz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3.5), new Half(9), new Half(7), new Half(3.5));
                var v = ov.swizzle.yzwzx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(-7.5), new Half(-1.5), new Half(9));
                var v = ov.swizzle.yzwzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2.5), new Half(2), new Half(3), new Half(2.5));
                var v = ov.swizzle.yzwzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(1.5), new Half(-9), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.yzwzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7), new Half(-3.5), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.yzwzv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3.5), new Half(-2.5), new Half(8), new Half(-2.5));
                var v = ov.swizzle.yzww;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(8.5), new Half(2), new Half(6));
                var v = ov.swizzle.yzwwx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7.5), new Half(-5.5), new Half(5.5), new Half(8));
                var v = ov.swizzle.yzwwy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(-0.5), new Half(3.5), new Half(-6.5));
                var v = ov.swizzle.yzwwz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(-9), new Half(-7), new Half(-2));
                var v = ov.swizzle.yzwww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(4.5), new Half(-3.5), new Half(3));
                var v = ov.swizzle.yzwwv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7), new Half(9), new Half(-3.5), new Half(-4.5));
                var v = ov.swizzle.yzwv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2.5), new Half(-3), Half.Zero, new Half(-5));
                var v = ov.swizzle.yzwvx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1.5), Half.Zero, new Half(6.5), new Half(5));
                var v = ov.swizzle.yzwvy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7), new Half(-6.5), new Half(-8), new Half(-8));
                var v = ov.swizzle.yzwvz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2.5), new Half(2.5), new Half(-7), new Half(4.5));
                var v = ov.swizzle.yzwvw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4), new Half(9), new Half(7.5), new Half(2));
                var v = ov.swizzle.yzwvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(-3), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.yzv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2.5), new Half(7.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.yzvx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-0.5), new Half(-9), new Half(-8.5));
                var v = ov.swizzle.yzvxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(-7.5), new Half(-1), new Half(8.5));
                var v = ov.swizzle.yzvxy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2), new Half(-7), new Half(8), new Half(-1));
                var v = ov.swizzle.yzvxz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(3.5), new Half(2.5), new Half(7.5));
                var v = ov.swizzle.yzvxw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(-5), new Half(7.5), new Half(7));
                var v = ov.swizzle.yzvxv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), Half.One, new Half(6), new Half(-2.5));
                var v = ov.swizzle.yzvy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(9), new Half(-3), new Half(-1.5), new Half(4.5));
                var v = ov.swizzle.yzvyx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(8.5), new Half(-4), new Half(5.5), new Half(5.5));
                var v = ov.swizzle.yzvyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(9.5), new Half(8.5), new Half(-4.5));
                var v = ov.swizzle.yzvyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7.5), new Half(4), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.yzvyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3.5), new Half(4), new Half(-3), new Half(-5.5));
                var v = ov.swizzle.yzvyv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(1.5), new Half(-2), new Half(4.5));
                var v = ov.swizzle.yzvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-9), new Half(-5), new Half(-6.5), new Half(-3));
                var v = ov.swizzle.yzvzx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), new Half(-1.5), new Half(-4), new Half(-3));
                var v = ov.swizzle.yzvzy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(8.5), new Half(7.5), new Half(0.5));
                var v = ov.swizzle.yzvzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8), new Half(-6), new Half(-3), new Half(2));
                var v = ov.swizzle.yzvzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2), new Half(-3), new Half(6), new Half(-5.5));
                var v = ov.swizzle.yzvzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4), new Half(9.5), new Half(4), new Half(-2.5));
                var v = ov.swizzle.yzvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6), new Half(2), Half.One, new Half(-2));
                var v = ov.swizzle.yzvwx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(-6), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.yzvwy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8), new Half(0.5), new Half(-5), new Half(8));
                var v = ov.swizzle.yzvwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(7), new Half(-6.5), new Half(9));
                var v = ov.swizzle.yzvww;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(-9), new Half(8), new Half(3));
                var v = ov.swizzle.yzvwv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5), new Half(8), new Half(9.5), new Half(-9.5));
                var v = ov.swizzle.yzvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(-6.5), new Half(-3.5), new Half(5.5));
                var v = ov.swizzle.yzvvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(6.5), new Half(-4.5), new Half(2));
                var v = ov.swizzle.yzvvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(0.5), new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.yzvvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(8.5), new Half(8.5), new Half(-7.5));
                var v = ov.swizzle.yzvvw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7.5), new Half(-7), new Half(4.5), new Half(8.5));
                var v = ov.swizzle.yzvvv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(3.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.yw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8), new Half(-7), new Half(5), new Half(-6));
                var v = ov.swizzle.ywx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(3), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.ywxx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-6.5), new Half(-8.5), new Half(-3));
                var v = ov.swizzle.ywxxx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4), new Half(-4.5), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.ywxxy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7), new Half(9), new Half(-7), new Half(-6.5));
                var v = ov.swizzle.ywxxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3), new Half(-0.5), new Half(-1.5), new Half(-8.5));
                var v = ov.swizzle.ywxxw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4), new Half(9.5), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.ywxxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), new Half(-5.5), new Half(-9), new Half(2));
                var v = ov.swizzle.ywxy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8), new Half(-9), new Half(-5), new Half(-9));
                var v = ov.swizzle.ywxyx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(5.5), new Half(-7.5), new Half(9));
                var v = ov.swizzle.ywxyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(-2), new Half(-4), new Half(-2));
                var v = ov.swizzle.ywxyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8.5), new Half(9.5), new Half(-6.5), new Half(-1));
                var v = ov.swizzle.ywxyw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(-5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.ywxyv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(8.5), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.ywxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(5), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.ywxzx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(5.5), new Half(8.5), new Half(-5.5));
                var v = ov.swizzle.ywxzy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(7), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.ywxzz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3.5), new Half(-4.5), new Half(-3), new Half(5));
                var v = ov.swizzle.ywxzw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), Half.One, new Half(8), new Half(0.5));
                var v = ov.swizzle.ywxzv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2), new Half(-8.5), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.ywxw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(4.5), new Half(7.5), new Half(5));
                var v = ov.swizzle.ywxwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7.5), new Half(2.5), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.ywxwy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), Half.Zero, new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.ywxwz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-0.5), new Half(6.5), new Half(-8), new Half(1.5));
                var v = ov.swizzle.ywxww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(-3.5), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.ywxwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(7.5), new Half(-1.5), new Half(-0.5));
                var v = ov.swizzle.ywxv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7), new Half(6), new Half(-9), new Half(-4.5));
                var v = ov.swizzle.ywxvx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(9), new Half(-3), new Half(8));
                var v = ov.swizzle.ywxvy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.Zero, new Half(8.5), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.ywxvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5.5), new Half(3), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.ywxvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5), new Half(2), new Half(6.5), new Half(-5));
                var v = ov.swizzle.ywxvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(9.5), new Half(3), new Half(-3.5));
                var v = ov.swizzle.ywy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9.5), new Half(3), new Half(6.5), new Half(1.5));
                var v = ov.swizzle.ywyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6.5), new Half(-7.5), new Half(-4), new Half(5));
                var v = ov.swizzle.ywyxx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9), new Half(-5.5), new Half(9), new Half(3.5));
                var v = ov.swizzle.ywyxy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-6), new Half(-4), new Half(-5), new Half(6));
                var v = ov.swizzle.ywyxz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5.5), new Half(8), new Half(2.5), new Half(-9.5));
                var v = ov.swizzle.ywyxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5), new Half(9), new Half(3), new Half(9.5));
                var v = ov.swizzle.ywyxv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6.5), new Half(6), new Half(-3.5), new Half(-4.5));
                var v = ov.swizzle.ywyy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6.5), Half.One, new Half(-7.5), new Half(2));
                var v = ov.swizzle.ywyyx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(0.5), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.ywyyy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7.5), new Half(3.5), new Half(3), new Half(-1));
                var v = ov.swizzle.ywyyz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(-4.5), new Half(6.5), new Half(1.5));
                var v = ov.swizzle.ywyyw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(-2), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.ywyyv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(-9), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.ywyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(7.5), new Half(-5.5), new Half(5.5));
                var v = ov.swizzle.ywyzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(1.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.ywyzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), new Half(-3.5), new Half(6), new Half(-0.5));
                var v = ov.swizzle.ywyzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(6), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.ywyzw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(9), new Half(5.5), new Half(-4.5));
                var v = ov.swizzle.ywyzv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(-4.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.ywyw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6.5), new Half(-6), new Half(3), new Half(7.5));
                var v = ov.swizzle.ywywx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(8), new Half(7), Half.One);
                var v = ov.swizzle.ywywy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-2), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.ywywz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4), new Half(4), new Half(-2.5), new Half(6));
                var v = ov.swizzle.ywyww;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9), new Half(-3.5), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.ywywv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(2), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.ywyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(7.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.ywyvx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9), new Half(-6.5), new Half(9), new Half(-2));
                var v = ov.swizzle.ywyvy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(9.5), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.ywyvz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3.5), new Half(-0.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.ywyvw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(7.5), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.ywyvv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(0.5), new Half(2.5), new Half(7));
                var v = ov.swizzle.ywz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7.5), new Half(9), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.ywzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(-0.5), new Half(-1), new Half(-3.5));
                var v = ov.swizzle.ywzxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7.5), new Half(5.5), new Half(-6), new Half(9));
                var v = ov.swizzle.ywzxy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(5.5), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.ywzxz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3), new Half(4), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.ywzxw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(1.5), new Half(9), new Half(3.5), new Half(-6.5));
                var v = ov.swizzle.ywzxv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1.5), new Half(1.5), new Half(2), new Half(5.5));
                var v = ov.swizzle.ywzy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(-9), new Half(-3), new Half(-5.5));
                var v = ov.swizzle.ywzyx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(7.5), new Half(-9), new Half(-1), new Half(5.5));
                var v = ov.swizzle.ywzyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5.5), new Half(-7.5), new Half(-7), new Half(3.5));
                var v = ov.swizzle.ywzyz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(8.5), new Half(4), new Half(4));
                var v = ov.swizzle.ywzyw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7), new Half(2.5), new Half(6.5), new Half(-3));
                var v = ov.swizzle.ywzyv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8), new Half(5.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.ywzz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(1.5), new Half(2.5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.ywzzx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(-7.5), new Half(7), new Half(1.5));
                var v = ov.swizzle.ywzzy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4.5), new Half(4.5), new Half(-6.5), new Half(2));
                var v = ov.swizzle.ywzzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8), new Half(2.5), Half.Zero, new Half(-6));
                var v = ov.swizzle.ywzzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(-3.5), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.ywzzv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(-6.5), Half.Zero, new Half(7));
                var v = ov.swizzle.ywzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2), new Half(1.5), new Half(9.5), new Half(7.5));
                var v = ov.swizzle.ywzwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), Half.One, new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.ywzwy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(0.5), new Half(-4), new Half(9.5));
                var v = ov.swizzle.ywzwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), new Half(9), new Half(4.5), new Half(2.5));
                var v = ov.swizzle.ywzww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4.5), new Half(5.5), new Half(-2), new Half(8.5));
                var v = ov.swizzle.ywzwv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4), new Half(5.5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.ywzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(-8.5), Half.Zero, new Half(-3));
                var v = ov.swizzle.ywzvx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2), new Half(4.5), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.ywzvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7), new Half(-1), new Half(-1), new Half(8));
                var v = ov.swizzle.ywzvz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), Half.Zero, new Half(-3), new Half(8.5), new Half(-7.5));
                var v = ov.swizzle.ywzvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(-1.5), new Half(7), new Half(9.5));
                var v = ov.swizzle.ywzvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(-9.5), Half.Zero, new Half(1.5));
                var v = ov.swizzle.yww;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(-3), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.ywwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-0.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.ywwxx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1.5), new Half(-4.5), new Half(-6.5), new Half(3));
                var v = ov.swizzle.ywwxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(-4.5), new Half(2), new Half(5));
                var v = ov.swizzle.ywwxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(6.5), new Half(6), new Half(-6.5));
                var v = ov.swizzle.ywwxw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-0.5), new Half(-4), Half.One, new Half(-9.5));
                var v = ov.swizzle.ywwxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6.5), new Half(4.5), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.ywwy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(-2.5), new Half(-7.5), new Half(-9.5));
                var v = ov.swizzle.ywwyx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-2), new Half(-2), new Half(2), new Half(-6));
                var v = ov.swizzle.ywwyy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6), new Half(4), new Half(3), new Half(8.5));
                var v = ov.swizzle.ywwyz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7.5), new Half(-7), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.ywwyw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.Zero, new Half(6), Half.Zero, new Half(-8));
                var v = ov.swizzle.ywwyv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(-2.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.ywwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(1.5), new Half(8.5), new Half(-2));
                var v = ov.swizzle.ywwzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(2), new Half(-6.5), new Half(-1));
                var v = ov.swizzle.ywwzy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9.5), new Half(3.5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.ywwzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5.5), new Half(-1), new Half(2), Half.One);
                var v = ov.swizzle.ywwzw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(9.5), new Half(8), new Half(0.5));
                var v = ov.swizzle.ywwzv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-0.5), new Half(-3.5), new Half(4), new Half(-9.5));
                var v = ov.swizzle.ywww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(1.5), new Half(2), new Half(3.5));
                var v = ov.swizzle.ywwwx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(6), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.ywwwy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(4.5), new Half(-6.5), new Half(0.5));
                var v = ov.swizzle.ywwwz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(-6), new Half(3), new Half(-5));
                var v = ov.swizzle.ywwww;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4), new Half(-5.5), new Half(-9), new Half(-4.5));
                var v = ov.swizzle.ywwwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(-7.5), new Half(8), new Half(-8.5));
                var v = ov.swizzle.ywwv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(8.5), new Half(3), Half.Zero);
                var v = ov.swizzle.ywwvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-1.5), new Half(0.5), new Half(6.5), new Half(5));
                var v = ov.swizzle.ywwvy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(-9), new Half(9), new Half(-1));
                var v = ov.swizzle.ywwvz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(-6), new Half(-9), new Half(-5));
                var v = ov.swizzle.ywwvw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(-6.5), new Half(0.5), new Half(4));
                var v = ov.swizzle.ywwvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(-2), new Half(-8), new Half(-7));
                var v = ov.swizzle.ywv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3.5), new Half(7.5), new Half(-1), new Half(-7));
                var v = ov.swizzle.ywvx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9.5), new Half(0.5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.ywvxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(-9.5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.ywvxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5.5), new Half(-5), new Half(7), new Half(-1.5));
                var v = ov.swizzle.ywvxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(3), new Half(4.5), new Half(5.5));
                var v = ov.swizzle.ywvxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(8), new Half(9.5), new Half(3));
                var v = ov.swizzle.ywvxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(-3), new Half(-9.5), new Half(7));
                var v = ov.swizzle.ywvy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(7), new Half(2.5), new Half(-7.5));
                var v = ov.swizzle.ywvyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8.5), new Half(3.5), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.ywvyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(-5.5), new Half(3), new Half(6));
                var v = ov.swizzle.ywvyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4.5), new Half(3), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.ywvyw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(3), new Half(-5), new Half(-3));
                var v = ov.swizzle.ywvyv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2), new Half(1.5), new Half(-9), new Half(9));
                var v = ov.swizzle.ywvz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(9.5), new Half(0.5), new Half(1.5));
                var v = ov.swizzle.ywvzx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-7.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.ywvzy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3.5), new Half(4), new Half(6), new Half(-2.5));
                var v = ov.swizzle.ywvzz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4.5), new Half(5), new Half(2.5), new Half(2));
                var v = ov.swizzle.ywvzw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2), new Half(-6.5), new Half(8), new Half(0.5));
                var v = ov.swizzle.ywvzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(3.5), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.ywvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(-4), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.ywvwx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(3.5), new Half(-3), new Half(0.5));
                var v = ov.swizzle.ywvwy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(-8), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.ywvwz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5.5), new Half(6.5), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.ywvww;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5), new Half(9.5), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.ywvwv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(1.5), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.ywvv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4.5), Half.One, new Half(-3), new Half(7));
                var v = ov.swizzle.ywvvx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2), new Half(-6), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.ywvvy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(2.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.ywvvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3.5), new Half(5), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.ywvvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(4), new Half(-9), new Half(7.5));
                var v = ov.swizzle.ywvvv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(7.5), new Half(3), new Half(-8));
                var v = ov.swizzle.yv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(3.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.yvx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(4), new Half(8), new Half(5.5));
                var v = ov.swizzle.yvxx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8), new Half(5), new Half(5), new Half(-6.5));
                var v = ov.swizzle.yvxxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3), new Half(7.5), new Half(-0.5), new Half(4));
                var v = ov.swizzle.yvxxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5), new Half(-2), new Half(3), new Half(3));
                var v = ov.swizzle.yvxxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(-7.5), new Half(-6), new Half(8));
                var v = ov.swizzle.yvxxw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4), new Half(-2), new Half(-3), new Half(7.5));
                var v = ov.swizzle.yvxxv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(5), new Half(-2), new Half(6));
                var v = ov.swizzle.yvxy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(6.5), new Half(-4.5), new Half(-6));
                var v = ov.swizzle.yvxyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5), new Half(9.5), new Half(6.5), new Half(-6.5));
                var v = ov.swizzle.yvxyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(8), new Half(8.5), new Half(-3));
                var v = ov.swizzle.yvxyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(0.5), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.yvxyw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9.5), new Half(-0.5), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.yvxyv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(3.5), new Half(7), new Half(6));
                var v = ov.swizzle.yvxz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7), new Half(-4.5), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.yvxzx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(-2.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.yvxzy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-3.5), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.yvxzz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5), new Half(-4), Half.Zero, new Half(-1.5));
                var v = ov.swizzle.yvxzw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7), new Half(-8.5), Half.Zero, new Half(-5));
                var v = ov.swizzle.yvxzv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(7.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.yvxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7.5), new Half(1.5), new Half(0.5), new Half(-7));
                var v = ov.swizzle.yvxwx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6), new Half(-3.5), new Half(-3), new Half(6.5));
                var v = ov.swizzle.yvxwy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(3), new Half(3.5), new Half(7));
                var v = ov.swizzle.yvxwz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(6.5), new Half(-6), new Half(-8.5));
                var v = ov.swizzle.yvxww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-6.5), new Half(2.5), new Half(-9), new Half(-8.5));
                var v = ov.swizzle.yvxwv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), new Half(-4.5), new Half(7), new Half(-1.5));
                var v = ov.swizzle.yvxv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8.5), new Half(3.5), new Half(-7), new Half(-4));
                var v = ov.swizzle.yvxvx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7.5), new Half(5.5), new Half(-6), new Half(5));
                var v = ov.swizzle.yvxvy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9.5), Half.One, new Half(4), new Half(7.5));
                var v = ov.swizzle.yvxvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(-2.5), new Half(3.5), new Half(-3));
                var v = ov.swizzle.yvxvw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3), new Half(-8.5), new Half(-2), new Half(9));
                var v = ov.swizzle.yvxvv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-0.5), new Half(-3), new Half(8), new Half(-1.5));
                var v = ov.swizzle.yvy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7.5), new Half(-9), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.yvyx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(-3.5), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.yvyxx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8.5), new Half(-8.5), new Half(9), new Half(-8));
                var v = ov.swizzle.yvyxy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(-1.5), new Half(-7.5), new Half(9.5));
                var v = ov.swizzle.yvyxz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(9.5), new Half(2.5), new Half(4.5), new Half(-6.5));
                var v = ov.swizzle.yvyxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(-7.5), new Half(7), new Half(-9.5));
                var v = ov.swizzle.yvyxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4.5), new Half(-3.5), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.yvyy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.One, new Half(-7), new Half(-5.5), new Half(-3.5));
                var v = ov.swizzle.yvyyx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2.5), new Half(7), new Half(7), new Half(7));
                var v = ov.swizzle.yvyyy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7.5), new Half(-1), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.yvyyz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.Zero, new Half(0.5), new Half(9), new Half(-3));
                var v = ov.swizzle.yvyyw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(-5.5), Half.Zero, new Half(6));
                var v = ov.swizzle.yvyyv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-1.5), new Half(-9), new Half(9.5), new Half(2.5));
                var v = ov.swizzle.yvyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(3.5), new Half(5.5), new Half(6.5));
                var v = ov.swizzle.yvyzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(3), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.yvyzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-5.5), new Half(-2.5), new Half(-7));
                var v = ov.swizzle.yvyzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-0.5), new Half(-1.5), new Half(-9), new Half(8));
                var v = ov.swizzle.yvyzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(-7), new Half(-5), new Half(-5.5));
                var v = ov.swizzle.yvyzv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7), new Half(-6), new Half(-8), new Half(-6));
                var v = ov.swizzle.yvyw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8), new Half(7), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.yvywx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-1.5), new Half(-6), new Half(7.5), new Half(9));
                var v = ov.swizzle.yvywy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7.5), new Half(4.5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.yvywz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(7.5), new Half(-6.5), new Half(-6));
                var v = ov.swizzle.yvyww;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), Half.Zero, new Half(0.5), new Half(9.5));
                var v = ov.swizzle.yvywv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4.5), new Half(-9), new Half(-2), new Half(4));
                var v = ov.swizzle.yvyv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(-3.5), new Half(-8.5), new Half(4));
                var v = ov.swizzle.yvyvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5.5), new Half(7), new Half(8.5), new Half(-6.5));
                var v = ov.swizzle.yvyvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3), new Half(1.5), new Half(9), new Half(3));
                var v = ov.swizzle.yvyvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(5.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.yvyvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(2.5), new Half(2), new Half(3.5));
                var v = ov.swizzle.yvyvv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(8), new Half(-8), new Half(-6), new Half(3));
                var v = ov.swizzle.yvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9), new Half(4), new Half(2.5), new Half(6));
                var v = ov.swizzle.yvzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2), new Half(-4), new Half(-7), new Half(5));
                var v = ov.swizzle.yvzxx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7.5), new Half(8.5), Half.Zero, new Half(-3));
                var v = ov.swizzle.yvzxy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8), new Half(0.5), new Half(-2.5), new Half(4));
                var v = ov.swizzle.yvzxz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8.5), new Half(-0.5), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.yvzxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(-6.5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.yvzxv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6), new Half(2.5), new Half(4.5), new Half(-6.5));
                var v = ov.swizzle.yvzy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8), new Half(8.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.yvzyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(-9), new Half(-6.5), new Half(8));
                var v = ov.swizzle.yvzyy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8.5), new Half(1.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.yvzyz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(0.5), new Half(-1), new Half(-9.5));
                var v = ov.swizzle.yvzyw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(-7), new Half(-4), new Half(-5.5));
                var v = ov.swizzle.yvzyv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1.5), new Half(-3.5), new Half(5.5), new Half(5.5));
                var v = ov.swizzle.yvzz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5), new Half(4), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.yvzzx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9), new Half(-1.5), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.yvzzy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(6), new Half(-9), new Half(0.5));
                var v = ov.swizzle.yvzzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(3.5), new Half(2), new Half(5));
                var v = ov.swizzle.yvzzw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(-8.5), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.yvzzv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(1.5), new Half(-4.5), new Half(-9), new Half(8));
                var v = ov.swizzle.yvzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(-5.5), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.yvzwx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(-5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.yvzwy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-0.5), new Half(1.5), new Half(0.5), new Half(-5.5));
                var v = ov.swizzle.yvzwz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(8.5), new Half(-6.5), new Half(-7.5));
                var v = ov.swizzle.yvzww;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4.5), new Half(-5.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.yvzwv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(0.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.yvzv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5.5), new Half(9), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.yvzvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-8), new Half(-9), new Half(7));
                var v = ov.swizzle.yvzvy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(-5.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.yvzvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4.5), new Half(1.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.yvzvw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(2), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.yvzvv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7), new Half(4.5), new Half(-2.5), new Half(6));
                var v = ov.swizzle.yvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3.5), new Half(-9.5), Half.One, new Half(-5));
                var v = ov.swizzle.yvwx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9.5), Half.Zero, new Half(4), new Half(-1.5));
                var v = ov.swizzle.yvwxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6.5), new Half(-9.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.yvwxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1), new Half(5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.yvwxz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3.5), Half.Zero, new Half(3.5), new Half(9));
                var v = ov.swizzle.yvwxw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7.5), new Half(-3), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.yvwxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.One, new Half(1.5), new Half(-2), new Half(9));
                var v = ov.swizzle.yvwy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2), new Half(-6.5), new Half(3), new Half(-9));
                var v = ov.swizzle.yvwyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5.5), new Half(-3.5), Half.One, new Half(-6));
                var v = ov.swizzle.yvwyy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2), new Half(-2.5), new Half(8.5), new Half(-7));
                var v = ov.swizzle.yvwyz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(4), new Half(-0.5), new Half(8.5));
                var v = ov.swizzle.yvwyw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4.5), new Half(-2.5), new Half(2.5), new Half(7.5));
                var v = ov.swizzle.yvwyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6), new Half(7), new Half(-9.5), new Half(9));
                var v = ov.swizzle.yvwz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(8), new Half(5), new Half(9.5));
                var v = ov.swizzle.yvwzx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-1.5), Half.One, new Half(-1), new Half(-4));
                var v = ov.swizzle.yvwzy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7), new Half(9.5), new Half(-7), new Half(6));
                var v = ov.swizzle.yvwzz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4.5), new Half(-5), new Half(-6), new Half(4.5));
                var v = ov.swizzle.yvwzw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(2), new Half(-3), new Half(4));
                var v = ov.swizzle.yvwzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(0.5), new Half(6), new Half(-9));
                var v = ov.swizzle.yvww;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(6), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.yvwwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), new Half(-7.5), new Half(9.5), new Half(8));
                var v = ov.swizzle.yvwwy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(4.5), new Half(-5), new Half(-5));
                var v = ov.swizzle.yvwwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(-1), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.yvwww;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(2.5), new Half(-3.5), Half.Zero);
                var v = ov.swizzle.yvwwv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(6.5), Half.One, new Half(-3.5));
                var v = ov.swizzle.yvwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(4.5), new Half(2.5), new Half(7.5));
                var v = ov.swizzle.yvwvx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.Zero, new Half(7), new Half(-4.5), new Half(9));
                var v = ov.swizzle.yvwvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3), new Half(-5), new Half(6), new Half(1.5));
                var v = ov.swizzle.yvwvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(-2.5), new Half(8.5), new Half(6));
                var v = ov.swizzle.yvwvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5), new Half(4), new Half(-6), new Half(-4));
                var v = ov.swizzle.yvwvv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5.5), new Half(-8.5), new Half(1.5), new Half(4));
                var v = ov.swizzle.yvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(-9.5), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.yvvx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), Half.One, new Half(-7), new Half(6));
                var v = ov.swizzle.yvvxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9), new Half(-4.5), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.yvvxy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(-4.5), new Half(4.5), Half.One);
                var v = ov.swizzle.yvvxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-5), new Half(8.5), new Half(5.5), new Half(9.5));
                var v = ov.swizzle.yvvxw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(-9), new Half(-8), new Half(-4));
                var v = ov.swizzle.yvvxv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-9.5), new Half(-6), new Half(-9.5), new Half(-5));
                var v = ov.swizzle.yvvy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), Half.One, new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.yvvyx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(-1), new Half(1.5), new Half(9));
                var v = ov.swizzle.yvvyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-0.5), new Half(-0.5), new Half(-1.5), new Half(-8.5));
                var v = ov.swizzle.yvvyz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9.5), new Half(-3.5), new Half(-0.5), new Half(-9));
                var v = ov.swizzle.yvvyw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(-4.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.yvvyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(5.5), new Half(-5.5), new Half(3), new Half(-6.5));
                var v = ov.swizzle.yvvz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2), new Half(5), Half.Zero, new Half(2.5));
                var v = ov.swizzle.yvvzx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(4), new Half(7), new Half(-7));
                var v = ov.swizzle.yvvzy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(6), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.yvvzz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(1.5), new Half(7.5), new Half(6));
                var v = ov.swizzle.yvvzw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3.5), new Half(-2.5), Half.One, new Half(5.5));
                var v = ov.swizzle.yvvzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-2.5), new Half(3), new Half(-4));
                var v = ov.swizzle.yvvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7), new Half(6), new Half(8), new Half(2.5));
                var v = ov.swizzle.yvvwx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5.5), new Half(-1.5), new Half(6.5), new Half(-9.5));
                var v = ov.swizzle.yvvwy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(-8), new Half(-3), new Half(3.5));
                var v = ov.swizzle.yvvwz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2), Half.Zero, new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.yvvww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(-3.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.yvvwv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6), new Half(3), new Half(4), new Half(4));
                var v = ov.swizzle.yvvv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-2.5), Half.One, new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.yvvvx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(8.5), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.yvvvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(5.5), new Half(-8), new Half(-4));
                var v = ov.swizzle.yvvvz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6), new Half(-5), new Half(7), new Half(-8.5));
                var v = ov.swizzle.yvvvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(3), new Half(4), new Half(4));
                var v = ov.swizzle.yvvvv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(9), new Half(9), new Half(8));
                var v = ov.swizzle.zx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9.5), new Half(-5.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.zxx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(-5.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.zxxx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(6), new Half(8.5), new Half(2));
                var v = ov.swizzle.zxxxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(8), new Half(-6.5), new Half(8));
                var v = ov.swizzle.zxxxy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(5.5), new Half(-6.5), new Half(-9));
                var v = ov.swizzle.zxxxz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), new Half(6.5), new Half(-0.5), new Half(2));
                var v = ov.swizzle.zxxxw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1.5), new Half(-0.5), new Half(-5.5), new Half(5.5));
                var v = ov.swizzle.zxxxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(3), new Half(2.5), new Half(9));
                var v = ov.swizzle.zxxy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(0.5), new Half(-7.5), new Half(4));
                var v = ov.swizzle.zxxyx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(5), Half.One, new Half(-1));
                var v = ov.swizzle.zxxyy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8.5), new Half(-3.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.zxxyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), Half.Zero, new Half(-3), new Half(7.5));
                var v = ov.swizzle.zxxyw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7.5), new Half(4.5), new Half(-7.5), new Half(7));
                var v = ov.swizzle.zxxyv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(-6.5), new Half(3), new Half(-1.5));
                var v = ov.swizzle.zxxz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5), new Half(-7), new Half(-4), new Half(-3));
                var v = ov.swizzle.zxxzx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(-4), new Half(-9), new Half(7.5));
                var v = ov.swizzle.zxxzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9), new Half(4.5), new Half(-9), new Half(-2.5));
                var v = ov.swizzle.zxxzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), new Half(-1.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.zxxzw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(1.5), new Half(0.5), new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.zxxzv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(7), new Half(-5), new Half(-7));
                var v = ov.swizzle.zxxw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7), new Half(2), new Half(-4), new Half(8));
                var v = ov.swizzle.zxxwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4), new Half(-2), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.zxxwy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(-8.5), new Half(-6), new Half(8));
                var v = ov.swizzle.zxxwz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(-6), new Half(5.5), new Half(9));
                var v = ov.swizzle.zxxww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3.5), new Half(9.5), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.zxxwv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-7.5), new Half(-3.5), new Half(-4));
                var v = ov.swizzle.zxxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(8.5), Half.One, new Half(1.5));
                var v = ov.swizzle.zxxvx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6), new Half(-9.5), new Half(-1), new Half(-7));
                var v = ov.swizzle.zxxvy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(0.5), Half.One, new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.zxxvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-5), new Half(-2.5), new Half(-3.5));
                var v = ov.swizzle.zxxvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7.5), new Half(-3), new Half(5), new Half(1.5));
                var v = ov.swizzle.zxxvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(5), new Half(-7), new Half(7.5));
                var v = ov.swizzle.zxy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7.5), new Half(-3.5), new Half(-3), new Half(5));
                var v = ov.swizzle.zxyx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), new Half(-9.5), new Half(-4.5), new Half(5.5));
                var v = ov.swizzle.zxyxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7.5), new Half(4), new Half(-8), new Half(-7));
                var v = ov.swizzle.zxyxy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(9.5), new Half(7), new Half(-8));
                var v = ov.swizzle.zxyxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9.5), new Half(5.5), new Half(9.5), new Half(-8));
                var v = ov.swizzle.zxyxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(0.5), new Half(3.5), new Half(-1), new Half(-1));
                var v = ov.swizzle.zxyxv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(3), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.zxyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(-0.5), new Half(4.5), new Half(-5));
                var v = ov.swizzle.zxyyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(0.5), new Half(1.5), new Half(9.5));
                var v = ov.swizzle.zxyyy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7), new Half(4.5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.zxyyz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8), new Half(7.5), new Half(8.5), new Half(6.5));
                var v = ov.swizzle.zxyyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2.5), new Half(-3.5), new Half(4.5), new Half(8));
                var v = ov.swizzle.zxyyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(8), new Half(-4), Half.Zero);
                var v = ov.swizzle.zxyz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(2.5), new Half(6.5), new Half(5));
                var v = ov.swizzle.zxyzx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(5), new Half(3.5), new Half(-2));
                var v = ov.swizzle.zxyzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(4), new Half(9.5), new Half(4));
                var v = ov.swizzle.zxyzz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5.5), new Half(4), new Half(-5), new Half(-5));
                var v = ov.swizzle.zxyzw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4), new Half(4), new Half(-7), new Half(-3.5));
                var v = ov.swizzle.zxyzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(4.5), new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.zxyw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(-6), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.zxywx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4.5), new Half(7.5), new Half(-7.5), new Half(3));
                var v = ov.swizzle.zxywy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(3), new Half(-2.5), new Half(-4.5));
                var v = ov.swizzle.zxywz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6.5), new Half(-3.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.zxyww;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(4.5), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.zxywv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(-5), new Half(-1), new Half(-7.5));
                var v = ov.swizzle.zxyv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(-9.5), new Half(3), new Half(-4.5));
                var v = ov.swizzle.zxyvx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3.5), new Half(-4), new Half(-5), new Half(9));
                var v = ov.swizzle.zxyvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7.5), new Half(-6.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.zxyvz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1), new Half(-7), new Half(1.5), Half.Zero);
                var v = ov.swizzle.zxyvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(0.5), new Half(3), new Half(7.5), Half.One);
                var v = ov.swizzle.zxyvv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(-7), new Half(6), new Half(-5.5));
                var v = ov.swizzle.zxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9), new Half(-2.5), new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.zxzx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), Half.Zero, new Half(2), new Half(6.5));
                var v = ov.swizzle.zxzxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8), new Half(-2), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.zxzxy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2.5), new Half(-6.5), new Half(-5.5), new Half(-8));
                var v = ov.swizzle.zxzxz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(-6.5), new Half(9), new Half(-8.5));
                var v = ov.swizzle.zxzxw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(8.5), new Half(-6.5), Half.One, new Half(-3));
                var v = ov.swizzle.zxzxv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6), new Half(7), new Half(1.5), new Half(0.5));
                var v = ov.swizzle.zxzy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(-6.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.zxzyx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9), new Half(-4), new Half(5.5), new Half(6));
                var v = ov.swizzle.zxzyy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(-6.5), new Half(3), new Half(-1));
                var v = ov.swizzle.zxzyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(2.5), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.zxzyw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2.5), new Half(-8), new Half(-9), new Half(4));
                var v = ov.swizzle.zxzyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8), new Half(8.5), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.zxzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), Half.Zero, new Half(-8.5), new Half(0.5), new Half(8));
                var v = ov.swizzle.zxzzx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9), Half.Zero, new Half(7), new Half(4));
                var v = ov.swizzle.zxzzy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(-2.5), new Half(2), new Half(-1.5));
                var v = ov.swizzle.zxzzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(-9), new Half(0.5), new Half(3.5));
                var v = ov.swizzle.zxzzw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5.5), new Half(-9), new Half(7.5), new Half(7));
                var v = ov.swizzle.zxzzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(3), new Half(-8), new Half(-7));
                var v = ov.swizzle.zxzw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(-5.5), Half.One, new Half(0.5));
                var v = ov.swizzle.zxzwx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(2.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.zxzwy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-5.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.zxzwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(-5), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.zxzww;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(7), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.zxzwv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7.5), new Half(-6.5), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.zxzv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5), new Half(-6.5), new Half(0.5), new Half(9.5));
                var v = ov.swizzle.zxzvx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(-3.5), new Half(-3), new Half(6.5));
                var v = ov.swizzle.zxzvy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(-5.5), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.zxzvz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(4.5), new Half(-5.5), new Half(9));
                var v = ov.swizzle.zxzvw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(-3), new Half(-9), new Half(3.5));
                var v = ov.swizzle.zxzvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(-1.5), new Half(5), new Half(6.5));
                var v = ov.swizzle.zxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(9), new Half(-6.5), new Half(2));
                var v = ov.swizzle.zxwx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8.5), new Half(4.5), new Half(-4.5), new Half(4));
                var v = ov.swizzle.zxwxx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), Half.One, new Half(5.5), new Half(1.5));
                var v = ov.swizzle.zxwxy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5), new Half(7), new Half(-3), new Half(2));
                var v = ov.swizzle.zxwxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-2.5), new Half(8.5), new Half(-3), new Half(-3));
                var v = ov.swizzle.zxwxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2.5), new Half(3), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.zxwxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1), new Half(-9.5), new Half(-6), new Half(-4.5));
                var v = ov.swizzle.zxwy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4), Half.One, new Half(7.5), new Half(-9));
                var v = ov.swizzle.zxwyx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(9), new Half(-9.5), new Half(9));
                var v = ov.swizzle.zxwyy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6), new Half(-8), new Half(-2.5), new Half(2.5));
                var v = ov.swizzle.zxwyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-5), new Half(3), new Half(2));
                var v = ov.swizzle.zxwyw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(6.5), new Half(9), new Half(2.5));
                var v = ov.swizzle.zxwyv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(6.5), new Half(9.5), new Half(9.5));
                var v = ov.swizzle.zxwz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3.5), new Half(-4.5), new Half(9), new Half(9.5));
                var v = ov.swizzle.zxwzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-1), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.zxwzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7), new Half(-9), new Half(3), new Half(-0.5));
                var v = ov.swizzle.zxwzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(-6), new Half(5), new Half(-6));
                var v = ov.swizzle.zxwzw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5.5), new Half(-7), new Half(-4), Half.One);
                var v = ov.swizzle.zxwzv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(1.5), new Half(4), new Half(6));
                var v = ov.swizzle.zxww;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(9), new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.zxwwx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(8), new Half(-1.5), new Half(4));
                var v = ov.swizzle.zxwwy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-9.5), new Half(-5), new Half(-3));
                var v = ov.swizzle.zxwwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7.5), new Half(3.5), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.zxwww;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(1.5), new Half(-5.5), new Half(0.5));
                var v = ov.swizzle.zxwwv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(-2), new Half(7), new Half(-5.5));
                var v = ov.swizzle.zxwv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3), new Half(6), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.zxwvx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7), new Half(8.5), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.zxwvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(5), new Half(-1.5), Half.Zero, new Half(-1));
                var v = ov.swizzle.zxwvz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(2), Half.One, new Half(5.5));
                var v = ov.swizzle.zxwvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(9), new Half(5), new Half(8));
                var v = ov.swizzle.zxwvv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(-3.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.zxv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9), Half.Zero, new Half(4), new Half(5.5));
                var v = ov.swizzle.zxvx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8), new Half(2.5), new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.zxvxx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(-1), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.zxvxy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(0.5), new Half(-3), new Half(4));
                var v = ov.swizzle.zxvxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(9), new Half(-3), new Half(5));
                var v = ov.swizzle.zxvxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2), Half.Zero, new Half(-9), new Half(8.5));
                var v = ov.swizzle.zxvxv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(8), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.zxvy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5), new Half(-6.5), new Half(5), new Half(-9));
                var v = ov.swizzle.zxvyx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(-8.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.zxvyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3), new Half(-2.5), new Half(-2), new Half(-7));
                var v = ov.swizzle.zxvyz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(-4), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.zxvyw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8), new Half(-2.5), new Half(9.5), new Half(9));
                var v = ov.swizzle.zxvyv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7), new Half(-3), new Half(-6.5), new Half(-0.5));
                var v = ov.swizzle.zxvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(0.5), new Half(-8), new Half(8.5), new Half(8));
                var v = ov.swizzle.zxvzx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(-4.5), new Half(3.5), new Half(7.5));
                var v = ov.swizzle.zxvzy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), Half.Zero, new Half(-7), new Half(-3.5));
                var v = ov.swizzle.zxvzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6), new Half(-0.5), Half.One, new Half(-7));
                var v = ov.swizzle.zxvzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(-6.5), new Half(-7.5), new Half(-5.5));
                var v = ov.swizzle.zxvzv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(-5.5), new Half(5.5), new Half(-0.5));
                var v = ov.swizzle.zxvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1), new Half(8.5), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.zxvwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(-1.5), new Half(2), new Half(1.5));
                var v = ov.swizzle.zxvwy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(-9.5), new Half(-1.5), new Half(-8));
                var v = ov.swizzle.zxvwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8), new Half(-1), new Half(-3), new Half(7.5));
                var v = ov.swizzle.zxvww;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1.5), new Half(-1), new Half(5), new Half(-4));
                var v = ov.swizzle.zxvwv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(5.5), new Half(-5), new Half(2.5));
                var v = ov.swizzle.zxvv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(5), new Half(0.5), new Half(3), new Half(5));
                var v = ov.swizzle.zxvvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(-8.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.zxvvy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-3.5), new Half(-1), new Half(-4.5));
                var v = ov.swizzle.zxvvz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(4.5), new Half(4), new Half(-8));
                var v = ov.swizzle.zxvvw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(-1), new Half(8.5), new Half(-6));
                var v = ov.swizzle.zxvvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.Zero, new Half(3.5), new Half(5), new Half(7));
                var v = ov.swizzle.zy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(-4), new Half(9), new Half(-6.5));
                var v = ov.swizzle.zyx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-6), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.zyxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(-2), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.zyxxx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), Half.Zero, new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.zyxxy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(0.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.zyxxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), new Half(1.5), new Half(-1.5), new Half(3));
                var v = ov.swizzle.zyxxw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(-5), new Half(1.5), new Half(-7));
                var v = ov.swizzle.zyxxv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(-6), new Half(-2.5), new Half(9.5));
                var v = ov.swizzle.zyxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(-2), new Half(9), new Half(4));
                var v = ov.swizzle.zyxyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5.5), new Half(5.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.zyxyy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(-4), new Half(6), new Half(-5.5));
                var v = ov.swizzle.zyxyz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(-7), new Half(-4.5), new Half(-6.5));
                var v = ov.swizzle.zyxyw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), new Half(-1.5), new Half(-9), new Half(-2));
                var v = ov.swizzle.zyxyv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(-8.5), new Half(9.5), new Half(2));
                var v = ov.swizzle.zyxz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(-3), new Half(-9.5), new Half(8.5));
                var v = ov.swizzle.zyxzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(2), new Half(-9.5), new Half(2.5), new Half(4));
                var v = ov.swizzle.zyxzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9.5), new Half(-3), new Half(8.5), new Half(2));
                var v = ov.swizzle.zyxzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(8), new Half(7), new Half(9));
                var v = ov.swizzle.zyxzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7.5), new Half(0.5), new Half(4), new Half(8));
                var v = ov.swizzle.zyxzv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(2.5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.zyxw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5), new Half(6.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.zyxwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(3.5), new Half(7), new Half(-2));
                var v = ov.swizzle.zyxwy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-5.5), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.zyxwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), new Half(-0.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.zyxww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(-4), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.zyxwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(8), new Half(-2), new Half(-7));
                var v = ov.swizzle.zyxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(-6.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.zyxvx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(6.5), new Half(-8.5), new Half(-1.5));
                var v = ov.swizzle.zyxvy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4.5), Half.Zero, new Half(6.5), new Half(6));
                var v = ov.swizzle.zyxvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3), new Half(9), new Half(-3.5), new Half(-7));
                var v = ov.swizzle.zyxvw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-6), new Half(8), new Half(9));
                var v = ov.swizzle.zyxvv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(7), new Half(-7.5), new Half(2));
                var v = ov.swizzle.zyy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9), new Half(-8.5), new Half(1.5), new Half(-7.5));
                var v = ov.swizzle.zyyx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(-3.5), new Half(-6.5), new Half(-2.5));
                var v = ov.swizzle.zyyxx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(8), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.zyyxy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(-7), new Half(-7.5), new Half(-6));
                var v = ov.swizzle.zyyxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3.5), new Half(-7.5), new Half(5.5), new Half(4));
                var v = ov.swizzle.zyyxw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-4), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.zyyxv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6.5), new Half(-4), new Half(-9), new Half(-1));
                var v = ov.swizzle.zyyy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(9), new Half(-4), new Half(-4));
                var v = ov.swizzle.zyyyx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(-3.5), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.zyyyy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4.5), new Half(-2.5), new Half(-5), new Half(-9));
                var v = ov.swizzle.zyyyz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(-4.5), new Half(5), Half.Zero);
                var v = ov.swizzle.zyyyw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7.5), new Half(-3.5), new Half(-3.5), new Half(-3.5));
                var v = ov.swizzle.zyyyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(6.5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.zyyz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(0.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.zyyzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(3), new Half(8), new Half(4));
                var v = ov.swizzle.zyyzy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.Zero, new Half(-7.5), new Half(6), new Half(4));
                var v = ov.swizzle.zyyzz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(9.5), new Half(9), new Half(5.5));
                var v = ov.swizzle.zyyzw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(8), new Half(-8), new Half(-9));
                var v = ov.swizzle.zyyzv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(-6.5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.zyyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(7.5), new Half(2), new Half(6.5));
                var v = ov.swizzle.zyywx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(9), new Half(7.5), new Half(2));
                var v = ov.swizzle.zyywy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8.5), new Half(-6), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.zyywz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(-9), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.zyyww;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3.5), new Half(-3.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.zyywv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(-2), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.zyyv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(-6), new Half(2.5), new Half(-4.5));
                var v = ov.swizzle.zyyvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(-9.5), new Half(-1), new Half(2));
                var v = ov.swizzle.zyyvy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), Half.One, new Half(7), new Half(0.5));
                var v = ov.swizzle.zyyvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5.5), new Half(7), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.zyyvw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6), Half.One, new Half(-2), new Half(-2.5));
                var v = ov.swizzle.zyyvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4), new Half(2), new Half(-1), new Half(-5));
                var v = ov.swizzle.zyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(-2), Half.Zero, new Half(-2));
                var v = ov.swizzle.zyzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5), new Half(-5.5), new Half(-6), Half.Zero);
                var v = ov.swizzle.zyzxx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(8), new Half(-9), new Half(9.5));
                var v = ov.swizzle.zyzxy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(-9), new Half(4), new Half(6));
                var v = ov.swizzle.zyzxz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7.5), new Half(-9), new Half(-1), new Half(2.5));
                var v = ov.swizzle.zyzxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8), new Half(3), new Half(5), new Half(9.5));
                var v = ov.swizzle.zyzxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(8), new Half(5.5), new Half(0.5));
                var v = ov.swizzle.zyzy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), Half.Zero, new Half(5.5), new Half(5.5));
                var v = ov.swizzle.zyzyx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1), new Half(2.5), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.zyzyy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8.5), new Half(-6.5), new Half(-3), new Half(5.5));
                var v = ov.swizzle.zyzyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(8.5), new Half(4), new Half(-0.5));
                var v = ov.swizzle.zyzyw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), Half.One, new Half(8), new Half(-1.5));
                var v = ov.swizzle.zyzyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(-8), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.zyzz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3.5), new Half(-4), new Half(-1.5), new Half(5));
                var v = ov.swizzle.zyzzx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-6.5), new Half(9), new Half(-2.5));
                var v = ov.swizzle.zyzzy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-0.5), new Half(-2.5), new Half(-1), new Half(-7.5));
                var v = ov.swizzle.zyzzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(0.5), new Half(9), new Half(3));
                var v = ov.swizzle.zyzzw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(4), new Half(5), Half.Zero);
                var v = ov.swizzle.zyzzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(2.5), new Half(6), new Half(9));
                var v = ov.swizzle.zyzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2.5), new Half(-6), new Half(-1), new Half(-2));
                var v = ov.swizzle.zyzwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), new Half(5.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.zyzwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2), new Half(-0.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.zyzwz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(0.5), new Half(-2.5), new Half(3));
                var v = ov.swizzle.zyzww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-2), new Half(8), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.zyzwv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(7), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.zyzv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8.5), new Half(-6), new Half(9.5), new Half(8));
                var v = ov.swizzle.zyzvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4), new Half(-6), new Half(9.5), new Half(7.5));
                var v = ov.swizzle.zyzvy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(0.5), new Half(-7.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.zyzvz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3), new Half(-2.5), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.zyzvw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4.5), new Half(4), new Half(3), new Half(8));
                var v = ov.swizzle.zyzvv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5.5), new Half(3), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.zyw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7), new Half(7), new Half(3.5), new Half(9));
                var v = ov.swizzle.zywx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(-0.5), new Half(8), new Half(2.5));
                var v = ov.swizzle.zywxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.Zero, new Half(0.5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.zywxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(-1.5), new Half(-4), new Half(4.5));
                var v = ov.swizzle.zywxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-7), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.zywxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(-3), new Half(1.5), new Half(2));
                var v = ov.swizzle.zywxv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(2.5), new Half(-5), new Half(4.5));
                var v = ov.swizzle.zywy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7.5), new Half(-0.5), new Half(-1), new Half(2.5));
                var v = ov.swizzle.zywyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5.5), new Half(-9), new Half(8.5), new Half(-1));
                var v = ov.swizzle.zywyy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4), new Half(-6), Half.Zero, new Half(7.5));
                var v = ov.swizzle.zywyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), new Half(0.5), new Half(-0.5), new Half(-3));
                var v = ov.swizzle.zywyw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.Zero, new Half(-8), new Half(3.5), new Half(-6.5));
                var v = ov.swizzle.zywyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3), new Half(7.5), new Half(5), new Half(4.5));
                var v = ov.swizzle.zywz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7), new Half(-6), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.zywzx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.One, new Half(-7), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.zywzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(-8), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.zywzz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(-3), new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.zywzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9.5), new Half(2), Half.One, new Half(-5.5));
                var v = ov.swizzle.zywzv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3), new Half(5.5), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.zyww;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3.5), new Half(-3), new Half(3), new Half(4.5));
                var v = ov.swizzle.zywwx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-0.5), new Half(-9.5), new Half(-9.5), new Half(9));
                var v = ov.swizzle.zywwy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(9), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.zywwz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7.5), Half.Zero, new Half(6), new Half(2));
                var v = ov.swizzle.zywww;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(4), new Half(-9), new Half(3.5));
                var v = ov.swizzle.zywwv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4), new Half(-4), new Half(-2), new Half(6.5));
                var v = ov.swizzle.zywv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5), new Half(-0.5), Half.One, new Half(6.5));
                var v = ov.swizzle.zywvx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.One, new Half(-4), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.zywvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), new Half(2.5), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.zywvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1), new Half(2), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.zywvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3), new Half(-0.5), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.zywvv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-7.5), new Half(4.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.zyv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5), new Half(8), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.zyvx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(7), new Half(4), new Half(-6.5));
                var v = ov.swizzle.zyvxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7), new Half(-7), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.zyvxy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-8.5), new Half(7), new Half(-1));
                var v = ov.swizzle.zyvxz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), new Half(7.5), new Half(-6.5), new Half(5.5));
                var v = ov.swizzle.zyvxw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(4), new Half(-7), new Half(3));
                var v = ov.swizzle.zyvxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7), new Half(2), new Half(-2.5), new Half(-8));
                var v = ov.swizzle.zyvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1.5), new Half(8), new Half(8.5), Half.One);
                var v = ov.swizzle.zyvyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2), new Half(7.5), new Half(4.5), new Half(3.5));
                var v = ov.swizzle.zyvyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3.5), new Half(2), new Half(-5), new Half(-4.5));
                var v = ov.swizzle.zyvyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(-3.5), Half.Zero, new Half(-1));
                var v = ov.swizzle.zyvyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7), new Half(-3.5), new Half(-1.5), new Half(4));
                var v = ov.swizzle.zyvyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4.5), new Half(0.5), Half.Zero, new Half(2));
                var v = ov.swizzle.zyvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(0.5), new Half(7), new Half(3.5));
                var v = ov.swizzle.zyvzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-7.5), new Half(6), new Half(-8));
                var v = ov.swizzle.zyvzy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4), new Half(3), new Half(-0.5), new Half(2));
                var v = ov.swizzle.zyvzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3), new Half(0.5), new Half(2.5), new Half(-9));
                var v = ov.swizzle.zyvzw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), new Half(2), new Half(-6), new Half(-9));
                var v = ov.swizzle.zyvzv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(-8.5), new Half(4.5), new Half(6));
                var v = ov.swizzle.zyvw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(6.5), new Half(1.5), new Half(6));
                var v = ov.swizzle.zyvwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6.5), new Half(4.5), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.zyvwy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9), new Half(-9.5), new Half(-7.5), new Half(-1.5));
                var v = ov.swizzle.zyvwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), new Half(6.5), new Half(-3.5), new Half(9));
                var v = ov.swizzle.zyvww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4.5), new Half(8.5), new Half(-7.5), new Half(-5.5));
                var v = ov.swizzle.zyvwv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(-4), new Half(-0.5), new Half(3.5));
                var v = ov.swizzle.zyvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8), new Half(-1.5), new Half(9.5), new Half(-1));
                var v = ov.swizzle.zyvvx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(-3), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.zyvvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(8), new Half(-8), new Half(4.5));
                var v = ov.swizzle.zyvvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-9.5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.zyvvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6), new Half(5.5), new Half(-5.5), new Half(-3.5));
                var v = ov.swizzle.zyvvv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(-5), new Half(6), Half.Zero);
                var v = ov.swizzle.zz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6.5), new Half(5), new Half(-1.5), new Half(6));
                var v = ov.swizzle.zzx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(-8.5), new Half(-2), new Half(-8));
                var v = ov.swizzle.zzxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-3), new Half(-2), new Half(-2));
                var v = ov.swizzle.zzxxx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4.5), new Half(-8.5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.zzxxy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7.5), new Half(-2.5), new Half(4), new Half(7));
                var v = ov.swizzle.zzxxz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(3), new Half(-4), new Half(8.5));
                var v = ov.swizzle.zzxxw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(5), new Half(-6.5), new Half(-2.5));
                var v = ov.swizzle.zzxxv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2), new Half(-8.5), new Half(-1), new Half(-2.5));
                var v = ov.swizzle.zzxy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8.5), new Half(8), new Half(8), new Half(6.5));
                var v = ov.swizzle.zzxyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3.5), new Half(-6.5), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.zzxyy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), new Half(-1.5), new Half(-6.5), new Half(5.5));
                var v = ov.swizzle.zzxyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5.5), Half.Zero, new Half(-9.5), new Half(5));
                var v = ov.swizzle.zzxyw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(7), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.zzxyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-0.5), new Half(-5.5), new Half(7.5));
                var v = ov.swizzle.zzxz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4), new Half(9), Half.Zero, new Half(-5));
                var v = ov.swizzle.zzxzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3), new Half(-8), new Half(8), new Half(-6.5));
                var v = ov.swizzle.zzxzy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9.5), new Half(1.5), new Half(1.5), new Half(-1));
                var v = ov.swizzle.zzxzz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4), new Half(-6.5), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.zzxzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), Half.Zero, new Half(5), new Half(2));
                var v = ov.swizzle.zzxzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(5.5), new Half(-2.5), Half.Zero);
                var v = ov.swizzle.zzxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(8.5), new Half(-5), new Half(1.5));
                var v = ov.swizzle.zzxwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(-2.5), new Half(7), new Half(-1));
                var v = ov.swizzle.zzxwy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(2.5), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.zzxwz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-7), Half.One, new Half(-8));
                var v = ov.swizzle.zzxww;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), Half.One, Half.Zero, new Half(-8));
                var v = ov.swizzle.zzxwv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3), new Half(4), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.zzxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(0.5), new Half(7), new Half(3.5));
                var v = ov.swizzle.zzxvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(-7), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.zzxvy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-5), new Half(-7), new Half(3.5));
                var v = ov.swizzle.zzxvz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9), new Half(3), new Half(7), new Half(-8));
                var v = ov.swizzle.zzxvw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(3.5), new Half(9), new Half(9));
                var v = ov.swizzle.zzxvv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(8.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.zzy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(0.5), new Half(-6), Half.Zero);
                var v = ov.swizzle.zzyx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(-5.5), new Half(4), new Half(3.5));
                var v = ov.swizzle.zzyxx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(-7), new Half(-4), new Half(7.5));
                var v = ov.swizzle.zzyxy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(-4.5), new Half(7), new Half(-6));
                var v = ov.swizzle.zzyxz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.Zero, new Half(6.5), new Half(-9), new Half(4));
                var v = ov.swizzle.zzyxw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-8.5), new Half(7.5), new Half(-7));
                var v = ov.swizzle.zzyxv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(-9), new Half(-2.5), new Half(8));
                var v = ov.swizzle.zzyy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), new Half(9.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.zzyyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4.5), new Half(8.5), new Half(-5), new Half(5.5));
                var v = ov.swizzle.zzyyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9.5), new Half(-9.5), new Half(-2), new Half(5.5));
                var v = ov.swizzle.zzyyz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(1.5), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.zzyyw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(-1), new Half(-2), new Half(-3.5));
                var v = ov.swizzle.zzyyv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(-2.5), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.zzyz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(0.5), new Half(4), new Half(5.5));
                var v = ov.swizzle.zzyzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(8), new Half(-2.5), Half.One);
                var v = ov.swizzle.zzyzy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.One, new Half(-7.5), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.zzyzz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(9), new Half(2), new Half(7.5));
                var v = ov.swizzle.zzyzw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2), new Half(7.5), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.zzyzv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(-2.5), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.zzyw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(-2), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.zzywx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-0.5), new Half(-6), new Half(-6), new Half(8));
                var v = ov.swizzle.zzywy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7), new Half(3), new Half(-9.5), new Half(5));
                var v = ov.swizzle.zzywz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(-2.5), new Half(-7), new Half(2.5));
                var v = ov.swizzle.zzyww;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7.5), new Half(-5.5), new Half(0.5), new Half(5));
                var v = ov.swizzle.zzywv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(-4), new Half(-5), new Half(-6));
                var v = ov.swizzle.zzyv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(-9), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.zzyvx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(8.5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.zzyvy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2.5), new Half(3.5), new Half(4.5), new Half(-6));
                var v = ov.swizzle.zzyvz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7), new Half(-8), new Half(-1), new Half(-1));
                var v = ov.swizzle.zzyvw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(9), new Half(7.5), new Half(5));
                var v = ov.swizzle.zzyvv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-8.5), new Half(-8), new Half(5));
                var v = ov.swizzle.zzz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), Half.One, new Half(9.5), new Half(6.5));
                var v = ov.swizzle.zzzx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-1.5), new Half(8), new Half(-3.5), new Half(6));
                var v = ov.swizzle.zzzxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2), new Half(-7), new Half(3.5), new Half(-1.5));
                var v = ov.swizzle.zzzxy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3), new Half(0.5), new Half(-4), new Half(-1.5));
                var v = ov.swizzle.zzzxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5.5), new Half(3), new Half(3), new Half(6.5));
                var v = ov.swizzle.zzzxw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-7.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.zzzxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8), new Half(-9.5), new Half(4), new Half(-6));
                var v = ov.swizzle.zzzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(3.5), new Half(7.5), new Half(5));
                var v = ov.swizzle.zzzyx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9.5), new Half(1.5), new Half(3), new Half(-7.5));
                var v = ov.swizzle.zzzyy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2), new Half(-7), new Half(9), new Half(8));
                var v = ov.swizzle.zzzyz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3.5), new Half(7), new Half(-0.5), new Half(4));
                var v = ov.swizzle.zzzyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2), new Half(7.5), new Half(2), new Half(-4));
                var v = ov.swizzle.zzzyv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(-9), new Half(2), new Half(2.5));
                var v = ov.swizzle.zzzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(-3), new Half(-7), new Half(8.5));
                var v = ov.swizzle.zzzzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(3.5), new Half(7), new Half(9.5));
                var v = ov.swizzle.zzzzy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), Half.Zero, new Half(-8.5), new Half(-9.5));
                var v = ov.swizzle.zzzzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(-3), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.zzzzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(1.5), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.zzzzv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(0.5), new Half(-6.5), new Half(6.5));
                var v = ov.swizzle.zzzw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-0.5), new Half(-1), Half.One);
                var v = ov.swizzle.zzzwx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(9.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.zzzwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.Zero, new Half(9.5), new Half(0.5), new Half(3));
                var v = ov.swizzle.zzzwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1), new Half(-6), new Half(-6.5), new Half(3));
                var v = ov.swizzle.zzzww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(7.5), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.zzzwv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(-3), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.zzzv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9), new Half(9), new Half(-2), new Half(-6));
                var v = ov.swizzle.zzzvx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3), new Half(0.5), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.zzzvy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), Half.One, new Half(-5.5), new Half(-9));
                var v = ov.swizzle.zzzvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.One, Half.Zero, new Half(5.5), new Half(8.5));
                var v = ov.swizzle.zzzvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(7), new Half(-9), new Half(9));
                var v = ov.swizzle.zzzvv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), new Half(2), Half.Zero, new Half(-7.5));
                var v = ov.swizzle.zzw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(-4), new Half(-0.5), new Half(-6));
                var v = ov.swizzle.zzwx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(0.5), new Half(-1.5), new Half(-4), new Half(-5.5));
                var v = ov.swizzle.zzwxx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(6.5), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.zzwxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2.5), new Half(-4), new Half(7), new Half(-0.5));
                var v = ov.swizzle.zzwxz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(-8), new Half(-2.5), new Half(-4));
                var v = ov.swizzle.zzwxw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(0.5), Half.One, new Half(-2.5));
                var v = ov.swizzle.zzwxv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(-0.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.zzwy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(-3), new Half(8), Half.Zero);
                var v = ov.swizzle.zzwyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4), new Half(-3.5), new Half(-2), new Half(9));
                var v = ov.swizzle.zzwyy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(-1), new Half(-2.5), new Half(7));
                var v = ov.swizzle.zzwyz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(4.5), new Half(-1), new Half(3));
                var v = ov.swizzle.zzwyw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), new Half(-3.5), new Half(-5), new Half(7));
                var v = ov.swizzle.zzwyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9.5), new Half(-3.5), new Half(-2.5), new Half(-2.5));
                var v = ov.swizzle.zzwz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(8.5), new Half(-5), new Half(7));
                var v = ov.swizzle.zzwzx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(4), new Half(6), new Half(7.5));
                var v = ov.swizzle.zzwzy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4), new Half(6), new Half(-8), new Half(-1.5));
                var v = ov.swizzle.zzwzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(3), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.zzwzw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-8), new Half(3.5), new Half(9));
                var v = ov.swizzle.zzwzv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5.5), new Half(7.5), Half.One, new Half(4.5));
                var v = ov.swizzle.zzww;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2.5), new Half(9.5), new Half(-5.5), new Half(-7.5));
                var v = ov.swizzle.zzwwx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9), new Half(5.5), new Half(-9.5), new Half(-6));
                var v = ov.swizzle.zzwwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5), new Half(-1.5), new Half(-4), new Half(9.5));
                var v = ov.swizzle.zzwwz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(8), new Half(-2.5), new Half(-7));
                var v = ov.swizzle.zzwww;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(2.5), new Half(6.5), Half.Zero);
                var v = ov.swizzle.zzwwv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(5), new Half(4), new Half(0.5));
                var v = ov.swizzle.zzwv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7.5), new Half(3), new Half(-2), new Half(6));
                var v = ov.swizzle.zzwvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4), new Half(-7.5), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.zzwvy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(-6.5), new Half(-8), new Half(-2));
                var v = ov.swizzle.zzwvz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(4), new Half(4.5), new Half(2));
                var v = ov.swizzle.zzwvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-1), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.zzwvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(3), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.zzv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(0.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.zzvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-6), new Half(6), new Half(-8.5));
                var v = ov.swizzle.zzvxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9.5), new Half(-3), new Half(2.5), new Half(4));
                var v = ov.swizzle.zzvxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(-5), new Half(-5.5), new Half(-9));
                var v = ov.swizzle.zzvxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(-2), new Half(2), new Half(-5));
                var v = ov.swizzle.zzvxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2), new Half(-9), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.zzvxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.One, new Half(7.5), new Half(5.5), new Half(-3));
                var v = ov.swizzle.zzvy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(4.5), new Half(8), new Half(-7));
                var v = ov.swizzle.zzvyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(7.5), new Half(-3), new Half(8.5));
                var v = ov.swizzle.zzvyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(-8), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.zzvyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9.5), new Half(-9), new Half(5), new Half(6.5));
                var v = ov.swizzle.zzvyw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-2.5), new Half(-4), new Half(-8));
                var v = ov.swizzle.zzvyv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(2.5), new Half(5.5), new Half(8.5));
                var v = ov.swizzle.zzvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7.5), new Half(-7), new Half(-9), new Half(5));
                var v = ov.swizzle.zzvzx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9), new Half(5), new Half(7), new Half(9.5));
                var v = ov.swizzle.zzvzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(9.5), new Half(3), new Half(-9.5));
                var v = ov.swizzle.zzvzz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(9.5), new Half(5.5), new Half(-0.5));
                var v = ov.swizzle.zzvzw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(2.5), new Half(8.5), Half.Zero);
                var v = ov.swizzle.zzvzv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1.5), new Half(-9.5), new Half(0.5), new Half(3.5));
                var v = ov.swizzle.zzvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(2), new Half(-4), new Half(7.5));
                var v = ov.swizzle.zzvwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(8.5), new Half(-4), new Half(3));
                var v = ov.swizzle.zzvwy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-1), new Half(5), new Half(5.5));
                var v = ov.swizzle.zzvwz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.One, new Half(-6.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.zzvww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), new Half(7.5), new Half(5), new Half(6.5));
                var v = ov.swizzle.zzvwv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(-8), new Half(-9), new Half(7));
                var v = ov.swizzle.zzvv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9.5), new Half(-6), new Half(-4), new Half(3));
                var v = ov.swizzle.zzvvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7), new Half(-4.5), new Half(6), new Half(7));
                var v = ov.swizzle.zzvvy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(-4.5), new Half(1.5), new Half(-2.5));
                var v = ov.swizzle.zzvvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(-2.5), new Half(3), new Half(8.5));
                var v = ov.swizzle.zzvvw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4), new Half(-3.5), new Half(9.5), new Half(4));
                var v = ov.swizzle.zzvvv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3), new Half(6.5), new Half(-8), new Half(-8));
                var v = ov.swizzle.zw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(-9.5), new Half(5), new Half(6));
                var v = ov.swizzle.zwx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(7.5), Half.One, new Half(3));
                var v = ov.swizzle.zwxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7), new Half(-6), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.zwxxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(5), new Half(-9), new Half(7));
                var v = ov.swizzle.zwxxy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2), new Half(-5), new Half(-9.5), new Half(-2));
                var v = ov.swizzle.zwxxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4), new Half(-6), new Half(9), new Half(2.5));
                var v = ov.swizzle.zwxxw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(7), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.zwxxv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(-9.5), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.zwxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(-4.5), Half.Zero, new Half(3));
                var v = ov.swizzle.zwxyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(8.5), new Half(8), new Half(-1));
                var v = ov.swizzle.zwxyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6), new Half(-7), new Half(9), new Half(-1));
                var v = ov.swizzle.zwxyz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3.5), Half.Zero, new Half(3.5), new Half(-5));
                var v = ov.swizzle.zwxyw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), new Half(-2.5), new Half(8), new Half(-5.5));
                var v = ov.swizzle.zwxyv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9), new Half(-2.5), new Half(2), new Half(7.5));
                var v = ov.swizzle.zwxz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-9), new Half(-8.5), new Half(5.5), new Half(-8));
                var v = ov.swizzle.zwxzx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-7), new Half(-5), new Half(-7), new Half(2.5));
                var v = ov.swizzle.zwxzy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(6), new Half(9.5), new Half(-9.5));
                var v = ov.swizzle.zwxzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4.5), new Half(7.5), new Half(-8), new Half(2));
                var v = ov.swizzle.zwxzw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(-3.5), new Half(9), new Half(4.5));
                var v = ov.swizzle.zwxzv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-2.5), new Half(-7), new Half(-6), new Half(-7.5));
                var v = ov.swizzle.zwxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(9), Half.One, new Half(6.5), new Half(-2), new Half(1.5));
                var v = ov.swizzle.zwxwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4.5), new Half(-7.5), new Half(2.5), new Half(-8));
                var v = ov.swizzle.zwxwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(-5.5), Half.One, new Half(-1));
                var v = ov.swizzle.zwxwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-1.5), new Half(-1.5), new Half(-2));
                var v = ov.swizzle.zwxww;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), new Half(8), Half.Zero, new Half(8.5));
                var v = ov.swizzle.zwxwv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2.5), new Half(-2), Half.One, new Half(-1));
                var v = ov.swizzle.zwxv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(8.5), new Half(4.5), new Half(-7.5));
                var v = ov.swizzle.zwxvx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9), new Half(5.5), new Half(7), new Half(-3.5));
                var v = ov.swizzle.zwxvy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(4), Half.Zero, new Half(8.5));
                var v = ov.swizzle.zwxvz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(-4.5), new Half(9.5), new Half(-9.5));
                var v = ov.swizzle.zwxvw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8.5), new Half(-1.5), new Half(3), new Half(4.5));
                var v = ov.swizzle.zwxvv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(5.5), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.zwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(-8.5), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.zwyx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9.5), new Half(-0.5), new Half(-9), new Half(7));
                var v = ov.swizzle.zwyxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(-9.5), Half.One, new Half(-5.5));
                var v = ov.swizzle.zwyxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7), new Half(7), Half.One, new Half(-8));
                var v = ov.swizzle.zwyxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7), new Half(-2), new Half(-8.5), new Half(-9.5));
                var v = ov.swizzle.zwyxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(5.5), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.zwyxv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-7.5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.zwyy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(-6.5), new Half(-1.5), new Half(4.5));
                var v = ov.swizzle.zwyyx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(6), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.zwyyy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(-3.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.zwyyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5.5), new Half(3.5), new Half(4.5), new Half(-4));
                var v = ov.swizzle.zwyyw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(9.5), Half.One, new Half(4));
                var v = ov.swizzle.zwyyv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(-1.5), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.zwyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(9.5), new Half(-7), new Half(-1));
                var v = ov.swizzle.zwyzx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5.5), new Half(-9.5), new Half(7), new Half(-8));
                var v = ov.swizzle.zwyzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-9), new Half(7.5), new Half(8));
                var v = ov.swizzle.zwyzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4.5), new Half(-6), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.zwyzw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-0.5), new Half(-2.5), new Half(7), new Half(1.5));
                var v = ov.swizzle.zwyzv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(-8.5), new Half(-5.5), new Half(2));
                var v = ov.swizzle.zwyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5), new Half(-2), new Half(5.5), new Half(-2));
                var v = ov.swizzle.zwywx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(9), new Half(8), new Half(6.5));
                var v = ov.swizzle.zwywy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4), new Half(-3.5), new Half(-7), new Half(2));
                var v = ov.swizzle.zwywz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(2), new Half(3.5), new Half(-5));
                var v = ov.swizzle.zwyww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(6), new Half(9.5), new Half(-1));
                var v = ov.swizzle.zwywv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(1.5), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.zwyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(5.5), new Half(5), new Half(3));
                var v = ov.swizzle.zwyvx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-5.5), new Half(-4.5), new Half(5.5));
                var v = ov.swizzle.zwyvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(6), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.zwyvz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3), new Half(-1), new Half(5), new Half(8.5));
                var v = ov.swizzle.zwyvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(-1.5), new Half(8), new Half(5.5));
                var v = ov.swizzle.zwyvv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8), new Half(-3), new Half(-5.5), new Half(-0.5));
                var v = ov.swizzle.zwz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(-5.5), new Half(9), new Half(6));
                var v = ov.swizzle.zwzx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(-8.5), new Half(-3), new Half(6));
                var v = ov.swizzle.zwzxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-7), new Half(7.5), new Half(4));
                var v = ov.swizzle.zwzxy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(-8.5), new Half(-1), new Half(0.5));
                var v = ov.swizzle.zwzxz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(-3.5), new Half(-2.5), new Half(-1));
                var v = ov.swizzle.zwzxw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(-2.5), new Half(9), new Half(8.5));
                var v = ov.swizzle.zwzxv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), Half.Zero, new Half(6.5), new Half(3.5));
                var v = ov.swizzle.zwzy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(7.5), new Half(-9), new Half(-4.5));
                var v = ov.swizzle.zwzyx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(7.5), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.zwzyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(0.5), new Half(3), new Half(5));
                var v = ov.swizzle.zwzyz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), Half.One, new Half(4.5), new Half(9));
                var v = ov.swizzle.zwzyw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.One, new Half(6.5), new Half(8.5), new Half(6));
                var v = ov.swizzle.zwzyv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7.5), new Half(-2), new Half(-4), new Half(-8));
                var v = ov.swizzle.zwzz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(-9.5), new Half(3), new Half(-7.5));
                var v = ov.swizzle.zwzzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5), new Half(2), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.zwzzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(-2.5), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.zwzzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-5.5), new Half(-6.5), new Half(4), new Half(7.5));
                var v = ov.swizzle.zwzzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(5), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.zwzzv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(8.5), new Half(-2), new Half(7.5));
                var v = ov.swizzle.zwzw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(-5.5), new Half(-8.5), new Half(7));
                var v = ov.swizzle.zwzwx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), new Half(-2.5), new Half(-7.5), new Half(6));
                var v = ov.swizzle.zwzwy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-6), new Half(-7), new Half(-2));
                var v = ov.swizzle.zwzwz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(4), new Half(-8), new Half(-7.5));
                var v = ov.swizzle.zwzww;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(7), new Half(-7), new Half(-7));
                var v = ov.swizzle.zwzwv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(3.5), new Half(-3), Half.One);
                var v = ov.swizzle.zwzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(0.5), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.zwzvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8), new Half(6), new Half(-4.5), new Half(-0.5));
                var v = ov.swizzle.zwzvy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), Half.One, new Half(7.5), Half.Zero);
                var v = ov.swizzle.zwzvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), new Half(-0.5), new Half(-5), new Half(0.5));
                var v = ov.swizzle.zwzvw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(-8.5), new Half(0.5), new Half(3.5));
                var v = ov.swizzle.zwzvv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(6), new Half(3), new Half(5.5));
                var v = ov.swizzle.zww;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9.5), new Half(-4), new Half(-9.5), new Half(4));
                var v = ov.swizzle.zwwx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-2.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.zwwxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(-9), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.zwwxy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7.5), new Half(9), new Half(-7), Half.One);
                var v = ov.swizzle.zwwxz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3), new Half(-9), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.zwwxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3.5), Half.Zero, new Half(4.5), new Half(5.5));
                var v = ov.swizzle.zwwxv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1), new Half(3), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.zwwy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(-8.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.zwwyx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(9.5), new Half(-0.5), new Half(6));
                var v = ov.swizzle.zwwyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(1.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.zwwyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3.5), new Half(0.5), Half.One, new Half(-6.5));
                var v = ov.swizzle.zwwyw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8.5), new Half(1.5), new Half(-3.5), new Half(3.5));
                var v = ov.swizzle.zwwyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4.5), new Half(3.5), new Half(4.5), Half.Zero);
                var v = ov.swizzle.zwwz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4), new Half(-0.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.zwwzx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6), new Half(-7), new Half(5), new Half(-8.5));
                var v = ov.swizzle.zwwzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-0.5), new Half(-6), new Half(6.5));
                var v = ov.swizzle.zwwzz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), Half.Zero, new Half(6), Half.Zero);
                var v = ov.swizzle.zwwzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), Half.One, new Half(6), new Half(4.5));
                var v = ov.swizzle.zwwzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), new Half(5.5), new Half(9.5), new Half(6));
                var v = ov.swizzle.zwww;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(5), new Half(-0.5), new Half(5.5));
                var v = ov.swizzle.zwwwx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6.5), new Half(3.5), new Half(2), new Half(4));
                var v = ov.swizzle.zwwwy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(-5.5), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.zwwwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(1.5), new Half(-6), new Half(0.5), new Half(4.5));
                var v = ov.swizzle.zwwww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), new Half(-3.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.zwwwv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(-6.5), new Half(4), new Half(-3.5));
                var v = ov.swizzle.zwwv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9.5), new Half(-8), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.zwwvx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7.5), Half.Zero, new Half(-9.5), Half.One);
                var v = ov.swizzle.zwwvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.One, new Half(7.5), new Half(2), new Half(-7.5));
                var v = ov.swizzle.zwwvz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(-8.5), new Half(-6.5), Half.One);
                var v = ov.swizzle.zwwvw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(5), new Half(5), new Half(7.5));
                var v = ov.swizzle.zwwvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2.5), new Half(-3), new Half(-9), new Half(4));
                var v = ov.swizzle.zwv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.Zero, new Half(-1.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.zwvx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(-3.5), new Half(-3.5), new Half(2));
                var v = ov.swizzle.zwvxx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(5.5), new Half(-1.5), new Half(-9));
                var v = ov.swizzle.zwvxy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6.5), new Half(-5.5), new Half(-1), new Half(5.5));
                var v = ov.swizzle.zwvxz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7.5), Half.Zero, new Half(3), new Half(5));
                var v = ov.swizzle.zwvxw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), new Half(-2), Half.Zero, new Half(2));
                var v = ov.swizzle.zwvxv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(-7.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.zwvy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(-7.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.zwvyx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(4.5), new Half(-8.5), new Half(6));
                var v = ov.swizzle.zwvyy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9.5), new Half(-8), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.zwvyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), Half.One, new Half(-5.5), new Half(-1));
                var v = ov.swizzle.zwvyw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9.5), new Half(-4.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.zwvyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3.5), new Half(-4.5), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.zwvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8), new Half(-9.5), new Half(-8), new Half(2));
                var v = ov.swizzle.zwvzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(5.5), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.zwvzy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(-9.5), new Half(6.5), new Half(-6));
                var v = ov.swizzle.zwvzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(7.5), new Half(-4.5), new Half(-2), new Half(6));
                var v = ov.swizzle.zwvzw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(8.5), new Half(4), Half.Zero);
                var v = ov.swizzle.zwvzv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1.5), new Half(-2), new Half(1.5), new Half(9.5));
                var v = ov.swizzle.zwvw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3.5), new Half(-1), new Half(6), new Half(6.5));
                var v = ov.swizzle.zwvwx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, Half.Zero, new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.zwvwy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(-5), new Half(4), new Half(-1.5));
                var v = ov.swizzle.zwvwz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-9.5), new Half(-1.5), new Half(4.5), new Half(2));
                var v = ov.swizzle.zwvww;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.Zero, new Half(-4), new Half(-7), new Half(4.5));
                var v = ov.swizzle.zwvwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9), new Half(-5), new Half(-7), new Half(-2.5));
                var v = ov.swizzle.zwvv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2), new Half(3), new Half(-2.5), new Half(-1.5));
                var v = ov.swizzle.zwvvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6), new Half(-3), Half.Zero, new Half(3.5));
                var v = ov.swizzle.zwvvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), Half.One, new Half(-7), new Half(-3.5));
                var v = ov.swizzle.zwvvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), new Half(3.5), new Half(-7), new Half(-8));
                var v = ov.swizzle.zwvvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(-7), new Half(-0.5), new Half(-3));
                var v = ov.swizzle.zwvvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), new Half(4.5), new Half(-2), new Half(8));
                var v = ov.swizzle.zv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3.5), new Half(-6.5), new Half(6.5), new Half(-2.5));
                var v = ov.swizzle.zvx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-2.5), new Half(-7), new Half(1.5));
                var v = ov.swizzle.zvxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6), new Half(-1.5), Half.One, new Half(7));
                var v = ov.swizzle.zvxxx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9.5), new Half(6.5), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.zvxxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(8.5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.zvxxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4.5), new Half(-5), new Half(-5), new Half(9.5));
                var v = ov.swizzle.zvxxw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), Half.One, new Half(2.5), new Half(-7.5));
                var v = ov.swizzle.zvxxv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(5), new Half(0.5), new Half(7));
                var v = ov.swizzle.zvxy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8.5), new Half(-7), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.zvxyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1), new Half(-6), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.zvxyy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6), new Half(3), new Half(-5.5), new Half(-0.5));
                var v = ov.swizzle.zvxyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2.5), new Half(-5.5), new Half(4), new Half(-9));
                var v = ov.swizzle.zvxyw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5.5), new Half(-3), new Half(-8), new Half(5));
                var v = ov.swizzle.zvxyv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5), new Half(6.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.zvxz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(6), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.zvxzx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.Zero, new Half(-2), new Half(-1.5), new Half(3));
                var v = ov.swizzle.zvxzy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(3.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.zvxzz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8), new Half(-7), new Half(3), new Half(-3.5));
                var v = ov.swizzle.zvxzw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), Half.Zero, new Half(-1), new Half(-5));
                var v = ov.swizzle.zvxzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(7), new Half(8.5), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.zvxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(6.5), new Half(-7.5), new Half(6));
                var v = ov.swizzle.zvxwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(-9.5), new Half(1.5), new Half(0.5));
                var v = ov.swizzle.zvxwy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6), new Half(6.5), Half.One, new Half(-7.5));
                var v = ov.swizzle.zvxwz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(-8.5), new Half(8), new Half(7.5));
                var v = ov.swizzle.zvxww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(3.5), new Half(3.5), new Half(-8));
                var v = ov.swizzle.zvxwv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), new Half(5.5), new Half(8), new Half(2.5));
                var v = ov.swizzle.zvxv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(1.5), new Half(2), new Half(-8.5));
                var v = ov.swizzle.zvxvx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(-2), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.zvxvy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-3.5), new Half(-3), new Half(1.5));
                var v = ov.swizzle.zvxvz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(8.5), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.zvxvw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2.5), new Half(0.5), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.zvxvv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(3), new Half(3), new Half(-9));
                var v = ov.swizzle.zvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-1), new Half(9.5), new Half(9.5));
                var v = ov.swizzle.zvyx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(4.5), new Half(-8.5), Half.Zero);
                var v = ov.swizzle.zvyxx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(6.5), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.zvyxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2), new Half(-9.5), Half.One, new Half(-3));
                var v = ov.swizzle.zvyxz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(6), new Half(-8), new Half(3.5));
                var v = ov.swizzle.zvyxw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(8), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.zvyxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9), new Half(7), new Half(5), new Half(9));
                var v = ov.swizzle.zvyy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(-3.5), new Half(-4), new Half(7.5));
                var v = ov.swizzle.zvyyx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8.5), new Half(-8), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.zvyyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(3.5), new Half(-4.5), new Half(5));
                var v = ov.swizzle.zvyyz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2), Half.One, new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.zvyyw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6), new Half(3.5), new Half(5), new Half(5.5));
                var v = ov.swizzle.zvyyv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6), new Half(8), new Half(3.5), Half.One);
                var v = ov.swizzle.zvyz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-6.5), new Half(0.5), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.zvyzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(5), new Half(4), new Half(1.5));
                var v = ov.swizzle.zvyzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7), new Half(-9.5), new Half(7.5), new Half(-3.5));
                var v = ov.swizzle.zvyzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8), new Half(-6.5), new Half(-9.5), new Half(5.5));
                var v = ov.swizzle.zvyzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(-6), new Half(-8.5), Half.One);
                var v = ov.swizzle.zvyzv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2.5), new Half(-9.5), new Half(-9), new Half(-5));
                var v = ov.swizzle.zvyw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-5.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.zvywx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.Zero, new Half(6), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.zvywy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(6.5), Half.Zero, new Half(-1.5));
                var v = ov.swizzle.zvywz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2.5), new Half(6.5), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.zvyww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2.5), new Half(-0.5), new Half(7.5), new Half(4));
                var v = ov.swizzle.zvywv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7), new Half(9), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.zvyv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6.5), new Half(-2.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.zvyvx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(4.5), new Half(-6), Half.One);
                var v = ov.swizzle.zvyvy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(-1), new Half(8.5), new Half(-8.5));
                var v = ov.swizzle.zvyvz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(-5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.zvyvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6.5), Half.Zero, new Half(6.5), new Half(9));
                var v = ov.swizzle.zvyvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(-2.5), new Half(-8.5), new Half(0.5));
                var v = ov.swizzle.zvz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(-7.5), new Half(-8), new Half(-1.5));
                var v = ov.swizzle.zvzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(6), new Half(-6), new Half(-8.5));
                var v = ov.swizzle.zvzxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-9.5), new Half(-8), new Half(9));
                var v = ov.swizzle.zvzxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(0.5), new Half(-7), new Half(4));
                var v = ov.swizzle.zvzxz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(-7), new Half(-4), new Half(3));
                var v = ov.swizzle.zvzxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6.5), new Half(1.5), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.zvzxv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(-3), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.zvzy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(2.5), new Half(-1), new Half(2));
                var v = ov.swizzle.zvzyx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(9.5), new Half(-2), new Half(-3));
                var v = ov.swizzle.zvzyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6), new Half(-7.5), new Half(-3.5), new Half(-6));
                var v = ov.swizzle.zvzyz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1), new Half(9), new Half(-6), new Half(-1));
                var v = ov.swizzle.zvzyw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-5), new Half(8), new Half(-5), new Half(2.5));
                var v = ov.swizzle.zvzyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-9), new Half(-2.5), new Half(4), new Half(-6));
                var v = ov.swizzle.zvzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(4.5), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.zvzzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-9.5), new Half(-5), new Half(-5));
                var v = ov.swizzle.zvzzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(4), Half.One, new Half(6));
                var v = ov.swizzle.zvzzz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4), new Half(5), new Half(4), new Half(-9));
                var v = ov.swizzle.zvzzw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(7.5), new Half(-5), new Half(8.5));
                var v = ov.swizzle.zvzzv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(-7), new Half(-8), new Half(-9.5));
                var v = ov.swizzle.zvzw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(4.5), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.zvzwx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7.5), new Half(-2.5), new Half(6.5), new Half(9));
                var v = ov.swizzle.zvzwy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(5.5), Half.Zero, new Half(7.5));
                var v = ov.swizzle.zvzwz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9), new Half(6), new Half(7), new Half(-3));
                var v = ov.swizzle.zvzww;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(-6.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.zvzwv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(-9), new Half(5.5), new Half(-6.5));
                var v = ov.swizzle.zvzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), Half.One, new Half(5.5), new Half(3));
                var v = ov.swizzle.zvzvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(9), new Half(-8.5), new Half(0.5));
                var v = ov.swizzle.zvzvy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(8), new Half(4.5), new Half(-7));
                var v = ov.swizzle.zvzvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(6.5), new Half(-7), new Half(6));
                var v = ov.swizzle.zvzvw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4), new Half(9), new Half(5), new Half(-1));
                var v = ov.swizzle.zvzvv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5.5), new Half(7), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.zvw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3), new Half(2.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.zvwx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), Half.Zero, new Half(7.5), new Half(2));
                var v = ov.swizzle.zvwxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), Half.Zero, new Half(-4.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.zvwxy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(-1.5), new Half(9), new Half(-7));
                var v = ov.swizzle.zvwxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2.5), Half.One, new Half(-1.5), new Half(-3.5));
                var v = ov.swizzle.zvwxw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2), new Half(6.5), new Half(-5.5), new Half(6));
                var v = ov.swizzle.zvwxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(1.5), new Half(4.5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.zvwy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4.5), new Half(4.5), new Half(9), new Half(-2.5));
                var v = ov.swizzle.zvwyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.Zero, new Half(9.5), new Half(-5), new Half(-4));
                var v = ov.swizzle.zvwyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1.5), new Half(1.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.zvwyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(8.5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.zvwyw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), Half.One, new Half(3), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.zvwyv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-6), new Half(1.5), new Half(2));
                var v = ov.swizzle.zvwz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(5), new Half(-3.5), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.zvwzx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1), new Half(-9), new Half(-6.5), new Half(2));
                var v = ov.swizzle.zvwzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2.5), new Half(-2.5), new Half(-5), new Half(-0.5));
                var v = ov.swizzle.zvwzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1), new Half(6), new Half(5.5), new Half(-4));
                var v = ov.swizzle.zvwzw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), new Half(6.5), new Half(-3), new Half(0.5));
                var v = ov.swizzle.zvwzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), new Half(5), new Half(6.5), new Half(9.5));
                var v = ov.swizzle.zvww;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5.5), new Half(8), new Half(-2), new Half(-2));
                var v = ov.swizzle.zvwwx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(-1), new Half(8), Half.Zero);
                var v = ov.swizzle.zvwwy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(-5), new Half(5.5), new Half(-0.5));
                var v = ov.swizzle.zvwwz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5), new Half(-0.5), new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.zvwww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3.5), new Half(-9.5), new Half(-7), new Half(8));
                var v = ov.swizzle.zvwwv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-4), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.zvwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4), new Half(-6.5), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.zvwvx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(-5), new Half(3), new Half(8.5));
                var v = ov.swizzle.zvwvy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(7.5), new Half(5.5), new Half(2.5));
                var v = ov.swizzle.zvwvz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), Half.Zero, new Half(-6.5), new Half(-2));
                var v = ov.swizzle.zvwvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.One, new Half(6), new Half(6), new Half(-5.5));
                var v = ov.swizzle.zvwvv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(1.5), new Half(2), new Half(2));
                var v = ov.swizzle.zvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(-8.5), new Half(-8.5), new Half(3));
                var v = ov.swizzle.zvvx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4), new Half(2.5), new Half(-5), new Half(-7));
                var v = ov.swizzle.zvvxx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9.5), new Half(-4.5), Half.Zero, new Half(7));
                var v = ov.swizzle.zvvxy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-0.5), new Half(-4.5), new Half(-5.5), new Half(3));
                var v = ov.swizzle.zvvxz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9), new Half(0.5), new Half(-8), new Half(9));
                var v = ov.swizzle.zvvxw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8.5), new Half(-7), new Half(8.5), new Half(-4.5));
                var v = ov.swizzle.zvvxv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2.5), new Half(-3), Half.Zero, new Half(-7));
                var v = ov.swizzle.zvvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9), new Half(-7), new Half(1.5), new Half(-6));
                var v = ov.swizzle.zvvyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(-4.5), new Half(5), new Half(-2));
                var v = ov.swizzle.zvvyy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(5), new Half(8.5), new Half(8));
                var v = ov.swizzle.zvvyz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(7), new Half(9.5), new Half(-2));
                var v = ov.swizzle.zvvyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7.5), new Half(2), new Half(-1), new Half(7));
                var v = ov.swizzle.zvvyv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1.5), new Half(3.5), new Half(0.5), new Half(7));
                var v = ov.swizzle.zvvz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(-4.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.zvvzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(4.5), new Half(7), Half.One);
                var v = ov.swizzle.zvvzy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-5.5), new Half(5), new Half(1.5));
                var v = ov.swizzle.zvvzz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(-8), new Half(-0.5), new Half(-8));
                var v = ov.swizzle.zvvzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9.5), new Half(-3), new Half(-1.5), new Half(5));
                var v = ov.swizzle.zvvzv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6), new Half(5), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.zvvw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(4.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.zvvwx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(1.5), new Half(-7.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.zvvwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5.5), new Half(9.5), new Half(7.5), new Half(7));
                var v = ov.swizzle.zvvwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(6.5), new Half(-9), new Half(-0.5));
                var v = ov.swizzle.zvvww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1), new Half(3), new Half(-3), new Half(-7));
                var v = ov.swizzle.zvvwv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4), new Half(6.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.zvvv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6), new Half(-1), new Half(-1), new Half(-1.5));
                var v = ov.swizzle.zvvvx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(0.5), new Half(-3.5), new Half(5), new Half(9.5));
                var v = ov.swizzle.zvvvy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9), new Half(1.5), new Half(-7), new Half(-6.5));
                var v = ov.swizzle.zvvvz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8.5), new Half(-6), new Half(-8.5), new Half(-9));
                var v = ov.swizzle.zvvvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9.5), new Half(-3.5), new Half(4.5), new Half(-2));
                var v = ov.swizzle.zvvvv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-7.5), new Half(-8.5), new Half(8));
                var v = ov.swizzle.wx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5.5), new Half(4), new Half(-1), new Half(3.5));
                var v = ov.swizzle.wxx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(-0.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.wxxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(1.5), new Half(-9.5), Half.One);
                var v = ov.swizzle.wxxxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9), new Half(-2.5), new Half(-0.5), new Half(9));
                var v = ov.swizzle.wxxxy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(-6), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.wxxxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(-6), new Half(8.5), new Half(-4.5));
                var v = ov.swizzle.wxxxw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(5), new Half(7.5), new Half(-9.5));
                var v = ov.swizzle.wxxxv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5), new Half(-8.5), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.wxxy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2.5), new Half(6), new Half(-5.5), new Half(-7.5));
                var v = ov.swizzle.wxxyx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(5), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.wxxyy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(3.5), new Half(-1), new Half(8.5));
                var v = ov.swizzle.wxxyz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(5), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.wxxyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(0.5), new Half(-6.5), new Half(-5));
                var v = ov.swizzle.wxxyv;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(3.5), new Half(9.5), new Half(8));
                var v = ov.swizzle.wxxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8.5), new Half(2), new Half(4.5), new Half(-6));
                var v = ov.swizzle.wxxzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(1.5), new Half(-7), new Half(1.5));
                var v = ov.swizzle.wxxzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4), new Half(-7.5), new Half(3), Half.One);
                var v = ov.swizzle.wxxzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5), new Half(4.5), new Half(9.5), new Half(9.5));
                var v = ov.swizzle.wxxzw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(9.5), new Half(1.5), new Half(-3.5));
                var v = ov.swizzle.wxxzv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2), new Half(-6.5), new Half(9), new Half(3.5));
                var v = ov.swizzle.wxxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(6), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.wxxwx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.Zero, new Half(8.5), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.wxxwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), new Half(-0.5), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.wxxwz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(-3.5), new Half(-7.5), new Half(5.5));
                var v = ov.swizzle.wxxww;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(4.5), Half.Zero, new Half(4.5));
                var v = ov.swizzle.wxxwv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8.5), new Half(-2), new Half(8), new Half(-9));
                var v = ov.swizzle.wxxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(-7.5), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.wxxvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(7.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.wxxvy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(9.5), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.wxxvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-1), new Half(9), new Half(1.5));
                var v = ov.swizzle.wxxvw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), Half.One, new Half(-4), new Half(-8));
                var v = ov.swizzle.wxxvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(5), new Half(0.5), new Half(-5));
                var v = ov.swizzle.wxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(-0.5), new Half(-6), new Half(3));
                var v = ov.swizzle.wxyx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(5), new Half(-6), new Half(4));
                var v = ov.swizzle.wxyxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8), new Half(8), new Half(6), new Half(-7));
                var v = ov.swizzle.wxyxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(-5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.wxyxz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2.5), new Half(2), new Half(-8), new Half(7.5));
                var v = ov.swizzle.wxyxw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(7), new Half(5), new Half(-8.5));
                var v = ov.swizzle.wxyxv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.One, new Half(6), new Half(2), new Half(-2.5));
                var v = ov.swizzle.wxyy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-5.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.wxyyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(5.5), new Half(4), new Half(3));
                var v = ov.swizzle.wxyyy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6), new Half(4.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.wxyyz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(-7), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.wxyyw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(-1), new Half(-8), new Half(2));
                var v = ov.swizzle.wxyyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7.5), Half.Zero, new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.wxyz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1), new Half(5), new Half(-9.5), new Half(-3.5));
                var v = ov.swizzle.wxyzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(8.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.wxyzy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2.5), new Half(7.5), new Half(-5), new Half(4.5));
                var v = ov.swizzle.wxyzz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3), new Half(-1), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.wxyzw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(-4.5), new Half(-3.5), new Half(-2.5));
                var v = ov.swizzle.wxyzv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7), new Half(5), new Half(-4), new Half(-4));
                var v = ov.swizzle.wxyw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), Half.Zero, new Half(-6), new Half(-8));
                var v = ov.swizzle.wxywx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(-5), new Half(-2), new Half(-1));
                var v = ov.swizzle.wxywy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(-6), new Half(4.5), new Half(-5.5));
                var v = ov.swizzle.wxywz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-1.5), new Half(6.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.wxyww;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2.5), new Half(-6), new Half(-9.5), new Half(8.5));
                var v = ov.swizzle.wxywv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(-9), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.wxyv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6.5), new Half(-5.5), new Half(-2.5), new Half(3));
                var v = ov.swizzle.wxyvx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-7.5), new Half(7.5), Half.One);
                var v = ov.swizzle.wxyvy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), new Half(9.5), new Half(-3), new Half(-1));
                var v = ov.swizzle.wxyvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(0.5), new Half(2), new Half(-9.5));
                var v = ov.swizzle.wxyvw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8.5), new Half(-7.5), new Half(5), new Half(-1));
                var v = ov.swizzle.wxyvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-8.5), new Half(-7), new Half(-6));
                var v = ov.swizzle.wxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6.5), new Half(-6.5), new Half(0.5), new Half(-9));
                var v = ov.swizzle.wxzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3), new Half(-0.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.wxzxx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5), new Half(8.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.wxzxy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(2), new Half(8), new Half(6.5));
                var v = ov.swizzle.wxzxz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(-7), new Half(-2), new Half(4));
                var v = ov.swizzle.wxzxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-5), new Half(-9), new Half(-6), new Half(7));
                var v = ov.swizzle.wxzxv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2), new Half(5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.wxzy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5), new Half(8), new Half(4.5), new Half(3));
                var v = ov.swizzle.wxzyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(9.5), new Half(5), new Half(4));
                var v = ov.swizzle.wxzyy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7.5), new Half(9.5), new Half(-0.5), new Half(6));
                var v = ov.swizzle.wxzyz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2.5), new Half(-2), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.wxzyw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5), new Half(-1), new Half(-3.5), new Half(7));
                var v = ov.swizzle.wxzyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(-4), new Half(-5.5), new Half(9.5));
                var v = ov.swizzle.wxzz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(-8), new Half(-2.5), new Half(7));
                var v = ov.swizzle.wxzzx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9), new Half(7), new Half(4), new Half(6.5));
                var v = ov.swizzle.wxzzy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(-2), new Half(6), new Half(3.5));
                var v = ov.swizzle.wxzzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(-0.5), new Half(8), new Half(8.5));
                var v = ov.swizzle.wxzzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-3.5), new Half(6.5), new Half(-5.5));
                var v = ov.swizzle.wxzzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(-6.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.wxzw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(-6), new Half(5), Half.One);
                var v = ov.swizzle.wxzwx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4), new Half(-2), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.wxzwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(7), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.wxzwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(4), new Half(2.5), new Half(-8));
                var v = ov.swizzle.wxzww;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5.5), new Half(4), new Half(-4.5), new Half(-0.5));
                var v = ov.swizzle.wxzwv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(-8.5), new Half(3), new Half(3));
                var v = ov.swizzle.wxzv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(-9.5), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.wxzvx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8.5), new Half(5), new Half(5), new Half(-6.5));
                var v = ov.swizzle.wxzvy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3), new Half(7), new Half(2.5), new Half(8));
                var v = ov.swizzle.wxzvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(2), new Half(-5.5), new Half(9));
                var v = ov.swizzle.wxzvw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(0.5), new Half(9), new Half(4.5));
                var v = ov.swizzle.wxzvv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(0.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.wxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6.5), new Half(8), new Half(-8), new Half(1.5));
                var v = ov.swizzle.wxwx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(-4), Half.One, new Half(7));
                var v = ov.swizzle.wxwxx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(9.5), new Half(9), new Half(4.5));
                var v = ov.swizzle.wxwxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(-2), new Half(-7), new Half(8.5));
                var v = ov.swizzle.wxwxz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2), new Half(7.5), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.wxwxw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5), new Half(-1), new Half(9.5), Half.One);
                var v = ov.swizzle.wxwxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(-0.5), new Half(8), new Half(-3.5));
                var v = ov.swizzle.wxwy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(-0.5), Half.One, new Half(-5));
                var v = ov.swizzle.wxwyx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), Half.Zero, new Half(-7), new Half(-7));
                var v = ov.swizzle.wxwyy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(-8.5), new Half(-5), new Half(-9.5));
                var v = ov.swizzle.wxwyz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(1.5), new Half(-4), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.wxwyw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3.5), new Half(-6), new Half(-4.5), new Half(4));
                var v = ov.swizzle.wxwyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(-5), Half.Zero, new Half(4));
                var v = ov.swizzle.wxwz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(0.5), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.wxwzx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(9), new Half(2), new Half(6));
                var v = ov.swizzle.wxwzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2), new Half(-9.5), new Half(-7), new Half(9));
                var v = ov.swizzle.wxwzz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-5.5), new Half(5.5), new Half(-9.5), new Half(8));
                var v = ov.swizzle.wxwzw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-1), new Half(-4.5), new Half(2));
                var v = ov.swizzle.wxwzv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(4), new Half(7.5), new Half(-3.5));
                var v = ov.swizzle.wxww;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), Half.Zero, new Half(-2), new Half(-3));
                var v = ov.swizzle.wxwwx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(8.5), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.wxwwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-2), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.wxwwz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(8.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.wxwww;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(5.5), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.wxwwv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2.5), new Half(5), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.wxwv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3.5), new Half(-3), new Half(-6), new Half(3));
                var v = ov.swizzle.wxwvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2), new Half(7), new Half(3), new Half(-4.5));
                var v = ov.swizzle.wxwvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4.5), new Half(-3), new Half(-9), new Half(-4));
                var v = ov.swizzle.wxwvz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(9.5), new Half(6.5), new Half(0.5));
                var v = ov.swizzle.wxwvw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9.5), new Half(-0.5), new Half(-9), new Half(-7.5));
                var v = ov.swizzle.wxwvv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(8), new Half(-9.5), new Half(-3.5));
                var v = ov.swizzle.wxv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4), new Half(-8), new Half(4), new Half(9.5));
                var v = ov.swizzle.wxvx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(7), new Half(5.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.wxvxx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(7.5), new Half(5.5), new Half(0.5), Half.One);
                var v = ov.swizzle.wxvxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-9.5), new Half(-6), new Half(-8), Half.One);
                var v = ov.swizzle.wxvxz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2.5), new Half(8), new Half(0.5), new Half(8));
                var v = ov.swizzle.wxvxw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4), new Half(3.5), new Half(4.5), new Half(2.5));
                var v = ov.swizzle.wxvxv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(-1.5), new Half(-7), new Half(-2.5));
                var v = ov.swizzle.wxvy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6), new Half(8), new Half(-9.5), new Half(-2));
                var v = ov.swizzle.wxvyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(0.5), Half.Zero, new Half(0.5));
                var v = ov.swizzle.wxvyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(9.5), new Half(-8), new Half(2));
                var v = ov.swizzle.wxvyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2.5), new Half(1.5), new Half(-8), new Half(4));
                var v = ov.swizzle.wxvyw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(-1.5), new Half(6.5), new Half(-8));
                var v = ov.swizzle.wxvyv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), Half.Zero, new Half(-6), new Half(-3));
                var v = ov.swizzle.wxvz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(8), new Half(-8), new Half(2), new Half(-1.5));
                var v = ov.swizzle.wxvzx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(5.5), new Half(6), new Half(-9));
                var v = ov.swizzle.wxvzy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7.5), new Half(8), Half.Zero, new Half(6.5));
                var v = ov.swizzle.wxvzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5), new Half(-6), new Half(2.5), Half.One);
                var v = ov.swizzle.wxvzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2), new Half(-1), new Half(-3), new Half(-7));
                var v = ov.swizzle.wxvzv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9), new Half(-2), Half.One, new Half(-4));
                var v = ov.swizzle.wxvw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-5), new Half(-2.5), new Half(3.5));
                var v = ov.swizzle.wxvwx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6), new Half(6.5), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.wxvwy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6.5), new Half(-4.5), new Half(8.5), new Half(2.5));
                var v = ov.swizzle.wxvwz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3.5), new Half(-1.5), Half.Zero, new Half(-7.5));
                var v = ov.swizzle.wxvww;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(8), new Half(-4), new Half(-8.5));
                var v = ov.swizzle.wxvwv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7.5), new Half(4), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.wxvv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9.5), new Half(4.5), new Half(2.5), new Half(9));
                var v = ov.swizzle.wxvvx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7.5), new Half(-8.5), new Half(7), new Half(2.5));
                var v = ov.swizzle.wxvvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8), new Half(-3.5), Half.One, new Half(-7.5));
                var v = ov.swizzle.wxvvz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3.5), new Half(-2), new Half(-9.5), new Half(2));
                var v = ov.swizzle.wxvvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(-2), new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.wxvvv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, Half.Zero, new Half(6), new Half(7));
                var v = ov.swizzle.wy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.One, v.y);
            }
            {
                var ov = new hvec5(new Half(5), Half.One, new Half(-1), new Half(-8), new Half(7.5));
                var v = ov.swizzle.wyx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(2.5), new Half(-1.5), new Half(0.5));
                var v = ov.swizzle.wyxx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(-8.5), new Half(7), new Half(2.5));
                var v = ov.swizzle.wyxxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2), new Half(6), new Half(2.5), new Half(-3.5));
                var v = ov.swizzle.wyxxy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(-4.5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.wyxxz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), new Half(-5), new Half(-1), new Half(9.5));
                var v = ov.swizzle.wyxxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), new Half(-4), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.wyxxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8.5), new Half(7), new Half(3), Half.One);
                var v = ov.swizzle.wyxy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(-5.5), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.wyxyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(3), new Half(-2.5), new Half(7.5));
                var v = ov.swizzle.wyxyy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), new Half(8), new Half(-8.5), new Half(8));
                var v = ov.swizzle.wyxyz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-1.5), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.wyxyw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1.5), new Half(-7.5), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.wyxyv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(1.5), new Half(-8.5), new Half(-7.5), new Half(4));
                var v = ov.swizzle.wyxz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(3), new Half(0.5), new Half(3.5));
                var v = ov.swizzle.wyxzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(5.5), new Half(-1), new Half(5.5));
                var v = ov.swizzle.wyxzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5.5), new Half(-2.5), new Half(-3), Half.One);
                var v = ov.swizzle.wyxzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(3.5), new Half(1.5), new Half(5));
                var v = ov.swizzle.wyxzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-1), new Half(9), new Half(7), new Half(8));
                var v = ov.swizzle.wyxzv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2), new Half(4.5), new Half(9.5), new Half(3));
                var v = ov.swizzle.wyxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-0.5), new Half(-7.5), new Half(-7.5), new Half(-3));
                var v = ov.swizzle.wyxwx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(-8), new Half(-2.5), new Half(3));
                var v = ov.swizzle.wyxwy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), new Half(-7), new Half(2), new Half(3));
                var v = ov.swizzle.wyxwz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.Zero, new Half(8), new Half(-2.5), new Half(-6.5));
                var v = ov.swizzle.wyxww;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(-0.5), new Half(-6), new Half(4.5));
                var v = ov.swizzle.wyxwv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4.5), new Half(5.5), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.wyxv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(6.5), new Half(7), Half.One);
                var v = ov.swizzle.wyxvx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.One, new Half(5), Half.Zero, new Half(7));
                var v = ov.swizzle.wyxvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5.5), new Half(5), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.wyxvz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3.5), new Half(6), new Half(4), new Half(9.5));
                var v = ov.swizzle.wyxvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(7), new Half(-7), new Half(8));
                var v = ov.swizzle.wyxvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(5), new Half(-1.5), new Half(7.5));
                var v = ov.swizzle.wyy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(7.5), new Half(8.5), new Half(-1));
                var v = ov.swizzle.wyyx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4.5), new Half(8), Half.One, Half.Zero);
                var v = ov.swizzle.wyyxx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(5.5), new Half(8), new Half(-9.5), new Half(6));
                var v = ov.swizzle.wyyxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), Half.One, new Half(-0.5), new Half(4));
                var v = ov.swizzle.wyyxz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1.5), new Half(1.5), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.wyyxw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9.5), new Half(-9), new Half(9.5), new Half(6));
                var v = ov.swizzle.wyyxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(-8), new Half(3), new Half(7));
                var v = ov.swizzle.wyyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8.5), new Half(6), new Half(-7), new Half(-6));
                var v = ov.swizzle.wyyyx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5.5), new Half(4), new Half(3), new Half(2.5));
                var v = ov.swizzle.wyyyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-2.5), new Half(9), new Half(9));
                var v = ov.swizzle.wyyyz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(-7), new Half(-6.5), new Half(-5));
                var v = ov.swizzle.wyyyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3), new Half(-5), new Half(-2), new Half(-8.5));
                var v = ov.swizzle.wyyyv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(9), new Half(5.5), new Half(7.5));
                var v = ov.swizzle.wyyz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(4), new Half(-3), new Half(-3.5));
                var v = ov.swizzle.wyyzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(-5.5), new Half(-3), Half.Zero);
                var v = ov.swizzle.wyyzy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(-1.5), new Half(0.5), new Half(-8));
                var v = ov.swizzle.wyyzz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3), new Half(9), new Half(-0.5), new Half(4));
                var v = ov.swizzle.wyyzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(4.5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.wyyzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(5.5), new Half(6.5), new Half(4));
                var v = ov.swizzle.wyyw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5), new Half(9), new Half(6), new Half(-8.5));
                var v = ov.swizzle.wyywx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(-5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.wyywy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4), new Half(3), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.wyywz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6), new Half(-4.5), new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.wyyww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6.5), new Half(-9.5), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.wyywv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(-7), new Half(-7), new Half(8));
                var v = ov.swizzle.wyyv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(-1.5), new Half(8), new Half(2));
                var v = ov.swizzle.wyyvx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(-7.5), new Half(9), new Half(-2.5));
                var v = ov.swizzle.wyyvy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-4.5), new Half(-9.5), new Half(-1.5));
                var v = ov.swizzle.wyyvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(-2), new Half(-1), new Half(6));
                var v = ov.swizzle.wyyvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8.5), Half.Zero, new Half(8), new Half(4));
                var v = ov.swizzle.wyyvv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(-8), new Half(-5), new Half(-1.5));
                var v = ov.swizzle.wyz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(7.5), new Half(-6), new Half(2.5));
                var v = ov.swizzle.wyzx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(5.5), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.wyzxx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(-6), new Half(7), new Half(-6.5));
                var v = ov.swizzle.wyzxy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(9.5), new Half(3), new Half(9.5));
                var v = ov.swizzle.wyzxz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2), new Half(5), new Half(-1), new Half(6));
                var v = ov.swizzle.wyzxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-9), new Half(3), Half.One);
                var v = ov.swizzle.wyzxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5.5), new Half(6), new Half(-8.5), new Half(-9));
                var v = ov.swizzle.wyzy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(9), new Half(-1.5), new Half(3));
                var v = ov.swizzle.wyzyx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(1.5), new Half(-6), new Half(1.5));
                var v = ov.swizzle.wyzyy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7.5), new Half(2.5), new Half(-3.5), new Half(3));
                var v = ov.swizzle.wyzyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-5), new Half(-5), new Half(-2));
                var v = ov.swizzle.wyzyw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(7), new Half(-2.5), new Half(8), new Half(-4));
                var v = ov.swizzle.wyzyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5), new Half(2.5), new Half(-9), new Half(5));
                var v = ov.swizzle.wyzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2.5), new Half(4.5), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.wyzzx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(-2), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.wyzzy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(0.5), new Half(-9), new Half(9.5));
                var v = ov.swizzle.wyzzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8.5), new Half(3.5), new Half(9.5), new Half(-2));
                var v = ov.swizzle.wyzzw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8.5), new Half(2.5), new Half(8), new Half(-5.5));
                var v = ov.swizzle.wyzzv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), Half.Zero, new Half(-5), new Half(9));
                var v = ov.swizzle.wyzw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(-3), new Half(9), new Half(-1));
                var v = ov.swizzle.wyzwx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2.5), new Half(3), new Half(3.5), new Half(3));
                var v = ov.swizzle.wyzwy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6.5), new Half(-5), new Half(-7.5), new Half(-5));
                var v = ov.swizzle.wyzwz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(7), new Half(8), new Half(-7));
                var v = ov.swizzle.wyzww;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3), new Half(2.5), new Half(6), new Half(-2));
                var v = ov.swizzle.wyzwv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4.5), new Half(-3.5), new Half(4), new Half(9));
                var v = ov.swizzle.wyzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(6.5), new Half(-0.5), new Half(2.5));
                var v = ov.swizzle.wyzvx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(-8.5), new Half(7), new Half(-9.5));
                var v = ov.swizzle.wyzvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), Half.Zero, new Half(6.5), new Half(-4.5));
                var v = ov.swizzle.wyzvz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5), new Half(9), new Half(4.5), new Half(9));
                var v = ov.swizzle.wyzvw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(2.5), new Half(7.5), new Half(-5));
                var v = ov.swizzle.wyzvv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.wyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.One, new Half(9.5), new Half(-6.5), new Half(-6));
                var v = ov.swizzle.wywx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(-4.5), new Half(0.5), new Half(5));
                var v = ov.swizzle.wywxx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(9.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.wywxy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(6.5), new Half(-8.5), Half.One);
                var v = ov.swizzle.wywxz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4.5), new Half(1.5), new Half(5.5), new Half(4));
                var v = ov.swizzle.wywxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9), new Half(9.5), new Half(-5), new Half(4));
                var v = ov.swizzle.wywxv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(-6.5), new Half(6.5), new Half(4.5));
                var v = ov.swizzle.wywy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(-8), new Half(-9.5), Half.Zero);
                var v = ov.swizzle.wywyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(-9.5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.wywyy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5), new Half(2), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.wywyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), new Half(-4.5), new Half(6.5), new Half(-8));
                var v = ov.swizzle.wywyw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1), new Half(3), new Half(-8), new Half(4.5));
                var v = ov.swizzle.wywyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), new Half(-1), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.wywz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4), new Half(3), new Half(4.5), Half.One);
                var v = ov.swizzle.wywzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4.5), new Half(-7), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.wywzy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4), new Half(2), new Half(2.5), new Half(5.5));
                var v = ov.swizzle.wywzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(-1), Half.One, new Half(-1.5));
                var v = ov.swizzle.wywzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-3.5), new Half(-9), new Half(3.5));
                var v = ov.swizzle.wywzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(9.5), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.wyww;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(4.5), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.wywwx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(7), new Half(-3.5), new Half(7));
                var v = ov.swizzle.wywwy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(3), new Half(-9.5), new Half(3));
                var v = ov.swizzle.wywwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(-2), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.wywww;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6), new Half(8), new Half(7.5), new Half(-7));
                var v = ov.swizzle.wywwv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(-5.5), Half.One, new Half(5));
                var v = ov.swizzle.wywv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(1.5), new Half(6.5), new Half(-9));
                var v = ov.swizzle.wywvx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1), new Half(4), new Half(2.5), Half.Zero);
                var v = ov.swizzle.wywvy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8.5), new Half(-4.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.wywvz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4), new Half(6), new Half(-6), new Half(8.5));
                var v = ov.swizzle.wywvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-7), new Half(6), new Half(-6));
                var v = ov.swizzle.wywvv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(7.5), new Half(-8.5), new Half(-4));
                var v = ov.swizzle.wyv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8), new Half(6), new Half(-9.5), new Half(2.5));
                var v = ov.swizzle.wyvx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(6), Half.Zero, new Half(8.5));
                var v = ov.swizzle.wyvxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(-9), new Half(-7.5), new Half(4));
                var v = ov.swizzle.wyvxy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(-4), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.wyvxz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(8), new Half(3), new Half(-8));
                var v = ov.swizzle.wyvxw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8), new Half(-4.5), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.wyvxv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3), new Half(-6.5), new Half(-8), new Half(1.5));
                var v = ov.swizzle.wyvy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(4), new Half(2), new Half(-7.5));
                var v = ov.swizzle.wyvyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(6), new Half(-8), new Half(-3));
                var v = ov.swizzle.wyvyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(5.5), new Half(2), new Half(5));
                var v = ov.swizzle.wyvyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2.5), new Half(7), new Half(7.5), new Half(2));
                var v = ov.swizzle.wyvyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(3), new Half(2), new Half(6.5));
                var v = ov.swizzle.wyvyv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(5), new Half(-3.5), new Half(2), new Half(4.5));
                var v = ov.swizzle.wyvz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), Half.Zero, new Half(0.5), new Half(8));
                var v = ov.swizzle.wyvzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(-2), new Half(7), new Half(-7.5));
                var v = ov.swizzle.wyvzy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(1.5), new Half(0.5), new Half(5.5));
                var v = ov.swizzle.wyvzz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6.5), new Half(-6.5), new Half(-5), new Half(6));
                var v = ov.swizzle.wyvzw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5), new Half(-3.5), new Half(-6), new Half(3));
                var v = ov.swizzle.wyvzv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), Half.One, new Half(6), new Half(-4));
                var v = ov.swizzle.wyvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(3), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.wyvwx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9.5), new Half(4), new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.wyvwy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-6), new Half(9.5), new Half(-6), new Half(7.5));
                var v = ov.swizzle.wyvwz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-3), new Half(7), Half.Zero);
                var v = ov.swizzle.wyvww;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6.5), new Half(-2), new Half(5.5), new Half(-7));
                var v = ov.swizzle.wyvwv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(-5.5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.wyvv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(4), new Half(4.5), new Half(-3.5));
                var v = ov.swizzle.wyvvx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(7), new Half(0.5), new Half(2.5));
                var v = ov.swizzle.wyvvy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8), new Half(-1.5), new Half(-2.5), new Half(2));
                var v = ov.swizzle.wyvvz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(5), new Half(-1), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.wyvvw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5), new Half(4.5), new Half(5), new Half(-0.5));
                var v = ov.swizzle.wyvvv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8), new Half(7), new Half(6), new Half(4.5));
                var v = ov.swizzle.wz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7), v.y);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(-8), new Half(-3), new Half(7.5));
                var v = ov.swizzle.wzx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1), new Half(5), new Half(-0.5), new Half(-3));
                var v = ov.swizzle.wzxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1), new Half(-6.5), new Half(-5), new Half(3));
                var v = ov.swizzle.wzxxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4.5), new Half(-5.5), new Half(3.5), new Half(-5));
                var v = ov.swizzle.wzxxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4.5), new Half(5), new Half(9.5), new Half(-1));
                var v = ov.swizzle.wzxxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(0.5), new Half(8.5), new Half(4), new Half(-3));
                var v = ov.swizzle.wzxxw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.One, Half.Zero, new Half(6.5), new Half(-3.5));
                var v = ov.swizzle.wzxxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-6), new Half(0.5), new Half(-6.5));
                var v = ov.swizzle.wzxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.Zero, new Half(-8.5), new Half(6), new Half(-6.5));
                var v = ov.swizzle.wzxyx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2.5), new Half(-9.5), new Half(2), new Half(-6.5));
                var v = ov.swizzle.wzxyy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(-5), new Half(2.5), new Half(3.5));
                var v = ov.swizzle.wzxyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9), new Half(-8), Half.One, new Half(-6.5));
                var v = ov.swizzle.wzxyw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), Half.One, new Half(-6), new Half(6.5));
                var v = ov.swizzle.wzxyv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-2.5), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.wzxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(4.5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.wzxzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4), new Half(8.5), new Half(-7), new Half(-2));
                var v = ov.swizzle.wzxzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(6.5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.wzxzz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(8), new Half(2), new Half(4));
                var v = ov.swizzle.wzxzw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7.5), new Half(-4), new Half(6), new Half(3.5));
                var v = ov.swizzle.wzxzv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(4), new Half(9), new Half(-9));
                var v = ov.swizzle.wzxw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4), new Half(1.5), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.wzxwx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), new Half(4), new Half(7), new Half(4.5));
                var v = ov.swizzle.wzxwy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2), Half.One, new Half(0.5), Half.Zero);
                var v = ov.swizzle.wzxwz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5), new Half(-9.5), new Half(-8.5), new Half(6));
                var v = ov.swizzle.wzxww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(-4.5), new Half(-5.5), new Half(9));
                var v = ov.swizzle.wzxwv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5), new Half(-2.5), new Half(-7), new Half(4));
                var v = ov.swizzle.wzxv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(-1.5), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.wzxvx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8), new Half(-6), new Half(3), new Half(6.5));
                var v = ov.swizzle.wzxvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), Half.Zero, new Half(8), new Half(-2.5));
                var v = ov.swizzle.wzxvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(-6.5), new Half(6), new Half(-4));
                var v = ov.swizzle.wzxvw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(-5.5), new Half(3), Half.One);
                var v = ov.swizzle.wzxvv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(6), new Half(-2), new Half(3.5));
                var v = ov.swizzle.wzy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4), new Half(-1.5), new Half(2), new Half(3.5));
                var v = ov.swizzle.wzyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(4), new Half(7), new Half(-7.5));
                var v = ov.swizzle.wzyxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9.5), new Half(-7), new Half(-5.5), new Half(7));
                var v = ov.swizzle.wzyxy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(-7), new Half(7.5), new Half(8));
                var v = ov.swizzle.wzyxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), new Half(-9.5), new Half(2), Half.One);
                var v = ov.swizzle.wzyxw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6), new Half(-5.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.wzyxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(3), new Half(9), new Half(4));
                var v = ov.swizzle.wzyy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4.5), new Half(7.5), new Half(-5), new Half(9));
                var v = ov.swizzle.wzyyx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(-6), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.wzyyy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2), new Half(9.5), new Half(6.5), new Half(6));
                var v = ov.swizzle.wzyyz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3), new Half(9), new Half(3), new Half(0.5));
                var v = ov.swizzle.wzyyw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(-4.5), Half.One, new Half(-2));
                var v = ov.swizzle.wzyyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9.5), new Half(7), new Half(-2), new Half(-5.5));
                var v = ov.swizzle.wzyz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5.5), new Half(6), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.wzyzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), Half.One, new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.wzyzy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), new Half(5.5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.wzyzz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(-1.5), new Half(0.5), new Half(8));
                var v = ov.swizzle.wzyzw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.One, Half.Zero, new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.wzyzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(6.5), new Half(3), new Half(8));
                var v = ov.swizzle.wzyw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(4), new Half(9.5), new Half(-7.5));
                var v = ov.swizzle.wzywx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-9.5), new Half(-6.5), new Half(5));
                var v = ov.swizzle.wzywy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(-7.5), new Half(-3), new Half(2));
                var v = ov.swizzle.wzywz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(4.5), new Half(4), new Half(1.5));
                var v = ov.swizzle.wzyww;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(-8), new Half(3), new Half(0.5));
                var v = ov.swizzle.wzywv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-2.5), new Half(-3.5), new Half(2));
                var v = ov.swizzle.wzyv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6), new Half(7.5), new Half(-9), new Half(-2));
                var v = ov.swizzle.wzyvx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.One, new Half(5.5), new Half(8), new Half(-1.5));
                var v = ov.swizzle.wzyvy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6.5), new Half(5), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.wzyvz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9), new Half(-1.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.wzyvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6), new Half(2.5), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.wzyvv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), Half.Zero, new Half(9), new Half(3.5));
                var v = ov.swizzle.wzz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8), new Half(4.5), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.wzzx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4), new Half(3), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.wzzxx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(-4.5), new Half(-6), new Half(7));
                var v = ov.swizzle.wzzxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5), new Half(3.5), new Half(-9), new Half(7.5));
                var v = ov.swizzle.wzzxz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6), new Half(9), new Half(6.5), new Half(-8.5));
                var v = ov.swizzle.wzzxw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), new Half(-3.5), new Half(5.5), new Half(4));
                var v = ov.swizzle.wzzxv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.Zero, new Half(-3.5), new Half(-6), new Half(-5));
                var v = ov.swizzle.wzzy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(-4.5), new Half(8), new Half(7));
                var v = ov.swizzle.wzzyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(-1.5), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.wzzyy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(0.5), new Half(-6), new Half(3), new Half(4.5));
                var v = ov.swizzle.wzzyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6.5), new Half(-7.5), new Half(-2), new Half(-7.5));
                var v = ov.swizzle.wzzyw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8.5), new Half(8.5), Half.Zero, new Half(9.5));
                var v = ov.swizzle.wzzyv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9), new Half(7), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.wzzz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(9), Half.One, new Half(3.5));
                var v = ov.swizzle.wzzzx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(-4.5), new Half(-1), new Half(9));
                var v = ov.swizzle.wzzzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-8), new Half(8), new Half(1.5));
                var v = ov.swizzle.wzzzz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9.5), new Half(-7.5), Half.Zero, Half.One);
                var v = ov.swizzle.wzzzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-4), new Half(3.5), new Half(7));
                var v = ov.swizzle.wzzzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3), new Half(-5.5), new Half(9), new Half(5));
                var v = ov.swizzle.wzzw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(2.5), new Half(6.5), new Half(-3.5));
                var v = ov.swizzle.wzzwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(-5), new Half(-1), new Half(7));
                var v = ov.swizzle.wzzwy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2), new Half(-2), new Half(2), new Half(-2.5));
                var v = ov.swizzle.wzzwz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8.5), new Half(-0.5), new Half(8), new Half(-4));
                var v = ov.swizzle.wzzww;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(6), new Half(4.5), new Half(4));
                var v = ov.swizzle.wzzwv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(-6), new Half(3.5), new Half(-8));
                var v = ov.swizzle.wzzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(-5), new Half(4), new Half(9.5));
                var v = ov.swizzle.wzzvx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2.5), new Half(-8.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.wzzvy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-1), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.wzzvz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), new Half(-2), new Half(5), new Half(-9.5));
                var v = ov.swizzle.wzzvw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(-6), new Half(6.5), new Half(2));
                var v = ov.swizzle.wzzvv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(7.5), new Half(2.5), new Half(2));
                var v = ov.swizzle.wzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4), new Half(-8.5), new Half(2.5), new Half(-4.5));
                var v = ov.swizzle.wzwx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7.5), new Half(6), new Half(2), new Half(9.5));
                var v = ov.swizzle.wzwxx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(5), new Half(8.5), new Half(8));
                var v = ov.swizzle.wzwxy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4.5), new Half(-4), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.wzwxz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8.5), new Half(9), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.wzwxw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9.5), new Half(-8), new Half(2), new Half(-3.5));
                var v = ov.swizzle.wzwxv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-0.5), new Half(-0.5), new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.wzwy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(-9), new Half(8), new Half(4.5));
                var v = ov.swizzle.wzwyx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(8), new Half(6), new Half(-9));
                var v = ov.swizzle.wzwyy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(-8), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.wzwyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3.5), new Half(-5.5), new Half(6), new Half(-2.5));
                var v = ov.swizzle.wzwyw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4.5), new Half(7), new Half(9), new Half(-6));
                var v = ov.swizzle.wzwyv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(4), new Half(-6), new Half(-1));
                var v = ov.swizzle.wzwz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(-4.5), new Half(-7), new Half(8));
                var v = ov.swizzle.wzwzx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(4), new Half(-9), new Half(2));
                var v = ov.swizzle.wzwzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(2), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.wzwzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.One, new Half(0.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.wzwzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5), new Half(-7.5), new Half(3.5), new Half(-4));
                var v = ov.swizzle.wzwzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(8), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.wzww;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(3.5), new Half(6.5), new Half(7));
                var v = ov.swizzle.wzwwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6.5), Half.Zero, new Half(-9), new Half(8));
                var v = ov.swizzle.wzwwy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8.5), new Half(4), new Half(3), new Half(-1));
                var v = ov.swizzle.wzwwz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(1.5), new Half(-3), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.wzwww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-2.5), new Half(-7), new Half(8));
                var v = ov.swizzle.wzwwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1.5), new Half(2.5), new Half(2), new Half(2));
                var v = ov.swizzle.wzwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7.5), new Half(-3), new Half(0.5), Half.Zero);
                var v = ov.swizzle.wzwvx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(6), new Half(-2.5), new Half(4));
                var v = ov.swizzle.wzwvy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(-1), new Half(8), new Half(-8));
                var v = ov.swizzle.wzwvz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(-8), new Half(-6.5), new Half(-9));
                var v = ov.swizzle.wzwvw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(-1.5), new Half(-6), new Half(-5.5));
                var v = ov.swizzle.wzwvv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), new Half(-6), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.wzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(1.5), new Half(8.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.wzvx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8), new Half(-4), new Half(3), new Half(0.5));
                var v = ov.swizzle.wzvxx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4.5), new Half(-4.5), new Half(-6), Half.Zero);
                var v = ov.swizzle.wzvxy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(-8), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.wzvxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1), new Half(8), new Half(-6.5), new Half(-1.5));
                var v = ov.swizzle.wzvxw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(7.5), new Half(6), new Half(-2.5));
                var v = ov.swizzle.wzvxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3), new Half(-9), new Half(-2.5), new Half(9));
                var v = ov.swizzle.wzvy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2), new Half(4.5), new Half(-9), new Half(5.5));
                var v = ov.swizzle.wzvyx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(-5), new Half(3.5), new Half(3));
                var v = ov.swizzle.wzvyy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-3), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.wzvyz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(-8), Half.Zero, new Half(4.5));
                var v = ov.swizzle.wzvyw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7.5), new Half(-5), new Half(-0.5), new Half(3.5));
                var v = ov.swizzle.wzvyv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(7), new Half(-7), new Half(-7));
                var v = ov.swizzle.wzvz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(8.5), new Half(5), new Half(-5));
                var v = ov.swizzle.wzvzx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(8.5), new Half(2), new Half(-5));
                var v = ov.swizzle.wzvzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6.5), new Half(-6), new Half(-9.5), new Half(8.5));
                var v = ov.swizzle.wzvzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6.5), new Half(-7.5), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.wzvzw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(-9), new Half(2.5), new Half(-4.5));
                var v = ov.swizzle.wzvzv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(5), new Half(-3.5), new Half(-7.5));
                var v = ov.swizzle.wzvw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9), new Half(7.5), new Half(-6), new Half(2.5));
                var v = ov.swizzle.wzvwx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.Zero, new Half(7), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.wzvwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(-5), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.wzvwz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(5.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.wzvww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(0.5), new Half(-6.5), new Half(-3.5), new Half(4.5));
                var v = ov.swizzle.wzvwv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(5), new Half(-8.5), new Half(-3));
                var v = ov.swizzle.wzvv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9), new Half(-3), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.wzvvx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8.5), Half.Zero, new Half(-2.5), new Half(-5));
                var v = ov.swizzle.wzvvy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(-7.5), new Half(3), new Half(-9));
                var v = ov.swizzle.wzvvz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(3.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.wzvvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3.5), new Half(-5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.wzvvv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(-2), new Half(-8.5), new Half(5));
                var v = ov.swizzle.ww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(-2.5), new Half(-2.5), new Half(9));
                var v = ov.swizzle.wwx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(3.5), new Half(-1), new Half(-4));
                var v = ov.swizzle.wwxx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6), new Half(7), new Half(-6), new Half(8.5));
                var v = ov.swizzle.wwxxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7), new Half(-9.5), new Half(6), new Half(4));
                var v = ov.swizzle.wwxxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4.5), new Half(-0.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.wwxxz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3), new Half(-6.5), new Half(-7), new Half(3));
                var v = ov.swizzle.wwxxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(-9), new Half(-7.5), new Half(-9));
                var v = ov.swizzle.wwxxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(4.5), new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.wwxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(-6.5), new Half(2), new Half(5));
                var v = ov.swizzle.wwxyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3.5), new Half(9.5), new Half(0.5), new Half(-5));
                var v = ov.swizzle.wwxyy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6), new Half(4), new Half(-7), new Half(1.5));
                var v = ov.swizzle.wwxyz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(2), new Half(-2), new Half(2.5));
                var v = ov.swizzle.wwxyw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6.5), new Half(-6), new Half(7), new Half(8));
                var v = ov.swizzle.wwxyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(-3.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.wwxz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4), new Half(-3.5), new Half(-8.5), new Half(4.5));
                var v = ov.swizzle.wwxzx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(-3.5), new Half(-9), new Half(-3.5));
                var v = ov.swizzle.wwxzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4), new Half(2.5), new Half(2), Half.Zero);
                var v = ov.swizzle.wwxzz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(2), new Half(1.5), new Half(-6));
                var v = ov.swizzle.wwxzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(-6.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.wwxzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-6), new Half(3.5), Half.One);
                var v = ov.swizzle.wwxw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(2), new Half(5.5), new Half(-3.5));
                var v = ov.swizzle.wwxwx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(-5.5), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.wwxwy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-5.5), new Half(-4.5), Half.Zero);
                var v = ov.swizzle.wwxwz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(-3), new Half(6), new Half(-9.5));
                var v = ov.swizzle.wwxww;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(5.5), new Half(-8.5), new Half(6.5));
                var v = ov.swizzle.wwxwv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(0.5), new Half(-4.5), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.wwxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(2.5), new Half(-8), new Half(-6.5));
                var v = ov.swizzle.wwxvx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(6.5), new Half(-7), new Half(-2));
                var v = ov.swizzle.wwxvy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-9.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.wwxvz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5), new Half(7.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.wwxvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-0.5), new Half(8), new Half(-4), new Half(-9));
                var v = ov.swizzle.wwxvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5), new Half(-7.5), new Half(9.5), new Half(6.5));
                var v = ov.swizzle.wwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), Half.Zero, new Half(2), new Half(8.5));
                var v = ov.swizzle.wwyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(5), new Half(2), new Half(9));
                var v = ov.swizzle.wwyxx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(6.5), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.wwyxy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(8.5), new Half(6.5), new Half(-6));
                var v = ov.swizzle.wwyxz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(-4.5), new Half(-3), new Half(9));
                var v = ov.swizzle.wwyxw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(-9), new Half(8.5), new Half(4));
                var v = ov.swizzle.wwyxv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(7.5), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.wwyy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(7.5), new Half(-7), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.wwyyx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(5.5), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.wwyyy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2.5), new Half(-4), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.wwyyz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), new Half(-4.5), new Half(-6.5), new Half(-7.5));
                var v = ov.swizzle.wwyyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(-2.5), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.wwyyv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7), new Half(7), new Half(8.5), new Half(-5.5));
                var v = ov.swizzle.wwyz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-7), new Half(-7.5), new Half(-5.5));
                var v = ov.swizzle.wwyzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(9.5), new Half(7), new Half(-7.5));
                var v = ov.swizzle.wwyzy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8.5), new Half(4.5), new Half(-5.5), new Half(6));
                var v = ov.swizzle.wwyzz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(-4.5), new Half(5), new Half(1.5));
                var v = ov.swizzle.wwyzw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4.5), new Half(-4), new Half(7.5), new Half(7));
                var v = ov.swizzle.wwyzv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(-6.5), new Half(4), new Half(-9));
                var v = ov.swizzle.wwyw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(6.5), new Half(7), new Half(-4.5));
                var v = ov.swizzle.wwywx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(2.5), new Half(9), new Half(5));
                var v = ov.swizzle.wwywy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7), new Half(-8), Half.One, new Half(-7));
                var v = ov.swizzle.wwywz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(3), new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.wwyww;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(2), new Half(7), new Half(5));
                var v = ov.swizzle.wwywv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(-9), new Half(-4), new Half(6));
                var v = ov.swizzle.wwyv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(4), new Half(5.5), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.wwyvx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(-2.5), new Half(9.5), new Half(-3));
                var v = ov.swizzle.wwyvy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(-6), new Half(9.5), new Half(5));
                var v = ov.swizzle.wwyvz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(-3), new Half(-8.5), Half.Zero);
                var v = ov.swizzle.wwyvw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(6.5), new Half(-4.5), new Half(-7.5));
                var v = ov.swizzle.wwyvv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(-0.5), Half.One, new Half(-6));
                var v = ov.swizzle.wwz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6.5), new Half(-8), new Half(2), new Half(-2.5));
                var v = ov.swizzle.wwzx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(0.5), new Half(5), new Half(-3));
                var v = ov.swizzle.wwzxx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7.5), new Half(3), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.wwzxy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6), new Half(2), Half.One, new Half(5.5));
                var v = ov.swizzle.wwzxz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(8.5), new Half(-4), new Half(-4));
                var v = ov.swizzle.wwzxw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), new Half(9), new Half(6), new Half(2.5));
                var v = ov.swizzle.wwzxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(-4.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.wwzy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-3), new Half(-3), new Half(-5.5));
                var v = ov.swizzle.wwzyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(7), new Half(7), new Half(4.5));
                var v = ov.swizzle.wwzyy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(-7.5), new Half(3), new Half(4));
                var v = ov.swizzle.wwzyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(7.5), new Half(-1.5), new Half(6), new Half(-7.5));
                var v = ov.swizzle.wwzyw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8.5), new Half(4), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.wwzyv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3), new Half(-6.5), new Half(-3), new Half(8));
                var v = ov.swizzle.wwzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3), new Half(-9), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.wwzzx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(0.5), new Half(-7), new Half(7.5));
                var v = ov.swizzle.wwzzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6), new Half(1.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.wwzzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2.5), new Half(6), Half.One, new Half(5.5));
                var v = ov.swizzle.wwzzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5.5), new Half(-8), Half.One, new Half(3));
                var v = ov.swizzle.wwzzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6.5), new Half(-4.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.wwzw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(4.5), new Half(8.5), new Half(9.5));
                var v = ov.swizzle.wwzwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5.5), new Half(-5.5), new Half(-7.5), new Half(-0.5));
                var v = ov.swizzle.wwzwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), new Half(-1), new Half(8), new Half(-6));
                var v = ov.swizzle.wwzwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(-4.5), new Half(9), new Half(6));
                var v = ov.swizzle.wwzww;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6.5), new Half(-8.5), new Half(-7), Half.One);
                var v = ov.swizzle.wwzwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4.5), new Half(-7), new Half(4.5), new Half(-9));
                var v = ov.swizzle.wwzv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(2.5), new Half(4), new Half(2));
                var v = ov.swizzle.wwzvx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), new Half(3.5), new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.wwzvy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(-4.5), new Half(-3), new Half(3.5));
                var v = ov.swizzle.wwzvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(9), new Half(-3.5), new Half(6));
                var v = ov.swizzle.wwzvw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(-5), new Half(1.5), new Half(-2.5));
                var v = ov.swizzle.wwzvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(-7), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.www;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(-0.5), new Half(2), new Half(9));
                var v = ov.swizzle.wwwx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(5), new Half(6), new Half(-2));
                var v = ov.swizzle.wwwxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4), new Half(5), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.wwwxy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2), new Half(8), new Half(-5.5), new Half(2));
                var v = ov.swizzle.wwwxz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(1.5), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.wwwxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), Half.Zero, new Half(-8), new Half(4));
                var v = ov.swizzle.wwwxv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(6.5), new Half(2.5), new Half(8));
                var v = ov.swizzle.wwwy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(-7.5), new Half(3), Half.Zero);
                var v = ov.swizzle.wwwyx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7), new Half(2), new Half(-5), new Half(2.5));
                var v = ov.swizzle.wwwyy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(2), new Half(9), new Half(4));
                var v = ov.swizzle.wwwyz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(3.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.wwwyw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), Half.One, new Half(-9), Half.One);
                var v = ov.swizzle.wwwyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4), new Half(-2.5), Half.One, new Half(-0.5));
                var v = ov.swizzle.wwwz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7), new Half(-4), new Half(4), new Half(4));
                var v = ov.swizzle.wwwzx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(0.5), new Half(4), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.wwwzy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7.5), new Half(-7), new Half(6.5), new Half(2));
                var v = ov.swizzle.wwwzz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(1.5), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.wwwzw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2), new Half(2), new Half(2), new Half(4));
                var v = ov.swizzle.wwwzv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(3), new Half(2), Half.One);
                var v = ov.swizzle.wwww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9.5), Half.One, new Half(-4.5), new Half(-7.5));
                var v = ov.swizzle.wwwwx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(1.5), new Half(8.5), new Half(5), new Half(5.5));
                var v = ov.swizzle.wwwwy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(9), new Half(-7), new Half(8.5));
                var v = ov.swizzle.wwwwz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(5), new Half(-6), new Half(8.5));
                var v = ov.swizzle.wwwww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(-4), new Half(-7.5), new Half(-9.5));
                var v = ov.swizzle.wwwwv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(-2), new Half(9.5), new Half(3));
                var v = ov.swizzle.wwwv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(2), new Half(-7.5), new Half(6));
                var v = ov.swizzle.wwwvx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(1.5), new Half(-4), new Half(8.5));
                var v = ov.swizzle.wwwvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3.5), new Half(-3.5), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.wwwvz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-3.5), new Half(3), new Half(-5.5));
                var v = ov.swizzle.wwwvw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(-2.5), new Half(4), new Half(4.5));
                var v = ov.swizzle.wwwvv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), new Half(-9.5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.wwv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9.5), new Half(9.5), Half.One, new Half(9.5));
                var v = ov.swizzle.wwvx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6), new Half(-2.5), new Half(9), new Half(-2.5));
                var v = ov.swizzle.wwvxx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8), new Half(1.5), new Half(-8), new Half(-2.5));
                var v = ov.swizzle.wwvxy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7.5), new Half(6.5), new Half(7.5), new Half(-9));
                var v = ov.swizzle.wwvxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(7), new Half(-6), new Half(2));
                var v = ov.swizzle.wwvxw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9.5), new Half(7.5), new Half(-1.5), new Half(-9));
                var v = ov.swizzle.wwvxv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(-3.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.wwvy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), new Half(-5.5), new Half(-9), new Half(-6));
                var v = ov.swizzle.wwvyx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(-7), new Half(-6), new Half(-6.5));
                var v = ov.swizzle.wwvyy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(9), new Half(-8), new Half(-9));
                var v = ov.swizzle.wwvyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9), new Half(-6.5), new Half(-3.5), new Half(-3.5));
                var v = ov.swizzle.wwvyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(-5.5), new Half(9.5), new Half(9));
                var v = ov.swizzle.wwvyv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(8.5), new Half(0.5), new Half(-8.5));
                var v = ov.swizzle.wwvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), Half.Zero, new Half(9), new Half(5.5));
                var v = ov.swizzle.wwvzx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(-7), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.wwvzy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2), new Half(1.5), new Half(2.5), new Half(9));
                var v = ov.swizzle.wwvzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(0.5), new Half(-9.5), new Half(8), new Half(-0.5));
                var v = ov.swizzle.wwvzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8), Half.Zero, new Half(4), new Half(6));
                var v = ov.swizzle.wwvzv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-5.5), new Half(8), new Half(5));
                var v = ov.swizzle.wwvw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(-3.5), new Half(5.5), new Half(-6.5));
                var v = ov.swizzle.wwvwx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(9.5), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.wwvwy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2.5), Half.Zero, Half.One, new Half(3));
                var v = ov.swizzle.wwvwz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8.5), new Half(1.5), new Half(0.5), new Half(5.5));
                var v = ov.swizzle.wwvww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-0.5), new Half(0.5), Half.One, new Half(-4.5));
                var v = ov.swizzle.wwvwv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-7.5), new Half(5.5), new Half(3), new Half(-7));
                var v = ov.swizzle.wwvv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-1.5), new Half(7), new Half(-6), new Half(9.5));
                var v = ov.swizzle.wwvvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(6.5), new Half(9), new Half(8.5));
                var v = ov.swizzle.wwvvy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(7.5), new Half(-1), new Half(-1));
                var v = ov.swizzle.wwvvz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7), new Half(9.5), Half.One, new Half(-7));
                var v = ov.swizzle.wwvvw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9), new Half(4.5), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.wwvvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(-4.5), new Half(9), Half.Zero);
                var v = ov.swizzle.wv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(6.5), new Half(5), new Half(-2.5));
                var v = ov.swizzle.wvx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), new Half(-4.5), Half.One, new Half(7.5));
                var v = ov.swizzle.wvxx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-7.5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.wvxxx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(1.5), new Half(-9), new Half(0.5), new Half(-8.5));
                var v = ov.swizzle.wvxxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7.5), new Half(4.5), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.wvxxz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(4.5), new Half(0.5), new Half(2));
                var v = ov.swizzle.wvxxw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(-2.5), new Half(8), new Half(-1));
                var v = ov.swizzle.wvxxv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(1.5), new Half(-6.5), new Half(-7.5));
                var v = ov.swizzle.wvxy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(7.5), new Half(4), new Half(-3));
                var v = ov.swizzle.wvxyx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(2), new Half(-9), new Half(6.5));
                var v = ov.swizzle.wvxyy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6), new Half(4.5), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.wvxyz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(9), new Half(-2.5), new Half(5.5));
                var v = ov.swizzle.wvxyw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(4.5), new Half(9.5), new Half(-6));
                var v = ov.swizzle.wvxyv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(-4), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.wvxz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(6.5), new Half(8), Half.One);
                var v = ov.swizzle.wvxzx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(0.5), new Half(-4), new Half(3));
                var v = ov.swizzle.wvxzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(-5), new Half(4.5), new Half(8.5));
                var v = ov.swizzle.wvxzz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(8.5), new Half(-3), new Half(4));
                var v = ov.swizzle.wvxzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5.5), new Half(4), new Half(-1.5), new Half(-3.5));
                var v = ov.swizzle.wvxzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7.5), new Half(8.5), new Half(-1.5), new Half(9));
                var v = ov.swizzle.wvxw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6.5), new Half(-7.5), new Half(3), Half.Zero);
                var v = ov.swizzle.wvxwx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9), new Half(-3.5), new Half(-2.5), new Half(-6.5));
                var v = ov.swizzle.wvxwy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(6.5), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.wvxwz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), Half.Zero, Half.Zero, Half.One);
                var v = ov.swizzle.wvxww;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8.5), Half.One, new Half(-7), new Half(-9.5));
                var v = ov.swizzle.wvxwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(7), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.wvxv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), Half.One, new Half(4), new Half(-3.5));
                var v = ov.swizzle.wvxvx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9), new Half(-1), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.wvxvy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9.5), new Half(-2), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.wvxvz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1.5), new Half(-8.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.wvxvw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(7.5), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.wvxvv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), new Half(4), new Half(-5.5), new Half(-0.5));
                var v = ov.swizzle.wvy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(4), new Half(-5), new Half(8));
                var v = ov.swizzle.wvyx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4.5), new Half(1.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.wvyxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4), new Half(7), new Half(6), new Half(7.5));
                var v = ov.swizzle.wvyxy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-3), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.wvyxz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5), new Half(-9), new Half(9.5), new Half(7.5));
                var v = ov.swizzle.wvyxw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(-5), new Half(1.5), new Half(6));
                var v = ov.swizzle.wvyxv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4), new Half(-2.5), new Half(3), new Half(-4.5));
                var v = ov.swizzle.wvyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6), new Half(6.5), new Half(-9.5), new Half(-1.5));
                var v = ov.swizzle.wvyyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(-6.5), new Half(3), new Half(-1.5));
                var v = ov.swizzle.wvyyy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(0.5), new Half(-0.5), new Half(6.5));
                var v = ov.swizzle.wvyyz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8), new Half(-1), new Half(2), new Half(6));
                var v = ov.swizzle.wvyyw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6.5), new Half(5), new Half(-8), new Half(1.5));
                var v = ov.swizzle.wvyyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), Half.Zero, new Half(1.5), new Half(3.5));
                var v = ov.swizzle.wvyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(3), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.wvyzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(2.5), new Half(5), new Half(-6));
                var v = ov.swizzle.wvyzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(-5), new Half(-1), new Half(-1.5));
                var v = ov.swizzle.wvyzz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(-4.5), new Half(5.5), new Half(-5));
                var v = ov.swizzle.wvyzw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(-5.5), new Half(6.5), new Half(1.5));
                var v = ov.swizzle.wvyzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-9), new Half(-1.5), new Half(-6.5));
                var v = ov.swizzle.wvyw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(2.5), new Half(9), new Half(8.5));
                var v = ov.swizzle.wvywx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3.5), new Half(8), new Half(5.5), new Half(5.5));
                var v = ov.swizzle.wvywy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.wvywz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7), new Half(4.5), new Half(-0.5), new Half(4));
                var v = ov.swizzle.wvyww;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4.5), new Half(4), new Half(-6), new Half(9));
                var v = ov.swizzle.wvywv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(7), new Half(1.5), new Half(-6));
                var v = ov.swizzle.wvyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(4), new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.wvyvx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9.5), new Half(4), new Half(-3), new Half(7.5));
                var v = ov.swizzle.wvyvy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(0.5), new Half(0.5), Half.Zero, new Half(-3));
                var v = ov.swizzle.wvyvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(7.5), new Half(-5), new Half(0.5));
                var v = ov.swizzle.wvyvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(-0.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.wvyvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2.5), new Half(-6), Half.Zero, Half.One);
                var v = ov.swizzle.wvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9), new Half(-7), new Half(-9.5), new Half(3));
                var v = ov.swizzle.wvzx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), new Half(-5.5), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.wvzxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3), new Half(-7.5), new Half(2.5), new Half(3));
                var v = ov.swizzle.wvzxy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(3), new Half(2), new Half(2));
                var v = ov.swizzle.wvzxz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(2.5), Half.One, new Half(4));
                var v = ov.swizzle.wvzxw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6.5), new Half(-8.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.wvzxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(4), new Half(-1), new Half(9.5));
                var v = ov.swizzle.wvzy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(-1), new Half(6.5), new Half(-5.5));
                var v = ov.swizzle.wvzyx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(9.5), new Half(-6.5), new Half(-1.5));
                var v = ov.swizzle.wvzyy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3.5), new Half(7.5), new Half(-9.5), new Half(8.5));
                var v = ov.swizzle.wvzyz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(-3), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.wvzyw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(-6), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.wvzyv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-8), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.wvzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-1), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.wvzzx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(7), new Half(-9), new Half(6));
                var v = ov.swizzle.wvzzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7.5), new Half(8), new Half(-3), new Half(6.5));
                var v = ov.swizzle.wvzzz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), Half.Zero, new Half(7), new Half(-1));
                var v = ov.swizzle.wvzzw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(7), new Half(-8), new Half(9.5));
                var v = ov.swizzle.wvzzv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(5.5), new Half(8), new Half(-8));
                var v = ov.swizzle.wvzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), Half.Zero, new Half(-1.5), new Half(-1));
                var v = ov.swizzle.wvzwx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(5), new Half(9.5), new Half(4.5));
                var v = ov.swizzle.wvzwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8.5), new Half(4.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.wvzwz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-8), new Half(3), new Half(-9), new Half(6));
                var v = ov.swizzle.wvzww;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(0.5), new Half(9), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.wvzwv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(3.5), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.wvzv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8.5), new Half(9.5), Half.Zero, Half.One);
                var v = ov.swizzle.wvzvx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6.5), new Half(-8.5), new Half(2), new Half(-3.5));
                var v = ov.swizzle.wvzvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), Half.One, new Half(-3), new Half(-6));
                var v = ov.swizzle.wvzvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(-7), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.wvzvw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), new Half(-6), Half.One, new Half(7.5));
                var v = ov.swizzle.wvzvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-3), Half.One, new Half(3));
                var v = ov.swizzle.wvw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(-3), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.wvwx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7.5), new Half(3.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.wvwxx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), Half.Zero, new Half(3.5), new Half(7));
                var v = ov.swizzle.wvwxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(7.5), new Half(-3), new Half(8.5));
                var v = ov.swizzle.wvwxz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(3), new Half(6.5), new Half(6));
                var v = ov.swizzle.wvwxw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(7.5), new Half(3), new Half(-3.5));
                var v = ov.swizzle.wvwxv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(-9.5), new Half(8.5), new Half(7));
                var v = ov.swizzle.wvwy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7), new Half(-1.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.wvwyx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6.5), new Half(-1.5), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.wvwyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2.5), new Half(-6.5), new Half(4.5), new Half(6.5));
                var v = ov.swizzle.wvwyz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(9.5), new Half(2), new Half(-4));
                var v = ov.swizzle.wvwyw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3.5), new Half(-6), new Half(6), new Half(-2));
                var v = ov.swizzle.wvwyv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(0.5), new Half(2), new Half(6));
                var v = ov.swizzle.wvwz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6), new Half(2), new Half(-4.5), new Half(7.5));
                var v = ov.swizzle.wvwzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), Half.Zero, new Half(-1), new Half(2.5), new Half(3.5));
                var v = ov.swizzle.wvwzy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(-7.5), new Half(7), new Half(-4.5));
                var v = ov.swizzle.wvwzz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(3), new Half(6), new Half(9.5));
                var v = ov.swizzle.wvwzw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5.5), new Half(-8), new Half(-5.5), new Half(2));
                var v = ov.swizzle.wvwzv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(1.5), new Half(-8.5), new Half(-5), new Half(7));
                var v = ov.swizzle.wvww;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2.5), new Half(-4.5), new Half(-5), new Half(5));
                var v = ov.swizzle.wvwwx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(7.5), new Half(6.5), new Half(2));
                var v = ov.swizzle.wvwwy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8), new Half(7), new Half(8), new Half(6));
                var v = ov.swizzle.wvwwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(8), new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.wvwww;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(-6.5), new Half(2), new Half(-6.5));
                var v = ov.swizzle.wvwwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-8), new Half(-7.5), new Half(-3));
                var v = ov.swizzle.wvwv;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9.5), new Half(6.5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.wvwvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.Zero, new Half(7), Half.One, new Half(-9));
                var v = ov.swizzle.wvwvy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2), new Half(6), new Half(4), new Half(-4));
                var v = ov.swizzle.wvwvz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(8), new Half(-7), new Half(-5.5));
                var v = ov.swizzle.wvwvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(9.5), new Half(-4.5), new Half(6.5));
                var v = ov.swizzle.wvwvv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8), new Half(-6.5), new Half(1.5), new Half(6));
                var v = ov.swizzle.wvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), new Half(-5), new Half(-5.5), Half.One);
                var v = ov.swizzle.wvvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(-5.5), new Half(8.5), new Half(2.5));
                var v = ov.swizzle.wvvxx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6.5), new Half(6), new Half(2), new Half(7.5));
                var v = ov.swizzle.wvvxy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(-9), new Half(-1.5), new Half(8));
                var v = ov.swizzle.wvvxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), Half.Zero, new Half(7.5), new Half(2.5));
                var v = ov.swizzle.wvvxw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9.5), new Half(-2), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.wvvxv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(-6), new Half(5.5), new Half(-1));
                var v = ov.swizzle.wvvy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(-6.5), new Half(3), new Half(8));
                var v = ov.swizzle.wvvyx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2.5), new Half(-1), new Half(-4.5), new Half(5));
                var v = ov.swizzle.wvvyy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(6.5), new Half(-2.5), new Half(-2.5));
                var v = ov.swizzle.wvvyz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-0.5), new Half(4.5), new Half(-6.5), new Half(-6.5));
                var v = ov.swizzle.wvvyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(-7), new Half(1.5), new Half(-6.5));
                var v = ov.swizzle.wvvyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(6.5), new Half(-2.5), new Half(-3.5));
                var v = ov.swizzle.wvvz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(-1), new Half(2.5), new Half(-7));
                var v = ov.swizzle.wvvzx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(1.5), new Half(-6), new Half(-9.5), new Half(6));
                var v = ov.swizzle.wvvzy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), new Half(-6), new Half(2.5), new Half(7));
                var v = ov.swizzle.wvvzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(-5.5), Half.One, new Half(-6.5));
                var v = ov.swizzle.wvvzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6.5), new Half(2.5), new Half(-3), new Half(1.5));
                var v = ov.swizzle.wvvzv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-1), new Half(1.5), new Half(-9.5), new Half(-6.5));
                var v = ov.swizzle.wvvw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(6.5), new Half(-6.5), new Half(8.5), new Half(4));
                var v = ov.swizzle.wvvwx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5), new Half(4), new Half(-1), new Half(5));
                var v = ov.swizzle.wvvwy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), new Half(-4), new Half(-7), new Half(1.5));
                var v = ov.swizzle.wvvwz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(-4.5), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.wvvww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), new Half(4.5), new Half(4), new Half(-1));
                var v = ov.swizzle.wvvwv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1.5), new Half(8.5), Half.Zero, new Half(6));
                var v = ov.swizzle.wvvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), Half.Zero, new Half(5.5), new Half(7.5), new Half(4));
                var v = ov.swizzle.wvvvx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-7), new Half(-2.5), new Half(4));
                var v = ov.swizzle.wvvvy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-4), new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.wvvvz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(-6), new Half(-8.5), new Half(0.5));
                var v = ov.swizzle.wvvvw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4.5), new Half(7), new Half(8.5), new Half(-8.5));
                var v = ov.swizzle.wvvvv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.One, new Half(-9), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.vx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(4), new Half(3), new Half(4.5));
                var v = ov.swizzle.vxx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(-7), new Half(-2), new Half(5.5));
                var v = ov.swizzle.vxxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), new Half(8.5), new Half(-9), new Half(-3.5));
                var v = ov.swizzle.vxxxx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(9.5), new Half(-6), new Half(7));
                var v = ov.swizzle.vxxxy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3), new Half(-8), new Half(9), new Half(1.5));
                var v = ov.swizzle.vxxxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(7.5), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.vxxxw;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6), new Half(-0.5), Half.Zero, new Half(-0.5));
                var v = ov.swizzle.vxxxv;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(9), Half.One, new Half(3.5));
                var v = ov.swizzle.vxxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(3), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.vxxyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(-0.5), new Half(-3), new Half(7.5));
                var v = ov.swizzle.vxxyy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.One, new Half(3), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.vxxyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(4.5), new Half(-2), new Half(7));
                var v = ov.swizzle.vxxyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), Half.Zero, new Half(1.5), Half.One);
                var v = ov.swizzle.vxxyv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1.5), new Half(7.5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.vxxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(7.5), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.vxxzx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8), new Half(3.5), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.vxxzy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-5.5), new Half(-9), new Half(8.5));
                var v = ov.swizzle.vxxzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3), new Half(8), new Half(-6.5), new Half(-3.5));
                var v = ov.swizzle.vxxzw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(8.5), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.vxxzv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(1.5), new Half(-3), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.vxxw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-0.5), new Half(9.5), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.vxxwx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4), new Half(-8.5), new Half(6.5), Half.Zero);
                var v = ov.swizzle.vxxwy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(8), new Half(-8), new Half(8));
                var v = ov.swizzle.vxxwz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6.5), new Half(-8.5), new Half(3.5), new Half(8));
                var v = ov.swizzle.vxxww;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(-5), new Half(3), new Half(7.5));
                var v = ov.swizzle.vxxwv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), new Half(3), new Half(1.5), new Half(-9));
                var v = ov.swizzle.vxxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(8), new Half(0.5), new Half(-3.5));
                var v = ov.swizzle.vxxvx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4), new Half(8), new Half(0.5), new Half(8));
                var v = ov.swizzle.vxxvy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(-2), new Half(-7.5), new Half(2.5));
                var v = ov.swizzle.vxxvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2), new Half(-8.5), new Half(-4.5), new Half(3.5));
                var v = ov.swizzle.vxxvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9), new Half(-9), new Half(-5), new Half(-7));
                var v = ov.swizzle.vxxvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(5.5), new Half(-8), Half.Zero);
                var v = ov.swizzle.vxy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(0.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.vxyx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2.5), new Half(-8), new Half(1.5), new Half(7.5));
                var v = ov.swizzle.vxyxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(1.5), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.vxyxy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7), new Half(2.5), new Half(-2), new Half(3.5));
                var v = ov.swizzle.vxyxz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(-8), new Half(8.5), new Half(-1));
                var v = ov.swizzle.vxyxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(4.5), new Half(-4), new Half(6.5));
                var v = ov.swizzle.vxyxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(0.5), new Half(-0.5), new Half(-4));
                var v = ov.swizzle.vxyy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(4.5), new Half(7), new Half(4.5));
                var v = ov.swizzle.vxyyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), new Half(-0.5), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.vxyyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(5.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.vxyyz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(-5.5), new Half(-4.5), new Half(-6.5));
                var v = ov.swizzle.vxyyw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6.5), new Half(2.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.vxyyv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(4), new Half(4.5), Half.Zero);
                var v = ov.swizzle.vxyz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), Half.One, new Half(-1), new Half(4.5));
                var v = ov.swizzle.vxyzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3), new Half(-4.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.vxyzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5.5), new Half(0.5), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.vxyzz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7.5), Half.Zero, new Half(-7.5), new Half(-5));
                var v = ov.swizzle.vxyzw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4.5), new Half(5), new Half(6), new Half(1.5));
                var v = ov.swizzle.vxyzv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9), new Half(-1.5), new Half(8), new Half(-4));
                var v = ov.swizzle.vxyw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(4.5), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.vxywx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(-4.5), new Half(9.5), new Half(6));
                var v = ov.swizzle.vxywy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(6), new Half(7), new Half(9.5));
                var v = ov.swizzle.vxywz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(3.5), new Half(-6), Half.One);
                var v = ov.swizzle.vxyww;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(-7.5), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.vxywv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), new Half(5.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.vxyv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5.5), new Half(-6), new Half(2), new Half(2.5));
                var v = ov.swizzle.vxyvx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-0.5), new Half(2), new Half(-5.5), new Half(7));
                var v = ov.swizzle.vxyvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6.5), Half.Zero, new Half(-5), new Half(6));
                var v = ov.swizzle.vxyvz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(7.5), new Half(6), new Half(3.5));
                var v = ov.swizzle.vxyvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-3), new Half(7), new Half(-6));
                var v = ov.swizzle.vxyvv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5), new Half(-5), new Half(3), new Half(-6));
                var v = ov.swizzle.vxz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), new Half(6), new Half(9), new Half(2.5));
                var v = ov.swizzle.vxzx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-8.5), new Half(3), new Half(-6), new Half(4));
                var v = ov.swizzle.vxzxx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(0.5), new Half(8), new Half(7), new Half(-8.5));
                var v = ov.swizzle.vxzxy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(7), new Half(-4), new Half(4));
                var v = ov.swizzle.vxzxz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(-0.5), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.vxzxw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2), new Half(8), new Half(-2.5), new Half(9.5));
                var v = ov.swizzle.vxzxv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(8.5), new Half(8), new Half(-7));
                var v = ov.swizzle.vxzy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(1.5), new Half(-6.5), new Half(-7.5));
                var v = ov.swizzle.vxzyx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(-8.5), new Half(2), new Half(-4.5));
                var v = ov.swizzle.vxzyy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(5), new Half(-3.5), new Half(-4));
                var v = ov.swizzle.vxzyz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8.5), Half.One, new Half(9.5), new Half(5.5));
                var v = ov.swizzle.vxzyw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(-8.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.vxzyv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3), new Half(-7), new Half(-7), new Half(-6));
                var v = ov.swizzle.vxzz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(1.5), Half.Zero, new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.vxzzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.Zero, new Half(-4.5), new Half(1.5), new Half(5));
                var v = ov.swizzle.vxzzy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(-2.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.vxzzz;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(-7.5), new Half(-4), new Half(8.5));
                var v = ov.swizzle.vxzzw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(9.5), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.vxzzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(9.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.vxzw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8.5), new Half(4), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.vxzwx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7), new Half(-5), new Half(3), new Half(2));
                var v = ov.swizzle.vxzwy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(9), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.vxzwz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5), new Half(-9.5), new Half(5.5), new Half(2));
                var v = ov.swizzle.vxzww;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(2), new Half(-8), new Half(-4.5));
                var v = ov.swizzle.vxzwv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(-2.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.vxzv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, new Half(5.5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.vxzvx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8), new Half(9.5), new Half(9), new Half(5));
                var v = ov.swizzle.vxzvy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(1.5), new Half(-8), new Half(-2), new Half(7.5));
                var v = ov.swizzle.vxzvz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(6), new Half(-6.5), new Half(6.5));
                var v = ov.swizzle.vxzvw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(4), new Half(-3.5), Half.One);
                var v = ov.swizzle.vxzvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-2.5), Half.One, new Half(-1));
                var v = ov.swizzle.vxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(4), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.vxwx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(-2.5), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.vxwxx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5), new Half(9), new Half(-0.5), new Half(-9.5));
                var v = ov.swizzle.vxwxy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2), new Half(0.5), new Half(-9.5), new Half(7));
                var v = ov.swizzle.vxwxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4.5), new Half(4), new Half(-4), new Half(-4));
                var v = ov.swizzle.vxwxw;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(9), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.vxwxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(8.5), new Half(9.5), new Half(6));
                var v = ov.swizzle.vxwy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3.5), new Half(-0.5), new Half(-2), new Half(8.5));
                var v = ov.swizzle.vxwyx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7), new Half(3.5), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.vxwyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(-6), new Half(5), new Half(-3.5));
                var v = ov.swizzle.vxwyz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4), new Half(6), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.vxwyw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7), new Half(0.5), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.vxwyv;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(5), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.vxwz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7), new Half(-1), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.vxwzx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), new Half(-9), new Half(-7.5), new Half(9));
                var v = ov.swizzle.vxwzy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(1.5), new Half(4), new Half(3.5), new Half(-7));
                var v = ov.swizzle.vxwzz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(3), new Half(5.5), Half.Zero);
                var v = ov.swizzle.vxwzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(4), new Half(6), new Half(2.5));
                var v = ov.swizzle.vxwzv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6.5), new Half(-3), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.vxww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(3), new Half(-2.5), new Half(-3.5));
                var v = ov.swizzle.vxwwx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(3.5), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.vxwwy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(-4.5), new Half(-5.5), new Half(3.5));
                var v = ov.swizzle.vxwwz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2), new Half(7.5), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.vxwww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(-1), new Half(-0.5), new Half(5));
                var v = ov.swizzle.vxwwv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(4), new Half(-0.5), new Half(2.5));
                var v = ov.swizzle.vxwv;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(4.5), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.vxwvx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(-7), new Half(6), new Half(-0.5));
                var v = ov.swizzle.vxwvy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(-6), new Half(9.5), Half.Zero);
                var v = ov.swizzle.vxwvz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-0.5), new Half(-9.5), new Half(-3), new Half(9));
                var v = ov.swizzle.vxwvw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(-5), new Half(0.5), new Half(-3));
                var v = ov.swizzle.vxwvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(-4), new Half(-7.5), new Half(6));
                var v = ov.swizzle.vxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(4), new Half(5.5), new Half(2));
                var v = ov.swizzle.vxvx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(1.5), new Half(7.5), new Half(4), new Half(4));
                var v = ov.swizzle.vxvxx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(0.5), new Half(9), new Half(9));
                var v = ov.swizzle.vxvxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-0.5), new Half(-2), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.vxvxz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6.5), new Half(1.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.vxvxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(4), new Half(-5), new Half(4.5));
                var v = ov.swizzle.vxvxv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(5.5), Half.Zero, new Half(3));
                var v = ov.swizzle.vxvy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(-9.5), new Half(6.5), new Half(9));
                var v = ov.swizzle.vxvyx;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(1.5), new Half(-6), new Half(7), new Half(-6));
                var v = ov.swizzle.vxvyy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8), new Half(5), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.vxvyz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-0.5), new Half(-4.5), new Half(6.5), new Half(-6));
                var v = ov.swizzle.vxvyw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3), new Half(-4.5), new Half(-6), new Half(8));
                var v = ov.swizzle.vxvyv;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), new Half(-6.5), new Half(-1), new Half(-6));
                var v = ov.swizzle.vxvz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(0.5), new Half(5), new Half(0.5));
                var v = ov.swizzle.vxvzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), new Half(-6), new Half(-9), new Half(6.5));
                var v = ov.swizzle.vxvzy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-6.5), new Half(3), Half.One);
                var v = ov.swizzle.vxvzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(-5.5), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.vxvzw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(8.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.vxvzv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7.5), new Half(3), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.vxvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(4), new Half(2.5), new Half(4.5));
                var v = ov.swizzle.vxvwx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9), new Half(9.5), new Half(0.5), new Half(6));
                var v = ov.swizzle.vxvwy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(5), new Half(9.5), new Half(-7));
                var v = ov.swizzle.vxvwz;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(-7.5), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.vxvww;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2), new Half(-2.5), new Half(-2), new Half(-6));
                var v = ov.swizzle.vxvwv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.vxvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5), new Half(-1.5), new Half(4), new Half(4.5));
                var v = ov.swizzle.vxvvx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(1.5), new Half(8), new Half(-6.5));
                var v = ov.swizzle.vxvvy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(4.5), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.vxvvz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6.5), new Half(9.5), new Half(6), new Half(5));
                var v = ov.swizzle.vxvvw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(-0.5), new Half(3), new Half(-1));
                var v = ov.swizzle.vxvvv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8.5), new Half(2.5), new Half(-7), new Half(2));
                var v = ov.swizzle.vy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), new Half(4.5), new Half(5), new Half(3.5));
                var v = ov.swizzle.vyx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), Half.One, new Half(5), new Half(-2.5));
                var v = ov.swizzle.vyxx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9.5), new Half(-3), new Half(1.5), new Half(-7));
                var v = ov.swizzle.vyxxx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), new Half(8.5), Half.Zero, new Half(-1.5));
                var v = ov.swizzle.vyxxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(9.5), new Half(9.5), new Half(7));
                var v = ov.swizzle.vyxxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6), new Half(-4.5), new Half(4.5), new Half(4.5));
                var v = ov.swizzle.vyxxw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9), new Half(-4), new Half(6), new Half(7));
                var v = ov.swizzle.vyxxv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(-0.5), new Half(5.5), new Half(0.5));
                var v = ov.swizzle.vyxy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(3.5), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.vyxyx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2), new Half(7.5), new Half(-2.5), new Half(6.5));
                var v = ov.swizzle.vyxyy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(2.5), new Half(-1.5), new Half(2.5));
                var v = ov.swizzle.vyxyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3), new Half(4.5), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.vyxyw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(7), new Half(-1), new Half(-8));
                var v = ov.swizzle.vyxyv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4.5), new Half(6), new Half(-5.5), new Half(-6.5));
                var v = ov.swizzle.vyxz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9), new Half(2), new Half(-1), new Half(-3.5));
                var v = ov.swizzle.vyxzx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(-9.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.vyxzy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(8.5), new Half(7.5), Half.One);
                var v = ov.swizzle.vyxzz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(-4.5), new Half(-5), new Half(4.5));
                var v = ov.swizzle.vyxzw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(1.5), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.vyxzv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-6.5), Half.One, new Half(-0.5));
                var v = ov.swizzle.vyxw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(-4), new Half(3), new Half(-9.5));
                var v = ov.swizzle.vyxwx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9.5), new Half(-8.5), new Half(2), new Half(3));
                var v = ov.swizzle.vyxwy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(7), new Half(7), new Half(9.5));
                var v = ov.swizzle.vyxwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-1), new Half(8), new Half(1.5));
                var v = ov.swizzle.vyxww;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(2.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.vyxwv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1.5), new Half(2), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.vyxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(-8), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.vyxvx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4), new Half(4.5), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.vyxvy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(-6.5), new Half(-1), new Half(0.5));
                var v = ov.swizzle.vyxvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(-6.5), Half.One, new Half(7.5));
                var v = ov.swizzle.vyxvw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(-4), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.vyxvv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(-5.5), Half.One, new Half(5));
                var v = ov.swizzle.vyy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7), new Half(5.5), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.vyyx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5), new Half(-1), new Half(9), new Half(8.5));
                var v = ov.swizzle.vyyxx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(3.5), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.vyyxy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8), new Half(-7.5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.vyyxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), Half.One, new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.vyyxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2), new Half(7), new Half(-3), new Half(6));
                var v = ov.swizzle.vyyxv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(2.5), new Half(-2), Half.One);
                var v = ov.swizzle.vyyy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.One, new Half(4), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.vyyyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(-4), new Half(2), new Half(-6));
                var v = ov.swizzle.vyyyy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9), new Half(3.5), new Half(-3.5), new Half(-6));
                var v = ov.swizzle.vyyyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-4.5), new Half(-2.5), new Half(-3.5));
                var v = ov.swizzle.vyyyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(6), new Half(4.5), new Half(-9));
                var v = ov.swizzle.vyyyv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6), new Half(7.5), new Half(2), Half.One);
                var v = ov.swizzle.vyyz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(-7.5), new Half(-9), new Half(4.5));
                var v = ov.swizzle.vyyzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3), Half.One, new Half(-2.5), Half.One);
                var v = ov.swizzle.vyyzy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(1.5), new Half(8.5), new Half(-3), new Half(2.5));
                var v = ov.swizzle.vyyzz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9), new Half(-7.5), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.vyyzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(4), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.vyyzv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4.5), new Half(-1), Half.One, new Half(5));
                var v = ov.swizzle.vyyw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2.5), new Half(-1), Half.One, new Half(-4));
                var v = ov.swizzle.vyywx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1.5), new Half(-4), new Half(1.5), new Half(8));
                var v = ov.swizzle.vyywy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(7.5), new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.vyywz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(3.5), new Half(2), new Half(-8));
                var v = ov.swizzle.vyyww;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), Half.Zero, new Half(-1), new Half(-3.5));
                var v = ov.swizzle.vyywv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1), new Half(6.5), new Half(8.5), new Half(-8.5));
                var v = ov.swizzle.vyyv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2), new Half(9.5), new Half(-7.5), new Half(6.5));
                var v = ov.swizzle.vyyvx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8.5), new Half(7.5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.vyyvy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(0.5), new Half(-1.5), new Half(2.5));
                var v = ov.swizzle.vyyvz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7.5), new Half(-9), new Half(5.5), new Half(0.5));
                var v = ov.swizzle.vyyvw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(8), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.vyyvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(9.5), new Half(-5), new Half(7));
                var v = ov.swizzle.vyz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(-5), new Half(-1), new Half(6.5));
                var v = ov.swizzle.vyzx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(-6), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.vyzxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9.5), new Half(4.5), new Half(-2.5), new Half(5));
                var v = ov.swizzle.vyzxy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5.5), new Half(-2), new Half(-8), new Half(1.5));
                var v = ov.swizzle.vyzxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(1.5), Half.Zero, new Half(8), new Half(-5.5));
                var v = ov.swizzle.vyzxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(-6), new Half(4), new Half(-6));
                var v = ov.swizzle.vyzxv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(-7.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.vyzy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-0.5), new Half(-9.5), new Half(2.5), new Half(3.5));
                var v = ov.swizzle.vyzyx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-0.5), new Half(-4), new Half(-8.5));
                var v = ov.swizzle.vyzyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(-7.5), new Half(-8), new Half(3.5));
                var v = ov.swizzle.vyzyz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-5), new Half(-7.5), new Half(-6.5), new Half(9.5));
                var v = ov.swizzle.vyzyw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(6), new Half(-3.5), new Half(-4.5));
                var v = ov.swizzle.vyzyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4), new Half(-1), new Half(-4), new Half(9.5));
                var v = ov.swizzle.vyzz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8.5), new Half(3), new Half(-8), new Half(-4.5));
                var v = ov.swizzle.vyzzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(-9.5), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.vyzzy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-3.5), new Half(-2.5), new Half(7));
                var v = ov.swizzle.vyzzz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(8.5), new Half(-1), new Half(0.5));
                var v = ov.swizzle.vyzzw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9.5), new Half(8.5), new Half(2.5), new Half(4.5));
                var v = ov.swizzle.vyzzv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(3.5), new Half(6), new Half(-1.5));
                var v = ov.swizzle.vyzw;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-1), new Half(-6), new Half(-5), new Half(3.5));
                var v = ov.swizzle.vyzwx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2), new Half(3), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.vyzwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), new Half(6.5), new Half(5), new Half(-2));
                var v = ov.swizzle.vyzwz;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-9.5), new Half(-8), new Half(-8.5));
                var v = ov.swizzle.vyzww;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5), Half.Zero, new Half(-6.5), new Half(1.5));
                var v = ov.swizzle.vyzwv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(9.5), new Half(-2), new Half(-6.5), new Half(6.5));
                var v = ov.swizzle.vyzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(-4), new Half(6.5), new Half(7));
                var v = ov.swizzle.vyzvx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3.5), new Half(-2), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.vyzvy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7), new Half(6), new Half(-2), new Half(-8.5));
                var v = ov.swizzle.vyzvz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(3.5), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.vyzvw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.One, new Half(-5), new Half(-3.5), new Half(5.5));
                var v = ov.swizzle.vyzvv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(3.5), new Half(-5.5), new Half(4));
                var v = ov.swizzle.vyw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-8.5), new Half(5.5), new Half(-2.5));
                var v = ov.swizzle.vywx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8.5), Half.Zero, new Half(7.5), new Half(5.5));
                var v = ov.swizzle.vywxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), new Half(-2.5), new Half(-1.5), new Half(-9));
                var v = ov.swizzle.vywxy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9.5), new Half(-1.5), new Half(2), new Half(-8));
                var v = ov.swizzle.vywxz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5), new Half(1.5), Half.One, new Half(-2));
                var v = ov.swizzle.vywxw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(-1.5), Half.Zero, new Half(4));
                var v = ov.swizzle.vywxv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(-1.5), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.vywy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2.5), new Half(-1), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.vywyx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2), new Half(5.5), new Half(-4.5), new Half(5.5));
                var v = ov.swizzle.vywyy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(-2.5), new Half(6), new Half(-1));
                var v = ov.swizzle.vywyz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), new Half(0.5), new Half(5), new Half(-9));
                var v = ov.swizzle.vywyw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(-9.5), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.vywyv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2.5), new Half(9.5), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.vywz;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5), new Half(8.5), new Half(-7), new Half(8));
                var v = ov.swizzle.vywzx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1.5), new Half(3), new Half(9), new Half(-4.5));
                var v = ov.swizzle.vywzy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1), new Half(6), new Half(6), new Half(-9.5));
                var v = ov.swizzle.vywzz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-8.5), new Half(0.5), Half.Zero);
                var v = ov.swizzle.vywzw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(-7.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.vywzv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(-3.5), new Half(7), new Half(-2));
                var v = ov.swizzle.vyww;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(2), new Half(6.5), Half.Zero);
                var v = ov.swizzle.vywwx;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7), new Half(9), new Half(7.5), new Half(-2));
                var v = ov.swizzle.vywwy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(-8.5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.vywwz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(-3), new Half(4), new Half(-7.5));
                var v = ov.swizzle.vywww;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(9), new Half(2.5), new Half(4));
                var v = ov.swizzle.vywwv;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5.5), new Half(-1.5), new Half(-9), new Half(8.5));
                var v = ov.swizzle.vywv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(5.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.vywvx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8), new Half(-1), new Half(5), new Half(3.5));
                var v = ov.swizzle.vywvy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(-5.5), new Half(-8), new Half(-4.5));
                var v = ov.swizzle.vywvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8.5), Half.Zero, new Half(-5), new Half(5.5));
                var v = ov.swizzle.vywvw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(-7.5), new Half(-3.5), new Half(-2));
                var v = ov.swizzle.vywvv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(-1), new Half(1.5), new Half(7));
                var v = ov.swizzle.vyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(0.5), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.vyvx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6.5), new Half(-5.5), new Half(6.5), new Half(-4));
                var v = ov.swizzle.vyvxx;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7.5), new Half(7), new Half(-1), new Half(3));
                var v = ov.swizzle.vyvxy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(1.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.vyvxz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6.5), new Half(-4), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.vyvxw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(9), new Half(-4.5), new Half(6.5));
                var v = ov.swizzle.vyvxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-9), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.vyvy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(-5.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.vyvyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(4), Half.Zero, Half.One);
                var v = ov.swizzle.vyvyy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-2.5), new Half(-2), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.vyvyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(3), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.vyvyw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5), new Half(6), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.vyvyv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3), new Half(8.5), new Half(9.5), new Half(-4.5));
                var v = ov.swizzle.vyvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(8), new Half(-9), new Half(-5));
                var v = ov.swizzle.vyvzx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3), new Half(4.5), new Half(5.5), new Half(-5));
                var v = ov.swizzle.vyvzy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(-4), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.vyvzz;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7), new Half(-2.5), Half.One, new Half(5.5));
                var v = ov.swizzle.vyvzw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(-4.5), new Half(2), new Half(-2));
                var v = ov.swizzle.vyvzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5), new Half(6), new Half(-3), new Half(-7));
                var v = ov.swizzle.vyvw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(4), new Half(-6), new Half(6));
                var v = ov.swizzle.vyvwx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), new Half(2.5), new Half(7), new Half(-6));
                var v = ov.swizzle.vyvwy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6), new Half(7), new Half(-9), new Half(-8.5));
                var v = ov.swizzle.vyvwz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-5.5), new Half(1.5), new Half(-4));
                var v = ov.swizzle.vyvww;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3.5), new Half(6.5), new Half(3), new Half(7.5));
                var v = ov.swizzle.vyvwv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(5), new Half(7), Half.Zero);
                var v = ov.swizzle.vyvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6.5), new Half(-8.5), new Half(-8), new Half(3));
                var v = ov.swizzle.vyvvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4), new Half(8.5), new Half(-6), new Half(4.5));
                var v = ov.swizzle.vyvvy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(-9.5), new Half(-3.5), new Half(8.5));
                var v = ov.swizzle.vyvvz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(6), new Half(-7.5), new Half(-1));
                var v = ov.swizzle.vyvvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(-5), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.vyvvv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2), Half.One, new Half(-8), new Half(5));
                var v = ov.swizzle.vz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.One, v.y);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(-4.5), new Half(6), new Half(-6.5));
                var v = ov.swizzle.vzx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(0.5), new Half(-5), new Half(4));
                var v = ov.swizzle.vzxx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3), new Half(8), new Half(6.5), new Half(-7.5));
                var v = ov.swizzle.vzxxx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(-1), new Half(4), new Half(-7));
                var v = ov.swizzle.vzxxy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1), new Half(-5.5), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.vzxxz;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(-6.5), new Half(-1.5), new Half(-9));
                var v = ov.swizzle.vzxxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3), new Half(-9.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.vzxxv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-0.5), new Half(-3), new Half(3), new Half(8.5));
                var v = ov.swizzle.vzxy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(1.5), new Half(-7), new Half(-5.5));
                var v = ov.swizzle.vzxyx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(-9), new Half(-6), new Half(-8));
                var v = ov.swizzle.vzxyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(6.5), Half.Zero, new Half(0.5));
                var v = ov.swizzle.vzxyz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(-0.5), new Half(-8), new Half(-8.5));
                var v = ov.swizzle.vzxyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), Half.One, new Half(5.5), new Half(1.5));
                var v = ov.swizzle.vzxyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6.5), new Half(8.5), new Half(-6), new Half(2));
                var v = ov.swizzle.vzxz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2.5), new Half(6), new Half(6), new Half(-7.5));
                var v = ov.swizzle.vzxzx;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9), new Half(6), new Half(-2), new Half(-9));
                var v = ov.swizzle.vzxzy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(6), new Half(9), Half.Zero);
                var v = ov.swizzle.vzxzz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-7), new Half(-9), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.vzxzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.Zero, new Half(5.5), new Half(-7.5), new Half(-9));
                var v = ov.swizzle.vzxzv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5.5), new Half(6.5), new Half(-3.5), new Half(-1));
                var v = ov.swizzle.vzxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-5.5), new Half(2), new Half(-4), new Half(5.5));
                var v = ov.swizzle.vzxwx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4.5), new Half(-0.5), new Half(-9), new Half(-3));
                var v = ov.swizzle.vzxwy;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7.5), new Half(-8), new Half(9.5), Half.One);
                var v = ov.swizzle.vzxwz;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), new Half(1.5), new Half(5.5), new Half(8));
                var v = ov.swizzle.vzxww;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3), new Half(-8), new Half(7.5), new Half(-1));
                var v = ov.swizzle.vzxwv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7.5), new Half(-4.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.vzxv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(-9.5), Half.Zero, new Half(3.5));
                var v = ov.swizzle.vzxvx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(2.5), new Half(-5), new Half(-5));
                var v = ov.swizzle.vzxvy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2.5), Half.Zero, new Half(6), new Half(4.5));
                var v = ov.swizzle.vzxvz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), new Half(5.5), new Half(-8.5), new Half(3));
                var v = ov.swizzle.vzxvw;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), Half.Zero, new Half(-8), new Half(-4));
                var v = ov.swizzle.vzxvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(5), new Half(2), new Half(-4));
                var v = ov.swizzle.vzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(9.5), Half.One, new Half(-1.5), new Half(0.5));
                var v = ov.swizzle.vzyx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-7), new Half(6), new Half(5));
                var v = ov.swizzle.vzyxx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-7), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.vzyxy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-1), new Half(3), Half.Zero);
                var v = ov.swizzle.vzyxz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2), new Half(3), new Half(-5.5), new Half(5.5));
                var v = ov.swizzle.vzyxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(2), new Half(-2.5), new Half(-1));
                var v = ov.swizzle.vzyxv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4.5), new Half(0.5), Half.One, new Half(-3.5));
                var v = ov.swizzle.vzyy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(-3), new Half(-7), new Half(4.5));
                var v = ov.swizzle.vzyyx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6), new Half(-0.5), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.vzyyy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3.5), new Half(-9.5), new Half(5), new Half(3));
                var v = ov.swizzle.vzyyz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(4.5), Half.One, Half.One, new Half(-5));
                var v = ov.swizzle.vzyyw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5.5), new Half(-7), new Half(2.5), new Half(-1));
                var v = ov.swizzle.vzyyv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9.5), new Half(-0.5), new Half(5.5), new Half(-5));
                var v = ov.swizzle.vzyz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4), new Half(-6), new Half(4.5), new Half(-5));
                var v = ov.swizzle.vzyzx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(4.5), new Half(8), new Half(2.5));
                var v = ov.swizzle.vzyzy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3), new Half(-1.5), new Half(7.5), new Half(3));
                var v = ov.swizzle.vzyzz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(6.5), new Half(-5.5), new Half(2.5));
                var v = ov.swizzle.vzyzw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), new Half(-1.5), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.vzyzv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8), new Half(-9.5), new Half(6), new Half(-7));
                var v = ov.swizzle.vzyw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8), new Half(3.5), Half.Zero, new Half(4));
                var v = ov.swizzle.vzywx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9), new Half(-3.5), new Half(1.5), new Half(-9));
                var v = ov.swizzle.vzywy;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.Zero, new Half(3.5), new Half(8), new Half(-7.5));
                var v = ov.swizzle.vzywz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7), new Half(-9.5), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.vzyww;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2), new Half(4), new Half(3), new Half(-9.5));
                var v = ov.swizzle.vzywv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4.5), new Half(-0.5), new Half(4.5), new Half(-3));
                var v = ov.swizzle.vzyv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9), new Half(-2.5), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.vzyvx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9.5), new Half(-2.5), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.vzyvy;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(5), new Half(4), new Half(3));
                var v = ov.swizzle.vzyvz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(-9), new Half(4), new Half(-3.5));
                var v = ov.swizzle.vzyvw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1.5), new Half(1.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.vzyvv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(0.5), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.vzz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8.5), new Half(1.5), new Half(-9), new Half(3));
                var v = ov.swizzle.vzzx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3), Half.Zero, new Half(-4.5), new Half(7));
                var v = ov.swizzle.vzzxx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(-2.5), new Half(3), new Half(3.5));
                var v = ov.swizzle.vzzxy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(9.5), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.vzzxz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6), new Half(-4.5), new Half(8), new Half(-9));
                var v = ov.swizzle.vzzxw;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(7.5), new Half(1.5), new Half(-8));
                var v = ov.swizzle.vzzxv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(5), new Half(-8), new Half(3.5));
                var v = ov.swizzle.vzzy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-3.5), new Half(-3.5), Half.One, new Half(-4.5));
                var v = ov.swizzle.vzzyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(3.5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.vzzyy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-2.5), new Half(6.5), new Half(2));
                var v = ov.swizzle.vzzyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(0.5), new Half(6.5), new Half(-4.5));
                var v = ov.swizzle.vzzyw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5.5), new Half(-7.5), new Half(9.5), new Half(-6));
                var v = ov.swizzle.vzzyv;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(9), new Half(7), new Half(5));
                var v = ov.swizzle.vzzz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(9), new Half(-1), new Half(1.5));
                var v = ov.swizzle.vzzzx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1), new Half(8.5), new Half(-5), new Half(2));
                var v = ov.swizzle.vzzzy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3), new Half(-2.5), new Half(-6), new Half(6));
                var v = ov.swizzle.vzzzz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(1.5), Half.One, new Half(-1.5), new Half(9));
                var v = ov.swizzle.vzzzw;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(9.5), new Half(8), new Half(2.5), new Half(6));
                var v = ov.swizzle.vzzzv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(-2.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.vzzw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-0.5), new Half(-3.5), new Half(1.5), new Half(-0.5));
                var v = ov.swizzle.vzzwx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(-7), new Half(4), new Half(0.5));
                var v = ov.swizzle.vzzwy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5), new Half(-5), new Half(4.5), new Half(4.5));
                var v = ov.swizzle.vzzwz;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8), new Half(6), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.vzzww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3), new Half(-7.5), new Half(7.5), new Half(-8));
                var v = ov.swizzle.vzzwv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(5), new Half(-7), new Half(3), new Half(-5.5));
                var v = ov.swizzle.vzzv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5.5), new Half(-4), new Half(0.5), new Half(5.5));
                var v = ov.swizzle.vzzvx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), new Half(6.5), new Half(-3.5), new Half(7));
                var v = ov.swizzle.vzzvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(7.5), new Half(8.5), new Half(-3));
                var v = ov.swizzle.vzzvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(-5), new Half(7.5), new Half(4.5));
                var v = ov.swizzle.vzzvw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6.5), new Half(4.5), new Half(4.5), new Half(-7));
                var v = ov.swizzle.vzzvv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7), new Half(-1.5), new Half(-3), new Half(-4.5));
                var v = ov.swizzle.vzw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(-4), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.vzwx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-4.5), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.vzwxx;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-9.5), new Half(-4.5), new Half(7.5));
                var v = ov.swizzle.vzwxy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(-5.5), new Half(-4.5), new Half(5));
                var v = ov.swizzle.vzwxz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-9), new Half(8), new Half(-4.5));
                var v = ov.swizzle.vzwxw;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-0.5), new Half(-9), new Half(-3), Half.One);
                var v = ov.swizzle.vzwxv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8.5), new Half(-5.5), Half.One, new Half(-6));
                var v = ov.swizzle.vzwy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(-6), new Half(-7), new Half(9.5));
                var v = ov.swizzle.vzwyx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.Zero, new Half(-5), new Half(4), new Half(8));
                var v = ov.swizzle.vzwyy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(8), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.vzwyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(3), new Half(7), new Half(5));
                var v = ov.swizzle.vzwyw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6.5), new Half(4), new Half(5.5), new Half(7));
                var v = ov.swizzle.vzwyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6.5), new Half(-2), new Half(8.5), new Half(9.5));
                var v = ov.swizzle.vzwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(-9), new Half(9), new Half(-9));
                var v = ov.swizzle.vzwzx;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9.5), new Half(6), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.vzwzy;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(-5), Half.Zero, new Half(8.5));
                var v = ov.swizzle.vzwzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(-8.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.vzwzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), new Half(-6), new Half(6.5), new Half(-5));
                var v = ov.swizzle.vzwzv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(-8.5), new Half(9), new Half(-6));
                var v = ov.swizzle.vzww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(-7), new Half(4), new Half(-8.5));
                var v = ov.swizzle.vzwwx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(9.5), new Half(-9), new Half(1.5));
                var v = ov.swizzle.vzwwy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8), new Half(-9), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.vzwwz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-8.5), new Half(3), new Half(6.5), new Half(-1));
                var v = ov.swizzle.vzwww;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(-7.5), new Half(-5), new Half(0.5));
                var v = ov.swizzle.vzwwv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2), new Half(-6.5), new Half(5.5), new Half(6.5));
                var v = ov.swizzle.vzwv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(6.5), new Half(8), new Half(6));
                var v = ov.swizzle.vzwvx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(9), new Half(-9.5), Half.Zero);
                var v = ov.swizzle.vzwvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(2), new Half(8.5), new Half(5));
                var v = ov.swizzle.vzwvz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6), new Half(3), new Half(8), new Half(0.5));
                var v = ov.swizzle.vzwvw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), new Half(-4.5), new Half(9.5), new Half(-3));
                var v = ov.swizzle.vzwvv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), Half.One, new Half(-5), new Half(-1.5));
                var v = ov.swizzle.vzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5), new Half(4), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.vzvx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(9), new Half(6), new Half(7.5));
                var v = ov.swizzle.vzvxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1), new Half(-5.5), new Half(6.5), new Half(-1));
                var v = ov.swizzle.vzvxy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8.5), new Half(-5.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.vzvxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8), new Half(-4), new Half(5), new Half(5.5));
                var v = ov.swizzle.vzvxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3.5), new Half(7.5), new Half(6.5), new Half(-9));
                var v = ov.swizzle.vzvxv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(8.5), new Half(5.5), new Half(1.5), new Half(-4));
                var v = ov.swizzle.vzvy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(-8.5), new Half(3), new Half(6));
                var v = ov.swizzle.vzvyx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5), new Half(6.5), new Half(-2), new Half(5));
                var v = ov.swizzle.vzvyy;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(8), new Half(-1.5), new Half(-1.5), new Half(0.5));
                var v = ov.swizzle.vzvyz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7.5), new Half(2.5), new Half(-7), new Half(-1));
                var v = ov.swizzle.vzvyw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(8.5), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.vzvyv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6.5), new Half(-4), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.vzvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(2.5), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.vzvzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7), new Half(-8.5), new Half(2), new Half(-3.5));
                var v = ov.swizzle.vzvzy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3), Half.One, Half.Zero, new Half(5));
                var v = ov.swizzle.vzvzz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(8), new Half(6), new Half(1.5));
                var v = ov.swizzle.vzvzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(-8), new Half(-9.5), new Half(5.5));
                var v = ov.swizzle.vzvzv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7), new Half(5.5), new Half(-3), Half.Zero);
                var v = ov.swizzle.vzvw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(8), new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.vzvwx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(5), new Half(2), new Half(-6.5));
                var v = ov.swizzle.vzvwy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-0.5), new Half(1.5), new Half(9.5));
                var v = ov.swizzle.vzvwz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8.5), new Half(8.5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.vzvww;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(6), new Half(6.5), new Half(-1));
                var v = ov.swizzle.vzvwv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7.5), new Half(-2), new Half(-2.5), Half.Zero);
                var v = ov.swizzle.vzvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(7), new Half(2), new Half(8.5));
                var v = ov.swizzle.vzvvx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(3), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.vzvvy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(6), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.vzvvz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7), new Half(-2.5), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.vzvvw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(-4), new Half(-7), Half.Zero);
                var v = ov.swizzle.vzvvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4.5), new Half(-3), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.vw;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3), new Half(-9), new Half(2), new Half(4.5));
                var v = ov.swizzle.vwx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(-2.5), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.vwxx;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(-8), new Half(0.5), new Half(-6));
                var v = ov.swizzle.vwxxx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7), new Half(-5.5), new Half(-6), new Half(9));
                var v = ov.swizzle.vwxxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9), new Half(2.5), new Half(7.5), new Half(-5));
                var v = ov.swizzle.vwxxz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(1.5), Half.One, new Half(-5.5));
                var v = ov.swizzle.vwxxw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(0.5), new Half(-5), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.vwxxv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9.5), new Half(3), new Half(-0.5), new Half(2.5));
                var v = ov.swizzle.vwxy;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), new Half(4.5), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.vwxyx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.Zero, new Half(-6.5), Half.Zero, new Half(9.5));
                var v = ov.swizzle.vwxyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6), Half.One, new Half(6.5), new Half(-8), new Half(8.5));
                var v = ov.swizzle.vwxyz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(-7.5), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.vwxyw;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.One, new Half(-4.5), new Half(8), new Half(-1.5));
                var v = ov.swizzle.vwxyv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(8.5), new Half(-8), Half.Zero);
                var v = ov.swizzle.vwxz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3), new Half(5.5), new Half(-5.5), Half.One);
                var v = ov.swizzle.vwxzx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6), new Half(2.5), new Half(8), new Half(-5.5));
                var v = ov.swizzle.vwxzy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(1.5), new Half(2), new Half(-8));
                var v = ov.swizzle.vwxzz;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3.5), new Half(6.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.vwxzw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8.5), new Half(-6), new Half(4), new Half(-2));
                var v = ov.swizzle.vwxzv;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4), new Half(-3.5), new Half(-2), new Half(-7));
                var v = ov.swizzle.vwxw;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2), new Half(5), Half.Zero, new Half(-8));
                var v = ov.swizzle.vwxwx;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(-3), new Half(-6), new Half(-3.5));
                var v = ov.swizzle.vwxwy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-3), new Half(3), new Half(-3));
                var v = ov.swizzle.vwxwz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(-6.5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.vwxww;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(-6), new Half(-2), new Half(5.5));
                var v = ov.swizzle.vwxwv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(0.5), new Half(-3), new Half(6.5));
                var v = ov.swizzle.vwxv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(-8.5), new Half(2.5), new Half(-3));
                var v = ov.swizzle.vwxvx;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), new Half(0.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.vwxvy;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), new Half(-9.5), new Half(5.5), new Half(-4));
                var v = ov.swizzle.vwxvz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(-2), new Half(1.5), new Half(-6));
                var v = ov.swizzle.vwxvw;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(5.5), new Half(-6), new Half(9.5));
                var v = ov.swizzle.vwxvv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3.5), new Half(3.5), new Half(4), new Half(5.5));
                var v = ov.swizzle.vwy;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), Half.Zero, new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.vwyx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(-9.5), new Half(1.5), new Half(4));
                var v = ov.swizzle.vwyxx;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8.5), new Half(9.5), new Half(-5), new Half(9));
                var v = ov.swizzle.vwyxy;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(-9.5), new Half(8.5), new Half(-1));
                var v = ov.swizzle.vwyxz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5), new Half(8.5), new Half(6.5), Half.One);
                var v = ov.swizzle.vwyxw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(5), new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.vwyxv;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(-3.5), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.vwyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9.5), Half.Zero, new Half(-6), new Half(-2));
                var v = ov.swizzle.vwyyx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), new Half(-8.5), new Half(-2.5), new Half(8.5));
                var v = ov.swizzle.vwyyy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6.5), new Half(-9.5), new Half(5), new Half(2));
                var v = ov.swizzle.vwyyz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5), new Half(5.5), new Half(4.5), new Half(9.5));
                var v = ov.swizzle.vwyyw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(4), new Half(-9), new Half(5.5));
                var v = ov.swizzle.vwyyv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(-3.5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.vwyz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(-1), new Half(-5), Half.One);
                var v = ov.swizzle.vwyzx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(4), new Half(-3.5), new Half(-6.5));
                var v = ov.swizzle.vwyzy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4.5), new Half(-2), new Half(7.5), new Half(-2.5));
                var v = ov.swizzle.vwyzz;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), Half.Zero, new Half(1.5), new Half(2));
                var v = ov.swizzle.vwyzw;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-0.5), new Half(2.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.vwyzv;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6), new Half(-8.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.vwyw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-7), new Half(3), new Half(6));
                var v = ov.swizzle.vwywx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2), new Half(4), new Half(4), new Half(-3.5));
                var v = ov.swizzle.vwywy;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(8), new Half(-1), new Half(8));
                var v = ov.swizzle.vwywz;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6), new Half(6), new Half(2.5), new Half(4.5));
                var v = ov.swizzle.vwyww;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), new Half(5.5), Half.One, new Half(6));
                var v = ov.swizzle.vwywv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(-8.5), new Half(-4), new Half(-1));
                var v = ov.swizzle.vwyv;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), new Half(-4.5), new Half(-8.5), new Half(-1.5));
                var v = ov.swizzle.vwyvx;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(7), new Half(1.5), new Half(7));
                var v = ov.swizzle.vwyvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(6.5), new Half(5), new Half(-7.5));
                var v = ov.swizzle.vwyvz;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9.5), new Half(-8.5), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.vwyvw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(-0.5), new Half(-4.5), new Half(-4));
                var v = ov.swizzle.vwyvv;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(-5), new Half(7.5), new Half(3));
                var v = ov.swizzle.vwz;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(1.5), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.vwzx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6), new Half(-2.5), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.vwzxx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(9.5), new Half(-6), new Half(-5.5), new Half(4));
                var v = ov.swizzle.vwzxy;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(6.5), new Half(0.5), new Half(-9.5), new Half(1.5));
                var v = ov.swizzle.vwzxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-7.5), Half.Zero, new Half(-8), new Half(-3.5));
                var v = ov.swizzle.vwzxw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), new Half(9.5), new Half(7), new Half(-4.5));
                var v = ov.swizzle.vwzxv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(9), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.vwzy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), Half.One, new Half(-9.5), new Half(-6.5));
                var v = ov.swizzle.vwzyx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2.5), new Half(7.5), new Half(-5.5), new Half(6));
                var v = ov.swizzle.vwzyy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3.5), new Half(4), new Half(-9.5), new Half(2.5));
                var v = ov.swizzle.vwzyz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4.5), new Half(5.5), new Half(6), new Half(-8.5));
                var v = ov.swizzle.vwzyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(-3), new Half(7), new Half(3.5));
                var v = ov.swizzle.vwzyv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(-9.5), new Half(8.5), new Half(9));
                var v = ov.swizzle.vwzz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(0.5), new Half(-1.5), new Half(3.5), new Half(6));
                var v = ov.swizzle.vwzzx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(9), new Half(6.5), new Half(1.5));
                var v = ov.swizzle.vwzzy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5.5), new Half(-6), new Half(-2), new Half(2));
                var v = ov.swizzle.vwzzz;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(-9.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.vwzzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(3), new Half(5), new Half(6.5));
                var v = ov.swizzle.vwzzv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6), new Half(4.5), new Half(-2.5), new Half(-8));
                var v = ov.swizzle.vwzw;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3), new Half(9.5), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.vwzwx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5), new Half(-1), new Half(-4), new Half(1.5));
                var v = ov.swizzle.vwzwy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(9.5), new Half(-5), new Half(1.5));
                var v = ov.swizzle.vwzwz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4), Half.One, new Half(5), new Half(6.5));
                var v = ov.swizzle.vwzww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6.5), new Half(4), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.vwzwv;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(-6.5), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.vwzv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(-6.5), new Half(-8), new Half(7));
                var v = ov.swizzle.vwzvx;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4.5), Half.One, new Half(1.5), new Half(7));
                var v = ov.swizzle.vwzvy;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-7), new Half(5), new Half(-5.5), new Half(5));
                var v = ov.swizzle.vwzvz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6), new Half(-0.5), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.vwzvw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5), new Half(-0.5), new Half(0.5), new Half(9.5));
                var v = ov.swizzle.vwzvv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), new Half(-9.5), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.vww;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6.5), new Half(-4), new Half(-5), new Half(7.5));
                var v = ov.swizzle.vwwx;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-8.5), new Half(6), new Half(-5));
                var v = ov.swizzle.vwwxx;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2), new Half(9), new Half(7.5), new Half(3));
                var v = ov.swizzle.vwwxy;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(0.5), new Half(-8.5), new Half(-4), new Half(7));
                var v = ov.swizzle.vwwxz;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(8), new Half(-2), new Half(5));
                var v = ov.swizzle.vwwxw;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(2.5), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.vwwxv;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(4), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.vwwy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(1.5), new Half(-3.5), new Half(2.5));
                var v = ov.swizzle.vwwyx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4.5), new Half(-7.5), new Half(9.5), Half.Zero);
                var v = ov.swizzle.vwwyy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(1.5), new Half(-3.5), new Half(7.5));
                var v = ov.swizzle.vwwyz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2.5), new Half(5), new Half(-0.5), new Half(-3.5));
                var v = ov.swizzle.vwwyw;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(2), new Half(8), new Half(7));
                var v = ov.swizzle.vwwyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9), new Half(2), new Half(-3.5), new Half(5));
                var v = ov.swizzle.vwwz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7), new Half(-8), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.vwwzx;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(4.5), new Half(-7.5), Half.One);
                var v = ov.swizzle.vwwzy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(8), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.vwwzz;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9), new Half(5), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.vwwzw;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(-5), new Half(6), new Half(-1.5));
                var v = ov.swizzle.vwwzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(-7.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.vwww;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(5.5), new Half(4.5), new Half(-9.5));
                var v = ov.swizzle.vwwwx;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8), new Half(3.5), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.vwwwy;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-5.5), new Half(-1.5), new Half(7.5));
                var v = ov.swizzle.vwwwz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5), new Half(1.5), new Half(-4.5), new Half(-4));
                var v = ov.swizzle.vwwww;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3), new Half(-8.5), new Half(3), new Half(-4.5));
                var v = ov.swizzle.vwwwv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3.5), new Half(-2), new Half(9), new Half(9.5));
                var v = ov.swizzle.vwwv;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(-5), new Half(1.5), new Half(3));
                var v = ov.swizzle.vwwvx;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(-5), new Half(1.5), new Half(-1));
                var v = ov.swizzle.vwwvy;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3.5), new Half(-4), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.vwwvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6), new Half(-3.5), new Half(8), new Half(3.5));
                var v = ov.swizzle.vwwvw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(7.5), new Half(5), new Half(6));
                var v = ov.swizzle.vwwvv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(2.5), new Half(8), new Half(8.5));
                var v = ov.swizzle.vwv;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(-6.5), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.vwvx;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8), new Half(2.5), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.vwvxx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(1.5), Half.Zero, new Half(-4), new Half(6.5));
                var v = ov.swizzle.vwvxy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(7.5), new Half(-9), new Half(7.5));
                var v = ov.swizzle.vwvxz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), new Half(2), new Half(-7), new Half(-1));
                var v = ov.swizzle.vwvxw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(9), new Half(-4.5), new Half(9));
                var v = ov.swizzle.vwvxv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2.5), new Half(5), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.vwvy;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2), new Half(-8.5), new Half(-5.5), new Half(2));
                var v = ov.swizzle.vwvyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5.5), Half.One, new Half(-7), new Half(-7));
                var v = ov.swizzle.vwvyy;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7), new Half(-6.5), new Half(8), new Half(9));
                var v = ov.swizzle.vwvyz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5), new Half(-4), new Half(-2), new Half(3.5));
                var v = ov.swizzle.vwvyw;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3), new Half(6), new Half(-8.5), new Half(7));
                var v = ov.swizzle.vwvyv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(7), new Half(-5), new Half(0.5));
                var v = ov.swizzle.vwvz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(7), new Half(-6.5), new Half(-3.5));
                var v = ov.swizzle.vwvzx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(-4), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.vwvzy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(-4.5), Half.Zero, new Half(-4));
                var v = ov.swizzle.vwvzz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5.5), Half.Zero, new Half(-6), new Half(6));
                var v = ov.swizzle.vwvzw;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3), new Half(3.5), new Half(9.5), new Half(-8));
                var v = ov.swizzle.vwvzv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), Half.Zero, new Half(-6), new Half(9.5));
                var v = ov.swizzle.vwvw;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), new Half(-2.5), new Half(-2.5), new Half(-2.5));
                var v = ov.swizzle.vwvwx;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.Zero, new Half(9.5), new Half(-6.5), new Half(-5));
                var v = ov.swizzle.vwvwy;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), new Half(8.5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.vwvwz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(5), new Half(6), new Half(-4.5));
                var v = ov.swizzle.vwvww;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(1.5), new Half(8), new Half(3.5));
                var v = ov.swizzle.vwvwv;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(7), new Half(4), new Half(-9));
                var v = ov.swizzle.vwvv;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8), new Half(7.5), new Half(-7), new Half(-3.5));
                var v = ov.swizzle.vwvvx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(8.5), new Half(-4), new Half(2));
                var v = ov.swizzle.vwvvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5.5), new Half(-8), Half.Zero, new Half(-1));
                var v = ov.swizzle.vwvvz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(8), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.vwvvw;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(3.5), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.vwvvv;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4.5), new Half(-8), new Half(4.5), new Half(9));
                var v = ov.swizzle.vv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3.5), new Half(5.5), new Half(3), new Half(-6));
                var v = ov.swizzle.vvx;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(-8.5), new Half(8.5), new Half(5));
                var v = ov.swizzle.vvxx;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(2.5), new Half(4), new Half(2));
                var v = ov.swizzle.vvxxx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(0.5), new Half(0.5), new Half(7.5), new Half(-1.5));
                var v = ov.swizzle.vvxxy;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(-9), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.vvxxz;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(6), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.vvxxw;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(4), new Half(3), new Half(-5.5));
                var v = ov.swizzle.vvxxv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(-4), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.vvxy;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(-1), new Half(-6.5), new Half(-5.5));
                var v = ov.swizzle.vvxyx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(-0.5), new Half(-0.5), new Half(-9.5));
                var v = ov.swizzle.vvxyy;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(-8.5), new Half(5), new Half(6));
                var v = ov.swizzle.vvxyz;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), Half.One, new Half(-3), new Half(7));
                var v = ov.swizzle.vvxyw;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(5.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.vvxyv;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5), new Half(-0.5), new Half(-9.5), new Half(-3));
                var v = ov.swizzle.vvxz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(5), new Half(-3), new Half(-7));
                var v = ov.swizzle.vvxzx;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3), new Half(5.5), new Half(9), new Half(-7.5));
                var v = ov.swizzle.vvxzy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3.5), new Half(-8), new Half(5), new Half(0.5));
                var v = ov.swizzle.vvxzz;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(8.5), new Half(6.5), new Half(-0.5));
                var v = ov.swizzle.vvxzw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), Half.One, new Half(-7), new Half(-3));
                var v = ov.swizzle.vvxzv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(4), new Half(7.5), new Half(6.5));
                var v = ov.swizzle.vvxw;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8), new Half(8), new Half(-7), new Half(8));
                var v = ov.swizzle.vvxwx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(7), new Half(-1.5), new Half(7.5));
                var v = ov.swizzle.vvxwy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(2.5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.vvxwz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(-0.5), new Half(-6), new Half(8.5));
                var v = ov.swizzle.vvxww;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7), new Half(2.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.vvxwv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-5), new Half(-1.5), Half.Zero, new Half(4.5));
                var v = ov.swizzle.vvxv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7), new Half(8.5), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.vvxvx;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), Half.One, new Half(7.5), new Half(2));
                var v = ov.swizzle.vvxvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(-1), new Half(9.5), new Half(5));
                var v = ov.swizzle.vvxvz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6), new Half(-2), new Half(-9.5), new Half(-2.5));
                var v = ov.swizzle.vvxvw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7), new Half(-0.5), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.vvxvv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7), new Half(-8), new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.vvy;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(6), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.vvyx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9.5), new Half(-9.5), Half.One, new Half(5.5));
                var v = ov.swizzle.vvyxx;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8), new Half(2.5), new Half(-3), Half.Zero);
                var v = ov.swizzle.vvyxy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(3.5), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.vvyxz;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3), new Half(8), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.vvyxw;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(9.5), new Half(-6.5), new Half(-3));
                var v = ov.swizzle.vvyxv;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(-8.5), Half.One, new Half(0.5));
                var v = ov.swizzle.vvyy;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5), new Half(-7), new Half(-4), new Half(0.5));
                var v = ov.swizzle.vvyyx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-1), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.vvyyy;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), new Half(-6), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.vvyyz;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(2.5), new Half(-8.5), new Half(0.5));
                var v = ov.swizzle.vvyyw;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(3.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.vvyyv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(6.5), new Half(-1.5), new Half(9));
                var v = ov.swizzle.vvyz;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2.5), new Half(0.5), new Half(-6.5), Half.One);
                var v = ov.swizzle.vvyzx;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(-9), new Half(4.5), new Half(-7.5));
                var v = ov.swizzle.vvyzy;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), new Half(-6.5), new Half(5.5), new Half(-9));
                var v = ov.swizzle.vvyzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), Half.One, new Half(-2.5), Half.One);
                var v = ov.swizzle.vvyzw;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(5), Half.Zero, new Half(-1), new Half(-8.5));
                var v = ov.swizzle.vvyzv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3), new Half(5), new Half(3.5), new Half(4.5));
                var v = ov.swizzle.vvyw;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(0.5), new Half(-7.5), new Half(-6), new Half(8));
                var v = ov.swizzle.vvywx;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4.5), new Half(3.5), new Half(6.5), new Half(6));
                var v = ov.swizzle.vvywy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4), new Half(8.5), new Half(8.5), new Half(-3));
                var v = ov.swizzle.vvywz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(7.5), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.vvyww;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9), new Half(8), new Half(-2.5), new Half(7));
                var v = ov.swizzle.vvywv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(-9), Half.One, new Half(4.5));
                var v = ov.swizzle.vvyv;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5.5), new Half(-4.5), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.vvyvx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), new Half(6), new Half(-2.5), new Half(2));
                var v = ov.swizzle.vvyvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(4), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.vvyvz;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7), new Half(2), new Half(8.5), new Half(4));
                var v = ov.swizzle.vvyvw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(-4), Half.One, Half.Zero);
                var v = ov.swizzle.vvyvv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7.5), new Half(4.5), new Half(8), new Half(4));
                var v = ov.swizzle.vvz;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(1.5), new Half(2), new Half(0.5));
                var v = ov.swizzle.vvzx;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(7.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.vvzxx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(-1), new Half(-0.5), new Half(-0.5));
                var v = ov.swizzle.vvzxy;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(-1.5), new Half(5), new Half(-1));
                var v = ov.swizzle.vvzxz;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(-8.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.vvzxw;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(-5.5), Half.Zero, new Half(7));
                var v = ov.swizzle.vvzxv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(8.5), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.vvzy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8), new Half(2), new Half(1.5), new Half(-6.5));
                var v = ov.swizzle.vvzyx;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(-0.5), new Half(-3), new Half(9.5));
                var v = ov.swizzle.vvzyy;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4), new Half(-5.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.vvzyz;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3.5), new Half(-1.5), new Half(7.5), new Half(8));
                var v = ov.swizzle.vvzyw;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(5.5), new Half(7), new Half(-1.5));
                var v = ov.swizzle.vvzyv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(7.5), new Half(5), new Half(-9));
                var v = ov.swizzle.vvzz;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(-2.5), new Half(-6), new Half(2.5));
                var v = ov.swizzle.vvzzx;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-2), new Half(6.5), new Half(-7.5), new Half(3.5));
                var v = ov.swizzle.vvzzy;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5.5), new Half(7), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.vvzzz;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(-1), new Half(-4.5), new Half(4));
                var v = ov.swizzle.vvzzw;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), Half.Zero, new Half(-4), new Half(7));
                var v = ov.swizzle.vvzzv;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(5.5), new Half(2), new Half(7.5));
                var v = ov.swizzle.vvzw;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(-6.5), new Half(4.5), new Half(-1));
                var v = ov.swizzle.vvzwx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7), new Half(8), new Half(-8.5), new Half(8));
                var v = ov.swizzle.vvzwy;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7.5), new Half(5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.vvzwz;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8), new Half(8.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.vvzww;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4.5), new Half(-2), Half.One, new Half(6));
                var v = ov.swizzle.vvzwv;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(-3), new Half(7), new Half(-8.5));
                var v = ov.swizzle.vvzv;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(3.5), new Half(-4.5), new Half(-2));
                var v = ov.swizzle.vvzvx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(-4), new Half(-3.5), Half.One);
                var v = ov.swizzle.vvzvy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-8), new Half(0.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.vvzvz;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7.5), new Half(6.5), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.vvzvw;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(-4.5), new Half(-2), new Half(6.5));
                var v = ov.swizzle.vvzvv;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(-8.5), new Half(-2.5), new Half(-1));
                var v = ov.swizzle.vvw;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), Half.One, Half.Zero, new Half(-5.5));
                var v = ov.swizzle.vvwx;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(-9.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.vvwxx;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4), new Half(-2), new Half(8), new Half(-2));
                var v = ov.swizzle.vvwxy;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(5.5), new Half(-1.5), new Half(2.5));
                var v = ov.swizzle.vvwxz;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5), new Half(-7.5), new Half(8), new Half(-2.5));
                var v = ov.swizzle.vvwxw;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2.5), new Half(-7.5), new Half(-0.5), new Half(-5));
                var v = ov.swizzle.vvwxv;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(1.5), new Half(-3.5), new Half(-5), new Half(6));
                var v = ov.swizzle.vvwy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(0.5), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.vvwyx;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(3), new Half(-9.5), Half.One);
                var v = ov.swizzle.vvwyy;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), new Half(-6), new Half(9.5), new Half(-4));
                var v = ov.swizzle.vvwyz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5), new Half(2.5), new Half(5.5), new Half(1.5));
                var v = ov.swizzle.vvwyw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(2.5), new Half(-3), new Half(-5.5));
                var v = ov.swizzle.vvwyv;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-7.5), new Half(1.5), new Half(-8), Half.Zero);
                var v = ov.swizzle.vvwz;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8), new Half(7.5), new Half(2), new Half(6.5));
                var v = ov.swizzle.vvwzx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(3), new Half(0.5), new Half(-8.5));
                var v = ov.swizzle.vvwzy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2), Half.One, new Half(7), new Half(8.5));
                var v = ov.swizzle.vvwzz;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6), new Half(-7.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.vvwzw;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9.5), new Half(1.5), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.vvwzv;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(-7), new Half(7), new Half(-6));
                var v = ov.swizzle.vvww;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(-4.5), new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.vvwwx;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-4), new Half(3), new Half(6));
                var v = ov.swizzle.vvwwy;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2), new Half(2), new Half(-5), new Half(-4));
                var v = ov.swizzle.vvwwz;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(-5.5), new Half(-5), new Half(6.5));
                var v = ov.swizzle.vvwww;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9.5), new Half(-6), new Half(4), new Half(5.5));
                var v = ov.swizzle.vvwwv;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(-4), new Half(-5.5), new Half(2));
                var v = ov.swizzle.vvwv;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(5.5), new Half(-4), new Half(1.5));
                var v = ov.swizzle.vvwvx;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(-7.5), new Half(-2), new Half(-2.5));
                var v = ov.swizzle.vvwvy;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(2), new Half(-9), new Half(8), new Half(-5));
                var v = ov.swizzle.vvwvz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6.5), new Half(-7), new Half(8), new Half(1.5));
                var v = ov.swizzle.vvwvw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.Zero, new Half(2), new Half(-2), new Half(9));
                var v = ov.swizzle.vvwvv;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4.5), new Half(-8.5), new Half(-5.5), new Half(0.5));
                var v = ov.swizzle.vvv;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(-0.5), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.vvvx;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6), new Half(-0.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.vvvxx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8.5), new Half(-2), new Half(-1.5), new Half(-6.5));
                var v = ov.swizzle.vvvxy;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8.5), new Half(7), new Half(0.5), new Half(3.5));
                var v = ov.swizzle.vvvxz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(4), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.vvvxw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5.5), new Half(-6.5), new Half(3), Half.Zero);
                var v = ov.swizzle.vvvxv;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5.5), new Half(8.5), new Half(-7.5), new Half(2));
                var v = ov.swizzle.vvvy;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(-8), new Half(-6.5), new Half(2));
                var v = ov.swizzle.vvvyx;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(7), new Half(3.5), new Half(2), new Half(-8.5));
                var v = ov.swizzle.vvvyy;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1.5), new Half(-4), new Half(-1.5), new Half(5));
                var v = ov.swizzle.vvvyz;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(1.5), new Half(1.5), new Half(-8.5));
                var v = ov.swizzle.vvvyw;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(6.5), new Half(-1), new Half(3));
                var v = ov.swizzle.vvvyv;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), new Half(-4.5), new Half(-7.5), new Half(3.5));
                var v = ov.swizzle.vvvz;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(0.5), new Half(-4.5), new Half(-2));
                var v = ov.swizzle.vvvzx;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(-5.5), new Half(-2.5), new Half(7.5));
                var v = ov.swizzle.vvvzy;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(2), new Half(-3), new Half(-5));
                var v = ov.swizzle.vvvzz;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(5.5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.vvvzw;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(7), Half.One, new Half(-1.5));
                var v = ov.swizzle.vvvzv;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(6), new Half(-9.5), new Half(-5));
                var v = ov.swizzle.vvvw;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6.5), new Half(-1), new Half(9), new Half(6));
                var v = ov.swizzle.vvvwx;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8.5), new Half(-1.5), new Half(-6), new Half(-4));
                var v = ov.swizzle.vvvwy;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2), new Half(3), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.vvvwz;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), new Half(-5.5), new Half(6.5), new Half(9));
                var v = ov.swizzle.vvvww;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-3.5), new Half(1.5), new Half(5));
                var v = ov.swizzle.vvvwv;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(-0.5), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.vvvv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(4), new Half(-2), new Half(-3.5));
                var v = ov.swizzle.vvvvx;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4), new Half(2.5), new Half(5), Half.Zero);
                var v = ov.swizzle.vvvvy;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-9), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.vvvvz;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(-4), new Half(-7.5), new Half(-0.5));
                var v = ov.swizzle.vvvvw;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3.5), new Half(9), new Half(9), new Half(7.5));
                var v = ov.swizzle.vvvvv;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
        }

        [Test]
        public void rgbaklpq()
        {
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(-1.5), new Half(-9), new Half(-8));
                var v = ov.swizzle.rr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(7), new Half(-3), new Half(-4.5));
                var v = ov.swizzle.rrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5.5), new Half(5.5), new Half(1.5), new Half(-3));
                var v = ov.swizzle.rrrr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(-2), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.rrrrr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(3), new Half(1.5), Half.One);
                var v = ov.swizzle.rrrrg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(3.5), new Half(7.5), new Half(5));
                var v = ov.swizzle.rrrrb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8), Half.Zero, new Half(-3.5), new Half(-2.5));
                var v = ov.swizzle.rrrra;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9), new Half(2), new Half(-9), new Half(6.5));
                var v = ov.swizzle.rrrrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(8.5), new Half(9.5), new Half(5.5));
                var v = ov.swizzle.rrrg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(7.5), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.rrrgr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9.5), new Half(4.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.rrrgg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9.5), new Half(6.5), new Half(-7), new Half(-6.5));
                var v = ov.swizzle.rrrgb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(9), new Half(6), new Half(8.5));
                var v = ov.swizzle.rrrga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4.5), new Half(9), new Half(4), new Half(1.5));
                var v = ov.swizzle.rrrgk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3.5), new Half(3.5), new Half(1.5), new Half(7));
                var v = ov.swizzle.rrrb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(4), new Half(5.5), new Half(1.5));
                var v = ov.swizzle.rrrbr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(-6.5), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.rrrbg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), new Half(2.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.rrrbb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(-4.5), new Half(6.5), new Half(7));
                var v = ov.swizzle.rrrba;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(1.5), Half.Zero, new Half(-1.5));
                var v = ov.swizzle.rrrbk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(3.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.rrra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(3), Half.Zero, new Half(1.5));
                var v = ov.swizzle.rrrar;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5.5), Half.One, new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.rrrag;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), new Half(5.5), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.rrrab;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(-5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.rrraa;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.One, new Half(7.5), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.rrrak;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(3), new Half(6), new Half(-5));
                var v = ov.swizzle.rrrk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(3), new Half(-5.5), new Half(2.5));
                var v = ov.swizzle.rrrkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(1.5), new Half(3), Half.One);
                var v = ov.swizzle.rrrkg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2), new Half(9.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.rrrkb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), new Half(-1), new Half(6), new Half(5.5));
                var v = ov.swizzle.rrrka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(9), new Half(8), new Half(9));
                var v = ov.swizzle.rrrkk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-0.5), new Half(-9), new Half(-3.5), new Half(-2));
                var v = ov.swizzle.rrg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), new Half(4.5), new Half(-1), new Half(2.5));
                var v = ov.swizzle.rrgr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), Half.One, new Half(-2), new Half(-0.5), new Half(-5));
                var v = ov.swizzle.rrgrr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1), new Half(-1), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.rrgrg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2), new Half(2.5), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.rrgrb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5.5), new Half(7.5), new Half(-2), Half.One);
                var v = ov.swizzle.rrgra;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(5.5), new Half(-5), new Half(9.5));
                var v = ov.swizzle.rrgrk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2.5), new Half(5), new Half(1.5), new Half(-6));
                var v = ov.swizzle.rrgg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(-1.5), new Half(-2), new Half(-5));
                var v = ov.swizzle.rrggr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-8.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.rrggg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), new Half(-2.5), new Half(-6.5), Half.Zero);
                var v = ov.swizzle.rrggb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(-9.5), new Half(9.5), new Half(-6));
                var v = ov.swizzle.rrgga;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), new Half(-6.5), new Half(8), new Half(-4));
                var v = ov.swizzle.rrggk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5), new Half(6.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.rrgb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5), new Half(-9.5), new Half(6), new Half(1.5));
                var v = ov.swizzle.rrgbr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4), new Half(-9.5), new Half(-4.5), Half.Zero);
                var v = ov.swizzle.rrgbg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(4), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.rrgbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-2), new Half(-4), new Half(9));
                var v = ov.swizzle.rrgba;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(5), new Half(-5), new Half(-6));
                var v = ov.swizzle.rrgbk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), new Half(-9.5), new Half(8.5), new Half(8));
                var v = ov.swizzle.rrga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5), new Half(2.5), new Half(6), new Half(-4.5));
                var v = ov.swizzle.rrgar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1.5), new Half(-9.5), new Half(2.5), new Half(8));
                var v = ov.swizzle.rrgag;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(5.5), new Half(9.5), new Half(2.5));
                var v = ov.swizzle.rrgab;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(-4.5), new Half(8), new Half(2));
                var v = ov.swizzle.rrgaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-6.5), new Half(-9.5), new Half(3.5));
                var v = ov.swizzle.rrgak;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9.5), new Half(4), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.rrgk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4.5), new Half(-8.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.rrgkr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(7.5), new Half(-3), new Half(2));
                var v = ov.swizzle.rrgkg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(-9.5), new Half(5), new Half(3.5));
                var v = ov.swizzle.rrgkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(6), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.rrgka;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-1), new Half(6.5), new Half(-9));
                var v = ov.swizzle.rrgkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(-2), new Half(-3), new Half(8));
                var v = ov.swizzle.rrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(-0.5), new Half(9.5), new Half(-2));
                var v = ov.swizzle.rrbr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(-9), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.rrbrr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-3), new Half(5), new Half(-9));
                var v = ov.swizzle.rrbrg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(-7), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.rrbrb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(-7.5), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.rrbra;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), new Half(-4.5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.rrbrk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), new Half(-5.5), new Half(3), new Half(5));
                var v = ov.swizzle.rrbg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(-9.5), new Half(4.5), new Half(-1));
                var v = ov.swizzle.rrbgr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-2.5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.rrbgg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(4), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.rrbgb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6), new Half(-5.5), new Half(4.5), new Half(9));
                var v = ov.swizzle.rrbga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(-7), new Half(-6), new Half(-6.5));
                var v = ov.swizzle.rrbgk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2), new Half(-7.5), new Half(-3.5), new Half(8));
                var v = ov.swizzle.rrbb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7), new Half(8), Half.Zero, new Half(-8));
                var v = ov.swizzle.rrbbr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4.5), new Half(-6.5), new Half(-7), Half.Zero);
                var v = ov.swizzle.rrbbg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(-5.5), new Half(-7.5), new Half(6));
                var v = ov.swizzle.rrbbb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(6), new Half(-1), new Half(-7.5));
                var v = ov.swizzle.rrbba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(0.5), new Half(4.5), new Half(2));
                var v = ov.swizzle.rrbbk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(4), new Half(-1), new Half(-2));
                var v = ov.swizzle.rrba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7), Half.One, new Half(0.5), new Half(3));
                var v = ov.swizzle.rrbar;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(4), new Half(9.5), Half.Zero);
                var v = ov.swizzle.rrbag;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(7), new Half(3.5), new Half(8));
                var v = ov.swizzle.rrbab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(5.5), new Half(9), new Half(1.5));
                var v = ov.swizzle.rrbaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(-1), new Half(3), new Half(7));
                var v = ov.swizzle.rrbak;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8), new Half(-5), new Half(8.5), new Half(-9));
                var v = ov.swizzle.rrbk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(-2), new Half(4), new Half(3.5));
                var v = ov.swizzle.rrbkr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(3.5), new Half(-8), new Half(7.5));
                var v = ov.swizzle.rrbkg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(7), new Half(9), new Half(4));
                var v = ov.swizzle.rrbkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6), new Half(7.5), new Half(-3.5), new Half(4));
                var v = ov.swizzle.rrbka;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(4.5), new Half(-9), new Half(2.5));
                var v = ov.swizzle.rrbkk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5), new Half(7.5), new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.rra;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(6), new Half(-9.5), new Half(5));
                var v = ov.swizzle.rrar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(3), new Half(9.5), new Half(-5.5));
                var v = ov.swizzle.rrarr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5.5), new Half(-7), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.rrarg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7.5), Half.One, new Half(9.5), Half.Zero);
                var v = ov.swizzle.rrarb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(-1.5), new Half(3.5), new Half(7.5));
                var v = ov.swizzle.rrara;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(2.5), new Half(-2), new Half(1.5));
                var v = ov.swizzle.rrark;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7), new Half(-2), new Half(-2.5), new Half(6));
                var v = ov.swizzle.rrag;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7), new Half(-2.5), new Half(3), new Half(-7));
                var v = ov.swizzle.rragr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), new Half(7.5), Half.One, new Half(-2));
                var v = ov.swizzle.rragg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(-6.5), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.rragb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4), new Half(8.5), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.rraga;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4.5), new Half(-3), new Half(-6.5), new Half(5));
                var v = ov.swizzle.rragk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-0.5), new Half(2.5), new Half(8), new Half(5));
                var v = ov.swizzle.rrab;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(-0.5), new Half(4), new Half(7.5));
                var v = ov.swizzle.rrabr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(7.5), new Half(-7.5), new Half(-4));
                var v = ov.swizzle.rrabg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(-2.5), new Half(-7.5), new Half(9.5));
                var v = ov.swizzle.rrabb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), Half.Zero, new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.rraba;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9), new Half(0.5), new Half(3), new Half(6.5));
                var v = ov.swizzle.rrabk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5.5), new Half(3), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.rraa;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(-0.5), new Half(5.5), new Half(-2.5));
                var v = ov.swizzle.rraar;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1.5), new Half(-9), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.rraag;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(-7), new Half(6), new Half(-9.5));
                var v = ov.swizzle.rraab;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(1.5), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.rraaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(8), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.rraak;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7.5), new Half(-3.5), new Half(8), new Half(1.5));
                var v = ov.swizzle.rrak;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(9.5), new Half(6.5), new Half(-7));
                var v = ov.swizzle.rrakr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), new Half(2.5), new Half(4.5), new Half(-4));
                var v = ov.swizzle.rrakg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), new Half(6), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.rrakb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2.5), new Half(-6.5), new Half(-6.5), new Half(7));
                var v = ov.swizzle.rraka;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(-9.5), new Half(-3), new Half(5));
                var v = ov.swizzle.rrakk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.One, new Half(6), new Half(3), new Half(-2));
                var v = ov.swizzle.rrk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2), new Half(9), new Half(2), new Half(-1.5));
                var v = ov.swizzle.rrkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(-9.5), new Half(0.5), new Half(-3.5));
                var v = ov.swizzle.rrkrr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5), new Half(6.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.rrkrg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7.5), new Half(-6), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.rrkrb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(8.5), new Half(2), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.rrkra;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3.5), new Half(-3.5), new Half(1.5), new Half(7));
                var v = ov.swizzle.rrkrk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2.5), new Half(-0.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.rrkg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6.5), new Half(3), new Half(4), Half.One);
                var v = ov.swizzle.rrkgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(2.5), new Half(7.5), new Half(-4));
                var v = ov.swizzle.rrkgg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(8), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.rrkgb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3.5), new Half(-4), new Half(-9), new Half(-0.5));
                var v = ov.swizzle.rrkga;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9.5), new Half(8), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.rrkgk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9.5), new Half(-0.5), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.rrkb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(-4), Half.Zero, Half.Zero);
                var v = ov.swizzle.rrkbr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(-1), new Half(1.5), new Half(-5.5));
                var v = ov.swizzle.rrkbg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(5), new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.rrkbb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7), new Half(4), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.rrkba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(9), new Half(4.5), new Half(5));
                var v = ov.swizzle.rrkbk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4), new Half(-6.5), new Half(-4), new Half(9.5));
                var v = ov.swizzle.rrka;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(9), new Half(2), new Half(5));
                var v = ov.swizzle.rrkar;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(8), new Half(-8.5), new Half(-5));
                var v = ov.swizzle.rrkag;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(-6.5), new Half(5.5), new Half(-9));
                var v = ov.swizzle.rrkab;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-8.5), Half.Zero, new Half(9.5));
                var v = ov.swizzle.rrkaa;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-5), new Half(-7), new Half(3), new Half(-0.5));
                var v = ov.swizzle.rrkak;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(-9), new Half(5.5), new Half(8));
                var v = ov.swizzle.rrkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5.5), new Half(6.5), new Half(2.5), new Half(2));
                var v = ov.swizzle.rrkkr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(3), new Half(-7.5), new Half(2.5));
                var v = ov.swizzle.rrkkg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(-5.5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.rrkkb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(-5), new Half(-5), new Half(7));
                var v = ov.swizzle.rrkka;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-6.5), new Half(-5), new Half(-4));
                var v = ov.swizzle.rrkkk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(5), new Half(-4), new Half(-1));
                var v = ov.swizzle.rg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5), new Half(-4), new Half(-2), new Half(-4.5));
                var v = ov.swizzle.rgr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9), new Half(0.5), new Half(2.5), new Half(1.5));
                var v = ov.swizzle.rgrr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(9.5), new Half(7), new Half(2));
                var v = ov.swizzle.rgrrr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(1.5), new Half(-9), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.rgrrg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(1.5), new Half(3), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.rgrrb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3), new Half(-7.5), new Half(-8), new Half(7.5));
                var v = ov.swizzle.rgrra;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(0.5), new Half(0.5), new Half(-1), new Half(-3));
                var v = ov.swizzle.rgrrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(-2), new Half(-3), new Half(7.5));
                var v = ov.swizzle.rgrg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(9.5), new Half(-6.5), new Half(-5.5), new Half(5));
                var v = ov.swizzle.rgrgr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3.5), new Half(-5), new Half(-2), new Half(8.5));
                var v = ov.swizzle.rgrgg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), new Half(-4), new Half(-5), new Half(6));
                var v = ov.swizzle.rgrgb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(-3.5), Half.One, new Half(-0.5));
                var v = ov.swizzle.rgrga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6.5), new Half(-3), new Half(5.5), new Half(9));
                var v = ov.swizzle.rgrgk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-0.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.rgrb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(6), new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.rgrbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8), new Half(-9.5), new Half(-7.5), new Half(2));
                var v = ov.swizzle.rgrbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(-1), new Half(-9.5), new Half(-6.5));
                var v = ov.swizzle.rgrbb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7), new Half(-6), new Half(4), new Half(-6.5));
                var v = ov.swizzle.rgrba;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(-1), new Half(-5.5), new Half(6.5));
                var v = ov.swizzle.rgrbk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), new Half(-2.5), new Half(-4), new Half(4.5));
                var v = ov.swizzle.rgra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4), new Half(-9.5), new Half(0.5), new Half(-7));
                var v = ov.swizzle.rgrar;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-9), new Half(-2.5), Half.One);
                var v = ov.swizzle.rgrag;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(3), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.rgrab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(2.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.rgraa;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5.5), new Half(-4.5), new Half(-2), new Half(9));
                var v = ov.swizzle.rgrak;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), new Half(-6.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.rgrk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7.5), new Half(6), new Half(-2.5), new Half(2.5));
                var v = ov.swizzle.rgrkr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7), new Half(-9.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.rgrkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7.5), new Half(-1.5), new Half(2), new Half(3));
                var v = ov.swizzle.rgrkb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(-2), new Half(8.5), new Half(3.5));
                var v = ov.swizzle.rgrka;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(-5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.rgrkk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9.5), new Half(7), new Half(-8.5), new Half(5));
                var v = ov.swizzle.rgg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(-8.5), new Half(-6), new Half(-6.5));
                var v = ov.swizzle.rggr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5.5), new Half(-6), new Half(6), new Half(-2.5));
                var v = ov.swizzle.rggrr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6), new Half(-0.5), new Half(-4.5), new Half(2));
                var v = ov.swizzle.rggrg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6.5), new Half(-7.5), new Half(7), new Half(-0.5));
                var v = ov.swizzle.rggrb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(-5.5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.rggra;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(8), new Half(-2.5), new Half(7));
                var v = ov.swizzle.rggrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(8.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.rggg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-2), new Half(-9.5), new Half(5));
                var v = ov.swizzle.rgggr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(5), new Half(-1), new Half(6));
                var v = ov.swizzle.rgggg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(0.5), new Half(4.5), new Half(3));
                var v = ov.swizzle.rgggb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7.5), Half.Zero, new Half(2.5), new Half(9.5));
                var v = ov.swizzle.rggga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(-6), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.rgggk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6), new Half(-0.5), new Half(8.5), new Half(7));
                var v = ov.swizzle.rggb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7), new Half(2.5), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.rggbr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5.5), new Half(2), new Half(2), new Half(3.5));
                var v = ov.swizzle.rggbg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(0.5), new Half(-4), new Half(8.5), Half.Zero);
                var v = ov.swizzle.rggbb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-4), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.rggba;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8), new Half(6), new Half(8.5), new Half(9));
                var v = ov.swizzle.rggbk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, new Half(-9.5), new Half(-8.5), new Half(-4));
                var v = ov.swizzle.rgga;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(6), new Half(3), new Half(-0.5));
                var v = ov.swizzle.rggar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), new Half(4), new Half(6), new Half(-6.5));
                var v = ov.swizzle.rggag;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5.5), new Half(7.5), new Half(8.5), new Half(-6.5));
                var v = ov.swizzle.rggab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.Zero, new Half(-8), new Half(2.5), new Half(-9));
                var v = ov.swizzle.rggaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(5), new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.rggak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(3.5), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.rggk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(-7.5), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.rggkr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5.5), new Half(9), new Half(9), new Half(-3.5));
                var v = ov.swizzle.rggkg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(6), Half.Zero, new Half(-3));
                var v = ov.swizzle.rggkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1), new Half(7), new Half(-6), new Half(9));
                var v = ov.swizzle.rggka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7.5), new Half(-2.5), new Half(2), new Half(9.5));
                var v = ov.swizzle.rggkk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4.5), new Half(-3.5), new Half(-8), new Half(-8.5));
                var v = ov.swizzle.rgb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(0.5), new Half(-8.5), new Half(2));
                var v = ov.swizzle.rgbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3), new Half(9), new Half(-3.5), new Half(6));
                var v = ov.swizzle.rgbrr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(0.5), new Half(8), new Half(6), new Half(-1));
                var v = ov.swizzle.rgbrg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5.5), new Half(5), new Half(8), new Half(9.5));
                var v = ov.swizzle.rgbrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3.5), new Half(-8), new Half(5), new Half(-5.5));
                var v = ov.swizzle.rgbra;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(-9.5), new Half(-0.5), new Half(5.5));
                var v = ov.swizzle.rgbrk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8.5), new Half(2.5), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.rgbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(-3.5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.rgbgr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-7.5), new Half(9), new Half(4.5));
                var v = ov.swizzle.rgbgg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4), new Half(-8.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.rgbgb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), new Half(-7), new Half(-9), new Half(-6.5));
                var v = ov.swizzle.rgbga;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(-4.5), new Half(6.5), new Half(4));
                var v = ov.swizzle.rgbgk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3.5), new Half(-9.5), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.rgbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-9.5), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.rgbbr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9), new Half(7), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.rgbbg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(8), new Half(-2), new Half(-4));
                var v = ov.swizzle.rgbbb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-1.5), new Half(3.5), new Half(-2));
                var v = ov.swizzle.rgbba;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8.5), new Half(-4), new Half(4), new Half(3.5));
                var v = ov.swizzle.rgbbk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6.5), new Half(-0.5), new Half(2.5), new Half(-3.5));
                var v = ov.swizzle.rgba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-8.5), new Half(1.5), new Half(-4.5), new Half(-6));
                var v = ov.swizzle.rgbar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4.5), new Half(-2.5), new Half(9), new Half(-5));
                var v = ov.swizzle.rgbag;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-9.5), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.rgbab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2.5), new Half(-4), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.rgbaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4), new Half(-2.5), new Half(-9), new Half(2.5));
                var v = ov.swizzle.rgbak;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-5), Half.Zero, new Half(3.5));
                var v = ov.swizzle.rgbk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(-6), new Half(-1), new Half(5));
                var v = ov.swizzle.rgbkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9.5), new Half(-6.5), new Half(5.5), Half.Zero);
                var v = ov.swizzle.rgbkg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(8), new Half(-9), new Half(-8), new Half(8.5));
                var v = ov.swizzle.rgbkb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-9.5), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.rgbka;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6.5), new Half(5), new Half(-2), new Half(7.5));
                var v = ov.swizzle.rgbkk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(-3), new Half(2.5), new Half(-9));
                var v = ov.swizzle.rga;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-3.5), new Half(-6), new Half(0.5));
                var v = ov.swizzle.rgar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(8), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.rgarr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9), new Half(-8), new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.rgarg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3.5), new Half(8), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.rgarb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(7.5), new Half(-6), new Half(8.5));
                var v = ov.swizzle.rgara;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(3), new Half(-3), new Half(0.5));
                var v = ov.swizzle.rgark;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7), new Half(1.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.rgag;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(3), new Half(-1.5), new Half(5));
                var v = ov.swizzle.rgagr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2.5), new Half(3.5), new Half(4), new Half(7.5));
                var v = ov.swizzle.rgagg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5), new Half(-5.5), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.rgagb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), new Half(2.5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.rgaga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-1), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.rgagk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(5.5), new Half(7.5), new Half(1.5));
                var v = ov.swizzle.rgab;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-8), Half.One, new Half(9), new Half(-9));
                var v = ov.swizzle.rgabr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(-8.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.rgabg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2), new Half(3.5), new Half(-8), new Half(-3));
                var v = ov.swizzle.rgabb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(-6.5), new Half(6.5), Half.One);
                var v = ov.swizzle.rgaba;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5), new Half(-8.5), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.rgabk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(-3.5), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.rgaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(6.5), new Half(-4), new Half(-8));
                var v = ov.swizzle.rgaar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3), new Half(-4), Half.One, new Half(-8));
                var v = ov.swizzle.rgaag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3), new Half(-8), new Half(1.5), new Half(-8.5));
                var v = ov.swizzle.rgaab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(2.5), new Half(4), new Half(3.5));
                var v = ov.swizzle.rgaaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9), new Half(9.5), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.rgaak;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7.5), new Half(9), new Half(-9), new Half(-0.5));
                var v = ov.swizzle.rgak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(-8.5), new Half(-1.5), new Half(-6));
                var v = ov.swizzle.rgakr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), new Half(-9.5), Half.Zero, new Half(5));
                var v = ov.swizzle.rgakg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6), new Half(-7.5), new Half(-8), new Half(6.5));
                var v = ov.swizzle.rgakb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7.5), new Half(-0.5), new Half(-1), new Half(-8));
                var v = ov.swizzle.rgaka;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(-8.5), new Half(6), new Half(7.5));
                var v = ov.swizzle.rgakk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), Half.Zero, new Half(-9), new Half(-3));
                var v = ov.swizzle.rgk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(5.5), new Half(-3), new Half(0.5));
                var v = ov.swizzle.rgkr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6.5), new Half(-0.5), new Half(-6), new Half(-6));
                var v = ov.swizzle.rgkrr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(2.5), new Half(9.5), Half.Zero);
                var v = ov.swizzle.rgkrg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(-8.5), new Half(9.5), Half.One);
                var v = ov.swizzle.rgkrb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(8.5), Half.Zero, new Half(-3.5));
                var v = ov.swizzle.rgkra;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(-5), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.rgkrk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5), Half.Zero, new Half(-2.5), new Half(4.5));
                var v = ov.swizzle.rgkg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(9), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.rgkgr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7), new Half(-4), new Half(5.5), new Half(-7.5));
                var v = ov.swizzle.rgkgg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), new Half(-7.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.rgkgb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), Half.One, new Half(-8), new Half(5));
                var v = ov.swizzle.rgkga;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(4.5), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.rgkgk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(8.5), new Half(-6.5), new Half(7));
                var v = ov.swizzle.rgkb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(4), new Half(4), Half.One);
                var v = ov.swizzle.rgkbr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2.5), new Half(2.5), new Half(-1), new Half(0.5));
                var v = ov.swizzle.rgkbg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(2), new Half(-9), new Half(2.5));
                var v = ov.swizzle.rgkbb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4.5), new Half(9), new Half(5), new Half(5));
                var v = ov.swizzle.rgkba;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(-7.5), new Half(-8.5), new Half(1.5));
                var v = ov.swizzle.rgkbk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2.5), new Half(-5.5), new Half(8), new Half(5.5));
                var v = ov.swizzle.rgka;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9), new Half(1.5), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.rgkar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(-8), new Half(3), new Half(4.5));
                var v = ov.swizzle.rgkag;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(0.5), new Half(-2.5), new Half(6));
                var v = ov.swizzle.rgkab;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(-5), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.rgkaa;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(3.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.rgkak;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3.5), new Half(-5.5), new Half(-3), new Half(7.5));
                var v = ov.swizzle.rgkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2), new Half(-5.5), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.rgkkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2), new Half(-5), new Half(-9), new Half(6));
                var v = ov.swizzle.rgkkg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7), new Half(5), new Half(-1), new Half(5));
                var v = ov.swizzle.rgkkb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7.5), new Half(5.5), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.rgkka;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2), new Half(1.5), new Half(-2), new Half(7.5));
                var v = ov.swizzle.rgkkk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7), new Half(-4), new Half(-2), new Half(1.5));
                var v = ov.swizzle.rb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(4), new Half(5), new Half(0.5));
                var v = ov.swizzle.rbr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9.5), new Half(-5), new Half(9.5), new Half(-7));
                var v = ov.swizzle.rbrr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(6.5), new Half(-3.5), new Half(3.5));
                var v = ov.swizzle.rbrrr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3.5), new Half(-7.5), new Half(-1), new Half(9));
                var v = ov.swizzle.rbrrg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(1.5), new Half(9), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.rbrrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2), new Half(-2), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.rbrra;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), new Half(3), new Half(-1.5), new Half(6));
                var v = ov.swizzle.rbrrk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(9.5), new Half(-9.5), new Half(8));
                var v = ov.swizzle.rbrg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(5.5), new Half(7.5), new Half(-5));
                var v = ov.swizzle.rbrgr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6), new Half(4), new Half(-9), new Half(-6));
                var v = ov.swizzle.rbrgg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4.5), new Half(3), Half.One, new Half(4));
                var v = ov.swizzle.rbrgb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-4), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.rbrga;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2.5), new Half(7.5), new Half(-5), new Half(4));
                var v = ov.swizzle.rbrgk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3), new Half(8), new Half(-9), new Half(-0.5));
                var v = ov.swizzle.rbrb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), Half.One, new Half(2), new Half(2));
                var v = ov.swizzle.rbrbr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5.5), new Half(-2), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.rbrbg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(3.5), new Half(2), new Half(-3));
                var v = ov.swizzle.rbrbb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(2), new Half(-6.5), new Half(8.5));
                var v = ov.swizzle.rbrba;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(-9), new Half(-7.5), new Half(-5.5));
                var v = ov.swizzle.rbrbk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1), new Half(-9.5), new Half(2.5), new Half(5.5));
                var v = ov.swizzle.rbra;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6), new Half(-4.5), new Half(-0.5), new Half(5));
                var v = ov.swizzle.rbrar;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), Half.One, new Half(9.5), new Half(-4.5));
                var v = ov.swizzle.rbrag;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6), new Half(8.5), new Half(1.5), new Half(-7.5));
                var v = ov.swizzle.rbrab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), new Half(4.5), new Half(2), new Half(-3.5));
                var v = ov.swizzle.rbraa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-1), new Half(-4.5), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.rbrak;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4), new Half(-9.5), new Half(-8), new Half(-7.5));
                var v = ov.swizzle.rbrk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(-9), new Half(-8.5), new Half(6));
                var v = ov.swizzle.rbrkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(3), new Half(6.5), new Half(4.5));
                var v = ov.swizzle.rbrkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6.5), new Half(2), new Half(7.5), new Half(-5.5));
                var v = ov.swizzle.rbrkb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(-2.5), new Half(9.5), new Half(5));
                var v = ov.swizzle.rbrka;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(-8), new Half(6), Half.Zero);
                var v = ov.swizzle.rbrkk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(4), new Half(-7), new Half(3.5));
                var v = ov.swizzle.rbg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3), new Half(-6.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.rbgr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6.5), new Half(-8), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.rbgrr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-0.5), new Half(8.5), new Half(8), Half.Zero);
                var v = ov.swizzle.rbgrg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7), new Half(-2.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.rbgrb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(-9.5), new Half(-3), new Half(5.5));
                var v = ov.swizzle.rbgra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6.5), new Half(-3), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.rbgrk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), new Half(-3.5), new Half(2), new Half(1.5));
                var v = ov.swizzle.rbgg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), Half.Zero, new Half(-4.5), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.rbggr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), Half.One, new Half(-2.5), new Half(9));
                var v = ov.swizzle.rbggg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7), new Half(9), new Half(5), new Half(-0.5));
                var v = ov.swizzle.rbggb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4.5), new Half(7), new Half(5), new Half(-7.5));
                var v = ov.swizzle.rbgga;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(-1), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.rbggk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(7.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.rbgb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2), new Half(5.5), new Half(-8), new Half(-1.5));
                var v = ov.swizzle.rbgbr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7.5), new Half(6), new Half(-3), new Half(8));
                var v = ov.swizzle.rbgbg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4.5), new Half(3.5), new Half(2), new Half(8.5));
                var v = ov.swizzle.rbgbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), new Half(7), new Half(0.5), new Half(0.5));
                var v = ov.swizzle.rbgba;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(-8.5), new Half(-8.5), new Half(-4));
                var v = ov.swizzle.rbgbk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(0.5), new Half(4), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.rbga;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4.5), new Half(-1), Half.One, new Half(2.5));
                var v = ov.swizzle.rbgar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(2.5), new Half(-7), new Half(-8));
                var v = ov.swizzle.rbgag;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), new Half(4.5), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.rbgab;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9.5), new Half(7), new Half(-6.5), new Half(7));
                var v = ov.swizzle.rbgaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(6), Half.Zero, new Half(1.5));
                var v = ov.swizzle.rbgak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(-5), new Half(3), new Half(8));
                var v = ov.swizzle.rbgk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(8), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.rbgkr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(2.5), new Half(-1), new Half(4));
                var v = ov.swizzle.rbgkg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(0.5), new Half(-3), new Half(8));
                var v = ov.swizzle.rbgkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6), new Half(-5.5), new Half(-0.5), new Half(-7.5));
                var v = ov.swizzle.rbgka;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(-8.5), new Half(0.5), new Half(6));
                var v = ov.swizzle.rbgkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(9), new Half(9), new Half(-5.5));
                var v = ov.swizzle.rbb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6), new Half(-1.5), new Half(8), new Half(7.5));
                var v = ov.swizzle.rbbr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9), new Half(3), new Half(8), new Half(-2.5));
                var v = ov.swizzle.rbbrr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6), new Half(7.5), new Half(-8), new Half(-4));
                var v = ov.swizzle.rbbrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(4.5), new Half(2.5), new Half(-4.5));
                var v = ov.swizzle.rbbrb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(-4.5), new Half(-8.5), new Half(-1.5));
                var v = ov.swizzle.rbbra;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(-8), new Half(-4.5), new Half(-3.5));
                var v = ov.swizzle.rbbrk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3), new Half(-7.5), new Half(-2.5), new Half(2.5));
                var v = ov.swizzle.rbbg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-7.5), new Half(-5), new Half(5));
                var v = ov.swizzle.rbbgr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(-5), Half.One, new Half(4));
                var v = ov.swizzle.rbbgg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(3), new Half(-7), new Half(-3.5));
                var v = ov.swizzle.rbbgb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5.5), new Half(-8), new Half(-5.5), new Half(1.5));
                var v = ov.swizzle.rbbga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(7), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.rbbgk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(-8), new Half(-6.5), Half.Zero);
                var v = ov.swizzle.rbbb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4.5), new Half(-1), new Half(-4.5), new Half(-3.5));
                var v = ov.swizzle.rbbbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-9.5), new Half(-3.5), new Half(8.5));
                var v = ov.swizzle.rbbbg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(-5.5), new Half(-6), new Half(-5));
                var v = ov.swizzle.rbbbb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), Half.One, new Half(8.5), new Half(9));
                var v = ov.swizzle.rbbba;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(7.5), new Half(5.5), new Half(-9));
                var v = ov.swizzle.rbbbk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9.5), Half.One, new Half(-6), Half.Zero);
                var v = ov.swizzle.rbba;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(2.5), Half.One, new Half(1.5));
                var v = ov.swizzle.rbbar;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(-8), new Half(0.5), new Half(-3));
                var v = ov.swizzle.rbbag;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3), new Half(2.5), new Half(-3.5), new Half(-2));
                var v = ov.swizzle.rbbab;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7.5), new Half(1.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.rbbaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(9.5), new Half(-9), new Half(-4), new Half(7.5));
                var v = ov.swizzle.rbbak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2.5), new Half(-6), new Half(6), new Half(-8.5));
                var v = ov.swizzle.rbbk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(4), new Half(-3.5), new Half(-2));
                var v = ov.swizzle.rbbkr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(-7.5), new Half(-4.5), new Half(-3.5));
                var v = ov.swizzle.rbbkg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(-1), new Half(-4.5), new Half(8.5));
                var v = ov.swizzle.rbbkb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(-2), new Half(-5.5), new Half(-2.5));
                var v = ov.swizzle.rbbka;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(6.5), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.rbbkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(-9), new Half(3), new Half(3));
                var v = ov.swizzle.rba;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(-2), new Half(9), new Half(9.5));
                var v = ov.swizzle.rbar;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9.5), new Half(6), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.rbarr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-6), new Half(6), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.rbarg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(3.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.rbarb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6), new Half(1.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.rbara;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), new Half(-4), new Half(7.5), new Half(-5.5));
                var v = ov.swizzle.rbark;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2), new Half(-8), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.rbag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4), Half.Zero, new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.rbagr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3.5), new Half(6.5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.rbagg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-7), new Half(6), new Half(1.5));
                var v = ov.swizzle.rbagb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(3), new Half(5), new Half(8));
                var v = ov.swizzle.rbaga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(2.5), new Half(6.5), new Half(3.5));
                var v = ov.swizzle.rbagk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4.5), new Half(8), new Half(0.5), new Half(-7));
                var v = ov.swizzle.rbab;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7.5), new Half(-4.5), new Half(4.5), new Half(-9.5));
                var v = ov.swizzle.rbabr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1.5), new Half(7), new Half(-4.5), new Half(7.5));
                var v = ov.swizzle.rbabg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), new Half(3.5), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.rbabb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(0.5), new Half(7), new Half(6), new Half(-3.5));
                var v = ov.swizzle.rbaba;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7), new Half(-2), new Half(-3), new Half(9.5));
                var v = ov.swizzle.rbabk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(4), new Half(2.5), new Half(-0.5));
                var v = ov.swizzle.rbaa;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(5), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.rbaar;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(-6.5), new Half(-3.5), new Half(8.5));
                var v = ov.swizzle.rbaag;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-9), new Half(7), Half.Zero);
                var v = ov.swizzle.rbaab;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(9.5), new Half(-5), new Half(-1.5));
                var v = ov.swizzle.rbaaa;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), Half.One, new Half(4), new Half(-0.5));
                var v = ov.swizzle.rbaak;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(-3), new Half(4.5), new Half(-5.5));
                var v = ov.swizzle.rbak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(-5), new Half(5.5), new Half(-6.5));
                var v = ov.swizzle.rbakr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(-2), new Half(5.5), new Half(-3.5));
                var v = ov.swizzle.rbakg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7), new Half(-8.5), new Half(7), new Half(-6));
                var v = ov.swizzle.rbakb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), new Half(3), new Half(-2), new Half(3.5));
                var v = ov.swizzle.rbaka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3), new Half(0.5), new Half(3), new Half(-9));
                var v = ov.swizzle.rbakk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6), Half.Zero, new Half(2.5), new Half(-6));
                var v = ov.swizzle.rbk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(-1.5), new Half(2), new Half(-9));
                var v = ov.swizzle.rbkr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9.5), new Half(-5.5), new Half(-4.5), new Half(9));
                var v = ov.swizzle.rbkrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(3), new Half(-1.5), new Half(8.5));
                var v = ov.swizzle.rbkrg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(4.5), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.rbkrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), Half.Zero, Half.One, Half.Zero);
                var v = ov.swizzle.rbkra;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3.5), new Half(-1), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.rbkrk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), new Half(-9.5), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.rbkg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-8), new Half(-0.5), new Half(-1.5));
                var v = ov.swizzle.rbkgr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-9), Half.One, Half.Zero);
                var v = ov.swizzle.rbkgg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8), Half.One, new Half(5), new Half(-6));
                var v = ov.swizzle.rbkgb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7.5), new Half(-2), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.rbkga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(-3.5), new Half(2), new Half(-1));
                var v = ov.swizzle.rbkgk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-1.5), new Half(7), new Half(7.5), new Half(5.5));
                var v = ov.swizzle.rbkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7.5), new Half(-5.5), new Half(-2), new Half(-1));
                var v = ov.swizzle.rbkbr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(4), Half.Zero, new Half(3));
                var v = ov.swizzle.rbkbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.One, new Half(8.5), Half.Zero, new Half(-9));
                var v = ov.swizzle.rbkbb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(5), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.rbkba;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), Half.Zero, new Half(4), new Half(7.5), new Half(-2.5));
                var v = ov.swizzle.rbkbk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2.5), new Half(-6), new Half(-8), new Half(4.5));
                var v = ov.swizzle.rbka;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6.5), new Half(-8.5), new Half(6), new Half(-8.5));
                var v = ov.swizzle.rbkar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(-0.5), new Half(4.5), new Half(2.5));
                var v = ov.swizzle.rbkag;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-1), new Half(-2), new Half(4.5));
                var v = ov.swizzle.rbkab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2), new Half(-3.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.rbkaa;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7.5), new Half(8), new Half(9), new Half(2));
                var v = ov.swizzle.rbkak;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(-2.5), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.rbkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2), new Half(-3.5), new Half(6), new Half(-9));
                var v = ov.swizzle.rbkkr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), new Half(2.5), new Half(-9), new Half(-9));
                var v = ov.swizzle.rbkkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(-2), new Half(7), new Half(7));
                var v = ov.swizzle.rbkkb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-0.5), new Half(3.5), new Half(3), Half.Zero);
                var v = ov.swizzle.rbkka;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(2.5), new Half(5), new Half(2.5));
                var v = ov.swizzle.rbkkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(-2), new Half(3), new Half(2));
                var v = ov.swizzle.ra;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(4), new Half(9), Half.Zero);
                var v = ov.swizzle.rar;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(0.5), new Half(4), new Half(2.5), new Half(2));
                var v = ov.swizzle.rarr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(6), new Half(4), new Half(8.5));
                var v = ov.swizzle.rarrr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1), Half.Zero, new Half(2), new Half(-3.5));
                var v = ov.swizzle.rarrg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), new Half(-5.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.rarrb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(-8.5), new Half(-4), new Half(-7));
                var v = ov.swizzle.rarra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-0.5), new Half(-6), new Half(6.5));
                var v = ov.swizzle.rarrk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(2), new Half(6), new Half(1.5));
                var v = ov.swizzle.rarg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-5.5), Half.One, Half.Zero, new Half(4.5));
                var v = ov.swizzle.rargr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9.5), new Half(-2.5), new Half(7), new Half(3.5));
                var v = ov.swizzle.rargg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(9), new Half(-7), new Half(-4));
                var v = ov.swizzle.rargb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), new Half(-8.5), new Half(8), new Half(-6));
                var v = ov.swizzle.rarga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(1.5), new Half(-5), new Half(9.5));
                var v = ov.swizzle.rargk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8.5), new Half(0.5), new Half(8), new Half(-7.5));
                var v = ov.swizzle.rarb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(8), new Half(3.5), new Half(-1), Half.Zero);
                var v = ov.swizzle.rarbr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7.5), new Half(-6.5), new Half(-0.5), new Half(-2.5));
                var v = ov.swizzle.rarbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6.5), new Half(-4), new Half(-9.5), new Half(-3.5));
                var v = ov.swizzle.rarbb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.Zero, new Half(-2), new Half(2), new Half(6.5));
                var v = ov.swizzle.rarba;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7), new Half(3.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.rarbk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), new Half(-3.5), Half.One, new Half(7.5));
                var v = ov.swizzle.rara;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9), new Half(-8), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.rarar;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(8.5), new Half(-7), new Half(9));
                var v = ov.swizzle.rarag;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(1.5), new Half(-8.5), new Half(1.5));
                var v = ov.swizzle.rarab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5.5), new Half(-1), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.raraa;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(-1.5), new Half(-2), new Half(-9));
                var v = ov.swizzle.rarak;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(2), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.rark;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5.5), new Half(-8.5), new Half(1.5), new Half(4.5));
                var v = ov.swizzle.rarkr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-1.5), new Half(-1.5), new Half(3));
                var v = ov.swizzle.rarkg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.One, new Half(5.5), new Half(2.5), new Half(-9.5));
                var v = ov.swizzle.rarkb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4.5), new Half(-2), Half.Zero, Half.One);
                var v = ov.swizzle.rarka;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(7.5), new Half(-8), Half.Zero);
                var v = ov.swizzle.rarkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(6), new Half(6), new Half(7));
                var v = ov.swizzle.rag;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(-2), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.ragr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9), Half.Zero, new Half(-2.5), new Half(-6));
                var v = ov.swizzle.ragrr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7), new Half(-6.5), new Half(-3.5), new Half(2));
                var v = ov.swizzle.ragrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(5.5), new Half(2.5), new Half(7));
                var v = ov.swizzle.ragrb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), new Half(2), new Half(-4.5), new Half(2));
                var v = ov.swizzle.ragra;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(2), new Half(1.5), new Half(-1));
                var v = ov.swizzle.ragrk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(-8.5), new Half(-9.5), new Half(5.5));
                var v = ov.swizzle.ragg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(0.5), new Half(2), new Half(4.5), new Half(8.5));
                var v = ov.swizzle.raggr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4.5), new Half(-4.5), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.raggg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8.5), new Half(-1), new Half(-5), new Half(5));
                var v = ov.swizzle.raggb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4.5), new Half(-4), new Half(9.5), new Half(9));
                var v = ov.swizzle.ragga;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(-2.5), new Half(-0.5), new Half(8));
                var v = ov.swizzle.raggk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(8), new Half(-6), new Half(-8.5));
                var v = ov.swizzle.ragb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3.5), new Half(3), new Half(0.5), new Half(-4));
                var v = ov.swizzle.ragbr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3), Half.Zero, new Half(3.5), new Half(5));
                var v = ov.swizzle.ragbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8), new Half(-8), Half.Zero, new Half(0.5));
                var v = ov.swizzle.ragbb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1.5), new Half(-2.5), new Half(-4.5), new Half(2));
                var v = ov.swizzle.ragba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4.5), new Half(-7.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.ragbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-3), new Half(-3.5), new Half(-7));
                var v = ov.swizzle.raga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6), new Half(8), new Half(3), new Half(5));
                var v = ov.swizzle.ragar;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5.5), new Half(-8.5), Half.One, Half.One);
                var v = ov.swizzle.ragag;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(-8.5), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.ragab;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-3.5), new Half(9.5), new Half(-8));
                var v = ov.swizzle.ragaa;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9.5), new Half(-5.5), new Half(-3), new Half(-2));
                var v = ov.swizzle.ragak;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(2.5), new Half(8.5), new Half(-4));
                var v = ov.swizzle.ragk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(-5), new Half(-7), new Half(-2));
                var v = ov.swizzle.ragkr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(-4), new Half(4.5), new Half(2));
                var v = ov.swizzle.ragkg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(-4.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.ragkb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(-0.5), new Half(-5), new Half(5));
                var v = ov.swizzle.ragka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(-3), new Half(7), new Half(-7.5));
                var v = ov.swizzle.ragkk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(5.5), new Half(1.5), new Half(-2));
                var v = ov.swizzle.rab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(-7.5), new Half(-1.5), Half.One);
                var v = ov.swizzle.rabr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(3), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.rabrr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(1.5), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.rabrg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), Half.Zero, new Half(6), new Half(-1.5));
                var v = ov.swizzle.rabrb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(-8), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.rabra;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2.5), new Half(6), new Half(5.5), new Half(8.5));
                var v = ov.swizzle.rabrk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(-7.5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.rabg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(7.5), new Half(-7.5), new Half(-1));
                var v = ov.swizzle.rabgr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(7), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.rabgg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3.5), new Half(-6), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.rabgb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-0.5), new Half(3), new Half(-7.5));
                var v = ov.swizzle.rabga;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4.5), new Half(-0.5), new Half(3), new Half(-9));
                var v = ov.swizzle.rabgk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2), new Half(8), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.rabb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), new Half(8), new Half(-8), new Half(0.5));
                var v = ov.swizzle.rabbr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(-9), new Half(5.5), new Half(-4));
                var v = ov.swizzle.rabbg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7), Half.One, new Half(4), new Half(5.5));
                var v = ov.swizzle.rabbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(-7.5), Half.One, new Half(-9));
                var v = ov.swizzle.rabba;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-8), Half.One, new Half(-2));
                var v = ov.swizzle.rabbk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(4.5), new Half(2), new Half(2));
                var v = ov.swizzle.raba;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(-5.5), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.rabar;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7), new Half(8.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.rabag;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2), new Half(4.5), new Half(0.5), new Half(2.5));
                var v = ov.swizzle.rabab;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(-5.5), new Half(7), new Half(-7.5));
                var v = ov.swizzle.rabaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(7), new Half(4), new Half(-9.5));
                var v = ov.swizzle.rabak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7.5), new Half(6), new Half(5), new Half(-5.5));
                var v = ov.swizzle.rabk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3), new Half(-7), new Half(3.5), new Half(2));
                var v = ov.swizzle.rabkr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5.5), new Half(-9), new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.rabkg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-2.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.rabkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(-1.5), new Half(8), new Half(-2));
                var v = ov.swizzle.rabka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2), new Half(-3.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.rabkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(-9), new Half(2), new Half(5));
                var v = ov.swizzle.raa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9), new Half(2.5), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.raar;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), Half.One, new Half(-2.5), new Half(5.5));
                var v = ov.swizzle.raarr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(3), new Half(-2.5), new Half(3));
                var v = ov.swizzle.raarg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4.5), new Half(7.5), new Half(7), new Half(-9));
                var v = ov.swizzle.raarb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9), new Half(8.5), new Half(3.5), Half.Zero);
                var v = ov.swizzle.raara;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(6.5), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.raark;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-7), new Half(-5), new Half(4));
                var v = ov.swizzle.raag;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8.5), new Half(-7), new Half(-3.5), new Half(-9));
                var v = ov.swizzle.raagr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), Half.Zero, new Half(-4), new Half(5.5));
                var v = ov.swizzle.raagg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(9.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.raagb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2.5), new Half(-2), new Half(-6.5), new Half(-6));
                var v = ov.swizzle.raaga;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-2), new Half(9.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.raagk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8.5), new Half(-3), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.raab;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(-0.5), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.raabr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(-2), new Half(-0.5), new Half(-3));
                var v = ov.swizzle.raabg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8), new Half(-5.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.raabb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(-9.5), new Half(6), new Half(-7));
                var v = ov.swizzle.raaba;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3.5), new Half(3.5), new Half(8.5), new Half(8.5));
                var v = ov.swizzle.raabk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7.5), new Half(5), new Half(6.5), new Half(-8));
                var v = ov.swizzle.raaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(-3.5), new Half(1.5), new Half(-5.5));
                var v = ov.swizzle.raaar;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-7), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.raaag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(-6.5), new Half(9), new Half(-5));
                var v = ov.swizzle.raaab;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), Half.One, new Half(-0.5), new Half(2));
                var v = ov.swizzle.raaaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9), new Half(6), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.raaak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(4.5), new Half(1.5), new Half(-5.5), new Half(6.5));
                var v = ov.swizzle.raak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(-5), new Half(-1), new Half(6));
                var v = ov.swizzle.raakr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6.5), new Half(2.5), new Half(-4), new Half(0.5));
                var v = ov.swizzle.raakg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(6.5), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.raakb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-6.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.raaka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8.5), new Half(-7), new Half(4.5), new Half(5.5));
                var v = ov.swizzle.raakk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8), new Half(-1.5), new Half(4.5), new Half(5));
                var v = ov.swizzle.rak;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1.5), new Half(3.5), new Half(-3.5), new Half(6.5));
                var v = ov.swizzle.rakr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), Half.One, new Half(-2), new Half(3), new Half(-1.5));
                var v = ov.swizzle.rakrr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6.5), new Half(-2.5), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.rakrg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(-8), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.rakrb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), new Half(6), new Half(-6.5), new Half(-1.5));
                var v = ov.swizzle.rakra;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), new Half(-9.5), new Half(-5), new Half(-8));
                var v = ov.swizzle.rakrk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(7.5), new Half(7), new Half(4.5));
                var v = ov.swizzle.rakg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7), new Half(-1), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.rakgr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8.5), new Half(-9), new Half(5.5), new Half(-3.5));
                var v = ov.swizzle.rakgg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-9), new Half(9.5), new Half(-5));
                var v = ov.swizzle.rakgb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(0.5), new Half(5), new Half(7.5));
                var v = ov.swizzle.rakga;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), new Half(-1), new Half(8.5), new Half(6.5));
                var v = ov.swizzle.rakgk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(6.5), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.rakb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8.5), new Half(-9.5), new Half(4), new Half(-5));
                var v = ov.swizzle.rakbr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(-3.5), new Half(5), new Half(-8.5));
                var v = ov.swizzle.rakbg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2.5), new Half(-1), new Half(6.5), new Half(-5));
                var v = ov.swizzle.rakbb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(-8.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.rakba;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4), new Half(2.5), new Half(-1), new Half(9));
                var v = ov.swizzle.rakbk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(-2), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.raka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), new Half(3.5), new Half(-5.5), new Half(6));
                var v = ov.swizzle.rakar;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), new Half(-5), new Half(-5.5), Half.One);
                var v = ov.swizzle.rakag;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(-4.5), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.rakab;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1), new Half(-5), new Half(-6.5), new Half(-1.5));
                var v = ov.swizzle.rakaa;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9.5), new Half(5.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.rakak;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(8), new Half(4.5), new Half(-7));
                var v = ov.swizzle.rakk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), new Half(0.5), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.rakkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8.5), new Half(-3.5), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.rakkg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.Zero, new Half(7.5), new Half(9.5), new Half(-7));
                var v = ov.swizzle.rakkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-9), new Half(6), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.rakka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6.5), new Half(-1.5), new Half(7), new Half(-5.5));
                var v = ov.swizzle.rakkk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-9.5), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.rk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(-9.5), new Half(6), new Half(-4.5));
                var v = ov.swizzle.rkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), Half.Zero, new Half(1.5), new Half(-9.5));
                var v = ov.swizzle.rkrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5.5), new Half(-4.5), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.rkrrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(6.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.rkrrg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9.5), new Half(-4.5), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.rkrrb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1), new Half(-6.5), Half.Zero, new Half(7));
                var v = ov.swizzle.rkrra;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(-2.5), new Half(8.5), new Half(2.5));
                var v = ov.swizzle.rkrrk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8.5), new Half(0.5), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.rkrg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), new Half(-6), new Half(3), new Half(-7.5));
                var v = ov.swizzle.rkrgr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(5), new Half(-4), new Half(-1.5));
                var v = ov.swizzle.rkrgg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(-6.5), new Half(6.5), new Half(4.5));
                var v = ov.swizzle.rkrgb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), Half.One, new Half(-8), new Half(1.5));
                var v = ov.swizzle.rkrga;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), Half.Zero, new Half(-5.5), new Half(-8));
                var v = ov.swizzle.rkrgk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), new Half(-3.5), new Half(1.5), new Half(2));
                var v = ov.swizzle.rkrb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), new Half(-7.5), new Half(-6), new Half(6.5));
                var v = ov.swizzle.rkrbr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5.5), new Half(-8.5), new Half(5.5), new Half(-4.5));
                var v = ov.swizzle.rkrbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5), new Half(8), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.rkrbb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5.5), new Half(1.5), new Half(3), new Half(-6.5));
                var v = ov.swizzle.rkrba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9), new Half(-2), new Half(-6.5), new Half(6.5));
                var v = ov.swizzle.rkrbk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9), new Half(1.5), new Half(-3.5), new Half(6));
                var v = ov.swizzle.rkra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1), new Half(-4), new Half(-1), new Half(-3));
                var v = ov.swizzle.rkrar;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(7), new Half(9.5), new Half(-7));
                var v = ov.swizzle.rkrag;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), new Half(5), new Half(2.5), new Half(5.5));
                var v = ov.swizzle.rkrab;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7.5), new Half(-1.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.rkraa;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6), new Half(-6.5), new Half(7), new Half(1.5));
                var v = ov.swizzle.rkrak;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(9.5), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.rkrk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(5.5), new Half(-0.5), new Half(-9));
                var v = ov.swizzle.rkrkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), new Half(8.5), new Half(8.5), new Half(-2));
                var v = ov.swizzle.rkrkg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(1.5), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.rkrkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3), new Half(-9.5), new Half(-2.5), new Half(-8));
                var v = ov.swizzle.rkrka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(1.5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.rkrkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(6), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.rkg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-0.5), new Half(-0.5), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.rkgr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(-7), new Half(-4), new Half(-1));
                var v = ov.swizzle.rkgrr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5.5), new Half(0.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.rkgrg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(6.5), new Half(8), new Half(-7));
                var v = ov.swizzle.rkgrb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-8.5), new Half(-2), Half.One, new Half(-3.5));
                var v = ov.swizzle.rkgra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(7.5), new Half(3), new Half(-8));
                var v = ov.swizzle.rkgrk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-9), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.rkgg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8.5), new Half(-1), new Half(7), new Half(7));
                var v = ov.swizzle.rkggr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(5.5), new Half(5), new Half(-7), new Half(0.5));
                var v = ov.swizzle.rkggg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), Half.One, new Half(-6), new Half(3.5));
                var v = ov.swizzle.rkggb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(7.5), new Half(2), new Half(2.5));
                var v = ov.swizzle.rkgga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7), new Half(-1.5), new Half(4.5), new Half(9));
                var v = ov.swizzle.rkggk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4), new Half(-4), new Half(6.5), new Half(-5));
                var v = ov.swizzle.rkgb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(5), new Half(8), new Half(-0.5), new Half(8));
                var v = ov.swizzle.rkgbr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4), new Half(-1.5), Half.One, new Half(3));
                var v = ov.swizzle.rkgbg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(5.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.rkgbb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9.5), new Half(-8.5), new Half(9), new Half(3.5));
                var v = ov.swizzle.rkgba;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(-6), new Half(-0.5), new Half(9));
                var v = ov.swizzle.rkgbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(-7), new Half(7.5), new Half(-8));
                var v = ov.swizzle.rkga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(9), Half.One, new Half(-1.5));
                var v = ov.swizzle.rkgar;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(1.5), new Half(-3), new Half(6), new Half(9.5));
                var v = ov.swizzle.rkgag;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3), new Half(6.5), new Half(8.5), new Half(4));
                var v = ov.swizzle.rkgab;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7.5), new Half(-7), new Half(-9), Half.One);
                var v = ov.swizzle.rkgaa;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6.5), new Half(3), new Half(2), new Half(-1));
                var v = ov.swizzle.rkgak;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-0.5), new Half(-9), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.rkgk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(0.5), new Half(-5.5), new Half(5.5));
                var v = ov.swizzle.rkgkr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(3.5), new Half(-7.5), new Half(9));
                var v = ov.swizzle.rkgkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(-4), new Half(-1), new Half(-3));
                var v = ov.swizzle.rkgkb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(-7), new Half(-4.5), new Half(3.5));
                var v = ov.swizzle.rkgka;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4.5), new Half(7.5), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.rkgkk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9), new Half(6), new Half(1.5), new Half(-5));
                var v = ov.swizzle.rkb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2), new Half(3.5), new Half(5.5), new Half(-6));
                var v = ov.swizzle.rkbr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3), new Half(-3), new Half(2), new Half(8.5));
                var v = ov.swizzle.rkbrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-0.5), new Half(4.5), new Half(9), new Half(-6.5));
                var v = ov.swizzle.rkbrg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(2.5), new Half(-0.5), new Half(9));
                var v = ov.swizzle.rkbrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(4.5), new Half(-3.5), new Half(6.5));
                var v = ov.swizzle.rkbra;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(3.5), new Half(6.5), new Half(-1));
                var v = ov.swizzle.rkbrk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8.5), Half.One, new Half(7), new Half(3.5));
                var v = ov.swizzle.rkbg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(-8), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.rkbgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-4), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.rkbgg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(9.5), new Half(-1.5), new Half(-4), new Half(-5.5));
                var v = ov.swizzle.rkbgb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2.5), new Half(-7), new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.rkbga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-8), new Half(7), new Half(9.5), new Half(-2.5));
                var v = ov.swizzle.rkbgk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(-7), new Half(2.5), new Half(-2));
                var v = ov.swizzle.rkbb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2.5), new Half(-3.5), new Half(-6), new Half(-8));
                var v = ov.swizzle.rkbbr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(6.5), new Half(9), new Half(-7.5));
                var v = ov.swizzle.rkbbg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8.5), new Half(8), Half.One, new Half(9));
                var v = ov.swizzle.rkbbb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.One, new Half(-9.5), new Half(-2), new Half(4.5));
                var v = ov.swizzle.rkbba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7.5), new Half(-9.5), new Half(-5), new Half(0.5));
                var v = ov.swizzle.rkbbk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3.5), new Half(-9), new Half(8), new Half(-6));
                var v = ov.swizzle.rkba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(-7.5), new Half(-4), new Half(-3));
                var v = ov.swizzle.rkbar;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(-2), new Half(5.5), new Half(-5));
                var v = ov.swizzle.rkbag;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(7), new Half(9.5), new Half(0.5));
                var v = ov.swizzle.rkbab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8), new Half(5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.rkbaa;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8.5), new Half(4), new Half(7.5), new Half(-3));
                var v = ov.swizzle.rkbak;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(-2), new Half(-3.5), new Half(-0.5));
                var v = ov.swizzle.rkbk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2), new Half(-1.5), new Half(4.5), new Half(-3));
                var v = ov.swizzle.rkbkr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7), new Half(4.5), new Half(-1.5), new Half(9));
                var v = ov.swizzle.rkbkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(-4.5), new Half(6.5), new Half(8));
                var v = ov.swizzle.rkbkb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(-8.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.rkbka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-9.5), new Half(-1.5), new Half(-2), new Half(-4));
                var v = ov.swizzle.rkbkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8.5), new Half(-5.5), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.rka;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), Half.One, new Half(-4.5), new Half(5), new Half(1.5));
                var v = ov.swizzle.rkar;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-3), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.rkarr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(-7), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.rkarg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(8), new Half(-1.5), new Half(3));
                var v = ov.swizzle.rkarb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4.5), new Half(-2.5), Half.One, new Half(-1));
                var v = ov.swizzle.rkara;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(-7), new Half(-9.5), new Half(3));
                var v = ov.swizzle.rkark;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(3.5), new Half(4), new Half(-7));
                var v = ov.swizzle.rkag;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-9), new Half(4), new Half(5.5));
                var v = ov.swizzle.rkagr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(4.5), new Half(3.5), new Half(7.5));
                var v = ov.swizzle.rkagg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3), new Half(7), new Half(1.5), Half.One);
                var v = ov.swizzle.rkagb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(5.5), new Half(7.5), new Half(9));
                var v = ov.swizzle.rkaga;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5), new Half(-5.5), new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.rkagk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(3.5), new Half(-6.5), new Half(1.5));
                var v = ov.swizzle.rkab;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-3), new Half(2), new Half(4));
                var v = ov.swizzle.rkabr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(3), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.rkabg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(0.5), new Half(3.5), new Half(3), new Half(5));
                var v = ov.swizzle.rkabb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(-4.5), new Half(-9), new Half(6));
                var v = ov.swizzle.rkaba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7.5), new Half(6.5), new Half(5.5), new Half(9));
                var v = ov.swizzle.rkabk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9.5), new Half(-6.5), new Half(-6), new Half(5));
                var v = ov.swizzle.rkaa;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(-2), new Half(2), new Half(2));
                var v = ov.swizzle.rkaar;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(1.5), new Half(4), new Half(-2.5), new Half(3.5));
                var v = ov.swizzle.rkaag;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4.5), new Half(2), Half.Zero, new Half(5.5));
                var v = ov.swizzle.rkaab;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8.5), new Half(-8.5), new Half(0.5), new Half(-0.5));
                var v = ov.swizzle.rkaaa;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9.5), new Half(-5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.rkaak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5.5), new Half(-7), new Half(3.5), new Half(2));
                var v = ov.swizzle.rkak;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(-1.5), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.rkakr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(1.5), Half.One, new Half(-7.5));
                var v = ov.swizzle.rkakg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(8.5), new Half(-4.5), new Half(6));
                var v = ov.swizzle.rkakb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(5.5), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.rkaka;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8.5), new Half(3.5), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.rkakk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(5.5), new Half(-7.5), new Half(4));
                var v = ov.swizzle.rkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), new Half(-2), new Half(-5.5), new Half(4));
                var v = ov.swizzle.rkkr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(-5), new Half(-3.5), new Half(-0.5));
                var v = ov.swizzle.rkkrr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-0.5), new Half(-9), new Half(7), new Half(-8.5));
                var v = ov.swizzle.rkkrg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.One, new Half(-0.5), new Half(9), new Half(3.5));
                var v = ov.swizzle.rkkrb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(-8), new Half(9.5), new Half(-7.5));
                var v = ov.swizzle.rkkra;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), Half.Zero, new Half(6.5), new Half(1.5));
                var v = ov.swizzle.rkkrk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6.5), new Half(8), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.rkkg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8.5), new Half(-4), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.rkkgr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(8), new Half(9), new Half(6.5));
                var v = ov.swizzle.rkkgg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(-4.5), new Half(6), new Half(-1.5));
                var v = ov.swizzle.rkkgb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3), new Half(-3.5), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.rkkga;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5.5), new Half(-3), new Half(2), new Half(-5));
                var v = ov.swizzle.rkkgk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(-8), new Half(5.5), new Half(-7));
                var v = ov.swizzle.rkkb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9.5), new Half(-7.5), new Half(-5.5), new Half(-3.5));
                var v = ov.swizzle.rkkbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(8), new Half(1.5), new Half(5));
                var v = ov.swizzle.rkkbg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-9.5), new Half(7), new Half(3), new Half(0.5));
                var v = ov.swizzle.rkkbb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(4.5), new Half(7), new Half(8));
                var v = ov.swizzle.rkkba;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(-9.5), new Half(6.5), new Half(-3));
                var v = ov.swizzle.rkkbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(-1), new Half(6), new Half(8));
                var v = ov.swizzle.rkka;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2), new Half(-3), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.rkkar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7.5), Half.One, new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.rkkag;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(4.5), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.rkkab;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(9), new Half(-2), new Half(4));
                var v = ov.swizzle.rkkaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(9), new Half(-2.5), new Half(7));
                var v = ov.swizzle.rkkak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9.5), new Half(-4.5), new Half(-2), new Half(-3.5));
                var v = ov.swizzle.rkkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(2), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.rkkkr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(6), new Half(-5), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.rkkkg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(2.5), new Half(-4), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.rkkkb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(7.5), new Half(-9), new Half(-6.5));
                var v = ov.swizzle.rkkka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(9.5), Half.One, new Half(4.5));
                var v = ov.swizzle.rkkkk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2.5), new Half(-3.5), new Half(-3.5), new Half(5));
                var v = ov.swizzle.gr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2), new Half(0.5), new Half(4.5), new Half(6));
                var v = ov.swizzle.grr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), new Half(-2), new Half(9), new Half(6.5));
                var v = ov.swizzle.grrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3), new Half(-1.5), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.grrrr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1.5), new Half(-3.5), new Half(-3), new Half(3.5));
                var v = ov.swizzle.grrrg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(2), new Half(5), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.grrrb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), Half.Zero, new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.grrra;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(-0.5), new Half(-6), new Half(5));
                var v = ov.swizzle.grrrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2), new Half(-9.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.grrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2.5), new Half(-2.5), new Half(-6.5), new Half(9.5));
                var v = ov.swizzle.grrgr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1.5), new Half(5), new Half(-1), new Half(-1));
                var v = ov.swizzle.grrgg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(5), new Half(-3), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.grrgb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5), Half.One, new Half(-9.5), new Half(4));
                var v = ov.swizzle.grrga;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3.5), new Half(-6.5), new Half(-4.5), new Half(7));
                var v = ov.swizzle.grrgk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(-2), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.grrb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7), new Half(9), new Half(-7), new Half(-3));
                var v = ov.swizzle.grrbr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-5), new Half(-6.5), new Half(-0.5), new Half(-5));
                var v = ov.swizzle.grrbg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(0.5), new Half(-8), new Half(-7.5));
                var v = ov.swizzle.grrbb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(7.5), new Half(-6.5), new Half(6.5));
                var v = ov.swizzle.grrba;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(9.5), new Half(-3), new Half(5.5));
                var v = ov.swizzle.grrbk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), new Half(2), new Half(-6), new Half(6.5));
                var v = ov.swizzle.grra;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6), new Half(-8), new Half(-8.5), new Half(1.5));
                var v = ov.swizzle.grrar;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6.5), new Half(6.5), new Half(-9), new Half(-2));
                var v = ov.swizzle.grrag;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7.5), new Half(-2), new Half(4), new Half(1.5));
                var v = ov.swizzle.grrab;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(5), new Half(2), new Half(-5.5));
                var v = ov.swizzle.grraa;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3.5), new Half(-1.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.grrak;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7), new Half(6.5), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.grrk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(6), new Half(2.5), new Half(9.5));
                var v = ov.swizzle.grrkr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(3.5), new Half(8), new Half(-3.5), new Half(-0.5));
                var v = ov.swizzle.grrkg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1), new Half(-9), new Half(-2), Half.One);
                var v = ov.swizzle.grrkb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-0.5), new Half(5.5), new Half(-8.5), new Half(5));
                var v = ov.swizzle.grrka;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3), new Half(9.5), new Half(1.5), Half.One);
                var v = ov.swizzle.grrkk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(-3.5), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.grg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9.5), new Half(-4), new Half(3.5), new Half(9.5));
                var v = ov.swizzle.grgr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6), new Half(-9.5), new Half(5), new Half(3.5));
                var v = ov.swizzle.grgrr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4.5), new Half(-9), new Half(-4), new Half(7.5));
                var v = ov.swizzle.grgrg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7), new Half(-7), new Half(0.5), new Half(-9.5));
                var v = ov.swizzle.grgrb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3), new Half(-6), new Half(-7), Half.Zero);
                var v = ov.swizzle.grgra;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(-6), new Half(1.5), new Half(8));
                var v = ov.swizzle.grgrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(-8.5), new Half(-4), new Half(3));
                var v = ov.swizzle.grgg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7.5), new Half(-4.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.grggr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9), new Half(-0.5), new Half(-2.5), new Half(9));
                var v = ov.swizzle.grggg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(-4.5), new Half(4.5), new Half(-7));
                var v = ov.swizzle.grggb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(6.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.grgga;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(7.5), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.grggk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9.5), new Half(-1.5), new Half(6.5), new Half(-6.5));
                var v = ov.swizzle.grgb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(4), new Half(-1), new Half(9));
                var v = ov.swizzle.grgbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7.5), new Half(3), new Half(-1), new Half(-7.5));
                var v = ov.swizzle.grgbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6.5), new Half(-1.5), new Half(6), new Half(-1));
                var v = ov.swizzle.grgbb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1.5), new Half(-8.5), new Half(-4), new Half(-3.5));
                var v = ov.swizzle.grgba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1), new Half(-4), new Half(0.5), new Half(1.5));
                var v = ov.swizzle.grgbk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(3.5), new Half(-8.5), new Half(-1));
                var v = ov.swizzle.grga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(3.5), new Half(3), new Half(-8.5));
                var v = ov.swizzle.grgar;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(-5), new Half(-5.5), new Half(0.5));
                var v = ov.swizzle.grgag;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(-4.5), new Half(-4.5), new Half(3));
                var v = ov.swizzle.grgab;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6.5), new Half(1.5), new Half(-8.5), new Half(8));
                var v = ov.swizzle.grgaa;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(-5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.grgak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-4), new Half(-9.5), new Half(6));
                var v = ov.swizzle.grgk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(-6.5), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.grgkr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(-5.5), new Half(-3.5), new Half(3.5));
                var v = ov.swizzle.grgkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(6.5), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.grgkb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3.5), new Half(-0.5), new Half(-2.5), Half.One);
                var v = ov.swizzle.grgka;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(-2), new Half(-2), new Half(1.5));
                var v = ov.swizzle.grgkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), new Half(-6.5), new Half(-9.5), new Half(3));
                var v = ov.swizzle.grb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5), new Half(5.5), new Half(-8), new Half(2));
                var v = ov.swizzle.grbr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6.5), new Half(-4.5), Half.One, new Half(5));
                var v = ov.swizzle.grbrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(5), new Half(-1.5), new Half(6));
                var v = ov.swizzle.grbrg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7.5), new Half(1.5), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.grbrb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9), new Half(-2.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.grbra;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(-2), new Half(8), new Half(4));
                var v = ov.swizzle.grbrk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6), new Half(3), new Half(-7.5), new Half(-5));
                var v = ov.swizzle.grbg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(-8), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.grbgr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.Zero, new Half(-2.5), new Half(-8.5), new Half(2));
                var v = ov.swizzle.grbgg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(-5.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.grbgb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6), new Half(8.5), new Half(-1.5), new Half(-2));
                var v = ov.swizzle.grbga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8), new Half(-8), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.grbgk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2), new Half(-6), new Half(6.5), new Half(-4));
                var v = ov.swizzle.grbb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8), new Half(-6.5), new Half(-4), new Half(8));
                var v = ov.swizzle.grbbr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4), new Half(9), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.grbbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7.5), new Half(6), new Half(-6), new Half(4));
                var v = ov.swizzle.grbbb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(6), new Half(-5.5), new Half(7));
                var v = ov.swizzle.grbba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(-6), new Half(-1), new Half(5));
                var v = ov.swizzle.grbbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(9.5), new Half(7.5), new Half(-5));
                var v = ov.swizzle.grba;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4.5), new Half(1.5), new Half(6), new Half(9));
                var v = ov.swizzle.grbar;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(-1), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.grbag;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5), new Half(-4.5), new Half(4), new Half(-8.5));
                var v = ov.swizzle.grbab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), Half.One, new Half(-5), new Half(8));
                var v = ov.swizzle.grbaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(1.5), new Half(-0.5), new Half(8.5));
                var v = ov.swizzle.grbak;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2.5), new Half(-3), new Half(7), new Half(0.5));
                var v = ov.swizzle.grbk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-3), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.grbkr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(1.5), new Half(9.5), new Half(5), new Half(-9));
                var v = ov.swizzle.grbkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8.5), new Half(9), new Half(-1.5), new Half(-6));
                var v = ov.swizzle.grbkb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5.5), new Half(-2), new Half(-0.5), new Half(-9));
                var v = ov.swizzle.grbka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8.5), new Half(-4.5), new Half(-1.5), new Half(8));
                var v = ov.swizzle.grbkk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), new Half(2), new Half(8), new Half(-3.5));
                var v = ov.swizzle.gra;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7), new Half(3), new Half(6), new Half(8));
                var v = ov.swizzle.grar;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-3.5), new Half(-9), new Half(-6));
                var v = ov.swizzle.grarr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3), new Half(6.5), new Half(5.5), new Half(-4));
                var v = ov.swizzle.grarg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6.5), new Half(3), new Half(-3), new Half(-1.5));
                var v = ov.swizzle.grarb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(-6.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.grara;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9.5), new Half(-4.5), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.grark;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-0.5), new Half(0.5), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.grag;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), new Half(3), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.gragr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(2.5), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.gragg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(-0.5), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.gragb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(-0.5), new Half(-9.5), new Half(-3.5));
                var v = ov.swizzle.graga;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(-5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.gragk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(6.5), new Half(-5.5), new Half(3));
                var v = ov.swizzle.grab;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7.5), new Half(-6), new Half(-1), new Half(-2.5));
                var v = ov.swizzle.grabr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2.5), new Half(-4.5), new Half(-4.5), new Half(-2));
                var v = ov.swizzle.grabg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(9), new Half(5), new Half(-0.5));
                var v = ov.swizzle.grabb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(1.5), new Half(9), new Half(6), new Half(9.5));
                var v = ov.swizzle.graba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-1), new Half(3.5), new Half(-3));
                var v = ov.swizzle.grabk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(-9.5), new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.graa;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), Half.Zero, new Half(8), new Half(-1), new Half(-7));
                var v = ov.swizzle.graar;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3.5), new Half(-8), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.graag;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(3), new Half(8), new Half(-5.5));
                var v = ov.swizzle.graab;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(9), new Half(4.5), new Half(4.5));
                var v = ov.swizzle.graaa;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(0.5), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.graak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(-6.5), new Half(8.5), new Half(-5.5));
                var v = ov.swizzle.grak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(-3.5), new Half(4), new Half(2));
                var v = ov.swizzle.grakr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9), new Half(9.5), new Half(-1.5), new Half(-8));
                var v = ov.swizzle.grakg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(-7.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.grakb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), Half.One, new Half(9), new Half(-0.5));
                var v = ov.swizzle.graka;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), new Half(-3.5), new Half(4), new Half(3));
                var v = ov.swizzle.grakk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(-4.5), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.grk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-9.5), new Half(3), new Half(-1));
                var v = ov.swizzle.grkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(8.5), new Half(6), new Half(-6.5));
                var v = ov.swizzle.grkrr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-6), new Half(-7.5), new Half(-6), new Half(4.5));
                var v = ov.swizzle.grkrg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(9.5), new Half(-2.5), new Half(4));
                var v = ov.swizzle.grkrb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(-4), new Half(9), new Half(7.5));
                var v = ov.swizzle.grkra;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3.5), new Half(-7.5), Half.One, new Half(0.5));
                var v = ov.swizzle.grkrk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4.5), new Half(9), new Half(-6), new Half(-8));
                var v = ov.swizzle.grkg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3.5), new Half(-9), new Half(-9.5), new Half(6));
                var v = ov.swizzle.grkgr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(5.5), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.grkgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2), new Half(-1), new Half(-1), Half.Zero);
                var v = ov.swizzle.grkgb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-1), new Half(7.5), new Half(-4.5), new Half(2));
                var v = ov.swizzle.grkga;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(-1), new Half(5), new Half(8.5));
                var v = ov.swizzle.grkgk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7.5), new Half(7.5), new Half(-6), new Half(2.5));
                var v = ov.swizzle.grkb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5), new Half(5), new Half(7.5), new Half(7.5));
                var v = ov.swizzle.grkbr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(-9.5), new Half(-8.5), new Half(6));
                var v = ov.swizzle.grkbg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-2.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.grkbb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5), new Half(-1), Half.Zero, new Half(4.5));
                var v = ov.swizzle.grkba;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(-4.5), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.grkbk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7.5), new Half(-4), new Half(-8.5), Half.One);
                var v = ov.swizzle.grka;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, Half.One, new Half(-9), new Half(4.5), new Half(-5));
                var v = ov.swizzle.grkar;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6), new Half(-3), new Half(-4), new Half(-0.5));
                var v = ov.swizzle.grkag;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(1.5), new Half(-6), new Half(-9), new Half(2.5));
                var v = ov.swizzle.grkab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-4.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.grkaa;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(6.5), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.grkak;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(2.5), new Half(7), new Half(-0.5));
                var v = ov.swizzle.grkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7.5), new Half(8.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.grkkr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6.5), new Half(3.5), new Half(-1), new Half(-9.5));
                var v = ov.swizzle.grkkg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(7.5), new Half(-1), new Half(4.5));
                var v = ov.swizzle.grkkb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(6), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.grkka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(3.5), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.grkkk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4), new Half(7.5), new Half(-7.5), new Half(2));
                var v = ov.swizzle.gg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4), new Half(4), new Half(-5.5), Half.One);
                var v = ov.swizzle.ggr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2.5), new Half(6.5), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.ggrr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8), new Half(-5), Half.Zero, new Half(5));
                var v = ov.swizzle.ggrrr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(-4.5), new Half(-2.5), new Half(-6.5));
                var v = ov.swizzle.ggrrg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(-2), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.ggrrb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-0.5), new Half(-6), new Half(7), new Half(-0.5));
                var v = ov.swizzle.ggrra;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(8.5), new Half(-2), new Half(8), new Half(5.5));
                var v = ov.swizzle.ggrrk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7.5), new Half(-4), new Half(9), new Half(-7));
                var v = ov.swizzle.ggrg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(3.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.ggrgr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7.5), new Half(2.5), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.ggrgg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-1), new Half(8.5), new Half(-2));
                var v = ov.swizzle.ggrgb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2), new Half(-3), new Half(9.5), new Half(9));
                var v = ov.swizzle.ggrga;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(-1.5), new Half(-5.5), new Half(-9));
                var v = ov.swizzle.ggrgk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(6), new Half(5), new Half(-3.5));
                var v = ov.swizzle.ggrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(-5), new Half(9), new Half(-2.5));
                var v = ov.swizzle.ggrbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8.5), new Half(-4), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.ggrbg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7.5), new Half(9.5), new Half(-6.5), new Half(2));
                var v = ov.swizzle.ggrbb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2.5), new Half(-3), new Half(6.5), new Half(-5.5));
                var v = ov.swizzle.ggrba;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4.5), new Half(-4), Half.Zero, new Half(-0.5));
                var v = ov.swizzle.ggrbk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6.5), new Half(8), new Half(-9), new Half(-9));
                var v = ov.swizzle.ggra;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(-2.5), new Half(0.5), new Half(5.5));
                var v = ov.swizzle.ggrar;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3), Half.One, new Half(-2), new Half(5));
                var v = ov.swizzle.ggrag;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), new Half(-9), new Half(-3), Half.Zero);
                var v = ov.swizzle.ggrab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), new Half(5), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.ggraa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(9), new Half(-8.5), new Half(9));
                var v = ov.swizzle.ggrak;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.Zero, new Half(-5), new Half(-8.5), new Half(7));
                var v = ov.swizzle.ggrk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), new Half(4.5), new Half(-5), new Half(-2.5));
                var v = ov.swizzle.ggrkr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(8), new Half(-1.5), new Half(-0.5));
                var v = ov.swizzle.ggrkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3.5), Half.Zero, new Half(1.5), new Half(4.5));
                var v = ov.swizzle.ggrkb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), Half.Zero, new Half(9.5), new Half(7.5));
                var v = ov.swizzle.ggrka;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(-1.5), new Half(-3.5), new Half(-3.5));
                var v = ov.swizzle.ggrkk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(5), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.ggg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-0.5), new Half(-9.5), new Half(4), new Half(7.5));
                var v = ov.swizzle.gggr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(4.5), new Half(3), new Half(-4.5), new Half(6));
                var v = ov.swizzle.gggrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8), new Half(-8), new Half(2.5), new Half(-2));
                var v = ov.swizzle.gggrg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5.5), new Half(-9), new Half(-2.5), new Half(-6.5));
                var v = ov.swizzle.gggrb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(-5), new Half(-6.5), new Half(5));
                var v = ov.swizzle.gggra;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(8), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.gggrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-0.5), new Half(7.5), new Half(-7));
                var v = ov.swizzle.gggg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5), new Half(6.5), new Half(4.5), new Half(-6));
                var v = ov.swizzle.ggggr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(-6), new Half(3.5), new Half(-7));
                var v = ov.swizzle.ggggg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4), new Half(5.5), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.ggggb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-9), new Half(7.5), new Half(2.5));
                var v = ov.swizzle.gggga;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(6.5), new Half(8.5), new Half(-9));
                var v = ov.swizzle.ggggk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4.5), new Half(-5), new Half(-3), new Half(-9));
                var v = ov.swizzle.gggb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(-9.5), new Half(-5), new Half(-9));
                var v = ov.swizzle.gggbr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(-5.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.gggbg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(-7.5), new Half(6), new Half(-3));
                var v = ov.swizzle.gggbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(4.5), new Half(8), new Half(-8.5));
                var v = ov.swizzle.gggba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4.5), new Half(1.5), new Half(4), new Half(3));
                var v = ov.swizzle.gggbk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(7.5), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.ggga;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(2), new Half(-4), new Half(9.5));
                var v = ov.swizzle.gggar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-9.5), new Half(4.5), new Half(-9));
                var v = ov.swizzle.gggag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(7), new Half(7), new Half(6.5));
                var v = ov.swizzle.gggab;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(1.5), new Half(0.5), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.gggaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(6), new Half(1.5), new Half(-9.5));
                var v = ov.swizzle.gggak;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(-6), new Half(-2), Half.Zero);
                var v = ov.swizzle.gggk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(9), new Half(-0.5), new Half(-7.5));
                var v = ov.swizzle.gggkr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-8.5), new Half(7), new Half(6), new Half(9.5));
                var v = ov.swizzle.gggkg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(7), Half.Zero, new Half(-0.5), new Half(-8));
                var v = ov.swizzle.gggkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8), new Half(-5.5), new Half(8), new Half(-4));
                var v = ov.swizzle.gggka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(-2), Half.Zero, new Half(-6));
                var v = ov.swizzle.gggkk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(-1), new Half(4.5), new Half(8));
                var v = ov.swizzle.ggb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7), new Half(8), new Half(4.5), new Half(-1.5));
                var v = ov.swizzle.ggbr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-8), new Half(-3.5), new Half(-2.5));
                var v = ov.swizzle.ggbrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(-6.5), new Half(-4.5), new Half(3));
                var v = ov.swizzle.ggbrg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(-7), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.ggbrb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(6), new Half(7.5), new Half(-4));
                var v = ov.swizzle.ggbra;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8), new Half(8), new Half(-3), new Half(4));
                var v = ov.swizzle.ggbrk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(-4), new Half(7.5), new Half(-5));
                var v = ov.swizzle.ggbg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(6), Half.One, new Half(5));
                var v = ov.swizzle.ggbgr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.Zero, new Half(7.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.ggbgg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(-2.5), new Half(7.5), new Half(-8));
                var v = ov.swizzle.ggbgb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3), new Half(7.5), new Half(-1), new Half(5.5));
                var v = ov.swizzle.ggbga;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1), new Half(-2), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.ggbgk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5.5), new Half(4), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.ggbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9), new Half(-4.5), new Half(-1), new Half(8));
                var v = ov.swizzle.ggbbr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5.5), new Half(-6), new Half(7), new Half(-8.5));
                var v = ov.swizzle.ggbbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6), new Half(-4.5), new Half(1.5), new Half(9));
                var v = ov.swizzle.ggbbb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(-2), new Half(5.5), new Half(-8));
                var v = ov.swizzle.ggbba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(2), new Half(2), new Half(4.5));
                var v = ov.swizzle.ggbbk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(-3.5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.ggba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(-6), new Half(-6.5), new Half(7));
                var v = ov.swizzle.ggbar;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1), new Half(-7), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.ggbag;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1.5), new Half(-0.5), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.ggbab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(-9.5), new Half(9), Half.One);
                var v = ov.swizzle.ggbaa;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3), new Half(9), new Half(2), new Half(-3));
                var v = ov.swizzle.ggbak;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(-6.5), new Half(-6), new Half(-4.5));
                var v = ov.swizzle.ggbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(1.5), new Half(7.5), new Half(2));
                var v = ov.swizzle.ggbkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(2), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.ggbkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5), new Half(-5.5), new Half(-5), new Half(-6));
                var v = ov.swizzle.ggbkb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(-3), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.ggbka;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-6), new Half(-7.5), new Half(6));
                var v = ov.swizzle.ggbkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(-3), new Half(9), new Half(-6.5));
                var v = ov.swizzle.gga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), Half.Zero, new Half(2), new Half(8));
                var v = ov.swizzle.ggar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(1.5), new Half(-1.5), new Half(4));
                var v = ov.swizzle.ggarr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6.5), new Half(7.5), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.ggarg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(4.5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.ggarb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(4.5), new Half(3), new Half(4.5), new Half(-2.5));
                var v = ov.swizzle.ggara;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(9), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.ggark;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8), new Half(2.5), Half.Zero, new Half(0.5));
                var v = ov.swizzle.ggag;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4), new Half(-8.5), new Half(6), new Half(-2));
                var v = ov.swizzle.ggagr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), new Half(-4.5), new Half(-6), new Half(9.5));
                var v = ov.swizzle.ggagg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1), new Half(-7.5), new Half(-4.5), new Half(-7));
                var v = ov.swizzle.ggagb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(0.5), new Half(-3.5), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.ggaga;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5.5), new Half(6), new Half(-6), new Half(5));
                var v = ov.swizzle.ggagk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2.5), Half.Zero, new Half(1.5), new Half(-2));
                var v = ov.swizzle.ggab;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(0.5), new Half(6.5), new Half(3), new Half(-9));
                var v = ov.swizzle.ggabr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(-1.5), new Half(-5), new Half(-5));
                var v = ov.swizzle.ggabg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9), new Half(-2.5), new Half(4.5), new Half(-1));
                var v = ov.swizzle.ggabb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-5.5), new Half(-4), new Half(-9));
                var v = ov.swizzle.ggaba;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), new Half(7.5), new Half(-9), new Half(7.5));
                var v = ov.swizzle.ggabk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(5), Half.Zero, new Half(1.5));
                var v = ov.swizzle.ggaa;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(3.5), new Half(3), new Half(5.5));
                var v = ov.swizzle.ggaar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4), new Half(-9), new Half(6), Half.One);
                var v = ov.swizzle.ggaag;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(-2), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.ggaab;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(-2), new Half(5), new Half(-3));
                var v = ov.swizzle.ggaaa;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3), new Half(-3.5), new Half(-3), new Half(9));
                var v = ov.swizzle.ggaak;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3.5), new Half(-8), new Half(5), new Half(-4.5));
                var v = ov.swizzle.ggak;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(-1.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.ggakr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(-5.5), new Half(8.5), new Half(-4.5));
                var v = ov.swizzle.ggakg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), new Half(-7), new Half(-3), new Half(7));
                var v = ov.swizzle.ggakb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8.5), new Half(-8), new Half(7), new Half(-5));
                var v = ov.swizzle.ggaka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5.5), Half.Zero, new Half(-2.5), new Half(9));
                var v = ov.swizzle.ggakk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5), new Half(-9.5), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.ggk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(5.5), new Half(-4), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.ggkr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(-1.5), new Half(-9), new Half(2.5));
                var v = ov.swizzle.ggkrr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-2), new Half(-3), new Half(-9.5), new Half(3.5));
                var v = ov.swizzle.ggkrg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(-3), new Half(4), new Half(9));
                var v = ov.swizzle.ggkrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(9), new Half(0.5), new Half(-1.5));
                var v = ov.swizzle.ggkra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, Half.Zero, new Half(-4), new Half(0.5));
                var v = ov.swizzle.ggkrk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(1.5), new Half(-5), new Half(2.5));
                var v = ov.swizzle.ggkg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(6.5), new Half(-9), new Half(9.5));
                var v = ov.swizzle.ggkgr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(9.5), new Half(-6), new Half(7));
                var v = ov.swizzle.ggkgg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7.5), new Half(-9.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.ggkgb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(-5), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.ggkga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3.5), new Half(-6.5), new Half(2.5), new Half(-9.5));
                var v = ov.swizzle.ggkgk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3), new Half(-4), new Half(-0.5), new Half(-9.5));
                var v = ov.swizzle.ggkb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(8.5), new Half(-2.5), new Half(-1));
                var v = ov.swizzle.ggkbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), new Half(4.5), new Half(5), new Half(-5.5));
                var v = ov.swizzle.ggkbg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6), new Half(4.5), new Half(-6.5), new Half(3));
                var v = ov.swizzle.ggkbb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), new Half(6), new Half(3), new Half(4));
                var v = ov.swizzle.ggkba;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-8.5), new Half(7), new Half(-7.5), new Half(-5));
                var v = ov.swizzle.ggkbk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5.5), new Half(3), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.ggka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-9), new Half(9), new Half(5.5), new Half(7.5));
                var v = ov.swizzle.ggkar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(2.5), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.ggkag;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(9), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.ggkab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), Half.Zero, new Half(-0.5), new Half(-1.5));
                var v = ov.swizzle.ggkaa;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), new Half(-1), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.ggkak;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3), new Half(-6), new Half(-2), new Half(-4));
                var v = ov.swizzle.ggkk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3.5), new Half(4.5), new Half(-4), new Half(-2));
                var v = ov.swizzle.ggkkr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(8.5), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.ggkkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-1.5), new Half(-5.5), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.ggkkb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(9), new Half(-2.5), new Half(-4));
                var v = ov.swizzle.ggkka;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-5), new Half(-1), new Half(4));
                var v = ov.swizzle.ggkkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7), new Half(-3.5), new Half(5.5), new Half(7));
                var v = ov.swizzle.gb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7), new Half(-9.5), new Half(9), new Half(9));
                var v = ov.swizzle.gbr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(5.5), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.gbrr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3.5), new Half(-5), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.gbrrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6.5), new Half(-4.5), new Half(-4), new Half(-9));
                var v = ov.swizzle.gbrrg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-0.5), new Half(8.5), new Half(8));
                var v = ov.swizzle.gbrrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2), new Half(-5.5), new Half(8), new Half(4));
                var v = ov.swizzle.gbrra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(3), new Half(-7), new Half(8));
                var v = ov.swizzle.gbrrk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(7), new Half(-4), new Half(-5), Half.One);
                var v = ov.swizzle.gbrg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7), new Half(-7.5), new Half(-2), new Half(-7));
                var v = ov.swizzle.gbrgr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8), new Half(-4.5), new Half(0.5), new Half(6));
                var v = ov.swizzle.gbrgg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6.5), new Half(-3), new Half(-6), new Half(1.5));
                var v = ov.swizzle.gbrgb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8), new Half(-7.5), Half.One, new Half(-3.5));
                var v = ov.swizzle.gbrga;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(-3.5), new Half(-6.5), new Half(3));
                var v = ov.swizzle.gbrgk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(0.5), new Half(7.5), new Half(-8.5), new Half(-9.5));
                var v = ov.swizzle.gbrb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(8), new Half(9), new Half(-2), new Half(2));
                var v = ov.swizzle.gbrbr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), new Half(-7), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.gbrbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(3.5), new Half(2), new Half(-8.5));
                var v = ov.swizzle.gbrbb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(-2.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.gbrba;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(-2), new Half(-0.5), new Half(4));
                var v = ov.swizzle.gbrbk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(9.5), new Half(8), Half.Zero);
                var v = ov.swizzle.gbra;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(3), new Half(9), new Half(-6));
                var v = ov.swizzle.gbrar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3), Half.Zero, new Half(-4), new Half(0.5));
                var v = ov.swizzle.gbrag;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.One, Half.Zero, new Half(3), new Half(-2));
                var v = ov.swizzle.gbrab;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2.5), new Half(-6.5), new Half(2), new Half(-5));
                var v = ov.swizzle.gbraa;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(-1), Half.Zero, new Half(8.5));
                var v = ov.swizzle.gbrak;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6.5), new Half(-8.5), new Half(7), new Half(5));
                var v = ov.swizzle.gbrk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(8), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.gbrkr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-7.5), new Half(-6.5), new Half(-2.5), new Half(5));
                var v = ov.swizzle.gbrkg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6), new Half(-4), new Half(6.5), new Half(-5));
                var v = ov.swizzle.gbrkb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3.5), new Half(8), new Half(-7), new Half(3.5));
                var v = ov.swizzle.gbrka;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7), new Half(7.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.gbrkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(3), new Half(-2), new Half(-1));
                var v = ov.swizzle.gbg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(3.5), new Half(7), new Half(-8.5));
                var v = ov.swizzle.gbgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(-9.5), new Half(-1.5), new Half(8));
                var v = ov.swizzle.gbgrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3), new Half(6.5), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.gbgrg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(-5), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.gbgrb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(4), new Half(-4), new Half(6.5));
                var v = ov.swizzle.gbgra;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4.5), new Half(-5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.gbgrk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(-2), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.gbgg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3), new Half(6), new Half(-5), new Half(1.5));
                var v = ov.swizzle.gbggr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5), new Half(-8.5), new Half(8), new Half(5));
                var v = ov.swizzle.gbggg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), Half.Zero, new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.gbggb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(-8), new Half(4.5), new Half(2.5));
                var v = ov.swizzle.gbgga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(-9.5), new Half(-1), new Half(-9));
                var v = ov.swizzle.gbggk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9), new Half(0.5), new Half(0.5), new Half(4));
                var v = ov.swizzle.gbgb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2.5), new Half(-9.5), new Half(9), new Half(-3));
                var v = ov.swizzle.gbgbr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7.5), Half.Zero, new Half(3.5), new Half(0.5));
                var v = ov.swizzle.gbgbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7), new Half(5.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.gbgbb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(-9), Half.One, new Half(7));
                var v = ov.swizzle.gbgba;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(-7), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.gbgbk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(2.5), new Half(5.5), new Half(5.5), new Half(3.5));
                var v = ov.swizzle.gbga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6), new Half(0.5), new Half(3), new Half(5.5));
                var v = ov.swizzle.gbgar;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(1.5), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.gbgag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4.5), new Half(-5.5), new Half(4), new Half(-9.5));
                var v = ov.swizzle.gbgab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(1.5), new Half(-2), new Half(-9.5), new Half(-0.5));
                var v = ov.swizzle.gbgaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.Zero, new Half(-1.5), new Half(-7.5), new Half(-2.5));
                var v = ov.swizzle.gbgak;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-5), new Half(7.5), new Half(-2), new Half(-4));
                var v = ov.swizzle.gbgk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3.5), new Half(4), Half.Zero, new Half(-7.5));
                var v = ov.swizzle.gbgkr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(1.5), new Half(-3), new Half(-7));
                var v = ov.swizzle.gbgkg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(5.5), new Half(4), new Half(9.5));
                var v = ov.swizzle.gbgkb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6), new Half(-3), new Half(3), new Half(-5));
                var v = ov.swizzle.gbgka;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8.5), new Half(-6), new Half(6), new Half(-8.5));
                var v = ov.swizzle.gbgkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(8), new Half(-7), new Half(-3.5));
                var v = ov.swizzle.gbb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-9), new Half(9), new Half(8.5));
                var v = ov.swizzle.gbbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9.5), new Half(-5.5), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.gbbrr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.Zero, new Half(9.5), new Half(3), new Half(-0.5));
                var v = ov.swizzle.gbbrg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(4), new Half(-5.5), new Half(-7.5), new Half(3.5));
                var v = ov.swizzle.gbbrb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(3.5), new Half(6.5), new Half(7));
                var v = ov.swizzle.gbbra;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(7.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.gbbrk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(-4), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.gbbg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(-3.5), new Half(5), new Half(-8));
                var v = ov.swizzle.gbbgr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(0.5), new Half(-8.5), new Half(-1));
                var v = ov.swizzle.gbbgg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8.5), new Half(-2), new Half(-7), Half.One);
                var v = ov.swizzle.gbbgb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(-3.5), new Half(-5.5), new Half(3.5));
                var v = ov.swizzle.gbbga;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(-6.5), Half.One, new Half(-8.5));
                var v = ov.swizzle.gbbgk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7.5), new Half(5), new Half(8), new Half(-3));
                var v = ov.swizzle.gbbb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(-4), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.gbbbr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), new Half(-8), new Half(3), new Half(-9.5));
                var v = ov.swizzle.gbbbg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3), new Half(-3), new Half(-3.5), Half.Zero);
                var v = ov.swizzle.gbbbb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8.5), new Half(-9.5), new Half(-8), new Half(-1));
                var v = ov.swizzle.gbbba;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7.5), new Half(0.5), new Half(2.5), new Half(-6.5));
                var v = ov.swizzle.gbbbk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(1.5), new Half(-5.5), new Half(-5.5), new Half(7));
                var v = ov.swizzle.gbba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3.5), new Half(-8.5), new Half(8), new Half(-5));
                var v = ov.swizzle.gbbar;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7), new Half(-2.5), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.gbbag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), new Half(-7.5), new Half(4), new Half(2.5));
                var v = ov.swizzle.gbbab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1.5), new Half(7.5), Half.One, new Half(-4.5));
                var v = ov.swizzle.gbbaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(-2.5), new Half(8.5), new Half(6));
                var v = ov.swizzle.gbbak;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6.5), new Half(-8.5), new Half(2), new Half(-9));
                var v = ov.swizzle.gbbk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5.5), new Half(3.5), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.gbbkr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(4), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.gbbkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(-2.5), new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.gbbkb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(-3.5), Half.Zero, new Half(9.5));
                var v = ov.swizzle.gbbka;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(-6.5), new Half(9.5), new Half(5.5));
                var v = ov.swizzle.gbbkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9.5), new Half(-6.5), Half.One, Half.One);
                var v = ov.swizzle.gba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(-4.5), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.gbar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2.5), new Half(-3.5), new Half(-6), new Half(-8));
                var v = ov.swizzle.gbarr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(-3.5), new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.gbarg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(6), new Half(-2), new Half(-4.5));
                var v = ov.swizzle.gbarb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-8.5), new Half(2), Half.One);
                var v = ov.swizzle.gbara;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(3.5), Half.Zero, new Half(8.5));
                var v = ov.swizzle.gbark;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7), new Half(2), new Half(9), new Half(6.5));
                var v = ov.swizzle.gbag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(-3), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.gbagr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(9), new Half(-7.5), new Half(8));
                var v = ov.swizzle.gbagg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8), new Half(2), new Half(3), new Half(5.5));
                var v = ov.swizzle.gbagb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(-2), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.gbaga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6), new Half(-6.5), new Half(-3), new Half(3));
                var v = ov.swizzle.gbagk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(-4.5), new Half(-7), new Half(2));
                var v = ov.swizzle.gbab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-6), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.gbabr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2), new Half(8), new Half(-4), new Half(6.5));
                var v = ov.swizzle.gbabg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.Zero, new Half(8.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.gbabb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(0.5), new Half(5), new Half(-5.5));
                var v = ov.swizzle.gbaba;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(-3.5), new Half(-7.5), new Half(-7.5));
                var v = ov.swizzle.gbabk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(9.5), new Half(4.5), new Half(-9.5));
                var v = ov.swizzle.gbaa;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1.5), new Half(2.5), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.gbaar;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3.5), new Half(-9), new Half(8), new Half(-8.5));
                var v = ov.swizzle.gbaag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(7.5), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.gbaab;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8), new Half(-1.5), new Half(5), new Half(3.5));
                var v = ov.swizzle.gbaaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(-9.5), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.gbaak;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5.5), new Half(3.5), Half.One, new Half(9.5));
                var v = ov.swizzle.gbak;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(-4), new Half(3.5), new Half(6));
                var v = ov.swizzle.gbakr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8), new Half(-8), new Half(8), new Half(5.5));
                var v = ov.swizzle.gbakg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(0.5), new Half(-8.5), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.gbakb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(6), new Half(4.5), new Half(9));
                var v = ov.swizzle.gbaka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5), new Half(3.5), Half.One, new Half(-3));
                var v = ov.swizzle.gbakk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8), new Half(8.5), new Half(9.5), new Half(8.5));
                var v = ov.swizzle.gbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9.5), new Half(-7), new Half(9), new Half(-1));
                var v = ov.swizzle.gbkr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(3), new Half(-3), new Half(-7));
                var v = ov.swizzle.gbkrr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(0.5), new Half(-9), new Half(-1), new Half(-5));
                var v = ov.swizzle.gbkrg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3.5), new Half(6.5), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.gbkrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(8.5), new Half(2.5), new Half(-2));
                var v = ov.swizzle.gbkra;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(-2), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.gbkrk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9), new Half(-8), new Half(-1), new Half(-7));
                var v = ov.swizzle.gbkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3), new Half(-2), new Half(-3), new Half(2));
                var v = ov.swizzle.gbkgr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5.5), new Half(3.5), new Half(-7), new Half(4));
                var v = ov.swizzle.gbkgg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6.5), new Half(-6.5), new Half(-3.5), new Half(5.5));
                var v = ov.swizzle.gbkgb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(-8), new Half(-8), new Half(9));
                var v = ov.swizzle.gbkga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(-4.5), new Half(7.5), new Half(-6));
                var v = ov.swizzle.gbkgk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(-7.5), new Half(-0.5), new Half(-5));
                var v = ov.swizzle.gbkb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-2), new Half(8), new Half(3.5), new Half(7.5));
                var v = ov.swizzle.gbkbr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5), new Half(-5.5), new Half(-9), new Half(4.5));
                var v = ov.swizzle.gbkbg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), new Half(-8.5), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.gbkbb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2.5), new Half(-3.5), new Half(-3.5), new Half(-1.5));
                var v = ov.swizzle.gbkba;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), Half.Zero, Half.Zero, new Half(-1.5));
                var v = ov.swizzle.gbkbk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1.5), new Half(-4), new Half(6.5), new Half(3));
                var v = ov.swizzle.gbka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3), new Half(3), new Half(2), new Half(9));
                var v = ov.swizzle.gbkar;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(-0.5), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.gbkag;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(8.5), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.gbkab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(7.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.gbkaa;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3), new Half(6.5), Half.One, new Half(-6.5));
                var v = ov.swizzle.gbkak;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2), new Half(7), new Half(5), new Half(-9.5));
                var v = ov.swizzle.gbkk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(-2.5), new Half(-6), new Half(4));
                var v = ov.swizzle.gbkkr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(0.5), new Half(-8), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.gbkkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7.5), new Half(6.5), new Half(5.5), new Half(6));
                var v = ov.swizzle.gbkkb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(-6), new Half(-5.5), new Half(3.5));
                var v = ov.swizzle.gbkka;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(1.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.gbkkk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6), new Half(2), new Half(-9), new Half(6));
                var v = ov.swizzle.ga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9.5), new Half(-5.5), new Half(8), new Half(-5));
                var v = ov.swizzle.gar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.One, new Half(-6.5), new Half(-9), new Half(6.5));
                var v = ov.swizzle.garr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(-9.5), new Half(3.5), new Half(5));
                var v = ov.swizzle.garrr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), Half.One, new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.garrg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5.5), new Half(-5.5), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.garrb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(9), new Half(7), new Half(-4.5), new Half(-0.5));
                var v = ov.swizzle.garra;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(8.5), new Half(-2), new Half(-5));
                var v = ov.swizzle.garrk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4), new Half(-2.5), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.garg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(6.5), new Half(-2.5), new Half(-1.5));
                var v = ov.swizzle.gargr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(8.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.gargg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-5), new Half(6), new Half(8.5), new Half(6.5));
                var v = ov.swizzle.gargb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5.5), new Half(-2), new Half(-3.5), new Half(-1.5));
                var v = ov.swizzle.garga;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(8.5), new Half(0.5), new Half(1.5));
                var v = ov.swizzle.gargk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(2), new Half(7), new Half(-8), new Half(-5));
                var v = ov.swizzle.garb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1.5), new Half(-8.5), new Half(7), new Half(-9));
                var v = ov.swizzle.garbr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9.5), new Half(6.5), new Half(-5.5), new Half(-2.5));
                var v = ov.swizzle.garbg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1), new Half(4.5), new Half(9), new Half(-1.5));
                var v = ov.swizzle.garbb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), Half.Zero, new Half(-5), new Half(6.5));
                var v = ov.swizzle.garba;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.One, Half.One, new Half(2.5), new Half(-7));
                var v = ov.swizzle.garbk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2), new Half(6), new Half(5.5), new Half(-3));
                var v = ov.swizzle.gara;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(-9.5), new Half(8.5), new Half(-4));
                var v = ov.swizzle.garar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4.5), new Half(9.5), new Half(-9), new Half(7.5));
                var v = ov.swizzle.garag;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8.5), new Half(-2.5), new Half(9.5), new Half(-3));
                var v = ov.swizzle.garab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9.5), new Half(-0.5), new Half(2), Half.One);
                var v = ov.swizzle.garaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(3.5), new Half(-8.5), new Half(-9));
                var v = ov.swizzle.garak;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2.5), new Half(-1.5), new Half(1.5), new Half(-2));
                var v = ov.swizzle.gark;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), Half.One, new Half(-1), new Half(3.5));
                var v = ov.swizzle.garkr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(1.5), new Half(5.5), new Half(5.5), new Half(-6));
                var v = ov.swizzle.garkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6.5), new Half(-8.5), new Half(-8), new Half(-7));
                var v = ov.swizzle.garkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), new Half(2), new Half(-9), new Half(-7));
                var v = ov.swizzle.garka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6.5), new Half(3), new Half(3.5), new Half(-9));
                var v = ov.swizzle.garkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9), new Half(8.5), new Half(-9.5), new Half(-5));
                var v = ov.swizzle.gag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5), new Half(7), new Half(7), new Half(9));
                var v = ov.swizzle.gagr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7.5), new Half(-7), new Half(5), Half.Zero);
                var v = ov.swizzle.gagrr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(3.5), new Half(-3.5), new Half(6));
                var v = ov.swizzle.gagrg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(-6), new Half(3), new Half(-7.5));
                var v = ov.swizzle.gagrb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(9), new Half(-5), new Half(3));
                var v = ov.swizzle.gagra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(7), new Half(1.5), new Half(2));
                var v = ov.swizzle.gagrk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2.5), new Half(-6), new Half(-9.5), new Half(0.5));
                var v = ov.swizzle.gagg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(-4), new Half(7), new Half(1.5));
                var v = ov.swizzle.gaggr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(6.5), new Half(-9), new Half(8));
                var v = ov.swizzle.gaggg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(-8), new Half(-2.5), new Half(7));
                var v = ov.swizzle.gaggb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(5.5), new Half(7.5), new Half(-0.5));
                var v = ov.swizzle.gagga;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(2.5), new Half(3), new Half(5));
                var v = ov.swizzle.gaggk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-0.5), new Half(-4.5), new Half(2), new Half(6.5));
                var v = ov.swizzle.gagb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-3), new Half(6.5), new Half(-7));
                var v = ov.swizzle.gagbr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(7), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.gagbg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(1.5), new Half(5), new Half(8.5));
                var v = ov.swizzle.gagbb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2), new Half(-8.5), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.gagba;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7.5), new Half(-8), new Half(1.5), new Half(-0.5));
                var v = ov.swizzle.gagbk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(9), Half.One, new Half(3.5));
                var v = ov.swizzle.gaga;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-2), new Half(4.5), new Half(-7.5), new Half(2.5));
                var v = ov.swizzle.gagar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7), new Half(-7.5), new Half(9), new Half(-2));
                var v = ov.swizzle.gagag;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4.5), new Half(-7.5), new Half(-6), Half.One);
                var v = ov.swizzle.gagab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-2.5), new Half(5), new Half(2.5));
                var v = ov.swizzle.gagaa;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8), Half.One, new Half(9), new Half(-2.5));
                var v = ov.swizzle.gagak;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9), new Half(-7.5), new Half(6), new Half(-6.5));
                var v = ov.swizzle.gagk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6.5), new Half(6), new Half(-9), new Half(-3));
                var v = ov.swizzle.gagkr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(9), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.gagkg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(-1), new Half(-2), new Half(0.5));
                var v = ov.swizzle.gagkb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(2), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.gagka;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5.5), new Half(4), new Half(9), new Half(7));
                var v = ov.swizzle.gagkk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9), new Half(-5.5), new Half(5.5), new Half(-3));
                var v = ov.swizzle.gab;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(7), new Half(4.5), new Half(-5), new Half(-2.5), new Half(8.5));
                var v = ov.swizzle.gabr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(2), new Half(2), new Half(-4.5));
                var v = ov.swizzle.gabrr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5.5), new Half(-3), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.gabrg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(7.5), new Half(0.5), new Half(-9.5), new Half(2));
                var v = ov.swizzle.gabrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6), new Half(2.5), new Half(-0.5), new Half(3.5));
                var v = ov.swizzle.gabra;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(2.5), new Half(7.5), new Half(-2), new Half(-1));
                var v = ov.swizzle.gabrk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(-4), Half.One, new Half(-4));
                var v = ov.swizzle.gabg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(-5.5), new Half(-4), new Half(-5.5));
                var v = ov.swizzle.gabgr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(9.5), new Half(4), new Half(8.5));
                var v = ov.swizzle.gabgg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6.5), new Half(-8.5), new Half(-5), new Half(-1));
                var v = ov.swizzle.gabgb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(4), new Half(2.5), new Half(7));
                var v = ov.swizzle.gabga;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.One, new Half(-3.5), new Half(4.5), new Half(-9.5));
                var v = ov.swizzle.gabgk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8.5), new Half(0.5), new Half(2.5), new Half(-9));
                var v = ov.swizzle.gabb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8.5), new Half(-2), new Half(9), new Half(0.5));
                var v = ov.swizzle.gabbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4), new Half(-7), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.gabbg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(6), new Half(-1.5), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.gabbb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(-7.5), Half.Zero, new Half(7));
                var v = ov.swizzle.gabba;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-7.5), new Half(3.5), new Half(-3));
                var v = ov.swizzle.gabbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1.5), new Half(0.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.gaba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7.5), new Half(7), new Half(-4.5), new Half(-1.5));
                var v = ov.swizzle.gabar;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-2), new Half(-4.5), new Half(-0.5));
                var v = ov.swizzle.gabag;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(8), new Half(5.5), new Half(-6));
                var v = ov.swizzle.gabab;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3), new Half(4.5), new Half(5.5), new Half(-4.5));
                var v = ov.swizzle.gabaa;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(0.5), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.gabak;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9.5), new Half(-8), new Half(7.5), new Half(-1.5));
                var v = ov.swizzle.gabk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(-5.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.gabkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(3), new Half(2), new Half(-4.5));
                var v = ov.swizzle.gabkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9.5), new Half(7.5), new Half(-1), new Half(-7));
                var v = ov.swizzle.gabkb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5.5), new Half(-2.5), new Half(-8), new Half(-8));
                var v = ov.swizzle.gabka;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(4.5), new Half(7), new Half(5));
                var v = ov.swizzle.gabkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(-6.5), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.gaa;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(-4), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.gaar;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(-7.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.gaarr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(1.5), new Half(9), Half.One);
                var v = ov.swizzle.gaarg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(-9), new Half(7), new Half(6));
                var v = ov.swizzle.gaarb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), Half.Zero, new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.gaara;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-0.5), new Half(-6), new Half(-9.5), new Half(-1.5));
                var v = ov.swizzle.gaark;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6), new Half(9), new Half(-9), new Half(-1));
                var v = ov.swizzle.gaag;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-4.5), Half.One, new Half(-5), new Half(-1));
                var v = ov.swizzle.gaagr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3), new Half(5), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.gaagg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(-4.5), new Half(6), Half.One);
                var v = ov.swizzle.gaagb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3), new Half(-6), new Half(-3.5), new Half(-5));
                var v = ov.swizzle.gaaga;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(4.5), new Half(6.5), new Half(7.5));
                var v = ov.swizzle.gaagk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2), new Half(2), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.gaab;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(-2), new Half(8.5), new Half(9));
                var v = ov.swizzle.gaabr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(3), new Half(6.5), Half.Zero);
                var v = ov.swizzle.gaabg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(-1.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.gaabb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(9), new Half(-9), new Half(5));
                var v = ov.swizzle.gaaba;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(-6.5), new Half(4), new Half(8));
                var v = ov.swizzle.gaabk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), new Half(5), new Half(-8), new Half(3.5));
                var v = ov.swizzle.gaaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(-2), new Half(-4.5), new Half(2));
                var v = ov.swizzle.gaaar;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(-3.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.gaaag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(-9), new Half(-4.5), new Half(-9));
                var v = ov.swizzle.gaaab;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(6.5), new Half(-5), Half.One);
                var v = ov.swizzle.gaaaa;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(-5.5), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.gaaak;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(6), new Half(0.5), new Half(9));
                var v = ov.swizzle.gaak;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), new Half(-3.5), new Half(2), new Half(6.5));
                var v = ov.swizzle.gaakr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5.5), new Half(2), new Half(5.5), new Half(2));
                var v = ov.swizzle.gaakg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(-3), new Half(6.5), new Half(-7.5));
                var v = ov.swizzle.gaakb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(7.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.gaaka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(0.5), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.gaakk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2.5), new Half(-5.5), new Half(3), new Half(-6.5));
                var v = ov.swizzle.gak;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(6.5), new Half(-2.5), new Half(4.5));
                var v = ov.swizzle.gakr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6.5), new Half(-6), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.gakrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.Zero, Half.One, new Half(-3), new Half(6.5));
                var v = ov.swizzle.gakrg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-2.5), new Half(5), new Half(-3.5));
                var v = ov.swizzle.gakrb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9), new Half(-8.5), new Half(-7), new Half(-3));
                var v = ov.swizzle.gakra;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(4), new Half(9), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.gakrk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(9.5), new Half(-3), Half.One);
                var v = ov.swizzle.gakg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8.5), new Half(-4.5), new Half(2), new Half(3.5));
                var v = ov.swizzle.gakgr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(5), new Half(9), new Half(2.5), new Half(-3));
                var v = ov.swizzle.gakgg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(-8), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.gakgb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9.5), new Half(-8), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.gakga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3), new Half(-9), new Half(-5), new Half(9.5));
                var v = ov.swizzle.gakgk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4), new Half(4.5), new Half(3), new Half(6.5));
                var v = ov.swizzle.gakb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(-0.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.gakbr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4.5), new Half(-4.5), new Half(-2), new Half(-4));
                var v = ov.swizzle.gakbg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(-1.5), new Half(4), new Half(-6));
                var v = ov.swizzle.gakbb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(-0.5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.gakba;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(-8.5), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.gakbk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.One, new Half(9), new Half(2), new Half(9));
                var v = ov.swizzle.gaka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1), new Half(5), new Half(6.5), new Half(-6.5));
                var v = ov.swizzle.gakar;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3), new Half(7), new Half(5), new Half(9));
                var v = ov.swizzle.gakag;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), new Half(6), new Half(4), new Half(1.5));
                var v = ov.swizzle.gakab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-5), new Half(-5), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.gakaa;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(6.5), new Half(-1), new Half(7.5));
                var v = ov.swizzle.gakak;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), Half.Zero, new Half(1.5), new Half(6.5));
                var v = ov.swizzle.gakk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-6.5), new Half(2), new Half(-5));
                var v = ov.swizzle.gakkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(1.5), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.gakkg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9), new Half(-6.5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.gakkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(-6), new Half(6.5), new Half(7));
                var v = ov.swizzle.gakka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(-2), new Half(4), new Half(-1));
                var v = ov.swizzle.gakkk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5), new Half(5.5), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.gk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2), new Half(-6), new Half(9), new Half(5.5));
                var v = ov.swizzle.gkr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(3), new Half(-0.5), new Half(9));
                var v = ov.swizzle.gkrr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(4.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.gkrrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(7), new Half(-5), new Half(-4));
                var v = ov.swizzle.gkrrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(4), new Half(-6.5), new Half(3.5));
                var v = ov.swizzle.gkrrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(-8), new Half(1.5), new Half(2));
                var v = ov.swizzle.gkrra;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8), new Half(3.5), new Half(4.5), new Half(5));
                var v = ov.swizzle.gkrrk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-3), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.gkrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(-2.5), new Half(-2.5), Half.Zero);
                var v = ov.swizzle.gkrgr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(4.5), new Half(5), new Half(1.5));
                var v = ov.swizzle.gkrgg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6), new Half(-9.5), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.gkrgb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(3.5), new Half(-7), new Half(7));
                var v = ov.swizzle.gkrga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(-3), new Half(-2.5), new Half(2));
                var v = ov.swizzle.gkrgk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(9.5), new Half(-2), new Half(3));
                var v = ov.swizzle.gkrb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(-5), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.gkrbr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7), new Half(-8), new Half(-6.5), new Half(-3));
                var v = ov.swizzle.gkrbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9), new Half(-2), new Half(9.5), new Half(1.5));
                var v = ov.swizzle.gkrbb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1.5), new Half(8), new Half(-7), new Half(4.5));
                var v = ov.swizzle.gkrba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(6.5), new Half(-4.5), new Half(-8.5));
                var v = ov.swizzle.gkrbk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(9.5), new Half(-5.5), Half.One);
                var v = ov.swizzle.gkra;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2.5), new Half(-7.5), new Half(2), new Half(-5));
                var v = ov.swizzle.gkrar;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2.5), new Half(-2.5), new Half(2), new Half(1.5));
                var v = ov.swizzle.gkrag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9.5), new Half(-1), new Half(3), new Half(-3));
                var v = ov.swizzle.gkrab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(-3), new Half(6.5), new Half(2));
                var v = ov.swizzle.gkraa;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-7.5), new Half(-6.5), new Half(-7), new Half(5));
                var v = ov.swizzle.gkrak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3.5), new Half(0.5), new Half(-2), new Half(3));
                var v = ov.swizzle.gkrk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(3.5), new Half(-8.5), new Half(-5.5));
                var v = ov.swizzle.gkrkr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6.5), new Half(8), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.gkrkg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.One, new Half(5), new Half(-3.5), Half.Zero);
                var v = ov.swizzle.gkrkb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(3.5), new Half(-2), new Half(8.5));
                var v = ov.swizzle.gkrka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), new Half(3), new Half(-8.5), new Half(1.5));
                var v = ov.swizzle.gkrkk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(4), new Half(6.5), new Half(6));
                var v = ov.swizzle.gkg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(-5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.gkgr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-2.5), new Half(-0.5), new Half(-9), new Half(9));
                var v = ov.swizzle.gkgrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3.5), new Half(-1.5), new Half(-4.5), new Half(5.5));
                var v = ov.swizzle.gkgrg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(7.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.gkgrb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9.5), new Half(-8), new Half(-4), new Half(-1.5));
                var v = ov.swizzle.gkgra;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-3), new Half(0.5), new Half(-6));
                var v = ov.swizzle.gkgrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(1.5), new Half(-3), new Half(-8), new Half(-7.5));
                var v = ov.swizzle.gkgg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(6), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.gkggr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9), new Half(-4), new Half(2), new Half(-3));
                var v = ov.swizzle.gkggg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(-8), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.gkggb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2), new Half(-1.5), new Half(7), new Half(8.5));
                var v = ov.swizzle.gkgga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5.5), Half.One, new Half(-2), new Half(6.5));
                var v = ov.swizzle.gkggk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5), new Half(9.5), new Half(2), new Half(-6));
                var v = ov.swizzle.gkgb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(-1), new Half(3), new Half(-0.5));
                var v = ov.swizzle.gkgbr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(-3.5), new Half(3.5), new Half(8.5));
                var v = ov.swizzle.gkgbg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3.5), new Half(-6), Half.Zero, new Half(4));
                var v = ov.swizzle.gkgbb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(-3.5), new Half(8), new Half(-4.5));
                var v = ov.swizzle.gkgba;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3), new Half(5), new Half(-9), new Half(4.5));
                var v = ov.swizzle.gkgbk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(5.5), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.gkga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1), new Half(-1), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.gkgar;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9.5), new Half(-5), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.gkgag;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(5.5), new Half(8), new Half(9.5));
                var v = ov.swizzle.gkgab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), Half.One, new Half(6), new Half(-2.5));
                var v = ov.swizzle.gkgaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1.5), new Half(0.5), new Half(-8), new Half(4.5));
                var v = ov.swizzle.gkgak;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(1.5), new Half(9), new Half(7));
                var v = ov.swizzle.gkgk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), new Half(-2), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.gkgkr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(0.5), new Half(-8.5), new Half(2));
                var v = ov.swizzle.gkgkg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(-0.5), new Half(-1), new Half(3));
                var v = ov.swizzle.gkgkb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(6.5), new Half(-9.5), new Half(1.5));
                var v = ov.swizzle.gkgka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-0.5), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.gkgkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(2.5), new Half(1.5), new Half(-0.5));
                var v = ov.swizzle.gkb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), new Half(5), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.gkbr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(-6.5), new Half(-4.5), new Half(9));
                var v = ov.swizzle.gkbrr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(-9.5), new Half(3), new Half(-8));
                var v = ov.swizzle.gkbrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(-9.5), new Half(-5), new Half(8.5));
                var v = ov.swizzle.gkbrb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(-1), new Half(-8), new Half(4.5));
                var v = ov.swizzle.gkbra;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4.5), new Half(-5.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.gkbrk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(8.5), new Half(1.5), new Half(-6));
                var v = ov.swizzle.gkbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), Half.Zero, new Half(-1), new Half(5.5));
                var v = ov.swizzle.gkbgr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(-2), new Half(-1), new Half(3));
                var v = ov.swizzle.gkbgg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(-4.5), new Half(9), new Half(0.5));
                var v = ov.swizzle.gkbgb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.Zero, new Half(-8), new Half(3.5), new Half(8));
                var v = ov.swizzle.gkbga;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(-2.5), new Half(4.5), new Half(-3.5));
                var v = ov.swizzle.gkbgk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-0.5), new Half(-3.5), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.gkbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(-0.5), new Half(-1.5), new Half(-6));
                var v = ov.swizzle.gkbbr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(9), new Half(-9), new Half(-7));
                var v = ov.swizzle.gkbbg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(9.5), new Half(-5), new Half(8.5));
                var v = ov.swizzle.gkbbb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-5), new Half(6), new Half(6));
                var v = ov.swizzle.gkbba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.gkbbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(6), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.gkba;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9.5), new Half(-7.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.gkbar;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(7.5), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.gkbag;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(8.5), new Half(-7), new Half(-3));
                var v = ov.swizzle.gkbab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(-2), new Half(6.5), new Half(-6));
                var v = ov.swizzle.gkbaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5), new Half(-9.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.gkbak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(6), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.gkbk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-4.5), new Half(5), new Half(-5.5));
                var v = ov.swizzle.gkbkr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(0.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.gkbkg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(-8.5), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.gkbkb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5), new Half(-0.5), new Half(9), new Half(3));
                var v = ov.swizzle.gkbka;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7), new Half(9), new Half(7), new Half(0.5));
                var v = ov.swizzle.gkbkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9), new Half(8.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.gka;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(-6), new Half(-7.5), new Half(2));
                var v = ov.swizzle.gkar;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5), new Half(2.5), new Half(2.5), new Half(-7));
                var v = ov.swizzle.gkarr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7), new Half(5.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.gkarg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4.5), new Half(5.5), new Half(8), new Half(-5));
                var v = ov.swizzle.gkarb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(7.5), new Half(-8), new Half(6));
                var v = ov.swizzle.gkara;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7.5), new Half(-8), new Half(-5), new Half(6));
                var v = ov.swizzle.gkark;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(-3), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.gkag;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(9.5), new Half(-7.5), new Half(-5));
                var v = ov.swizzle.gkagr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(6.5), new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.gkagg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(3.5), new Half(-2.5), new Half(9));
                var v = ov.swizzle.gkagb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(0.5), new Half(2), Half.Zero);
                var v = ov.swizzle.gkaga;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(8.5), new Half(-5), Half.One);
                var v = ov.swizzle.gkagk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(-7), new Half(-4.5), new Half(9.5));
                var v = ov.swizzle.gkab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(-5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.gkabr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-4), new Half(3.5), new Half(2));
                var v = ov.swizzle.gkabg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-1.5), new Half(3), new Half(1.5), new Half(7));
                var v = ov.swizzle.gkabb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(0.5), new Half(5), new Half(-5.5));
                var v = ov.swizzle.gkaba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(-1), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.gkabk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3.5), new Half(-5.5), new Half(-9.5), new Half(5.5));
                var v = ov.swizzle.gkaa;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-1), new Half(3.5), new Half(3.5));
                var v = ov.swizzle.gkaar;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(5.5), new Half(6.5), new Half(-4));
                var v = ov.swizzle.gkaag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(9), new Half(6.5), new Half(9.5), new Half(-8));
                var v = ov.swizzle.gkaab;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6), new Half(6), new Half(6), new Half(-7.5));
                var v = ov.swizzle.gkaaa;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7.5), new Half(-2), Half.One, new Half(4));
                var v = ov.swizzle.gkaak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-6.5), new Half(5.5), new Half(9.5), new Half(-4));
                var v = ov.swizzle.gkak;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(3.5), new Half(8.5), new Half(-9));
                var v = ov.swizzle.gkakr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(-1), new Half(8.5), new Half(4));
                var v = ov.swizzle.gkakg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(4.5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.gkakb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(8.5), new Half(-2), Half.One, new Half(8));
                var v = ov.swizzle.gkaka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9), new Half(-7), new Half(8.5), new Half(4));
                var v = ov.swizzle.gkakk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5.5), new Half(8), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.gkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(6.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.gkkr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(8.5), new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.gkkrr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(8), new Half(2), new Half(9));
                var v = ov.swizzle.gkkrg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), new Half(-8.5), new Half(5), new Half(-8.5));
                var v = ov.swizzle.gkkrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(3.5), new Half(0.5), new Half(2));
                var v = ov.swizzle.gkkra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4.5), new Half(5.5), new Half(3.5), new Half(2.5));
                var v = ov.swizzle.gkkrk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(-7.5), new Half(2), new Half(-6.5));
                var v = ov.swizzle.gkkg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(-2), new Half(-3.5), new Half(-9));
                var v = ov.swizzle.gkkgr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9.5), new Half(0.5), new Half(9), new Half(7.5));
                var v = ov.swizzle.gkkgg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1), new Half(-4), new Half(-1.5), new Half(6));
                var v = ov.swizzle.gkkgb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3), new Half(3), new Half(7), new Half(6.5));
                var v = ov.swizzle.gkkga;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), new Half(6), new Half(-9), new Half(-6));
                var v = ov.swizzle.gkkgk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(5), new Half(-0.5), new Half(-0.5));
                var v = ov.swizzle.gkkb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(5), new Half(-9), new Half(-1));
                var v = ov.swizzle.gkkbr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(1.5), new Half(4.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.gkkbg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), new Half(-5.5), new Half(3.5), new Half(-1.5));
                var v = ov.swizzle.gkkbb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-9.5), new Half(6), new Half(-2.5), new Half(8));
                var v = ov.swizzle.gkkba;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(-4), new Half(6), new Half(-5));
                var v = ov.swizzle.gkkbk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(3.5), new Half(9), new Half(5.5));
                var v = ov.swizzle.gkka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), Half.One, new Half(-9.5), new Half(3.5));
                var v = ov.swizzle.gkkar;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5), new Half(4.5), new Half(-8), new Half(3));
                var v = ov.swizzle.gkkag;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8), new Half(-6), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.gkkab;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4.5), new Half(-4), new Half(1.5), new Half(7.5));
                var v = ov.swizzle.gkkaa;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4), new Half(-9), new Half(-8.5), new Half(0.5));
                var v = ov.swizzle.gkkak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(9.5), new Half(4), new Half(-0.5));
                var v = ov.swizzle.gkkk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7.5), new Half(-4.5), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.gkkkr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(4), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.gkkkg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4.5), new Half(-1.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.gkkkb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(-7), new Half(-1), new Half(-1.5));
                var v = ov.swizzle.gkkka;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5), new Half(2), new Half(-3), new Half(2.5));
                var v = ov.swizzle.gkkkk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5), new Half(-8.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.br;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6), new Half(0.5), new Half(-0.5), new Half(-0.5));
                var v = ov.swizzle.brr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6.5), new Half(-6.5), new Half(-2), new Half(-0.5));
                var v = ov.swizzle.brrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(-5), new Half(3), new Half(-5.5));
                var v = ov.swizzle.brrrr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3.5), new Half(4.5), new Half(4), new Half(9.5));
                var v = ov.swizzle.brrrg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(-1.5), new Half(-7), new Half(2));
                var v = ov.swizzle.brrrb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(-3), Half.Zero, new Half(-1));
                var v = ov.swizzle.brrra;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9.5), new Half(-4), new Half(3), new Half(-0.5));
                var v = ov.swizzle.brrrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(9.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.brrg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(6), new Half(5), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.brrgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.Zero, new Half(8.5), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.brrgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(-6), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.brrgb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-4), new Half(-3.5), new Half(-0.5));
                var v = ov.swizzle.brrga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1), new Half(-6.5), Half.Zero, new Half(8.5));
                var v = ov.swizzle.brrgk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(-2), new Half(-5), new Half(-7));
                var v = ov.swizzle.brrb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(9.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.brrbr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8), new Half(7), new Half(5.5), new Half(5));
                var v = ov.swizzle.brrbg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6.5), new Half(-5.5), new Half(-3.5), new Half(-6.5));
                var v = ov.swizzle.brrbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-6.5), new Half(-5), new Half(-4));
                var v = ov.swizzle.brrba;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(-3), new Half(5), new Half(-7.5));
                var v = ov.swizzle.brrbk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(5), new Half(-7.5), new Half(-4));
                var v = ov.swizzle.brra;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(-5.5), new Half(-2), new Half(1.5));
                var v = ov.swizzle.brrar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(3.5), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.brrag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(-8), new Half(-9.5), new Half(-0.5));
                var v = ov.swizzle.brrab;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2.5), new Half(6.5), new Half(-7), new Half(-2.5));
                var v = ov.swizzle.brraa;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3.5), new Half(6.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.brrak;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(4.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.brrk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(-4.5), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.brrkr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2), new Half(-2), new Half(5.5), new Half(-7.5));
                var v = ov.swizzle.brrkg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), new Half(-5.5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.brrkb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(2.5), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.brrka;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2.5), new Half(-1.5), new Half(5.5), new Half(-1.5));
                var v = ov.swizzle.brrkk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2.5), new Half(-5.5), new Half(-5.5), new Half(1.5));
                var v = ov.swizzle.brg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2.5), new Half(2.5), new Half(2), new Half(-1));
                var v = ov.swizzle.brgr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(5.5), new Half(4.5), new Half(-9));
                var v = ov.swizzle.brgrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), Half.One, new Half(4.5), new Half(7.5));
                var v = ov.swizzle.brgrg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(9), new Half(-5.5), new Half(7));
                var v = ov.swizzle.brgrb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-8), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.brgra;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), new Half(0.5), new Half(3.5), new Half(8.5));
                var v = ov.swizzle.brgrk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(-1.5), new Half(3), new Half(4.5));
                var v = ov.swizzle.brgg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(-8.5), new Half(-6), new Half(1.5));
                var v = ov.swizzle.brggr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(8.5), new Half(7.5), new Half(0.5));
                var v = ov.swizzle.brggg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3.5), new Half(4.5), new Half(7.5), new Half(3.5));
                var v = ov.swizzle.brggb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6.5), new Half(9.5), new Half(-6), new Half(4.5));
                var v = ov.swizzle.brgga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(-1), new Half(-6), new Half(-7.5));
                var v = ov.swizzle.brggk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), Half.One, new Half(6.5), Half.Zero);
                var v = ov.swizzle.brgb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), new Half(7.5), Half.Zero, new Half(3.5));
                var v = ov.swizzle.brgbr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(3.5), new Half(3.5), new Half(-4));
                var v = ov.swizzle.brgbg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7.5), new Half(-9.5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.brgbb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(0.5), new Half(2.5), Half.Zero, new Half(-8.5));
                var v = ov.swizzle.brgba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-2), new Half(9), new Half(-2.5));
                var v = ov.swizzle.brgbk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), new Half(5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.brga;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6), new Half(2), new Half(7.5), new Half(-1.5));
                var v = ov.swizzle.brgar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1.5), new Half(3.5), new Half(3), new Half(5.5));
                var v = ov.swizzle.brgag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-0.5), new Half(6), new Half(2), new Half(5));
                var v = ov.swizzle.brgab;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(-9.5), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.brgaa;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), Half.One, new Half(-6), new Half(3));
                var v = ov.swizzle.brgak;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6), new Half(-2.5), new Half(-3), new Half(9.5));
                var v = ov.swizzle.brgk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(8.5), Half.One, new Half(-4));
                var v = ov.swizzle.brgkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9.5), new Half(-6.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.brgkg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6.5), new Half(-0.5), new Half(4), new Half(0.5));
                var v = ov.swizzle.brgkb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6.5), new Half(8), new Half(3), Half.One);
                var v = ov.swizzle.brgka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6), new Half(-6.5), new Half(-6), new Half(-8.5));
                var v = ov.swizzle.brgkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4), new Half(-3.5), new Half(3.5), new Half(-7));
                var v = ov.swizzle.brb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), Half.One, new Half(-8.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.brbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(4), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.brbrr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6), new Half(-8), new Half(5.5), new Half(3));
                var v = ov.swizzle.brbrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4), new Half(7.5), new Half(-4.5), new Half(7.5));
                var v = ov.swizzle.brbrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(-5.5), new Half(-1), new Half(4.5));
                var v = ov.swizzle.brbra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9.5), new Half(-7.5), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.brbrk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), new Half(-0.5), new Half(-3.5), new Half(5.5));
                var v = ov.swizzle.brbg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6), new Half(-5.5), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.brbgr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9), new Half(-8.5), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.brbgg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(-2.5), new Half(-3), new Half(7));
                var v = ov.swizzle.brbgb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7), Half.One, new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.brbga;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-7), new Half(9), new Half(-1), new Half(-9.5));
                var v = ov.swizzle.brbgk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(-5.5), new Half(-2), new Half(6));
                var v = ov.swizzle.brbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(1.5), new Half(9.5), new Half(0.5));
                var v = ov.swizzle.brbbr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-0.5), new Half(-7), Half.One, new Half(-7.5));
                var v = ov.swizzle.brbbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4.5), new Half(3), new Half(-4), new Half(5.5));
                var v = ov.swizzle.brbbb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-2), new Half(9), new Half(-4), new Half(3.5));
                var v = ov.swizzle.brbba;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2.5), new Half(2.5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.brbbk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(-4), Half.Zero, new Half(-6));
                var v = ov.swizzle.brba;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5.5), new Half(9), new Half(-3), new Half(-3.5));
                var v = ov.swizzle.brbar;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7.5), new Half(-1.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.brbag;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), Half.Zero, new Half(-5), new Half(-9));
                var v = ov.swizzle.brbab;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), new Half(5.5), new Half(-5), new Half(3));
                var v = ov.swizzle.brbaa;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(9), new Half(-8), new Half(7.5));
                var v = ov.swizzle.brbak;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4.5), new Half(4.5), new Half(-1.5), new Half(3.5));
                var v = ov.swizzle.brbk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(-7), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.brbkr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(1.5), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.brbkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5.5), new Half(-2.5), new Half(4), new Half(8.5));
                var v = ov.swizzle.brbkb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-8), new Half(-9), new Half(-2));
                var v = ov.swizzle.brbka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(9.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.brbkk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4.5), new Half(1.5), new Half(-5), new Half(6));
                var v = ov.swizzle.bra;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(9.5), new Half(-0.5), new Half(-8));
                var v = ov.swizzle.brar;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-6), Half.Zero, new Half(4));
                var v = ov.swizzle.brarr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7.5), new Half(6), Half.One, new Half(-5.5));
                var v = ov.swizzle.brarg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-2), new Half(5), new Half(-9), new Half(-8));
                var v = ov.swizzle.brarb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(-5), new Half(-7), new Half(-1));
                var v = ov.swizzle.brara;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(-9.5), new Half(3), new Half(6));
                var v = ov.swizzle.brark;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5.5), new Half(-6), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.brag;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5.5), new Half(8.5), new Half(-2.5), new Half(-9));
                var v = ov.swizzle.bragr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(-8), new Half(-5), new Half(-1.5));
                var v = ov.swizzle.bragg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(7.5), new Half(-3), new Half(9));
                var v = ov.swizzle.bragb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-2), new Half(6.5), new Half(-9));
                var v = ov.swizzle.braga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1.5), new Half(-6.5), new Half(-8), new Half(6.5));
                var v = ov.swizzle.bragk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3.5), new Half(-2), new Half(3.5), new Half(-5));
                var v = ov.swizzle.brab;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6), new Half(-4.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.brabr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-4), new Half(-9), Half.Zero, new Half(-3));
                var v = ov.swizzle.brabg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(9.5), new Half(-0.5), new Half(-1));
                var v = ov.swizzle.brabb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8), new Half(7), new Half(4.5), new Half(-1));
                var v = ov.swizzle.braba;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3), new Half(-9), new Half(2), new Half(-2.5));
                var v = ov.swizzle.brabk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-9.5), new Half(0.5), new Half(-6));
                var v = ov.swizzle.braa;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(3), new Half(-5.5), Half.Zero, new Half(-0.5));
                var v = ov.swizzle.braar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(-4), new Half(4), new Half(-7.5));
                var v = ov.swizzle.braag;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-2), new Half(-5.5), new Half(6));
                var v = ov.swizzle.braab;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(4.5), new Half(7), new Half(-9.5));
                var v = ov.swizzle.braaa;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(-7), new Half(-6.5), new Half(5));
                var v = ov.swizzle.braak;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(-7.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.brak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(-0.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.brakr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(9.5), Half.Zero, new Half(-6));
                var v = ov.swizzle.brakg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4), new Half(2), new Half(-3), new Half(-1.5));
                var v = ov.swizzle.brakb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(5.5), new Half(6.5), new Half(-4.5));
                var v = ov.swizzle.braka;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-2), new Half(9), new Half(1.5));
                var v = ov.swizzle.brakk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), Half.One, new Half(5.5), new Half(2));
                var v = ov.swizzle.brk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(-6), new Half(-6.5), new Half(5.5));
                var v = ov.swizzle.brkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), new Half(-2.5), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.brkrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-0.5), new Half(3.5), new Half(1.5), new Half(-8.5));
                var v = ov.swizzle.brkrg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(4), new Half(4.5), new Half(6.5));
                var v = ov.swizzle.brkrb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(-3.5), new Half(-2), new Half(-7.5));
                var v = ov.swizzle.brkra;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7.5), new Half(-9), new Half(3.5), new Half(-4));
                var v = ov.swizzle.brkrk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(4), new Half(7.5), new Half(9));
                var v = ov.swizzle.brkg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(-9), new Half(-7), Half.Zero);
                var v = ov.swizzle.brkgr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), new Half(-2), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.brkgg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(-9.5), new Half(-0.5), new Half(-1));
                var v = ov.swizzle.brkgb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(6), new Half(8.5), new Half(-7));
                var v = ov.swizzle.brkga;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(9), new Half(3), Half.One, new Half(-7));
                var v = ov.swizzle.brkgk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(4.5), new Half(9), new Half(-7));
                var v = ov.swizzle.brkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(6.5), new Half(-7.5), new Half(-9));
                var v = ov.swizzle.brkbr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(-2.5), new Half(4.5), new Half(8.5));
                var v = ov.swizzle.brkbg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(-2.5), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.brkbb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(0.5), new Half(-6.5), new Half(-1));
                var v = ov.swizzle.brkba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6.5), new Half(5), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.brkbk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(-8), Half.Zero, new Half(5.5));
                var v = ov.swizzle.brka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-9), Half.One, new Half(-8.5), new Half(2.5));
                var v = ov.swizzle.brkar;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(7.5), new Half(9), new Half(-9));
                var v = ov.swizzle.brkag;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(-3), Half.Zero, new Half(5));
                var v = ov.swizzle.brkab;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6.5), new Half(-9), new Half(-1.5), new Half(-2));
                var v = ov.swizzle.brkaa;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2), new Half(-2), new Half(8.5), new Half(-8));
                var v = ov.swizzle.brkak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9), new Half(-6), new Half(-1.5), new Half(-3.5));
                var v = ov.swizzle.brkk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(-2.5), new Half(8.5), new Half(3.5));
                var v = ov.swizzle.brkkr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9), new Half(6), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.brkkg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4), new Half(-9.5), new Half(3), new Half(-2));
                var v = ov.swizzle.brkkb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(5), new Half(-5), Half.One);
                var v = ov.swizzle.brkka;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(0.5), new Half(-1.5), new Half(2.5));
                var v = ov.swizzle.brkkk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), new Half(3), new Half(2), new Half(2.5));
                var v = ov.swizzle.bg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7), v.y);
            }
            {
                var ov = new hvec5(new Half(5), Half.One, new Half(9), new Half(-6.5), new Half(-3));
                var v = ov.swizzle.bgr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8), new Half(-4), new Half(6), new Half(-3));
                var v = ov.swizzle.bgrr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6), new Half(-3.5), new Half(9.5), new Half(-5.5));
                var v = ov.swizzle.bgrrr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(8), new Half(-2.5), new Half(-5));
                var v = ov.swizzle.bgrrg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-3), Half.One, new Half(-3.5), new Half(-7));
                var v = ov.swizzle.bgrrb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(8.5), new Half(6), new Half(0.5));
                var v = ov.swizzle.bgrra;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6), new Half(3), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.bgrrk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(7.5), new Half(0.5), new Half(8.5));
                var v = ov.swizzle.bgrg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(9.5), Half.One, new Half(-2.5));
                var v = ov.swizzle.bgrgr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(1.5), new Half(4), new Half(3.5));
                var v = ov.swizzle.bgrgg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(-7), new Half(-1.5), new Half(-7));
                var v = ov.swizzle.bgrgb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.Zero, new Half(-5.5), new Half(6), new Half(-3));
                var v = ov.swizzle.bgrga;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9), new Half(7), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.bgrgk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(-3.5), new Half(-6), new Half(7.5));
                var v = ov.swizzle.bgrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-8), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.bgrbr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-4), new Half(9.5), new Half(8.5), new Half(-5.5));
                var v = ov.swizzle.bgrbg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(4.5), new Half(-3), new Half(9));
                var v = ov.swizzle.bgrbb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9.5), new Half(-6), new Half(-6.5), new Half(1.5));
                var v = ov.swizzle.bgrba;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1), new Half(0.5), new Half(-7), new Half(-9.5));
                var v = ov.swizzle.bgrbk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(-5.5), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.bgra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(-5), new Half(7), new Half(-0.5));
                var v = ov.swizzle.bgrar;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7.5), new Half(-1.5), new Half(7), new Half(9));
                var v = ov.swizzle.bgrag;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(-4.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.bgrab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-6), new Half(4.5), new Half(5), new Half(4));
                var v = ov.swizzle.bgraa;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(2), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.bgrak;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), Half.Zero, new Half(8), new Half(5.5));
                var v = ov.swizzle.bgrk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(-2.5), new Half(8), new Half(3));
                var v = ov.swizzle.bgrkr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-0.5), new Half(-3.5), new Half(-5.5), new Half(-3));
                var v = ov.swizzle.bgrkg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1), new Half(7), new Half(-4), new Half(-3));
                var v = ov.swizzle.bgrkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3.5), new Half(7), new Half(-4.5), new Half(6));
                var v = ov.swizzle.bgrka;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(-8), new Half(7), new Half(1.5));
                var v = ov.swizzle.bgrkk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(1.5), new Half(1.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.bgg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(-9.5), new Half(-3), new Half(2));
                var v = ov.swizzle.bggr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3), new Half(-6), new Half(-9), new Half(6));
                var v = ov.swizzle.bggrr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-0.5), new Half(9), new Half(3.5), Half.One);
                var v = ov.swizzle.bggrg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-0.5), new Half(-1.5), new Half(-2), new Half(-4.5));
                var v = ov.swizzle.bggrb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3.5), new Half(-6), Half.One, new Half(-4.5));
                var v = ov.swizzle.bggra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-2), new Half(-9), new Half(-8), new Half(-8.5));
                var v = ov.swizzle.bggrk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(0.5), new Half(-0.5), new Half(-1));
                var v = ov.swizzle.bggg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(1.5), new Half(5.5), new Half(-2), new Half(-5.5));
                var v = ov.swizzle.bgggr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9), new Half(-0.5), new Half(-8), new Half(-6.5));
                var v = ov.swizzle.bgggg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(6.5), new Half(-5.5), new Half(6), new Half(3));
                var v = ov.swizzle.bgggb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3), new Half(-9), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.bggga;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4), new Half(-9), new Half(-2.5), new Half(2));
                var v = ov.swizzle.bgggk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(7.5), new Half(8.5), new Half(-3));
                var v = ov.swizzle.bggb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(-8.5), new Half(-6.5), new Half(-9.5));
                var v = ov.swizzle.bggbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(4.5), new Half(-7), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.bggbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7.5), new Half(8.5), new Half(-8), new Half(3));
                var v = ov.swizzle.bggbb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2.5), new Half(-3), new Half(-5), new Half(-1.5));
                var v = ov.swizzle.bggba;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(-9), Half.One, new Half(3.5));
                var v = ov.swizzle.bggbk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(7), new Half(8), new Half(6));
                var v = ov.swizzle.bgga;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3), new Half(0.5), new Half(4), new Half(8.5));
                var v = ov.swizzle.bggar;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), Half.One, new Half(-2.5), new Half(6));
                var v = ov.swizzle.bggag;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3.5), new Half(1.5), new Half(8.5), new Half(0.5));
                var v = ov.swizzle.bggab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6), Half.One, new Half(-6.5), new Half(8.5));
                var v = ov.swizzle.bggaa;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(-7.5), new Half(9), new Half(-7.5));
                var v = ov.swizzle.bggak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(-9.5), new Half(-0.5), new Half(2));
                var v = ov.swizzle.bggk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-3.5), new Half(8), new Half(-8.5), new Half(4.5));
                var v = ov.swizzle.bggkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6), new Half(3.5), new Half(-9), new Half(-7.5));
                var v = ov.swizzle.bggkg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(-3.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.bggkb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(-9.5), new Half(-1), new Half(-4));
                var v = ov.swizzle.bggka;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-1), new Half(-5.5), new Half(9), new Half(-8));
                var v = ov.swizzle.bggkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(0.5), new Half(-8.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.bgb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(-3), new Half(-5.5), new Half(-6.5));
                var v = ov.swizzle.bgbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8), new Half(9), new Half(4), new Half(6));
                var v = ov.swizzle.bgbrr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-4), new Half(-7.5), Half.One, new Half(9));
                var v = ov.swizzle.bgbrg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(5.5), new Half(-5), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.bgbrb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(8), new Half(-6), new Half(2.5));
                var v = ov.swizzle.bgbra;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(8.5), new Half(3), new Half(6.5));
                var v = ov.swizzle.bgbrk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-3.5), new Half(-1), new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.bgbg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4), Half.One, new Half(-5.5), new Half(-8));
                var v = ov.swizzle.bgbgr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(-6), new Half(4), Half.Zero);
                var v = ov.swizzle.bgbgg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-6.5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.bgbgb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), Half.Zero, new Half(4), new Half(-5));
                var v = ov.swizzle.bgbga;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(7.5), new Half(2.5), new Half(-1));
                var v = ov.swizzle.bgbgk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9.5), new Half(6), new Half(7), new Half(-3));
                var v = ov.swizzle.bgbb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3), new Half(5.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.bgbbr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(4.5), new Half(0.5), new Half(2), new Half(2.5));
                var v = ov.swizzle.bgbbg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4.5), new Half(4), new Half(-5), new Half(5.5));
                var v = ov.swizzle.bgbbb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9), new Half(8.5), new Half(-0.5), new Half(5.5));
                var v = ov.swizzle.bgbba;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(5), new Half(-2), new Half(-8));
                var v = ov.swizzle.bgbbk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(9), new Half(-4), new Half(7));
                var v = ov.swizzle.bgba;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(7), new Half(2.5), new Half(-4));
                var v = ov.swizzle.bgbar;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3.5), Half.Zero, new Half(-6.5), new Half(-5.5));
                var v = ov.swizzle.bgbag;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3.5), new Half(8.5), new Half(-3), new Half(-6));
                var v = ov.swizzle.bgbab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7.5), new Half(-7.5), new Half(6.5), new Half(-2.5));
                var v = ov.swizzle.bgbaa;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8.5), new Half(-7), new Half(-3), new Half(4.5));
                var v = ov.swizzle.bgbak;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(-6.5), new Half(4), new Half(8));
                var v = ov.swizzle.bgbk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-6), new Half(4.5), new Half(-3.5));
                var v = ov.swizzle.bgbkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), new Half(-2), Half.One, new Half(2));
                var v = ov.swizzle.bgbkg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9), new Half(-6), new Half(4), new Half(-2.5));
                var v = ov.swizzle.bgbkb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3.5), new Half(3.5), new Half(6.5), Half.Zero);
                var v = ov.swizzle.bgbka;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4.5), new Half(-3), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.bgbkk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4.5), new Half(5.5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.bga;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(6.5), new Half(-4), new Half(-1));
                var v = ov.swizzle.bgar;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(3), new Half(-3.5), new Half(-1.5));
                var v = ov.swizzle.bgarr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9), new Half(-8.5), new Half(4.5), new Half(6.5));
                var v = ov.swizzle.bgarg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(-3), new Half(-3.5), new Half(2));
                var v = ov.swizzle.bgarb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4), new Half(-2.5), new Half(3), new Half(-5.5));
                var v = ov.swizzle.bgara;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(-1.5), new Half(-9), Half.Zero);
                var v = ov.swizzle.bgark;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-7.5), new Half(-5), new Half(0.5), new Half(6));
                var v = ov.swizzle.bgag;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), Half.One, new Half(3.5), new Half(3));
                var v = ov.swizzle.bgagr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7.5), new Half(6), new Half(7), Half.Zero);
                var v = ov.swizzle.bgagg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-4), new Half(-9), new Half(0.5), new Half(3));
                var v = ov.swizzle.bgagb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(8), new Half(4.5), new Half(4.5));
                var v = ov.swizzle.bgaga;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6.5), new Half(2.5), new Half(0.5), new Half(1.5));
                var v = ov.swizzle.bgagk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(-4.5), new Half(-4.5), new Half(6.5));
                var v = ov.swizzle.bgab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(0.5), new Half(-2.5), new Half(-7));
                var v = ov.swizzle.bgabr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(-9), new Half(-7.5), new Half(-7.5));
                var v = ov.swizzle.bgabg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7.5), new Half(-9), new Half(3), new Half(8));
                var v = ov.swizzle.bgabb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(7.5), new Half(-6), new Half(-8.5));
                var v = ov.swizzle.bgaba;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3), new Half(-9.5), new Half(5.5), new Half(-5));
                var v = ov.swizzle.bgabk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(0.5), new Half(-2), Half.One, new Half(1.5));
                var v = ov.swizzle.bgaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-7.5), new Half(-2), new Half(-7.5));
                var v = ov.swizzle.bgaar;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(1.5), new Half(-4), new Half(-3));
                var v = ov.swizzle.bgaag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3), new Half(-3.5), new Half(-3), Half.One);
                var v = ov.swizzle.bgaab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(-1.5), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.bgaaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5.5), new Half(9), new Half(4), new Half(-3.5));
                var v = ov.swizzle.bgaak;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(4.5), new Half(-3), new Half(-9.5));
                var v = ov.swizzle.bgak;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2.5), new Half(-7), new Half(1.5), new Half(-7.5));
                var v = ov.swizzle.bgakr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5), new Half(7), new Half(-7.5), new Half(-1.5));
                var v = ov.swizzle.bgakg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-5.5), new Half(2), new Half(3));
                var v = ov.swizzle.bgakb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(6), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.bgaka;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(-0.5), new Half(-6), new Half(-2));
                var v = ov.swizzle.bgakk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1.5), new Half(-8), new Half(-4.5), new Half(-7));
                var v = ov.swizzle.bgk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1.5), new Half(-9), new Half(3.5), new Half(-4));
                var v = ov.swizzle.bgkr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2.5), new Half(5.5), new Half(1.5), new Half(4));
                var v = ov.swizzle.bgkrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6.5), new Half(6), new Half(4.5), new Half(3));
                var v = ov.swizzle.bgkrg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(7), Half.Zero, new Half(-9.5));
                var v = ov.swizzle.bgkrb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), Half.Zero, new Half(1.5), new Half(-2.5));
                var v = ov.swizzle.bgkra;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), Half.Zero, new Half(-9.5), new Half(6));
                var v = ov.swizzle.bgkrk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7.5), new Half(-7.5), new Half(4), new Half(-6.5));
                var v = ov.swizzle.bgkg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7.5), new Half(0.5), new Half(-0.5), new Half(-9));
                var v = ov.swizzle.bgkgr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(-6), new Half(-0.5), new Half(2));
                var v = ov.swizzle.bgkgg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5.5), new Half(5.5), new Half(-2), new Half(2.5));
                var v = ov.swizzle.bgkgb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8.5), new Half(-7), new Half(5), new Half(7.5));
                var v = ov.swizzle.bgkga;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1.5), new Half(-2.5), new Half(6), new Half(-6));
                var v = ov.swizzle.bgkgk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3.5), new Half(-6), new Half(-5.5), new Half(6.5));
                var v = ov.swizzle.bgkb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(2), new Half(-1), new Half(9));
                var v = ov.swizzle.bgkbr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9), new Half(-8), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.bgkbg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(-1), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.bgkbb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(-0.5), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.bgkba;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(-7), new Half(7), new Half(-2.5));
                var v = ov.swizzle.bgkbk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4.5), new Half(-5.5), new Half(-4), new Half(6.5));
                var v = ov.swizzle.bgka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(1.5), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.bgkar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3.5), new Half(-4.5), Half.One, new Half(5.5));
                var v = ov.swizzle.bgkag;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(4.5), new Half(5), new Half(9));
                var v = ov.swizzle.bgkab;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(8.5), new Half(-6), new Half(-3));
                var v = ov.swizzle.bgkaa;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), new Half(-0.5), new Half(3.5), new Half(8));
                var v = ov.swizzle.bgkak;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(4.5), new Half(-6.5), new Half(4));
                var v = ov.swizzle.bgkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(4), new Half(-3.5), new Half(6));
                var v = ov.swizzle.bgkkr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-8), new Half(7), new Half(8));
                var v = ov.swizzle.bgkkg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(-2.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.bgkkb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-3.5), new Half(-1), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.bgkka;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(7), Half.Zero, new Half(-9.5));
                var v = ov.swizzle.bgkkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-3.5), new Half(8.5), new Half(-5.5), new Half(-8.5));
                var v = ov.swizzle.bb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(2), new Half(6.5), new Half(2.5));
                var v = ov.swizzle.bbr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(8), new Half(8.5), new Half(6.5));
                var v = ov.swizzle.bbrr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(0.5), new Half(7), new Half(2));
                var v = ov.swizzle.bbrrr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9), new Half(7.5), new Half(8), new Half(-5.5));
                var v = ov.swizzle.bbrrg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-3.5), new Half(6.5), new Half(7.5), new Half(-7));
                var v = ov.swizzle.bbrrb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8), new Half(4), new Half(5), new Half(9));
                var v = ov.swizzle.bbrra;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3), new Half(3.5), new Half(-2.5), new Half(-6.5));
                var v = ov.swizzle.bbrrk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(0.5), new Half(9.5), new Half(4));
                var v = ov.swizzle.bbrg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(-3), Half.One, new Half(-4.5));
                var v = ov.swizzle.bbrgr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5), Half.Zero, new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.bbrgg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-0.5), new Half(-0.5), Half.Zero, new Half(7));
                var v = ov.swizzle.bbrgb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.One, new Half(4), new Half(-9.5), new Half(-4.5));
                var v = ov.swizzle.bbrga;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(3.5), new Half(3), new Half(-1.5), new Half(9));
                var v = ov.swizzle.bbrgk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(3), new Half(-5.5), new Half(0.5));
                var v = ov.swizzle.bbrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(8.5), new Half(3), new Half(5.5));
                var v = ov.swizzle.bbrbr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4), new Half(5.5), new Half(-3), new Half(-1.5));
                var v = ov.swizzle.bbrbg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(5), new Half(-9), new Half(-6.5));
                var v = ov.swizzle.bbrbb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4), new Half(2.5), new Half(-9), new Half(-4.5));
                var v = ov.swizzle.bbrba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-1), new Half(-4), new Half(2));
                var v = ov.swizzle.bbrbk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4), new Half(-5.5), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.bbra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(-7), new Half(7), new Half(-2));
                var v = ov.swizzle.bbrar;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(-3.5), new Half(4), new Half(-2));
                var v = ov.swizzle.bbrag;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5), new Half(1.5), new Half(1.5), new Half(-6.5));
                var v = ov.swizzle.bbrab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2.5), new Half(-4.5), new Half(4), new Half(-2));
                var v = ov.swizzle.bbraa;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(-5.5), new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.bbrak;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8), new Half(-5.5), Half.One, Half.One);
                var v = ov.swizzle.bbrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(0.5), new Half(2), new Half(-4.5), new Half(6));
                var v = ov.swizzle.bbrkr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.Zero, new Half(8.5), new Half(7), new Half(-6));
                var v = ov.swizzle.bbrkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1.5), new Half(-1.5), new Half(6), Half.Zero);
                var v = ov.swizzle.bbrkb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-9), new Half(0.5), new Half(-8));
                var v = ov.swizzle.bbrka;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-0.5), new Half(-9), new Half(-8.5), new Half(5));
                var v = ov.swizzle.bbrkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8), new Half(-8), new Half(-2.5), new Half(-3));
                var v = ov.swizzle.bbg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-5.5), new Half(3), new Half(-0.5));
                var v = ov.swizzle.bbgr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(6), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.bbgrr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(-7), new Half(-0.5), new Half(4));
                var v = ov.swizzle.bbgrg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-3.5), new Half(-8), new Half(8.5), new Half(-6));
                var v = ov.swizzle.bbgrb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(0.5), new Half(3.5), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.bbgra;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1), new Half(-7.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.bbgrk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(-2), new Half(4.5), new Half(-7));
                var v = ov.swizzle.bbgg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), new Half(-5.5), new Half(-7), new Half(5));
                var v = ov.swizzle.bbggr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(4.5), new Half(5), new Half(4.5));
                var v = ov.swizzle.bbggg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(-0.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.bbggb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-9.5), new Half(-2), new Half(6.5));
                var v = ov.swizzle.bbgga;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), Half.One, new Half(9), new Half(6.5));
                var v = ov.swizzle.bbggk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-8.5), new Half(-3.5), new Half(-4.5), new Half(3));
                var v = ov.swizzle.bbgb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7), new Half(-6.5), new Half(-3), new Half(4));
                var v = ov.swizzle.bbgbr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.One, Half.Zero, new Half(2.5), new Half(-4));
                var v = ov.swizzle.bbgbg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5.5), new Half(-2.5), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.bbgbb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8.5), new Half(5), new Half(8), new Half(-7));
                var v = ov.swizzle.bbgba;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(3), new Half(9.5), new Half(8.5), new Half(7));
                var v = ov.swizzle.bbgbk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2), new Half(-5), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.bbga;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(1.5), new Half(9), new Half(2), new Half(4.5));
                var v = ov.swizzle.bbgar;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-0.5), new Half(-7), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.bbgag;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), Half.Zero, new Half(-2.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.bbgab;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(-3), new Half(4.5), new Half(-5));
                var v = ov.swizzle.bbgaa;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5), new Half(-7), new Half(7), new Half(-6.5));
                var v = ov.swizzle.bbgak;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(-4.5), new Half(4), new Half(-9.5));
                var v = ov.swizzle.bbgk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3.5), new Half(-9), new Half(-1), new Half(3.5));
                var v = ov.swizzle.bbgkr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(-5.5), new Half(4.5), new Half(-4));
                var v = ov.swizzle.bbgkg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3), new Half(4.5), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.bbgkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7), Half.One, new Half(9.5), new Half(4.5));
                var v = ov.swizzle.bbgka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(-8.5), new Half(5), new Half(-9.5));
                var v = ov.swizzle.bbgkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), Half.One, new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.bbb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(-3), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.bbbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-7), new Half(4), new Half(2.5));
                var v = ov.swizzle.bbbrr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(-9), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.bbbrg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(-0.5), new Half(-2), Half.One);
                var v = ov.swizzle.bbbrb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(-4.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.bbbra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(-4), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.bbbrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), new Half(4), new Half(7.5), new Half(-0.5));
                var v = ov.swizzle.bbbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(2), new Half(5.5), Half.Zero);
                var v = ov.swizzle.bbbgr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.Zero, new Half(7.5), new Half(6), new Half(5));
                var v = ov.swizzle.bbbgg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(9.5), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.bbbgb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(-0.5), new Half(-8), new Half(-6));
                var v = ov.swizzle.bbbga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), Half.One, new Half(-1), new Half(3.5));
                var v = ov.swizzle.bbbgk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6), new Half(-4.5), new Half(-7), new Half(9.5));
                var v = ov.swizzle.bbbb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-8.5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.bbbbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8), new Half(3.5), new Half(-1), Half.One);
                var v = ov.swizzle.bbbbg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9), new Half(-8), new Half(4), new Half(-3.5));
                var v = ov.swizzle.bbbbb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5), new Half(1.5), new Half(9), new Half(3));
                var v = ov.swizzle.bbbba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-3.5), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.bbbbk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-0.5), new Half(2.5), new Half(2), new Half(-2));
                var v = ov.swizzle.bbba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(-8.5), new Half(7), Half.One);
                var v = ov.swizzle.bbbar;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(8), new Half(-2.5), new Half(-4));
                var v = ov.swizzle.bbbag;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(-8), new Half(-6), new Half(5.5));
                var v = ov.swizzle.bbbab;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.Zero, new Half(7.5), new Half(-5.5), new Half(4));
                var v = ov.swizzle.bbbaa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6), new Half(-6), new Half(-4), new Half(1.5));
                var v = ov.swizzle.bbbak;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-2), new Half(9.5), new Half(9), new Half(-3.5));
                var v = ov.swizzle.bbbk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(1.5), new Half(9.5), new Half(8));
                var v = ov.swizzle.bbbkr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8.5), new Half(9), new Half(3), new Half(-0.5));
                var v = ov.swizzle.bbbkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(3), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.bbbkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7), new Half(-1), new Half(-3.5), new Half(2.5));
                var v = ov.swizzle.bbbka;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(8), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.bbbkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9.5), new Half(6), new Half(-7), new Half(2.5));
                var v = ov.swizzle.bba;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-0.5), new Half(8.5), Half.One, new Half(5.5));
                var v = ov.swizzle.bbar;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.Zero, new Half(-9), new Half(7), new Half(0.5));
                var v = ov.swizzle.bbarr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(3.5), new Half(4.5), new Half(4));
                var v = ov.swizzle.bbarg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(-9), new Half(-7), new Half(-4));
                var v = ov.swizzle.bbarb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(-4), new Half(-7), new Half(-8));
                var v = ov.swizzle.bbara;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-7), new Half(3.5), new Half(-2), new Half(1.5));
                var v = ov.swizzle.bbark;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(3.5), new Half(-1), new Half(4));
                var v = ov.swizzle.bbag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(2), Half.One, new Half(-4));
                var v = ov.swizzle.bbagr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8.5), new Half(2), new Half(6.5), Half.One);
                var v = ov.swizzle.bbagg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8.5), new Half(-4), new Half(3.5), Half.One);
                var v = ov.swizzle.bbagb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(0.5), new Half(3), Half.Zero);
                var v = ov.swizzle.bbaga;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5), new Half(-7.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.bbagk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), new Half(7), new Half(-6), new Half(-6.5));
                var v = ov.swizzle.bbab;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-6.5), new Half(0.5), new Half(4.5));
                var v = ov.swizzle.bbabr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9), new Half(-8), new Half(3), new Half(7.5));
                var v = ov.swizzle.bbabg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8.5), new Half(-8), new Half(-6), new Half(9.5));
                var v = ov.swizzle.bbabb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2), new Half(9.5), new Half(9), new Half(-3.5));
                var v = ov.swizzle.bbaba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(-0.5), new Half(9), new Half(-7.5));
                var v = ov.swizzle.bbabk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-7), new Half(-9), new Half(1.5), new Half(8));
                var v = ov.swizzle.bbaa;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(0.5), new Half(-3.5), new Half(-3), Half.One);
                var v = ov.swizzle.bbaar;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(-5.5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.bbaag;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-3.5), new Half(5), new Half(6));
                var v = ov.swizzle.bbaab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), new Half(5), new Half(-5.5), new Half(-7.5));
                var v = ov.swizzle.bbaaa;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7), new Half(8.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.bbaak;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-3), new Half(7), new Half(8.5));
                var v = ov.swizzle.bbak;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(1.5), new Half(-3.5), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.bbakr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3), new Half(5), new Half(-5), new Half(-9));
                var v = ov.swizzle.bbakg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9), Half.Zero, new Half(4.5), new Half(1.5));
                var v = ov.swizzle.bbakb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(-5.5), new Half(3), new Half(8.5));
                var v = ov.swizzle.bbaka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(5.5), new Half(9), new Half(6));
                var v = ov.swizzle.bbakk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(6.5), new Half(-6), new Half(2));
                var v = ov.swizzle.bbk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(2), new Half(-6), Half.Zero, new Half(3));
                var v = ov.swizzle.bbkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), new Half(2.5), new Half(-7), new Half(2));
                var v = ov.swizzle.bbkrr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(1.5), new Half(4), new Half(-1));
                var v = ov.swizzle.bbkrg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(3), new Half(9.5), new Half(-3));
                var v = ov.swizzle.bbkrb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5.5), new Half(9), new Half(9), Half.Zero);
                var v = ov.swizzle.bbkra;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6.5), new Half(-7), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.bbkrk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(-0.5), new Half(-2), new Half(6));
                var v = ov.swizzle.bbkg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(9.5), new Half(1.5), new Half(-2.5));
                var v = ov.swizzle.bbkgr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(6), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.bbkgg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(0.5), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.bbkgb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-0.5), new Half(7.5), new Half(2), new Half(-9));
                var v = ov.swizzle.bbkga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2.5), new Half(5), new Half(9.5), new Half(3));
                var v = ov.swizzle.bbkgk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9.5), new Half(3), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.bbkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-9.5), new Half(8.5), Half.Zero);
                var v = ov.swizzle.bbkbr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(-2), new Half(-2), new Half(4));
                var v = ov.swizzle.bbkbg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(8), new Half(-6.5), new Half(5.5));
                var v = ov.swizzle.bbkbb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5), new Half(-8), new Half(4), new Half(5.5));
                var v = ov.swizzle.bbkba;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-9), new Half(-3.5), new Half(2.5), new Half(-8));
                var v = ov.swizzle.bbkbk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), Half.Zero, new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.bbka;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), new Half(-8), new Half(9), new Half(1.5));
                var v = ov.swizzle.bbkar;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(2.5), new Half(8.5), new Half(4));
                var v = ov.swizzle.bbkag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-7), new Half(-4.5), new Half(8.5), new Half(-8));
                var v = ov.swizzle.bbkab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-6.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.bbkaa;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(9.5), new Half(3.5), new Half(9));
                var v = ov.swizzle.bbkak;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(-2.5), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.bbkk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(8), new Half(-4.5), new Half(1.5), new Half(5.5));
                var v = ov.swizzle.bbkkr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9.5), new Half(9.5), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.bbkkg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4), new Half(-9), Half.Zero, new Half(-2));
                var v = ov.swizzle.bbkkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(-1.5), new Half(-5), new Half(6));
                var v = ov.swizzle.bbkka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(5.5), new Half(3), new Half(-9));
                var v = ov.swizzle.bbkkk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9), new Half(-4.5), Half.Zero, new Half(-5));
                var v = ov.swizzle.ba;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(-1), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.bar;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(2.5), new Half(3.5), new Half(2), new Half(5.5));
                var v = ov.swizzle.barr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6.5), new Half(1.5), new Half(-3), new Half(4));
                var v = ov.swizzle.barrr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(9.5), new Half(-8.5), new Half(3));
                var v = ov.swizzle.barrg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), new Half(-2), new Half(-4), new Half(-0.5));
                var v = ov.swizzle.barrb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3), new Half(-8.5), new Half(-3), new Half(7));
                var v = ov.swizzle.barra;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4), new Half(9.5), new Half(-7), new Half(3));
                var v = ov.swizzle.barrk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2), new Half(3), new Half(-7), new Half(6.5));
                var v = ov.swizzle.barg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), Half.Zero, new Half(-3.5), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.bargr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), new Half(-7.5), new Half(8.5), new Half(2.5));
                var v = ov.swizzle.bargg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9.5), new Half(4), new Half(6.5), new Half(1.5));
                var v = ov.swizzle.bargb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.Zero, new Half(6.5), new Half(-3.5), new Half(-7));
                var v = ov.swizzle.barga;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1), new Half(-8.5), new Half(4.5), new Half(1.5));
                var v = ov.swizzle.bargk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-5.5), new Half(-5), new Half(9), new Half(8.5));
                var v = ov.swizzle.barb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), new Half(-7.5), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.barbr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.One, new Half(2.5), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.barbg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(0.5), new Half(-6.5), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.barbb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9), new Half(3), new Half(-4.5), new Half(2));
                var v = ov.swizzle.barba;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(-8), Half.Zero, new Half(3.5));
                var v = ov.swizzle.barbk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9), new Half(1.5), new Half(-1.5), new Half(7.5));
                var v = ov.swizzle.bara;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), new Half(-3), Half.Zero, new Half(8));
                var v = ov.swizzle.barar;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8.5), new Half(-9), new Half(4), new Half(8));
                var v = ov.swizzle.barag;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8), new Half(-7), new Half(7), new Half(3.5));
                var v = ov.swizzle.barab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), Half.Zero, new Half(-3), new Half(7));
                var v = ov.swizzle.baraa;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(0.5), new Half(6), new Half(2.5));
                var v = ov.swizzle.barak;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9.5), new Half(-7.5), new Half(2.5), new Half(-0.5));
                var v = ov.swizzle.bark;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(3), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.barkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-7.5), new Half(-2), new Half(3.5));
                var v = ov.swizzle.barkg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), new Half(8.5), new Half(-6), new Half(3));
                var v = ov.swizzle.barkb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(9), new Half(6), new Half(-9.5));
                var v = ov.swizzle.barka;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9), new Half(-9), new Half(-9.5), new Half(8));
                var v = ov.swizzle.barkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-8), new Half(5), new Half(8), new Half(0.5));
                var v = ov.swizzle.bag;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6), new Half(-2.5), new Half(-6), new Half(5));
                var v = ov.swizzle.bagr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(4.5), new Half(-6), new Half(-8));
                var v = ov.swizzle.bagrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5), new Half(-1.5), new Half(-9), new Half(-6.5));
                var v = ov.swizzle.bagrg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(-4), new Half(3), new Half(5.5));
                var v = ov.swizzle.bagrb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(-5), new Half(-2), new Half(-5));
                var v = ov.swizzle.bagra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(-6.5), new Half(-4), new Half(-4.5));
                var v = ov.swizzle.bagrk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(-4), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.bagg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-6.5), new Half(9), new Half(-3));
                var v = ov.swizzle.baggr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4.5), new Half(4.5), new Half(-1.5), new Half(-4.5));
                var v = ov.swizzle.baggg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(0.5), Half.Zero, new Half(7.5), new Half(-2));
                var v = ov.swizzle.baggb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(2), new Half(-3), Half.One);
                var v = ov.swizzle.bagga;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.Zero, new Half(-5), Half.Zero, new Half(-8.5));
                var v = ov.swizzle.baggk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(-8.5), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.bagb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(6), new Half(3.5), new Half(-4));
                var v = ov.swizzle.bagbr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8.5), new Half(3), new Half(0.5), new Half(4));
                var v = ov.swizzle.bagbg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6), new Half(-2.5), new Half(-3.5), new Half(6));
                var v = ov.swizzle.bagbb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(-4.5), Half.One, Half.Zero);
                var v = ov.swizzle.bagba;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9), Half.One, new Half(-9.5), new Half(-2.5));
                var v = ov.swizzle.bagbk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-7.5), new Half(-0.5), new Half(-4));
                var v = ov.swizzle.baga;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(3), new Half(6), Half.One);
                var v = ov.swizzle.bagar;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6.5), new Half(6), new Half(-5.5), new Half(-9));
                var v = ov.swizzle.bagag;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.Zero, new Half(-2), new Half(7), new Half(7));
                var v = ov.swizzle.bagab;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(-0.5), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.bagaa;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7.5), new Half(-9), new Half(0.5), new Half(-0.5));
                var v = ov.swizzle.bagak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(-2.5), new Half(6), new Half(4));
                var v = ov.swizzle.bagk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7), new Half(-5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.bagkr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-2), new Half(-8.5), new Half(-5.5), new Half(1.5));
                var v = ov.swizzle.bagkg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6.5), Half.Zero, new Half(-7.5), new Half(-4));
                var v = ov.swizzle.bagkb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), new Half(3.5), new Half(-3), new Half(3));
                var v = ov.swizzle.bagka;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(-1.5), Half.One, new Half(3));
                var v = ov.swizzle.bagkk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(4.5), new Half(-3), new Half(-7), new Half(-1.5));
                var v = ov.swizzle.bab;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6.5), new Half(9.5), new Half(-9.5), new Half(-5));
                var v = ov.swizzle.babr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4.5), new Half(5.5), new Half(-2), new Half(-2.5));
                var v = ov.swizzle.babrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(4), new Half(2), new Half(-6));
                var v = ov.swizzle.babrg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(7.5), new Half(-7), new Half(6.5));
                var v = ov.swizzle.babrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7.5), new Half(-5), new Half(3), new Half(8));
                var v = ov.swizzle.babra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(-4), new Half(-3), new Half(-4.5));
                var v = ov.swizzle.babrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(3), new Half(6.5), new Half(6));
                var v = ov.swizzle.babg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(-8.5), new Half(7), new Half(3));
                var v = ov.swizzle.babgr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2), new Half(-8.5), new Half(-4.5), new Half(2.5));
                var v = ov.swizzle.babgg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(-4.5), new Half(-4.5), new Half(-7));
                var v = ov.swizzle.babgb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7.5), new Half(6.5), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.babga;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-8.5), new Half(6.5), new Half(-1), new Half(9));
                var v = ov.swizzle.babgk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-2), new Half(-7.5), new Half(-2.5), Half.One);
                var v = ov.swizzle.babb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-0.5), new Half(8), new Half(6.5), Half.One);
                var v = ov.swizzle.babbr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6), new Half(-0.5), new Half(-4), new Half(0.5));
                var v = ov.swizzle.babbg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-0.5), new Half(-1), new Half(6));
                var v = ov.swizzle.babbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(-1.5), new Half(6.5), new Half(-1));
                var v = ov.swizzle.babba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(2), new Half(-6.5), new Half(-4.5), new Half(-9));
                var v = ov.swizzle.babbk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(9), new Half(7.5), new Half(-6.5));
                var v = ov.swizzle.baba;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(4.5), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.babar;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(-0.5), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.babag;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8), new Half(-7.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.babab;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(-3.5), new Half(4), new Half(9.5));
                var v = ov.swizzle.babaa;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6.5), new Half(-4.5), new Half(-7), new Half(-4));
                var v = ov.swizzle.babak;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6), new Half(-6.5), new Half(-8), new Half(7));
                var v = ov.swizzle.babk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5), new Half(2.5), new Half(1.5), new Half(4.5));
                var v = ov.swizzle.babkr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7.5), new Half(5), new Half(1.5), new Half(3.5));
                var v = ov.swizzle.babkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4), new Half(4), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.babkb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-9.5), new Half(2.5), new Half(-1.5), new Half(7));
                var v = ov.swizzle.babka;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.One, new Half(5), new Half(8.5), new Half(4));
                var v = ov.swizzle.babkk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4.5), new Half(-8), new Half(9), new Half(9));
                var v = ov.swizzle.baa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2), new Half(-2), new Half(-5), new Half(6.5));
                var v = ov.swizzle.baar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(1.5), new Half(6.5), new Half(2));
                var v = ov.swizzle.baarr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(4.5), new Half(-2), new Half(-5));
                var v = ov.swizzle.baarg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-8), new Half(2), new Half(4), new Half(4.5));
                var v = ov.swizzle.baarb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(4.5), new Half(-1), new Half(6));
                var v = ov.swizzle.baara;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9.5), new Half(3.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.baark;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4), new Half(5.5), new Half(-7.5), new Half(-2.5));
                var v = ov.swizzle.baag;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(0.5), new Half(-3.5), new Half(-9));
                var v = ov.swizzle.baagr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(5.5), new Half(-3.5), new Half(-8));
                var v = ov.swizzle.baagg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(4.5), new Half(-6.5), Half.One);
                var v = ov.swizzle.baagb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), new Half(-3), new Half(-6), new Half(-9));
                var v = ov.swizzle.baaga;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), Half.One, new Half(8), new Half(-8.5));
                var v = ov.swizzle.baagk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6.5), new Half(5), new Half(-6), new Half(3));
                var v = ov.swizzle.baab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(-3), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.baabr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(-6), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.baabg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9.5), new Half(8), new Half(2.5), new Half(1.5));
                var v = ov.swizzle.baabb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5), new Half(-1), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.baaba;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2.5), new Half(-9.5), new Half(2), new Half(5.5));
                var v = ov.swizzle.baabk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-8.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.baaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(-9), new Half(-7.5), new Half(3.5));
                var v = ov.swizzle.baaar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3.5), new Half(9), new Half(-0.5), Half.One);
                var v = ov.swizzle.baaag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(-3.5), new Half(-4.5), new Half(-7));
                var v = ov.swizzle.baaab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(9.5), new Half(8), new Half(-7), new Half(-2));
                var v = ov.swizzle.baaaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(-7.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.baaak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-1), new Half(-1), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.baak;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(6), new Half(-1), Half.One, new Half(-1));
                var v = ov.swizzle.baakr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(-2.5), new Half(9.5), new Half(7));
                var v = ov.swizzle.baakg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), new Half(-7.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.baakb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(4.5), new Half(-4.5), new Half(-6.5));
                var v = ov.swizzle.baaka;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(4), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.baakk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.Zero, new Half(-1.5), new Half(-3.5), Half.Zero);
                var v = ov.swizzle.bak;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6.5), new Half(-9.5), new Half(7), new Half(2));
                var v = ov.swizzle.bakr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(4), new Half(-4.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.bakrr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(9), new Half(9), new Half(6.5));
                var v = ov.swizzle.bakrg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), new Half(9.5), new Half(-4), new Half(5));
                var v = ov.swizzle.bakrb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(-4.5), new Half(6), new Half(7));
                var v = ov.swizzle.bakra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(-7), new Half(4), Half.One);
                var v = ov.swizzle.bakrk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), Half.One, new Half(9.5), new Half(4.5));
                var v = ov.swizzle.bakg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6), new Half(-4), new Half(-9), new Half(-6));
                var v = ov.swizzle.bakgr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(-9.5), new Half(-2.5), new Half(-2));
                var v = ov.swizzle.bakgg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(4.5), new Half(7.5), new Half(4));
                var v = ov.swizzle.bakgb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.One, new Half(-5), new Half(-8.5), new Half(-3));
                var v = ov.swizzle.bakga;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7.5), new Half(-3), Half.Zero, new Half(7.5));
                var v = ov.swizzle.bakgk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1.5), new Half(-9.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.bakb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(-1), new Half(-6), new Half(3));
                var v = ov.swizzle.bakbr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6), new Half(-9.5), new Half(7.5), new Half(-9));
                var v = ov.swizzle.bakbg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6.5), new Half(8.5), new Half(5.5), new Half(5));
                var v = ov.swizzle.bakbb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(-9), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.bakba;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(7.5), new Half(-9.5), new Half(-3.5), new Half(6.5));
                var v = ov.swizzle.bakbk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2), new Half(-3), new Half(-7.5), new Half(-8));
                var v = ov.swizzle.baka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.Zero, new Half(7), new Half(7), new Half(-2));
                var v = ov.swizzle.bakar;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3), new Half(-9), new Half(4.5), new Half(-1.5));
                var v = ov.swizzle.bakag;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(-8), Half.One, new Half(6));
                var v = ov.swizzle.bakab;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9.5), new Half(-8), new Half(4.5), new Half(-6));
                var v = ov.swizzle.bakaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), new Half(-9.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.bakak;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(-5.5), new Half(-9), new Half(8));
                var v = ov.swizzle.bakk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3), new Half(8.5), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.bakkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(0.5), new Half(-6.5), new Half(-6));
                var v = ov.swizzle.bakkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-4.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.bakkb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9.5), new Half(-9), new Half(-9), new Half(5.5));
                var v = ov.swizzle.bakka;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-8), new Half(6), new Half(-3.5));
                var v = ov.swizzle.bakkk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-9.5), new Half(-9), new Half(6), new Half(-1));
                var v = ov.swizzle.bk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), Half.Zero, new Half(-3.5), new Half(-5));
                var v = ov.swizzle.bkr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7.5), new Half(7.5), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.bkrr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8), new Half(4.5), new Half(-9), new Half(6));
                var v = ov.swizzle.bkrrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(9), new Half(7), new Half(4));
                var v = ov.swizzle.bkrrg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(5), new Half(-6.5), new Half(-2));
                var v = ov.swizzle.bkrrb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(2.5), new Half(3.5), new Half(0.5));
                var v = ov.swizzle.bkrra;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(-5.5), new Half(-3), new Half(-8));
                var v = ov.swizzle.bkrrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(8.5), new Half(5.5), new Half(-7.5));
                var v = ov.swizzle.bkrg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(7.5), new Half(-8), new Half(-6.5));
                var v = ov.swizzle.bkrgr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(0.5), new Half(9.5), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.bkrgg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-1), new Half(-1), Half.One, new Half(-0.5));
                var v = ov.swizzle.bkrgb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6.5), new Half(-7), new Half(-4), new Half(-2.5));
                var v = ov.swizzle.bkrga;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(0.5), new Half(4), new Half(1.5), new Half(-5));
                var v = ov.swizzle.bkrgk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-5.5), new Half(-7.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.bkrb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4.5), new Half(-4), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.bkrbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(-2.5), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.bkrbg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4.5), new Half(2.5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.bkrbb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8.5), new Half(-6.5), new Half(-5.5), new Half(1.5));
                var v = ov.swizzle.bkrba;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(-4.5), new Half(8), new Half(7));
                var v = ov.swizzle.bkrbk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(5), new Half(2), new Half(-9.5));
                var v = ov.swizzle.bkra;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8), new Half(8.5), new Half(-3), new Half(8));
                var v = ov.swizzle.bkrar;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7.5), new Half(-3.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.bkrag;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(-7), new Half(-0.5), new Half(-0.5));
                var v = ov.swizzle.bkrab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(4.5), new Half(7), Half.Zero);
                var v = ov.swizzle.bkraa;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.One, new Half(7.5), new Half(9), new Half(0.5));
                var v = ov.swizzle.bkrak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.Zero, new Half(4), new Half(-7), new Half(7));
                var v = ov.swizzle.bkrk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9), new Half(-5.5), new Half(-9.5), new Half(-7.5));
                var v = ov.swizzle.bkrkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-3.5), new Half(-9), Half.Zero, new Half(2));
                var v = ov.swizzle.bkrkg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3), new Half(-3), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.bkrkb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(4.5), new Half(5.5), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.bkrka;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6.5), new Half(7.5), new Half(2), new Half(-6));
                var v = ov.swizzle.bkrkk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(-0.5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.bkg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2.5), new Half(8), new Half(2), new Half(7));
                var v = ov.swizzle.bkgr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(6.5), new Half(6), new Half(9.5));
                var v = ov.swizzle.bkgrr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-9), new Half(4.5), new Half(5), new Half(-6.5));
                var v = ov.swizzle.bkgrg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1.5), new Half(2), new Half(-0.5), new Half(1.5));
                var v = ov.swizzle.bkgrb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(-4.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.bkgra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3), new Half(-7.5), new Half(4), new Half(-9.5));
                var v = ov.swizzle.bkgrk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7.5), new Half(7.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.bkgg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(9), new Half(-2.5), new Half(-9.5));
                var v = ov.swizzle.bkggr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(-0.5), new Half(-9.5), new Half(-7));
                var v = ov.swizzle.bkggg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-0.5), new Half(2.5), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.bkggb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), Half.Zero, new Half(1.5), new Half(7.5));
                var v = ov.swizzle.bkgga;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7), new Half(-1), new Half(-8.5), new Half(8));
                var v = ov.swizzle.bkggk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(2.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.bkgb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7.5), new Half(9.5), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.bkgbr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(-6), new Half(8), new Half(3));
                var v = ov.swizzle.bkgbg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(4), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.bkgbb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8.5), new Half(2), new Half(-9.5), new Half(6));
                var v = ov.swizzle.bkgba;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7.5), new Half(5), new Half(7.5), new Half(4));
                var v = ov.swizzle.bkgbk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), new Half(-0.5), new Half(-8), new Half(2.5));
                var v = ov.swizzle.bkga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5), new Half(2), new Half(9.5), new Half(-2));
                var v = ov.swizzle.bkgar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(7), new Half(-8.5), new Half(6.5));
                var v = ov.swizzle.bkgag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(1.5), new Half(1.5), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.bkgab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(0.5), new Half(4), new Half(9.5));
                var v = ov.swizzle.bkgaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-1.5), new Half(-2), new Half(-9), new Half(9));
                var v = ov.swizzle.bkgak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), Half.One, new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.bkgk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-0.5), new Half(8.5), new Half(-7), new Half(6));
                var v = ov.swizzle.bkgkr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3), new Half(5), new Half(9), new Half(1.5));
                var v = ov.swizzle.bkgkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-3), new Half(-8.5), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.bkgkb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), new Half(-8), new Half(9), new Half(3));
                var v = ov.swizzle.bkgka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(-5.5), new Half(-9), new Half(-5.5));
                var v = ov.swizzle.bkgkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(-6.5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.bkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-2.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.bkbr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(-4), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.bkbrr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(-9.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.bkbrg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(-2.5), new Half(6), new Half(1.5));
                var v = ov.swizzle.bkbrb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(8.5), new Half(1.5), new Half(-6), new Half(6));
                var v = ov.swizzle.bkbra;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4), new Half(-9), new Half(2.5), new Half(8.5));
                var v = ov.swizzle.bkbrk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(-6), new Half(6), new Half(-6.5));
                var v = ov.swizzle.bkbg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(-8.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.bkbgr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2.5), new Half(7.5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.bkbgg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(-2), Half.Zero, new Half(0.5));
                var v = ov.swizzle.bkbgb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(-6), new Half(8.5), Half.One);
                var v = ov.swizzle.bkbga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(-2), new Half(3.5), new Half(8));
                var v = ov.swizzle.bkbgk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(-8.5), new Half(-7.5), new Half(-3));
                var v = ov.swizzle.bkbb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(-4), new Half(0.5), new Half(-2.5));
                var v = ov.swizzle.bkbbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3.5), new Half(3), Half.Zero, new Half(5));
                var v = ov.swizzle.bkbbg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.One, new Half(4), Half.Zero, new Half(0.5));
                var v = ov.swizzle.bkbbb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3.5), new Half(-9), new Half(2), new Half(7.5));
                var v = ov.swizzle.bkbba;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4), new Half(-8), new Half(4), new Half(-3));
                var v = ov.swizzle.bkbbk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), new Half(-2.5), new Half(-4), new Half(5));
                var v = ov.swizzle.bkba;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1), new Half(-5), new Half(-4), new Half(-8));
                var v = ov.swizzle.bkbar;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(-7.5), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.bkbag;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3), new Half(-6), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.bkbab;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(-2), new Half(3), Half.Zero);
                var v = ov.swizzle.bkbaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(5.5), new Half(-9), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.bkbak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3), new Half(9), new Half(-7), new Half(2.5));
                var v = ov.swizzle.bkbk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8.5), new Half(-0.5), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.bkbkr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-3.5), new Half(1.5), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.bkbkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(6), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.bkbkb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7.5), new Half(-4.5), new Half(-2), new Half(3));
                var v = ov.swizzle.bkbka;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(-6.5), new Half(-4), new Half(7.5));
                var v = ov.swizzle.bkbkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(0.5), new Half(3), new Half(3.5));
                var v = ov.swizzle.bka;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9.5), new Half(4), new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.bkar;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(-9.5), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.bkarr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.One, new Half(-0.5), new Half(9), Half.Zero);
                var v = ov.swizzle.bkarg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(7.5), new Half(2), new Half(-1));
                var v = ov.swizzle.bkarb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8), new Half(7.5), new Half(-3), new Half(-0.5));
                var v = ov.swizzle.bkara;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6), new Half(-5), new Half(8.5), new Half(-8));
                var v = ov.swizzle.bkark;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(-2.5), new Half(-0.5), new Half(3));
                var v = ov.swizzle.bkag;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(-4.5), new Half(5.5), new Half(5));
                var v = ov.swizzle.bkagr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8), new Half(-3.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.bkagg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(-4), new Half(-4), Half.One);
                var v = ov.swizzle.bkagb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(5.5), new Half(-2.5), new Half(2.5), new Half(6));
                var v = ov.swizzle.bkaga;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(1.5), new Half(1.5), new Half(4.5));
                var v = ov.swizzle.bkagk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8.5), new Half(-7.5), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.bkab;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4), Half.Zero, new Half(6), new Half(9.5));
                var v = ov.swizzle.bkabr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(2), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.bkabg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(1.5), new Half(-8.5), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.bkabb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.One, Half.One, new Half(7.5), new Half(-0.5));
                var v = ov.swizzle.bkaba;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(5.5), new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.bkabk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(3.5), Half.Zero, new Half(4));
                var v = ov.swizzle.bkaa;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.bkaar;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(7), new Half(-4), new Half(-2));
                var v = ov.swizzle.bkaag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2.5), new Half(-0.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.bkaab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8.5), new Half(9.5), new Half(3), new Half(-5));
                var v = ov.swizzle.bkaaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(-5.5), new Half(1.5), new Half(-9));
                var v = ov.swizzle.bkaak;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9), new Half(-9), new Half(-6), Half.One);
                var v = ov.swizzle.bkak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9), Half.One, new Half(3.5), new Half(8.5));
                var v = ov.swizzle.bkakr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3.5), new Half(3.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.bkakg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4.5), new Half(-2.5), new Half(-4.5), new Half(5));
                var v = ov.swizzle.bkakb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8.5), new Half(-1.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.bkaka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(0.5), new Half(-4.5), new Half(5));
                var v = ov.swizzle.bkakk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), new Half(-4), new Half(8), new Half(-9));
                var v = ov.swizzle.bkk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(1.5), new Half(-3), new Half(7.5));
                var v = ov.swizzle.bkkr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(1.5), new Half(5.5), new Half(7), new Half(-3.5));
                var v = ov.swizzle.bkkrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1.5), new Half(2), new Half(2), new Half(9));
                var v = ov.swizzle.bkkrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1), new Half(8.5), new Half(-3.5), Half.One);
                var v = ov.swizzle.bkkrb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(0.5), new Half(4.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.bkkra;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), new Half(-6), new Half(-1.5), new Half(8));
                var v = ov.swizzle.bkkrk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(-5.5), new Half(-8), new Half(2.5));
                var v = ov.swizzle.bkkg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3), new Half(-4), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.bkkgr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-4.5), new Half(-9.5), new Half(7.5), new Half(-4));
                var v = ov.swizzle.bkkgg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3), new Half(-2.5), new Half(-6), Half.One);
                var v = ov.swizzle.bkkgb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-2.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.bkkga;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(-6.5), new Half(0.5), new Half(8.5));
                var v = ov.swizzle.bkkgk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5), new Half(7), new Half(9.5), new Half(-3.5));
                var v = ov.swizzle.bkkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(-5.5), new Half(-1), new Half(8.5));
                var v = ov.swizzle.bkkbr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6.5), new Half(-1), new Half(5.5), new Half(-5));
                var v = ov.swizzle.bkkbg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(7.5), new Half(4.5), new Half(3.5));
                var v = ov.swizzle.bkkbb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), Half.Zero, new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.bkkba;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4.5), new Half(-6), new Half(5.5), new Half(-4));
                var v = ov.swizzle.bkkbk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(-5.5), new Half(-0.5), new Half(6.5));
                var v = ov.swizzle.bkka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-8.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.bkkar;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1.5), new Half(-6), new Half(-8), new Half(9.5));
                var v = ov.swizzle.bkkag;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(2.5), new Half(3.5), new Half(-2));
                var v = ov.swizzle.bkkab;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2), new Half(-0.5), new Half(6.5), new Half(-3));
                var v = ov.swizzle.bkkaa;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5), new Half(-8.5), new Half(9), new Half(9.5));
                var v = ov.swizzle.bkkak;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(-0.5), new Half(7.5), new Half(-2.5));
                var v = ov.swizzle.bkkk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-2), new Half(-7.5), new Half(8.5), new Half(2));
                var v = ov.swizzle.bkkkr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-1.5), new Half(-3.5), new Half(2), new Half(7));
                var v = ov.swizzle.bkkkg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-7), new Half(-7.5), new Half(-2.5), new Half(6));
                var v = ov.swizzle.bkkkb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(-7.5), new Half(-5.5), new Half(4));
                var v = ov.swizzle.bkkka;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(0.5), new Half(-1.5), new Half(-6), new Half(5.5));
                var v = ov.swizzle.bkkkk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5.5), new Half(-2), new Half(-2), new Half(4.5));
                var v = ov.swizzle.ar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(9.5), new Half(-9), new Half(1.5), new Half(-8));
                var v = ov.swizzle.arr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(4.5), new Half(1.5), new Half(-8));
                var v = ov.swizzle.arrr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-3.5), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.arrrr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2.5), new Half(4.5), new Half(2), new Half(-7));
                var v = ov.swizzle.arrrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(5), new Half(5), new Half(2.5), new Half(-8));
                var v = ov.swizzle.arrrb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(5), new Half(2), new Half(4));
                var v = ov.swizzle.arrra;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-7), new Half(-5), new Half(8), new Half(-1));
                var v = ov.swizzle.arrrk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(1.5), new Half(8), new Half(5.5));
                var v = ov.swizzle.arrg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(8.5), new Half(1.5), new Half(5), new Half(-4.5));
                var v = ov.swizzle.arrgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3), new Half(9.5), Half.One, new Half(-1));
                var v = ov.swizzle.arrgg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(4), Half.Zero, new Half(9), new Half(5.5), new Half(-0.5));
                var v = ov.swizzle.arrgb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4.5), new Half(-3.5), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.arrga;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(1.5), new Half(-3.5), new Half(-9));
                var v = ov.swizzle.arrgk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(-7), new Half(-8), new Half(-7));
                var v = ov.swizzle.arrb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(-3.5), new Half(6), new Half(-4));
                var v = ov.swizzle.arrbr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(9.5), new Half(7), new Half(-4.5));
                var v = ov.swizzle.arrbg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-4.5), new Half(3), new Half(1.5), Half.Zero);
                var v = ov.swizzle.arrbb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-9.5), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.arrba;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(-8), new Half(-7.5), new Half(8));
                var v = ov.swizzle.arrbk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6), new Half(5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.arra;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-2.5), new Half(-8.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.arrar;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5), new Half(2), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.arrag;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), new Half(-9), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.arrab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(9.5), new Half(-3.5), new Half(-9.5));
                var v = ov.swizzle.arraa;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7.5), new Half(7.5), new Half(8.5), new Half(-2));
                var v = ov.swizzle.arrak;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5.5), new Half(4), new Half(7.5), new Half(-2.5));
                var v = ov.swizzle.arrk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8), new Half(-2), new Half(-2.5), new Half(4.5));
                var v = ov.swizzle.arrkr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(-9), new Half(6), new Half(7.5));
                var v = ov.swizzle.arrkg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4), new Half(8.5), new Half(8.5), new Half(2));
                var v = ov.swizzle.arrkb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(-0.5), new Half(-7.5), new Half(7));
                var v = ov.swizzle.arrka;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(6), new Half(-9), new Half(7), new Half(-4.5));
                var v = ov.swizzle.arrkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-0.5), new Half(-6.5), new Half(-3), new Half(-1));
                var v = ov.swizzle.arg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(4), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.argr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6.5), new Half(2.5), new Half(3.5), new Half(9.5));
                var v = ov.swizzle.argrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3.5), new Half(3.5), new Half(-1.5), new Half(6.5));
                var v = ov.swizzle.argrg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6.5), new Half(8.5), new Half(6.5), new Half(2));
                var v = ov.swizzle.argrb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4.5), new Half(-6.5), new Half(0.5), new Half(-3));
                var v = ov.swizzle.argra;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(4), Half.One, new Half(-3.5));
                var v = ov.swizzle.argrk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-9.5), new Half(5), new Half(5.5), new Half(-8));
                var v = ov.swizzle.argg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9.5), new Half(5), new Half(-7), new Half(4.5));
                var v = ov.swizzle.arggr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), Half.One, new Half(6.5), new Half(-7.5), new Half(8));
                var v = ov.swizzle.arggg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(0.5), new Half(-1), new Half(3.5));
                var v = ov.swizzle.arggb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(-2.5), new Half(9), new Half(-0.5));
                var v = ov.swizzle.argga;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2.5), new Half(-5), new Half(-9.5), new Half(-2.5));
                var v = ov.swizzle.arggk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-8), new Half(0.5), new Half(7), new Half(-1.5));
                var v = ov.swizzle.argb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(7.5), new Half(-1), new Half(-7.5));
                var v = ov.swizzle.argbr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-7), new Half(-7.5), Half.One, new Half(-6));
                var v = ov.swizzle.argbg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), Half.Zero, new Half(-7.5), new Half(2.5));
                var v = ov.swizzle.argbb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(9.5), new Half(3.5), new Half(8), Half.Zero);
                var v = ov.swizzle.argba;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3.5), new Half(5.5), new Half(6), new Half(3.5));
                var v = ov.swizzle.argbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4.5), new Half(-3.5), new Half(-0.5), new Half(-6));
                var v = ov.swizzle.arga;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1), new Half(-1.5), new Half(3.5), new Half(1.5));
                var v = ov.swizzle.argar;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5), new Half(-9.5), new Half(-0.5), Half.One);
                var v = ov.swizzle.argag;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8), new Half(-4.5), new Half(4.5), new Half(8));
                var v = ov.swizzle.argab;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2.5), new Half(2.5), new Half(-1.5), new Half(6));
                var v = ov.swizzle.argaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5.5), new Half(-8.5), new Half(7), new Half(8));
                var v = ov.swizzle.argak;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2.5), new Half(1.5), new Half(-8), new Half(5.5));
                var v = ov.swizzle.argk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(1.5), new Half(2.5), new Half(-4.5), new Half(7));
                var v = ov.swizzle.argkr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(9), new Half(6), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.argkg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(4), new Half(7), new Half(2.5));
                var v = ov.swizzle.argkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8), Half.One, new Half(8.5), new Half(5));
                var v = ov.swizzle.argka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(2.5), new Half(8.5), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.argkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-0.5), new Half(-8.5), new Half(-4.5), new Half(6));
                var v = ov.swizzle.arb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(2), new Half(3.5), new Half(4.5));
                var v = ov.swizzle.arbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(9.5), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.arbrr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9.5), Half.One, new Half(-0.5), Half.Zero);
                var v = ov.swizzle.arbrg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(-4), new Half(-5), new Half(6.5));
                var v = ov.swizzle.arbrb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(0.5), new Half(2.5), new Half(-2), new Half(6.5));
                var v = ov.swizzle.arbra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(9), new Half(-1.5), new Half(-6.5));
                var v = ov.swizzle.arbrk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(-7.5), new Half(-5.5), new Half(6.5));
                var v = ov.swizzle.arbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-7), new Half(-2), new Half(-3), new Half(-5));
                var v = ov.swizzle.arbgr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(-5), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.arbgg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(1.5), new Half(8), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.arbgb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-6), new Half(5), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.arbga;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(0.5), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.arbgk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), new Half(-2), new Half(2), new Half(-9));
                var v = ov.swizzle.arbb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(8.5), new Half(-7), new Half(2.5), new Half(-9.5));
                var v = ov.swizzle.arbbr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8), Half.One, Half.Zero, Half.Zero);
                var v = ov.swizzle.arbbg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6), new Half(3.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.arbbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4.5), new Half(-2.5), new Half(0.5), new Half(-9));
                var v = ov.swizzle.arbba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7.5), new Half(3.5), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.arbbk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), new Half(-4), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.arba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(-2), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.arbar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4), new Half(-6), new Half(2), new Half(-6));
                var v = ov.swizzle.arbag;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4), new Half(5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.arbab;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8.5), new Half(5), new Half(-8.5), new Half(7.5));
                var v = ov.swizzle.arbaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9), new Half(-8.5), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.arbak;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(-5.5), new Half(6), new Half(0.5));
                var v = ov.swizzle.arbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4.5), new Half(9), new Half(8), new Half(-1));
                var v = ov.swizzle.arbkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(-4), new Half(-2.5), new Half(4.5));
                var v = ov.swizzle.arbkg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(-4.5), new Half(-5), new Half(-6.5));
                var v = ov.swizzle.arbkb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6), new Half(5), new Half(8), new Half(-0.5));
                var v = ov.swizzle.arbka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7.5), new Half(3.5), new Half(4.5), new Half(3.5));
                var v = ov.swizzle.arbkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7), new Half(-1.5), new Half(4), new Half(-0.5));
                var v = ov.swizzle.ara;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4), v.z);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-0.5), new Half(8), new Half(-2), new Half(-9.5));
                var v = ov.swizzle.arar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(4), new Half(7.5), new Half(-7), new Half(-6));
                var v = ov.swizzle.ararr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(-9), new Half(-2.5), new Half(-1.5));
                var v = ov.swizzle.ararg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3.5), new Half(6), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.ararb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(9.5), new Half(-5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.arara;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-6), new Half(-6), new Half(9.5));
                var v = ov.swizzle.arark;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6), new Half(8), new Half(7.5), new Half(-8));
                var v = ov.swizzle.arag;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(-3), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.aragr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(-0.5), new Half(3.5), new Half(7.5));
                var v = ov.swizzle.aragg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(5), new Half(5), new Half(2));
                var v = ov.swizzle.aragb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(9), new Half(-2.5), new Half(-9.5), new Half(6.5));
                var v = ov.swizzle.araga;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5), new Half(1.5), new Half(-3), new Half(6));
                var v = ov.swizzle.aragk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-0.5), new Half(-7.5), new Half(-7), new Half(-5.5));
                var v = ov.swizzle.arab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(-8.5), new Half(8), new Half(7));
                var v = ov.swizzle.arabr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8.5), new Half(-3), new Half(-9), new Half(9.5));
                var v = ov.swizzle.arabg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-7.5), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.arabb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(9), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.araba;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1.5), new Half(-0.5), Half.Zero, Half.Zero);
                var v = ov.swizzle.arabk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7), Half.Zero, new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.araa;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(6.5), new Half(-2), new Half(8), new Half(-8.5));
                var v = ov.swizzle.araar;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8.5), new Half(7.5), new Half(8.5), new Half(-2));
                var v = ov.swizzle.araag;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6.5), new Half(8), new Half(-8.5), new Half(-6.5));
                var v = ov.swizzle.araab;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(3.5), new Half(-2), new Half(-8), new Half(5.5));
                var v = ov.swizzle.araaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9), new Half(8), new Half(4.5), Half.One);
                var v = ov.swizzle.araak;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2.5), new Half(-8.5), new Half(7), new Half(2));
                var v = ov.swizzle.arak;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-3.5), new Half(8.5), Half.One);
                var v = ov.swizzle.arakr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(-3), new Half(9.5), new Half(4));
                var v = ov.swizzle.arakg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(-1), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.arakb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(7), new Half(-8), new Half(4.5));
                var v = ov.swizzle.araka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(6.5), new Half(-7.5), new Half(1.5), new Half(-5));
                var v = ov.swizzle.arakk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(-8), new Half(7), new Half(2.5));
                var v = ov.swizzle.ark;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
            }
            {
                var ov = new hvec5(new Half(2), Half.Zero, new Half(-0.5), new Half(6.5), new Half(-0.5));
                var v = ov.swizzle.arkr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1), new Half(9), new Half(-9), new Half(5));
                var v = ov.swizzle.arkrr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8.5), new Half(-3), new Half(-4), new Half(5));
                var v = ov.swizzle.arkrg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(8), new Half(8), new Half(-5));
                var v = ov.swizzle.arkrb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), new Half(2), new Half(-4), new Half(0.5));
                var v = ov.swizzle.arkra;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(4.5), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.arkrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8.5), new Half(4), new Half(6), Half.One);
                var v = ov.swizzle.arkg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8), new Half(-5), new Half(-2), new Half(9));
                var v = ov.swizzle.arkgr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9), new Half(-0.5), new Half(-3), new Half(-2.5));
                var v = ov.swizzle.arkgg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(7), new Half(-4.5), new Half(6));
                var v = ov.swizzle.arkgb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9), new Half(8), new Half(2.5), new Half(-5.5));
                var v = ov.swizzle.arkga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(-6), new Half(6), new Half(2));
                var v = ov.swizzle.arkgk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(-3.5), new Half(4.5), new Half(-6));
                var v = ov.swizzle.arkb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(5), new Half(-2), new Half(-7));
                var v = ov.swizzle.arkbr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(7.5), new Half(9.5), new Half(9.5));
                var v = ov.swizzle.arkbg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(-0.5), new Half(-3.5), new Half(8.5));
                var v = ov.swizzle.arkbb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(8), new Half(-8), new Half(-5));
                var v = ov.swizzle.arkba;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3), new Half(-2), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.arkbk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), new Half(8), new Half(8), new Half(2.5));
                var v = ov.swizzle.arka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(4.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.arkar;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-8), new Half(6.5), new Half(8), new Half(6));
                var v = ov.swizzle.arkag;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7.5), new Half(8), new Half(3.5), new Half(-5.5));
                var v = ov.swizzle.arkab;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7), new Half(-0.5), new Half(7), new Half(9.5));
                var v = ov.swizzle.arkaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(7), new Half(8), new Half(-9.5), new Half(4));
                var v = ov.swizzle.arkak;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(-6.5), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.arkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4.5), new Half(-1.5), new Half(7), Half.Zero);
                var v = ov.swizzle.arkkr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(5.5), new Half(2.5), new Half(-3.5), new Half(-6.5));
                var v = ov.swizzle.arkkg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4.5), new Half(9.5), new Half(-1), new Half(8.5));
                var v = ov.swizzle.arkkb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4), new Half(-9), new Half(8.5), new Half(-4.5));
                var v = ov.swizzle.arkka;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3), Half.Zero, new Half(8), new Half(4));
                var v = ov.swizzle.arkkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(-5), new Half(2.5), new Half(-3.5));
                var v = ov.swizzle.ag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4.5), Half.One, new Half(-5.5), new Half(9.5));
                var v = ov.swizzle.agr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), Half.Zero, new Half(3.5), new Half(7));
                var v = ov.swizzle.agrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-6), new Half(2), new Half(-4.5), new Half(-5));
                var v = ov.swizzle.agrrr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7), new Half(7.5), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.agrrg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4.5), new Half(-5.5), new Half(9), Half.One);
                var v = ov.swizzle.agrrb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4.5), new Half(-9.5), new Half(3), new Half(8));
                var v = ov.swizzle.agrra;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(9.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.agrrk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2.5), new Half(-6), new Half(-1), new Half(7));
                var v = ov.swizzle.agrg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(-4.5), new Half(0.5), new Half(-2.5));
                var v = ov.swizzle.agrgr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), Half.Zero, new Half(-6), new Half(4.5), new Half(-2));
                var v = ov.swizzle.agrgg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-7), new Half(3.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.agrgb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1), new Half(2.5), new Half(-7.5), new Half(6.5));
                var v = ov.swizzle.agrga;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(7.5), new Half(-4.5), new Half(6));
                var v = ov.swizzle.agrgk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(2), new Half(-3), new Half(-4.5));
                var v = ov.swizzle.agrb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(-2.5), new Half(-4), new Half(-9));
                var v = ov.swizzle.agrbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9.5), new Half(3.5), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.agrbg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(-4.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.agrbb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(-6.5), new Half(-5.5), new Half(-4.5));
                var v = ov.swizzle.agrba;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.Zero, new Half(3.5), new Half(-5), Half.One);
                var v = ov.swizzle.agrbk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), Half.Zero, new Half(-5.5), new Half(9));
                var v = ov.swizzle.agra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), new Half(2), new Half(9), new Half(-2));
                var v = ov.swizzle.agrar;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(-9.5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.agrag;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7), new Half(9), new Half(-1.5), new Half(2.5));
                var v = ov.swizzle.agrab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(5), new Half(9.5), new Half(-6.5));
                var v = ov.swizzle.agraa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3.5), new Half(-9), new Half(-1.5), new Half(4));
                var v = ov.swizzle.agrak;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8.5), new Half(-2), new Half(-2), new Half(6.5));
                var v = ov.swizzle.agrk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(9), new Half(-3), Half.One);
                var v = ov.swizzle.agrkr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5), new Half(-6), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.agrkg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(-4.5), new Half(-3), new Half(7.5));
                var v = ov.swizzle.agrkb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(0.5), new Half(4), new Half(-7.5), new Half(4));
                var v = ov.swizzle.agrka;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), Half.Zero, Half.Zero, Half.Zero, new Half(-9.5));
                var v = ov.swizzle.agrkk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(-4), new Half(4), new Half(-1));
                var v = ov.swizzle.agg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8), new Half(7), Half.One, new Half(-1));
                var v = ov.swizzle.aggr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(6.5), new Half(-3.5), new Half(-3.5));
                var v = ov.swizzle.aggrr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(-4.5), new Half(5), new Half(-1.5));
                var v = ov.swizzle.aggrg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(7), new Half(5), new Half(1.5), new Half(2));
                var v = ov.swizzle.aggrb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), new Half(0.5), new Half(7), new Half(2));
                var v = ov.swizzle.aggra;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(8), new Half(2.5), new Half(2));
                var v = ov.swizzle.aggrk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(-1), new Half(9), Half.One);
                var v = ov.swizzle.aggg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), Half.Zero, new Half(-5.5), new Half(2), new Half(8));
                var v = ov.swizzle.agggr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(3.5), new Half(-9), new Half(5.5), new Half(-3));
                var v = ov.swizzle.agggg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(4.5), new Half(-2), new Half(9.5));
                var v = ov.swizzle.agggb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2), new Half(-6.5), new Half(2), Half.Zero);
                var v = ov.swizzle.aggga;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2.5), new Half(9.5), new Half(8.5), new Half(-1));
                var v = ov.swizzle.agggk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(4), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.aggb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), Half.One, new Half(-6), new Half(4), new Half(-2));
                var v = ov.swizzle.aggbr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6.5), new Half(3), new Half(-7.5), new Half(6));
                var v = ov.swizzle.aggbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(4.5), new Half(5.5), new Half(-8.5));
                var v = ov.swizzle.aggbb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3), new Half(7.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.aggba;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(8), new Half(8), new Half(3));
                var v = ov.swizzle.aggbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.Zero, new Half(-4.5), new Half(2.5), new Half(-9));
                var v = ov.swizzle.agga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(5.5), new Half(6.5), new Half(-3));
                var v = ov.swizzle.aggar;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8.5), new Half(0.5), new Half(9.5), new Half(-9));
                var v = ov.swizzle.aggag;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8), Half.One, new Half(5.5), new Half(-5.5));
                var v = ov.swizzle.aggab;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(3.5), new Half(4), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.aggaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.Zero, new Half(-1), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.aggak;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), new Half(7), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.aggk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(7.5), new Half(-2), new Half(3), new Half(8));
                var v = ov.swizzle.aggkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(7.5), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.aggkg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-3), new Half(7.5), new Half(-4), new Half(2));
                var v = ov.swizzle.aggkb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7), new Half(-3), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.aggka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(6), new Half(6), new Half(1.5));
                var v = ov.swizzle.aggkk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(-7.5), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.agb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(-0.5), new Half(-7), new Half(9.5));
                var v = ov.swizzle.agbr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7.5), new Half(7.5), new Half(-2.5), new Half(6.5));
                var v = ov.swizzle.agbrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(-6.5), new Half(-7), new Half(8.5));
                var v = ov.swizzle.agbrg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(7.5), new Half(9), new Half(-7));
                var v = ov.swizzle.agbrb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(-6.5), new Half(-8.5), new Half(-1.5));
                var v = ov.swizzle.agbra;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(4), new Half(-3), new Half(-2));
                var v = ov.swizzle.agbrk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(-5.5), Half.Zero, new Half(-5));
                var v = ov.swizzle.agbg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6.5), new Half(-8.5), new Half(-5), new Half(1.5));
                var v = ov.swizzle.agbgr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(9), new Half(-3.5), new Half(-2.5), new Half(-8));
                var v = ov.swizzle.agbgg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-3), new Half(-0.5), new Half(7), new Half(-6));
                var v = ov.swizzle.agbgb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(-3), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.agbga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6), new Half(8), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.agbgk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(-4.5), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.agbb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(-7.5), new Half(2), new Half(2));
                var v = ov.swizzle.agbbr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(-7.5), new Half(-8), new Half(7));
                var v = ov.swizzle.agbbg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(6.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.agbbb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.Zero, new Half(7.5), new Half(6.5), new Half(-8));
                var v = ov.swizzle.agbba;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4.5), new Half(-2.5), new Half(2), new Half(7));
                var v = ov.swizzle.agbbk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(2.5), new Half(9.5), new Half(-2));
                var v = ov.swizzle.agba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4.5), new Half(-1), new Half(9.5), new Half(-4));
                var v = ov.swizzle.agbar;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(0.5), new Half(-2.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.agbag;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(4.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.agbab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1), new Half(6), Half.One, new Half(4));
                var v = ov.swizzle.agbaa;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5.5), new Half(-0.5), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.agbak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5.5), new Half(-9.5), new Half(4.5), new Half(-3));
                var v = ov.swizzle.agbk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(1.5), new Half(-7.5), new Half(6), new Half(1.5));
                var v = ov.swizzle.agbkr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(6.5), new Half(-0.5), new Half(8.5));
                var v = ov.swizzle.agbkg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4), new Half(2.5), new Half(-2), new Half(7));
                var v = ov.swizzle.agbkb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(7.5), new Half(-8), new Half(5.5));
                var v = ov.swizzle.agbka;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7), new Half(1.5), new Half(5.5), new Half(2.5));
                var v = ov.swizzle.agbkk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(-3), new Half(9.5), new Half(4.5));
                var v = ov.swizzle.aga;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1), new Half(2.5), new Half(2.5), new Half(6));
                var v = ov.swizzle.agar;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(-1.5), new Half(8.5), new Half(5.5));
                var v = ov.swizzle.agarr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(-7), new Half(2), new Half(-5.5));
                var v = ov.swizzle.agarg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(-8), new Half(0.5), new Half(-2));
                var v = ov.swizzle.agarb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), Half.One, new Half(9.5), new Half(4.5));
                var v = ov.swizzle.agara;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.Zero, new Half(-2.5), new Half(-5), new Half(9));
                var v = ov.swizzle.agark;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(6.5), new Half(5.5), new Half(4.5));
                var v = ov.swizzle.agag;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), Half.Zero, new Half(4), new Half(-1.5));
                var v = ov.swizzle.agagr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2), new Half(8.5), new Half(-7.5), new Half(4));
                var v = ov.swizzle.agagg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(1.5), new Half(-1.5), new Half(-1), new Half(-2.5));
                var v = ov.swizzle.agagb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-6.5), new Half(-1.5), new Half(5));
                var v = ov.swizzle.agaga;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8), new Half(2.5), new Half(7.5), new Half(6.5));
                var v = ov.swizzle.agagk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-4), new Half(-0.5), new Half(2));
                var v = ov.swizzle.agab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(-7.5), new Half(7), new Half(-5));
                var v = ov.swizzle.agabr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(-3), Half.One, new Half(9.5));
                var v = ov.swizzle.agabg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1.5), new Half(-9.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.agabb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(-6), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.agaba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(7), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.agabk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-0.5), new Half(2), new Half(7), new Half(9));
                var v = ov.swizzle.agaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), new Half(9), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.agaar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8), new Half(-9.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.agaag;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5), new Half(-7.5), new Half(-0.5), new Half(-9));
                var v = ov.swizzle.agaab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(8.5), new Half(6), new Half(-7));
                var v = ov.swizzle.agaaa;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3), new Half(-4.5), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.agaak;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9), new Half(2.5), new Half(1.5), new Half(-4));
                var v = ov.swizzle.agak;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(9.5), new Half(4), new Half(1.5), new Half(-7));
                var v = ov.swizzle.agakr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9), new Half(9.5), new Half(-1), new Half(4));
                var v = ov.swizzle.agakg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(-9.5), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.agakb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4), new Half(-9), new Half(-1), new Half(-1.5));
                var v = ov.swizzle.agaka;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), new Half(5.5), new Half(0.5), new Half(3));
                var v = ov.swizzle.agakk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-2), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.agk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(-0.5), new Half(-7.5), new Half(9));
                var v = ov.swizzle.agkr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), Half.Zero, new Half(0.5), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.agkrr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(-2.5), new Half(2), new Half(6));
                var v = ov.swizzle.agkrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), Half.Zero, new Half(-5.5), new Half(-8));
                var v = ov.swizzle.agkrb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(-8.5), new Half(3), new Half(2));
                var v = ov.swizzle.agkra;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3), new Half(-4), new Half(-2.5), new Half(6));
                var v = ov.swizzle.agkrk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7), new Half(6), new Half(-6.5), new Half(-0.5));
                var v = ov.swizzle.agkg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3), new Half(7.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.agkgr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4), new Half(6), new Half(-0.5), new Half(-8));
                var v = ov.swizzle.agkgg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(3), new Half(3.5), new Half(-6.5), new Half(0.5));
                var v = ov.swizzle.agkgb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(2), new Half(-1.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.agkga;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(5.5), new Half(-4.5), new Half(-9.5), new Half(6));
                var v = ov.swizzle.agkgk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-3.5), new Half(3), new Half(5), new Half(-2.5));
                var v = ov.swizzle.agkb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(4), new Half(-3), new Half(-4));
                var v = ov.swizzle.agkbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(-3.5), new Half(-3.5), new Half(7));
                var v = ov.swizzle.agkbg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-4.5), new Half(2.5), new Half(-4.5), new Half(-8.5));
                var v = ov.swizzle.agkbb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1), new Half(0.5), new Half(7.5), new Half(1.5));
                var v = ov.swizzle.agkba;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9.5), new Half(1.5), new Half(-4.5), new Half(5));
                var v = ov.swizzle.agkbk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8), new Half(-7), new Half(8), new Half(-5.5));
                var v = ov.swizzle.agka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), Half.Zero, new Half(2), new Half(-5));
                var v = ov.swizzle.agkar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(9.5), new Half(-9.5), new Half(9), new Half(-9));
                var v = ov.swizzle.agkag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), Half.One, new Half(7), new Half(-9.5));
                var v = ov.swizzle.agkab;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), Half.Zero, new Half(9.5), new Half(7));
                var v = ov.swizzle.agkaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(5.5), new Half(6), new Half(-5), new Half(5.5));
                var v = ov.swizzle.agkak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(-9), new Half(7), new Half(-5));
                var v = ov.swizzle.agkk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(-7), new Half(2), new Half(-5.5));
                var v = ov.swizzle.agkkr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(0.5), new Half(9), new Half(-6.5));
                var v = ov.swizzle.agkkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(-8.5), new Half(-9), new Half(-2));
                var v = ov.swizzle.agkkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-5.5), new Half(5), new Half(6));
                var v = ov.swizzle.agkka;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(-8), Half.Zero, new Half(-8.5));
                var v = ov.swizzle.agkkk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3), new Half(-3.5), new Half(6), new Half(2.5));
                var v = ov.swizzle.ab;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(-3), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.abr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(8.5), new Half(-6.5), new Half(-3));
                var v = ov.swizzle.abrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4), new Half(0.5), new Half(-7), new Half(8));
                var v = ov.swizzle.abrrr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5), new Half(-1.5), new Half(3), new Half(-8.5));
                var v = ov.swizzle.abrrg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7), new Half(-4), Half.Zero, new Half(-8.5));
                var v = ov.swizzle.abrrb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), Half.Zero, new Half(-6), new Half(-8.5), new Half(5.5));
                var v = ov.swizzle.abrra;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-6.5), new Half(-8), new Half(-6));
                var v = ov.swizzle.abrrk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(-3.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.abrg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9.5), Half.One, new Half(3.5), new Half(2.5));
                var v = ov.swizzle.abrgr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), Half.One, new Half(2.5), new Half(8));
                var v = ov.swizzle.abrgg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6), new Half(-6.5), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.abrgb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5), new Half(-2), new Half(-4), new Half(9));
                var v = ov.swizzle.abrga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6.5), new Half(-8), new Half(-2.5), new Half(8));
                var v = ov.swizzle.abrgk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(0.5), new Half(-2), Half.Zero, new Half(-0.5));
                var v = ov.swizzle.abrb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-0.5), new Half(4.5), new Half(2.5), new Half(5));
                var v = ov.swizzle.abrbr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(-8.5), new Half(8), new Half(9.5));
                var v = ov.swizzle.abrbg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9.5), new Half(-5.5), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.abrbb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-5), new Half(8.5), new Half(0.5), new Half(-7));
                var v = ov.swizzle.abrba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(5), new Half(-2), new Half(-6.5), new Half(-1));
                var v = ov.swizzle.abrbk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(-4), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.abra;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6), Half.One, new Half(2), new Half(-3));
                var v = ov.swizzle.abrar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), new Half(0.5), new Half(-9.5), new Half(2));
                var v = ov.swizzle.abrag;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4.5), new Half(3), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.abrab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(9.5), new Half(4), new Half(5), new Half(-9.5));
                var v = ov.swizzle.abraa;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(-8.5), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.abrak;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7), new Half(-2), new Half(-7.5), new Half(-4));
                var v = ov.swizzle.abrk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(6.5), new Half(1.5), new Half(9));
                var v = ov.swizzle.abrkr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(-8.5), new Half(9.5), new Half(7.5));
                var v = ov.swizzle.abrkg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5.5), new Half(-9), new Half(-1.5), new Half(-4.5));
                var v = ov.swizzle.abrkb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), Half.One, new Half(7.5), Half.Zero, new Half(-1));
                var v = ov.swizzle.abrka;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7.5), new Half(8), new Half(4), new Half(-6));
                var v = ov.swizzle.abrkk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(5.5), new Half(-8), new Half(-3.5), new Half(-6.5));
                var v = ov.swizzle.abg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(8), new Half(5), new Half(-9));
                var v = ov.swizzle.abgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1.5), new Half(-2), new Half(4), new Half(-1));
                var v = ov.swizzle.abgrr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(4), new Half(8), new Half(-3));
                var v = ov.swizzle.abgrg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(2.5), new Half(7.5), new Half(-1.5));
                var v = ov.swizzle.abgrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-1), new Half(-2), new Half(-8.5));
                var v = ov.swizzle.abgra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-5.5), new Half(2.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.abgrk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9.5), new Half(5.5), new Half(-7), new Half(-0.5));
                var v = ov.swizzle.abgg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(-3), new Half(9), new Half(-3.5));
                var v = ov.swizzle.abggr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-0.5), new Half(2.5), new Half(-0.5), new Half(7));
                var v = ov.swizzle.abggg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), Half.Zero, new Half(1.5), new Half(9.5));
                var v = ov.swizzle.abggb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(2), new Half(-8.5), new Half(7.5), new Half(4.5));
                var v = ov.swizzle.abgga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(7.5), new Half(7.5), new Half(-5.5), new Half(3.5));
                var v = ov.swizzle.abggk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(6.5), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.abgb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-6.5), new Half(-2.5), new Half(-9), new Half(-5));
                var v = ov.swizzle.abgbr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, new Half(-6.5), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.abgbg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2.5), new Half(-7.5), new Half(3), new Half(6));
                var v = ov.swizzle.abgbb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-5.5), Half.One, new Half(-7), new Half(-3.5));
                var v = ov.swizzle.abgba;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(9.5), new Half(7.5), new Half(-6.5), Half.One);
                var v = ov.swizzle.abgbk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8), new Half(-1.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.abga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(3.5), new Half(8.5), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.abgar;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(-8.5), new Half(-7), new Half(7.5));
                var v = ov.swizzle.abgag;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(8), new Half(9), new Half(5.5));
                var v = ov.swizzle.abgab;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-6), new Half(4.5), new Half(-8), Half.Zero);
                var v = ov.swizzle.abgaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4.5), new Half(-9), new Half(7), new Half(-7.5));
                var v = ov.swizzle.abgak;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3.5), new Half(4), new Half(-8), new Half(-5));
                var v = ov.swizzle.abgk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-2), new Half(6), Half.Zero, new Half(-6.5));
                var v = ov.swizzle.abgkr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(-2.5), new Half(-8), new Half(-5));
                var v = ov.swizzle.abgkg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2), new Half(-5.5), new Half(-9), new Half(2));
                var v = ov.swizzle.abgkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(0.5), new Half(-2.5), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.abgka;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-6.5), new Half(-1), new Half(-6), new Half(-9.5));
                var v = ov.swizzle.abgkk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4), new Half(1.5), new Half(-3), Half.One);
                var v = ov.swizzle.abb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(5), Half.One, new Half(3), new Half(2), new Half(-4));
                var v = ov.swizzle.abbr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3), new Half(8), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.abbrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-0.5), new Half(-6), new Half(2), new Half(-3));
                var v = ov.swizzle.abbrg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(9.5), new Half(5), new Half(-1.5));
                var v = ov.swizzle.abbrb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9.5), new Half(-6), new Half(-8), new Half(0.5));
                var v = ov.swizzle.abbra;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, new Half(1.5), new Half(-8.5), new Half(-2));
                var v = ov.swizzle.abbrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6.5), new Half(-4), new Half(-6), new Half(9));
                var v = ov.swizzle.abbg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(9.5), new Half(-7.5), new Half(5), new Half(0.5));
                var v = ov.swizzle.abbgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(9.5), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.abbgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(7), new Half(2), new Half(0.5));
                var v = ov.swizzle.abbgb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5), new Half(-3.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.abbga;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4.5), new Half(-3.5), new Half(-2), new Half(-3));
                var v = ov.swizzle.abbgk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7.5), new Half(-2.5), new Half(-6), new Half(8.5));
                var v = ov.swizzle.abbb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), Half.Zero, new Half(3.5), new Half(-3.5));
                var v = ov.swizzle.abbbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), new Half(4.5), new Half(-5), new Half(8));
                var v = ov.swizzle.abbbg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-8), new Half(0.5), new Half(5.5));
                var v = ov.swizzle.abbbb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), new Half(-1.5), new Half(0.5), new Half(-1));
                var v = ov.swizzle.abbba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(0.5), new Half(6), new Half(3));
                var v = ov.swizzle.abbbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-4), new Half(-1), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.abba;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4.5), new Half(-5.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.abbar;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(6), new Half(-5), new Half(-7), Half.One);
                var v = ov.swizzle.abbag;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-9.5), new Half(-1), new Half(-6), new Half(7.5));
                var v = ov.swizzle.abbab;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(7), new Half(5.5), new Half(-7), new Half(-9));
                var v = ov.swizzle.abbaa;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(6.5), new Half(4), new Half(-8.5));
                var v = ov.swizzle.abbak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(3.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.abbk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), Half.Zero, new Half(4.5), new Half(-1));
                var v = ov.swizzle.abbkr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-5), new Half(-7), new Half(-8), new Half(-6));
                var v = ov.swizzle.abbkg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9.5), new Half(-2), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.abbkb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9.5), new Half(-5), new Half(9), new Half(6.5));
                var v = ov.swizzle.abbka;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8), new Half(4.5), new Half(-5), new Half(4));
                var v = ov.swizzle.abbkk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-9.5), new Half(-9), new Half(6));
                var v = ov.swizzle.aba;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-4), new Half(-4.5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.abar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(-7), new Half(4), new Half(-7.5));
                var v = ov.swizzle.abarr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), new Half(-8), Half.Zero, new Half(2.5));
                var v = ov.swizzle.abarg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6.5), new Half(7), new Half(7), new Half(-4.5));
                var v = ov.swizzle.abarb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1), new Half(-5.5), new Half(2.5), new Half(2.5));
                var v = ov.swizzle.abara;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(-3.5), new Half(0.5), new Half(6));
                var v = ov.swizzle.abark;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(8.5), new Half(-1), new Half(-8.5));
                var v = ov.swizzle.abag;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(5.5), new Half(-9.5), new Half(4), Half.Zero);
                var v = ov.swizzle.abagr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(9), new Half(-2.5), new Half(4));
                var v = ov.swizzle.abagg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9.5), new Half(3.5), new Half(-7.5), new Half(8));
                var v = ov.swizzle.abagb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(0.5), new Half(-2), new Half(3.5), Half.Zero);
                var v = ov.swizzle.abaga;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(2.5), new Half(8.5), new Half(-3.5));
                var v = ov.swizzle.abagk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3.5), new Half(-2.5), new Half(7.5), new Half(3));
                var v = ov.swizzle.abab;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(2.5), new Half(6), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.ababr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(3), new Half(7), new Half(8));
                var v = ov.swizzle.ababg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), Half.Zero, new Half(6.5), new Half(-1.5), new Half(-0.5));
                var v = ov.swizzle.ababb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-0.5), new Half(3), new Half(-8.5), new Half(-3.5));
                var v = ov.swizzle.ababa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6.5), new Half(4), new Half(9), new Half(6.5));
                var v = ov.swizzle.ababk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(2), new Half(-7.5), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.abaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(-2), new Half(-5.5), new Half(8));
                var v = ov.swizzle.abaar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(-3), new Half(2), new Half(8));
                var v = ov.swizzle.abaag;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2.5), new Half(4), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.abaab;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(4), new Half(8), new Half(-1.5));
                var v = ov.swizzle.abaaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(5), new Half(-2), new Half(-6));
                var v = ov.swizzle.abaak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-2.5), new Half(6.5), new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.abak;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8.5), new Half(-4.5), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.abakr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1.5), new Half(-2), new Half(-9.5), new Half(-9));
                var v = ov.swizzle.abakg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), Half.Zero, new Half(-3), new Half(7));
                var v = ov.swizzle.abakb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8), new Half(-9.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.abaka;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8.5), new Half(-3), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.abakk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), Half.Zero, new Half(8), new Half(4.5));
                var v = ov.swizzle.abk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(6.5), new Half(0.5), new Half(5), new Half(-1));
                var v = ov.swizzle.abkr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2), new Half(-6.5), new Half(9.5), new Half(0.5));
                var v = ov.swizzle.abkrr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-6.5), new Half(-4.5), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.abkrg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-0.5), new Half(3.5), new Half(4), new Half(-5));
                var v = ov.swizzle.abkrb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(7), new Half(4), new Half(9), new Half(9));
                var v = ov.swizzle.abkra;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(7), new Half(5.5), new Half(-8.5), new Half(3.5));
                var v = ov.swizzle.abkrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(3), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.abkg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(5.5), Half.One, new Half(9));
                var v = ov.swizzle.abkgr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(4.5), new Half(-9.5), Half.One, new Half(-9));
                var v = ov.swizzle.abkgg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4), new Half(-7.5), new Half(7), new Half(0.5));
                var v = ov.swizzle.abkgb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6.5), new Half(6.5), new Half(3.5), new Half(9.5));
                var v = ov.swizzle.abkga;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(-9.5), new Half(5.5), new Half(-1));
                var v = ov.swizzle.abkgk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6), new Half(2), new Half(6), new Half(3.5));
                var v = ov.swizzle.abkb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9), Half.Zero, new Half(5.5), new Half(-3));
                var v = ov.swizzle.abkbr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(4.5), new Half(1.5), new Half(5.5), new Half(-7));
                var v = ov.swizzle.abkbg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2.5), new Half(3), new Half(1.5), new Half(5));
                var v = ov.swizzle.abkbb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-4.5), new Half(-1.5), new Half(0.5), new Half(0.5));
                var v = ov.swizzle.abkba;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2.5), new Half(9), new Half(-4.5), new Half(-8));
                var v = ov.swizzle.abkbk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), new Half(9.5), new Half(0.5), new Half(-9));
                var v = ov.swizzle.abka;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(2.5), new Half(-4), new Half(7), new Half(-2));
                var v = ov.swizzle.abkar;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4), new Half(-2.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.abkag;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), Half.Zero, new Half(-6), new Half(8.5));
                var v = ov.swizzle.abkab;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(-1.5), new Half(0.5), new Half(-4.5));
                var v = ov.swizzle.abkaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8), new Half(-2), new Half(-6), new Half(3.5));
                var v = ov.swizzle.abkak;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(8), new Half(-5), new Half(-7), new Half(4.5));
                var v = ov.swizzle.abkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(4.5), Half.One, new Half(-6), new Half(-4.5));
                var v = ov.swizzle.abkkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4), new Half(5.5), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.abkkg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(3.5), new Half(-6.5), new Half(-8.5));
                var v = ov.swizzle.abkkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(1.5), new Half(4.5), new Half(-2.5), new Half(-0.5));
                var v = ov.swizzle.abkka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(9), new Half(4), new Half(-5));
                var v = ov.swizzle.abkkk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8.5), new Half(7.5), new Half(-5), new Half(7.5));
                var v = ov.swizzle.aa;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8.5), new Half(9), Half.Zero, new Half(0.5));
                var v = ov.swizzle.aar;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(-4.5), new Half(1.5), new Half(-0.5));
                var v = ov.swizzle.aarr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(8), new Half(-1), new Half(-3));
                var v = ov.swizzle.aarrr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4.5), new Half(-1.5), new Half(4.5), new Half(8.5));
                var v = ov.swizzle.aarrg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5), new Half(-2.5), new Half(-1.5), new Half(3));
                var v = ov.swizzle.aarrb;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4.5), new Half(6.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.aarra;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(-8.5), new Half(-8.5), new Half(3));
                var v = ov.swizzle.aarrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-0.5), new Half(2.5), new Half(3.5), new Half(7));
                var v = ov.swizzle.aarg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(2), new Half(7.5), new Half(-5));
                var v = ov.swizzle.aargr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8), new Half(9.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.aargg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(2.5), new Half(2), new Half(-7), new Half(-5));
                var v = ov.swizzle.aargb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(-7.5), new Half(7.5), new Half(1.5));
                var v = ov.swizzle.aarga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7), new Half(-4.5), new Half(-9), Half.One);
                var v = ov.swizzle.aargk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2), new Half(-1.5), new Half(6), new Half(9.5));
                var v = ov.swizzle.aarb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(2.5), new Half(5.5), new Half(-2.5), new Half(6));
                var v = ov.swizzle.aarbr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3), new Half(-0.5), new Half(-4), new Half(5));
                var v = ov.swizzle.aarbg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4.5), new Half(4), new Half(2.5), new Half(-7.5));
                var v = ov.swizzle.aarbb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(4), new Half(6), new Half(2));
                var v = ov.swizzle.aarba;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6), new Half(5.5), new Half(2), new Half(-8));
                var v = ov.swizzle.aarbk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-8.5), new Half(-6.5), new Half(6.5), new Half(-7));
                var v = ov.swizzle.aara;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(2.5), new Half(1.5), new Half(1.5));
                var v = ov.swizzle.aarar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(7.5), new Half(-5), new Half(9), new Half(7.5));
                var v = ov.swizzle.aarag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(7), new Half(2.5), Half.Zero);
                var v = ov.swizzle.aarab;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(2.5), new Half(7.5), new Half(5));
                var v = ov.swizzle.aaraa;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6), new Half(-8.5), new Half(4), new Half(8.5));
                var v = ov.swizzle.aarak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(6.5), new Half(3.5), new Half(9), new Half(-6.5));
                var v = ov.swizzle.aark;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(3.5), new Half(6.5), new Half(-9));
                var v = ov.swizzle.aarkr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(-3), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.aarkg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.Zero, new Half(4.5), new Half(8), new Half(-4));
                var v = ov.swizzle.aarkb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(3), Half.One, new Half(-4));
                var v = ov.swizzle.aarka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(-3.5), new Half(0.5), new Half(4.5));
                var v = ov.swizzle.aarkk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(9.5), new Half(-2.5), new Half(3.5), new Half(-8.5));
                var v = ov.swizzle.aag;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4), new Half(5), new Half(-2.5), Half.One);
                var v = ov.swizzle.aagr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-1.5), new Half(-2), new Half(-3), new Half(0.5));
                var v = ov.swizzle.aagrr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(2.5), new Half(-2), new Half(7));
                var v = ov.swizzle.aagrg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2), new Half(-2), new Half(1.5), new Half(-8));
                var v = ov.swizzle.aagrb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(1.5), new Half(5.5), new Half(2));
                var v = ov.swizzle.aagra;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2), new Half(3), new Half(2), new Half(9.5));
                var v = ov.swizzle.aagrk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(5), new Half(-9), new Half(-9), new Half(-4.5));
                var v = ov.swizzle.aagg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), new Half(7), new Half(7), new Half(-4));
                var v = ov.swizzle.aaggr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1.5), new Half(0.5), new Half(-2), new Half(3));
                var v = ov.swizzle.aaggg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(6.5), new Half(-5), new Half(-7.5), new Half(-1));
                var v = ov.swizzle.aaggb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(6.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.aagga;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(-1), new Half(-4.5), new Half(3.5));
                var v = ov.swizzle.aaggk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4.5), new Half(8), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.aagb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-2), new Half(-3), new Half(-3.5), new Half(-5));
                var v = ov.swizzle.aagbr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4), new Half(4), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.aagbg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(-9), new Half(1.5), new Half(-3));
                var v = ov.swizzle.aagbb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2.5), new Half(-8.5), new Half(2.5), new Half(1.5));
                var v = ov.swizzle.aagba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9), new Half(2), new Half(8), new Half(-8));
                var v = ov.swizzle.aagbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5.5), new Half(-7.5), new Half(-4), new Half(-6));
                var v = ov.swizzle.aaga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), new Half(-7), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.aagar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-5.5), new Half(-1.5), new Half(7), new Half(-6.5));
                var v = ov.swizzle.aagag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-6.5), new Half(-9), new Half(0.5), new Half(-2.5));
                var v = ov.swizzle.aagab;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4.5), new Half(-9), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.aagaa;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3), new Half(-7), new Half(-7.5), new Half(7.5));
                var v = ov.swizzle.aagak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(3), new Half(8), new Half(5.5));
                var v = ov.swizzle.aagk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-7.5), new Half(0.5), Half.One, new Half(-8));
                var v = ov.swizzle.aagkr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-3.5), new Half(-1.5), new Half(2.5), new Half(4.5));
                var v = ov.swizzle.aagkg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9.5), new Half(-4), new Half(8), new Half(-0.5));
                var v = ov.swizzle.aagkb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(0.5), new Half(-3), new Half(-7.5), new Half(-4));
                var v = ov.swizzle.aagka;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(4), new Half(9), new Half(1.5), new Half(5));
                var v = ov.swizzle.aagkk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2), new Half(4.5), new Half(3.5), new Half(3));
                var v = ov.swizzle.aab;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-9.5), new Half(-9.5), new Half(-3), new Half(-8));
                var v = ov.swizzle.aabr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(-7), new Half(-2), new Half(-6.5));
                var v = ov.swizzle.aabrr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(6), new Half(-2.5), new Half(-8), new Half(4.5));
                var v = ov.swizzle.aabrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-0.5), new Half(7), new Half(3.5), new Half(8.5));
                var v = ov.swizzle.aabrb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(6.5), new Half(-7.5), new Half(5.5), new Half(9));
                var v = ov.swizzle.aabra;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-3), new Half(9.5), new Half(5.5), new Half(-5));
                var v = ov.swizzle.aabrk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(1.5), new Half(4.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.aabg;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), Half.One, new Half(1.5), new Half(8));
                var v = ov.swizzle.aabgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), Half.One, new Half(8.5), new Half(5.5));
                var v = ov.swizzle.aabgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(1.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.aabgb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), Half.One, new Half(4.5), new Half(8.5));
                var v = ov.swizzle.aabga;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7.5), new Half(-4.5), new Half(2), new Half(-9));
                var v = ov.swizzle.aabgk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(3.5), new Half(-8.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.aabb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2), new Half(7.5), new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.aabbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-2.5), new Half(-7), new Half(-5.5), new Half(2.5));
                var v = ov.swizzle.aabbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(4.5), new Half(-6.5), new Half(9.5), new Half(0.5));
                var v = ov.swizzle.aabbb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(2), Half.Zero, new Half(9.5));
                var v = ov.swizzle.aabba;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(9.5), new Half(1.5), new Half(-2));
                var v = ov.swizzle.aabbk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4.5), new Half(8.5), new Half(-2), Half.One);
                var v = ov.swizzle.aaba;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(2.5), new Half(3), new Half(-6), new Half(8));
                var v = ov.swizzle.aabar;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-9.5), new Half(8.5), new Half(9), new Half(3));
                var v = ov.swizzle.aabag;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-9), new Half(-8), new Half(2), new Half(6));
                var v = ov.swizzle.aabab;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-4.5), new Half(-2), new Half(7.5));
                var v = ov.swizzle.aabaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(-8.5), new Half(7.5), new Half(-7));
                var v = ov.swizzle.aabak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-2), new Half(6), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.aabk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(4), new Half(-7.5), new Half(-9));
                var v = ov.swizzle.aabkr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), new Half(7), new Half(0.5), new Half(-5.5));
                var v = ov.swizzle.aabkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(3.5), new Half(6.5), new Half(-3));
                var v = ov.swizzle.aabkb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3), new Half(7.5), new Half(-5.5), new Half(3.5));
                var v = ov.swizzle.aabka;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(-3.5), new Half(-5), new Half(-6));
                var v = ov.swizzle.aabkk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2), new Half(6), new Half(9.5), new Half(-3));
                var v = ov.swizzle.aaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), new Half(-7), new Half(3.5), new Half(6));
                var v = ov.swizzle.aaar;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-5), new Half(5.5), new Half(-5.5), new Half(7));
                var v = ov.swizzle.aaarr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6), new Half(4.5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.aaarg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(7.5), new Half(-5.5), new Half(-4.5), new Half(1.5));
                var v = ov.swizzle.aaarb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-5), new Half(-7.5), new Half(-1.5), new Half(-8.5));
                var v = ov.swizzle.aaara;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(2), new Half(-0.5), new Half(6), new Half(5.5));
                var v = ov.swizzle.aaark;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-5.5), new Half(8), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.aaag;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6), Half.Zero, new Half(0.5), new Half(-4));
                var v = ov.swizzle.aaagr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8), new Half(-3), new Half(-7), new Half(5));
                var v = ov.swizzle.aaagg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-5), new Half(8.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.aaagb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1.5), new Half(-8.5), new Half(7), new Half(-0.5));
                var v = ov.swizzle.aaaga;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2.5), new Half(-1.5), new Half(-2), new Half(-9.5));
                var v = ov.swizzle.aaagk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(-0.5), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.aaab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), new Half(-7), new Half(9.5), new Half(8));
                var v = ov.swizzle.aaabr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(7.5), new Half(4.5), new Half(-1), new Half(-9));
                var v = ov.swizzle.aaabg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2), new Half(4), new Half(-6.5), new Half(1.5));
                var v = ov.swizzle.aaabb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(4), new Half(-1), new Half(2.5), new Half(-1));
                var v = ov.swizzle.aaaba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3), Half.Zero, new Half(-1.5), new Half(8));
                var v = ov.swizzle.aaabk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8), new Half(-1.5), new Half(9), new Half(-8));
                var v = ov.swizzle.aaaa;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1.5), new Half(-5.5), new Half(7.5), new Half(2));
                var v = ov.swizzle.aaaar;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8.5), new Half(8.5), new Half(-1), new Half(-8));
                var v = ov.swizzle.aaaag;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(9), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.aaaab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(5), new Half(-8.5), new Half(7));
                var v = ov.swizzle.aaaaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(6.5), new Half(-8), new Half(-9.5));
                var v = ov.swizzle.aaaak;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(-1.5), new Half(1.5), new Half(-3));
                var v = ov.swizzle.aaak;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(-5.5), new Half(3.5), new Half(2.5));
                var v = ov.swizzle.aaakr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-8), new Half(7), new Half(-9.5), Half.Zero);
                var v = ov.swizzle.aaakg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5), new Half(9.5), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.aaakb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(-2), new Half(4), new Half(1.5));
                var v = ov.swizzle.aaaka;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3), new Half(6), new Half(2), new Half(-3.5));
                var v = ov.swizzle.aaakk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), new Half(5), new Half(-7), new Half(2));
                var v = ov.swizzle.aak;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(7), new Half(8.5), Half.One);
                var v = ov.swizzle.aakr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9), new Half(-7), new Half(6.5), new Half(6));
                var v = ov.swizzle.aakrr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9), new Half(-4.5), new Half(-9.5), new Half(4.5));
                var v = ov.swizzle.aakrg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(-6.5), new Half(5.5), new Half(-4));
                var v = ov.swizzle.aakrb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3.5), new Half(-5.5), Half.Zero, new Half(4));
                var v = ov.swizzle.aakra;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(2), new Half(-7.5), new Half(6), new Half(-8.5));
                var v = ov.swizzle.aakrk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-2), new Half(1.5), new Half(-7), new Half(7));
                var v = ov.swizzle.aakg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8.5), Half.One, new Half(-3), new Half(3));
                var v = ov.swizzle.aakgr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7), new Half(-5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.aakgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2.5), new Half(-2.5), new Half(7), new Half(9.5));
                var v = ov.swizzle.aakgb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(-1), new Half(2), new Half(6.5));
                var v = ov.swizzle.aakga;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-3.5), new Half(7), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.aakgk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1.5), new Half(9), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.aakb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(7), new Half(-3), new Half(1.5));
                var v = ov.swizzle.aakbr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-4), new Half(9), new Half(2.5), new Half(-8));
                var v = ov.swizzle.aakbg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(-4.5), new Half(8), new Half(-6));
                var v = ov.swizzle.aakbb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5), new Half(-4), new Half(6), new Half(-4.5));
                var v = ov.swizzle.aakba;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), Half.One, new Half(-0.5), new Half(-8.5), Half.One);
                var v = ov.swizzle.aakbk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(0.5), new Half(7), new Half(-7), new Half(-2.5));
                var v = ov.swizzle.aaka;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6), Half.Zero, new Half(-8), new Half(2));
                var v = ov.swizzle.aakar;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9), new Half(-4), new Half(-7), new Half(-2));
                var v = ov.swizzle.aakag;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(-8), new Half(-5.5), new Half(7));
                var v = ov.swizzle.aakab;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.One, new Half(8.5), new Half(-8), new Half(-9));
                var v = ov.swizzle.aakaa;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(2), new Half(0.5), new Half(4));
                var v = ov.swizzle.aakak;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8.5), new Half(-2.5), new Half(-2), new Half(-4));
                var v = ov.swizzle.aakk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5), new Half(3.5), new Half(4), new Half(8));
                var v = ov.swizzle.aakkr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(7), new Half(5), new Half(-5));
                var v = ov.swizzle.aakkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.One, new Half(6.5), new Half(5.5), new Half(3));
                var v = ov.swizzle.aakkb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6.5), new Half(4), new Half(-3), new Half(6));
                var v = ov.swizzle.aakka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(2.5), new Half(0.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.aakkk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(-1), new Half(-4), new Half(-7));
                var v = ov.swizzle.ak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(2), new Half(3), new Half(-5));
                var v = ov.swizzle.akr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(2), v.z);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6), new Half(-4), new Half(-6), new Half(-4.5));
                var v = ov.swizzle.akrr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3.5), new Half(2.5), new Half(3), new Half(-8.5));
                var v = ov.swizzle.akrrr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8), new Half(7), new Half(-2.5), new Half(-2.5));
                var v = ov.swizzle.akrrg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4.5), new Half(-4), new Half(5), new Half(8.5));
                var v = ov.swizzle.akrrb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-6), new Half(5.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.akrra;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(4.5), new Half(-0.5), new Half(-2));
                var v = ov.swizzle.akrrk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(8.5), new Half(3.5), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.akrg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9), new Half(-0.5), new Half(-1.5), new Half(-7.5));
                var v = ov.swizzle.akrgr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(-2.5), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.akrgg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(-5.5), new Half(-3.5), new Half(-3));
                var v = ov.swizzle.akrgb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(7.5), new Half(4), new Half(8));
                var v = ov.swizzle.akrga;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1), new Half(4.5), Half.One, new Half(6));
                var v = ov.swizzle.akrgk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9.5), new Half(3), new Half(1.5), new Half(-4));
                var v = ov.swizzle.akrb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(-3.5), new Half(9.5), new Half(-7));
                var v = ov.swizzle.akrbr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5), new Half(-3.5), new Half(-6.5), new Half(-7));
                var v = ov.swizzle.akrbg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-0.5), new Half(-9), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.akrbb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-7), new Half(7), new Half(-6), new Half(4));
                var v = ov.swizzle.akrba;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(-1.5), new Half(-2), new Half(-2.5));
                var v = ov.swizzle.akrbk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(-1.5), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.akra;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(5.5), new Half(2), new Half(-5.5));
                var v = ov.swizzle.akrar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(-5.5), new Half(8), new Half(-9));
                var v = ov.swizzle.akrag;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(1.5), new Half(-4), new Half(-1.5), new Half(3));
                var v = ov.swizzle.akrab;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(9.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.akraa;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(-2.5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.akrak;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5.5), new Half(-5), new Half(-2), new Half(-8));
                var v = ov.swizzle.akrk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7), new Half(4), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.akrkr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(-6), new Half(9), new Half(4));
                var v = ov.swizzle.akrkg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2.5), new Half(8.5), new Half(7.5), Half.One);
                var v = ov.swizzle.akrkb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1.5), Half.Zero, new Half(8), new Half(-6));
                var v = ov.swizzle.akrka;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(-5.5), new Half(7.5), new Half(1.5));
                var v = ov.swizzle.akrkk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9), new Half(8), new Half(-8), new Half(-5.5));
                var v = ov.swizzle.akg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(5.5), new Half(-2), new Half(1.5), Half.Zero);
                var v = ov.swizzle.akgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(-1.5), new Half(3.5), new Half(4.5));
                var v = ov.swizzle.akgrr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-6), new Half(-0.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.akgrg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(-0.5), new Half(-3.5), new Half(-3.5));
                var v = ov.swizzle.akgrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(5.5), new Half(6), new Half(6.5), new Half(-1));
                var v = ov.swizzle.akgra;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(6), new Half(4.5), new Half(3));
                var v = ov.swizzle.akgrk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-5.5), new Half(8.5), new Half(-3.5), new Half(6));
                var v = ov.swizzle.akgg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-9.5), new Half(7), new Half(6.5), new Half(-6));
                var v = ov.swizzle.akggr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(7), new Half(-5), new Half(7.5));
                var v = ov.swizzle.akggg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3.5), new Half(-5.5), new Half(-4.5), new Half(-6));
                var v = ov.swizzle.akggb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-9.5), new Half(-6.5), new Half(1.5), new Half(-3));
                var v = ov.swizzle.akgga;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1.5), new Half(-6), new Half(-8.5), new Half(8.5));
                var v = ov.swizzle.akggk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8.5), new Half(4.5), new Half(-0.5), new Half(4.5));
                var v = ov.swizzle.akgb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-7), new Half(3), new Half(3.5), new Half(5.5));
                var v = ov.swizzle.akgbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(3.5), new Half(9), new Half(-5));
                var v = ov.swizzle.akgbg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-1.5), new Half(2.5), new Half(8.5), new Half(-9));
                var v = ov.swizzle.akgbb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9), new Half(-8.5), new Half(-9), new Half(5));
                var v = ov.swizzle.akgba;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.One, new Half(6), new Half(-3), new Half(4));
                var v = ov.swizzle.akgbk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(-2.5), new Half(8.5), new Half(-6.5));
                var v = ov.swizzle.akga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(-8), new Half(-9.5), new Half(3));
                var v = ov.swizzle.akgar;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6.5), new Half(0.5), new Half(0.5), new Half(-9.5));
                var v = ov.swizzle.akgag;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(-3), new Half(-7), Half.Zero);
                var v = ov.swizzle.akgab;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6.5), new Half(-8), new Half(2), new Half(-7.5));
                var v = ov.swizzle.akgaa;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(-6), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.akgak;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1), new Half(0.5), new Half(-1.5), new Half(6));
                var v = ov.swizzle.akgk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8.5), new Half(5.5), new Half(-2.5), new Half(-4.5));
                var v = ov.swizzle.akgkr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9), new Half(-2), new Half(4.5), new Half(3));
                var v = ov.swizzle.akgkg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9), new Half(1.5), new Half(8.5), new Half(3.5));
                var v = ov.swizzle.akgkb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-1.5), new Half(0.5), new Half(-3), new Half(0.5));
                var v = ov.swizzle.akgka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3.5), new Half(-5.5), new Half(-6), Half.Zero);
                var v = ov.swizzle.akgkk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(0.5), new Half(4.5), new Half(5), new Half(-1));
                var v = ov.swizzle.akb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(2.5), new Half(2), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.akbr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(-3.5), new Half(1.5), new Half(4.5));
                var v = ov.swizzle.akbrr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(-6.5), new Half(8.5), new Half(-1.5));
                var v = ov.swizzle.akbrg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(-7), new Half(0.5), new Half(-8.5));
                var v = ov.swizzle.akbrb;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-8.5), new Half(-8), new Half(7.5), new Half(-4));
                var v = ov.swizzle.akbra;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-4), new Half(-9), new Half(-3.5), new Half(3.5));
                var v = ov.swizzle.akbrk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(5), new Half(-6.5), Half.Zero);
                var v = ov.swizzle.akbg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6), new Half(7), new Half(9), new Half(-8));
                var v = ov.swizzle.akbgr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(8.5), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.akbgg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(-3.5), new Half(-2.5), new Half(7.5));
                var v = ov.swizzle.akbgb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(3), new Half(-5.5), new Half(6));
                var v = ov.swizzle.akbga;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4), new Half(5), new Half(9), new Half(-6.5));
                var v = ov.swizzle.akbgk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3), Half.Zero, new Half(8.5), new Half(-8));
                var v = ov.swizzle.akbb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8), new Half(9.5), new Half(8.5), new Half(-2.5));
                var v = ov.swizzle.akbbr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(6), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.akbbg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7.5), Half.Zero, new Half(-1), new Half(5));
                var v = ov.swizzle.akbbb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2.5), new Half(1.5), new Half(-1.5), new Half(-2));
                var v = ov.swizzle.akbba;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-2), new Half(-8.5), new Half(-7), new Half(-7));
                var v = ov.swizzle.akbbk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-1), new Half(7.5), new Half(-2.5), new Half(-7));
                var v = ov.swizzle.akba;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, Half.Zero, Half.Zero, new Half(7.5));
                var v = ov.swizzle.akbar;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(-1.5), Half.Zero, new Half(9));
                var v = ov.swizzle.akbag;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(1.5), new Half(3), new Half(4));
                var v = ov.swizzle.akbab;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(4.5), new Half(4), new Half(-8.5));
                var v = ov.swizzle.akbaa;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-2), new Half(-2.5), new Half(-4));
                var v = ov.swizzle.akbak;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(-7.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.akbk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3), new Half(-9.5), new Half(5.5), new Half(3.5));
                var v = ov.swizzle.akbkr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7.5), Half.Zero, new Half(-3), new Half(-5));
                var v = ov.swizzle.akbkg;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(0.5), new Half(-9), new Half(0.5));
                var v = ov.swizzle.akbkb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-8.5), new Half(-8), new Half(-3), new Half(-6));
                var v = ov.swizzle.akbka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7), new Half(2.5), new Half(6), new Half(2));
                var v = ov.swizzle.akbkk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), new Half(-4), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.aka;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), new Half(7), Half.One, new Half(3.5));
                var v = ov.swizzle.akar;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-3.5), new Half(5.5), new Half(-1), new Half(3));
                var v = ov.swizzle.akarr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-4), new Half(-8.5), new Half(0.5), new Half(-7.5));
                var v = ov.swizzle.akarg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(1.5), new Half(2.5), new Half(6.5), new Half(-6));
                var v = ov.swizzle.akarb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-9), new Half(9), new Half(5), new Half(-4.5));
                var v = ov.swizzle.akara;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-2), new Half(-3), new Half(2.5), new Half(-1.5));
                var v = ov.swizzle.akark;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(-4), new Half(2.5), new Half(-8.5));
                var v = ov.swizzle.akag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(1.5), new Half(-0.5), new Half(-4.5), new Half(-3));
                var v = ov.swizzle.akagr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-4.5), new Half(6), new Half(8), new Half(6.5));
                var v = ov.swizzle.akagg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5.5), new Half(2), new Half(-5.5), new Half(-1.5));
                var v = ov.swizzle.akagb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7.5), new Half(-7), new Half(9), new Half(-4.5));
                var v = ov.swizzle.akaga;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2), new Half(2), new Half(-6), new Half(4.5));
                var v = ov.swizzle.akagk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-3), new Half(3), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.akab;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(-1.5), new Half(9), new Half(4));
                var v = ov.swizzle.akabr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(2), new Half(7), new Half(-6.5), new Half(4));
                var v = ov.swizzle.akabg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3), Half.Zero, new Half(8), new Half(-4.5));
                var v = ov.swizzle.akabb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9), new Half(-1.5), new Half(4), new Half(-4));
                var v = ov.swizzle.akaba;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), new Half(3), new Half(7), new Half(6));
                var v = ov.swizzle.akabk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-0.5), new Half(-3), new Half(1.5), new Half(7));
                var v = ov.swizzle.akaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(-5.5), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.akaar;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(3.5), new Half(-9.5), new Half(4));
                var v = ov.swizzle.akaag;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(4.5), new Half(5), new Half(-4));
                var v = ov.swizzle.akaab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1), new Half(3.5), new Half(1.5), new Half(0.5));
                var v = ov.swizzle.akaaa;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(8.5), new Half(8), new Half(-7.5));
                var v = ov.swizzle.akaak;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(5.5), new Half(-8.5), new Half(2), new Half(9.5));
                var v = ov.swizzle.akak;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(0.5), new Half(-7), new Half(-6), new Half(5));
                var v = ov.swizzle.akakr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1.5), new Half(-3.5), new Half(-6.5), new Half(-5.5));
                var v = ov.swizzle.akakg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6), new Half(8), Half.Zero, new Half(2));
                var v = ov.swizzle.akakb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7.5), new Half(8.5), new Half(4.5), new Half(4));
                var v = ov.swizzle.akaka;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(5.5), new Half(-8.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.akakk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6.5), new Half(-6), new Half(3.5), new Half(5));
                var v = ov.swizzle.akk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3.5), new Half(0.5), new Half(-9.5), new Half(9));
                var v = ov.swizzle.akkr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-4), new Half(-8), Half.Zero, new Half(-5.5));
                var v = ov.swizzle.akkrr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-5.5), new Half(-1), new Half(7), new Half(3.5));
                var v = ov.swizzle.akkrg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(7.5), new Half(5), Half.Zero);
                var v = ov.swizzle.akkrb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7.5), new Half(-2.5), new Half(8.5), new Half(4));
                var v = ov.swizzle.akkra;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(9), new Half(-6), new Half(3), new Half(1.5));
                var v = ov.swizzle.akkrk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(3.5), new Half(-7), new Half(-9));
                var v = ov.swizzle.akkg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3.5), new Half(-0.5), new Half(1.5), new Half(-7.5));
                var v = ov.swizzle.akkgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9), new Half(7.5), new Half(9), new Half(0.5));
                var v = ov.swizzle.akkgg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4.5), new Half(-4), new Half(6), new Half(1.5));
                var v = ov.swizzle.akkgb;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-4.5), new Half(-1), new Half(2.5), new Half(-6.5));
                var v = ov.swizzle.akkga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9.5), new Half(1.5), new Half(-5), new Half(-1));
                var v = ov.swizzle.akkgk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(8.5), new Half(-4), new Half(8), new Half(-8));
                var v = ov.swizzle.akkb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(3.5), new Half(-1.5), new Half(-6.5));
                var v = ov.swizzle.akkbr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(6), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.akkbg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(-7), new Half(8), new Half(4.5));
                var v = ov.swizzle.akkbb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6.5), new Half(8), new Half(-3), new Half(4.5));
                var v = ov.swizzle.akkba;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), Half.One, Half.Zero, new Half(4.5), new Half(-2));
                var v = ov.swizzle.akkbk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(-4), new Half(-9.5), new Half(-1));
                var v = ov.swizzle.akka;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(4), new Half(-0.5), new Half(1.5), new Half(-1.5));
                var v = ov.swizzle.akkar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(1.5), new Half(-4.5), new Half(-5.5), new Half(8.5));
                var v = ov.swizzle.akkag;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8), new Half(-2.5), Half.Zero, new Half(-9));
                var v = ov.swizzle.akkab;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7.5), new Half(-6.5), new Half(-8.5), new Half(6.5));
                var v = ov.swizzle.akkaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-0.5), Half.One, new Half(-5), new Half(7.5));
                var v = ov.swizzle.akkak;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), new Half(9.5), new Half(-7), new Half(-2));
                var v = ov.swizzle.akkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4), new Half(-2.5), new Half(-3), new Half(-7.5));
                var v = ov.swizzle.akkkr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1), new Half(-4.5), new Half(-9.5), new Half(-6));
                var v = ov.swizzle.akkkg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-1), new Half(-4.5), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.akkkb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5), new Half(9.5), new Half(-5), new Half(4));
                var v = ov.swizzle.akkka;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(2.5), new Half(-5.5), new Half(5.5));
                var v = ov.swizzle.akkkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(-5), new Half(4.5), new Half(-1.5));
                var v = ov.swizzle.kr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(1.5), new Half(7), new Half(-2), new Half(9.5));
                var v = ov.swizzle.krr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(-5), new Half(-8), new Half(-9.5));
                var v = ov.swizzle.krrr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(7.5), new Half(2), new Half(5), new Half(-3));
                var v = ov.swizzle.krrrr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4), new Half(-1.5), new Half(1.5), new Half(6.5));
                var v = ov.swizzle.krrrg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(1.5), new Half(-4.5), new Half(-3), new Half(-6.5));
                var v = ov.swizzle.krrrb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-8.5), new Half(3), new Half(-7), Half.One);
                var v = ov.swizzle.krrra;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(1.5), new Half(1.5), new Half(-2.5));
                var v = ov.swizzle.krrrk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3), new Half(-3), new Half(-4), new Half(-2.5));
                var v = ov.swizzle.krrg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), Half.Zero, new Half(-7.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.krrgr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(9), new Half(-2.5), new Half(-1), new Half(1.5));
                var v = ov.swizzle.krrgg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5), new Half(-6.5), new Half(8.5), new Half(3));
                var v = ov.swizzle.krrgb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(5.5), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.krrga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1.5), new Half(7.5), new Half(-7), new Half(-5.5));
                var v = ov.swizzle.krrgk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6), new Half(-1), new Half(-8), new Half(-8.5));
                var v = ov.swizzle.krrb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(-4), new Half(4), new Half(-4.5));
                var v = ov.swizzle.krrbr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(9), new Half(0.5), new Half(5), new Half(2.5));
                var v = ov.swizzle.krrbg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(3.5), new Half(3.5), new Half(-3.5), new Half(-4.5));
                var v = ov.swizzle.krrbb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(3.5), new Half(-1.5), new Half(1.5));
                var v = ov.swizzle.krrba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7), new Half(-5.5), Half.Zero, new Half(-1));
                var v = ov.swizzle.krrbk;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2), new Half(4), new Half(9), new Half(7));
                var v = ov.swizzle.krra;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(9), new Half(-0.5), new Half(0.5));
                var v = ov.swizzle.krrar;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.One, new Half(-9), new Half(-3), new Half(-8));
                var v = ov.swizzle.krrag;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-6), new Half(0.5), new Half(6.5), new Half(6.5));
                var v = ov.swizzle.krrab;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(-2), new Half(1.5), new Half(3));
                var v = ov.swizzle.krraa;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3), new Half(-6.5), new Half(-2.5), new Half(5.5));
                var v = ov.swizzle.krrak;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(6), new Half(-4), new Half(3.5), new Half(2));
                var v = ov.swizzle.krrk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(-8.5), new Half(7.5), new Half(6));
                var v = ov.swizzle.krrkr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-5.5), new Half(3), new Half(6.5), new Half(9.5));
                var v = ov.swizzle.krrkg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3.5), new Half(-9.5), new Half(-1), new Half(3));
                var v = ov.swizzle.krrkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-8), new Half(-1.5), new Half(3), new Half(-0.5));
                var v = ov.swizzle.krrka;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(1.5), new Half(-4), new Half(5), new Half(-9));
                var v = ov.swizzle.krrkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-6), new Half(-6.5), new Half(4.5), new Half(7.5));
                var v = ov.swizzle.krg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1.5), new Half(-3.5), new Half(9), new Half(5.5));
                var v = ov.swizzle.krgr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4.5), new Half(2.5), new Half(-0.5), new Half(-8));
                var v = ov.swizzle.krgrr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), new Half(-5), new Half(1.5), new Half(-4.5));
                var v = ov.swizzle.krgrg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2.5), new Half(-2), new Half(-6.5), new Half(-4.5));
                var v = ov.swizzle.krgrb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(9), new Half(3), new Half(-5));
                var v = ov.swizzle.krgra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(1.5), new Half(-5), new Half(-9), new Half(5.5));
                var v = ov.swizzle.krgrk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), Half.One, new Half(9), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.krgg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(7), new Half(-1), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.krggr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(8.5), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.krggg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-6), new Half(-7.5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.krggb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(9.5), new Half(8), new Half(-7.5));
                var v = ov.swizzle.krgga;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(-7.5), new Half(5.5), new Half(4));
                var v = ov.swizzle.krggk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9.5), new Half(-4), new Half(4.5), new Half(-5));
                var v = ov.swizzle.krgb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7.5), new Half(-6), new Half(9), new Half(3.5));
                var v = ov.swizzle.krgbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-7.5), new Half(7.5), Half.One, new Half(-1));
                var v = ov.swizzle.krgbg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-5.5), new Half(-3), new Half(-9));
                var v = ov.swizzle.krgbb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(4.5), new Half(3.5), new Half(-6));
                var v = ov.swizzle.krgba;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, Half.One, Half.One, new Half(-7), new Half(-8.5));
                var v = ov.swizzle.krgbk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4.5), new Half(-5), new Half(-1), new Half(0.5));
                var v = ov.swizzle.krga;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3), new Half(4), new Half(-1), new Half(4.5));
                var v = ov.swizzle.krgar;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(9.5), new Half(-2), new Half(-1.5), new Half(7.5));
                var v = ov.swizzle.krgag;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(5), new Half(8.5), new Half(8.5), new Half(4.5));
                var v = ov.swizzle.krgab;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3.5), new Half(8), new Half(-6), new Half(-1.5));
                var v = ov.swizzle.krgaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4.5), new Half(-9.5), new Half(-8), new Half(-4));
                var v = ov.swizzle.krgak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(9.5), new Half(-1.5), new Half(-9.5));
                var v = ov.swizzle.krgk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(6), new Half(-3.5), new Half(-1), new Half(-5));
                var v = ov.swizzle.krgkr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-6), new Half(-3), new Half(-9), new Half(4));
                var v = ov.swizzle.krgkg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), new Half(6), new Half(6.5), new Half(-9.5));
                var v = ov.swizzle.krgkb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(2), new Half(2), new Half(-6.5), Half.One);
                var v = ov.swizzle.krgka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(9.5), new Half(-7.5), new Half(8));
                var v = ov.swizzle.krgkk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(3.5), new Half(-3.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.krb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9.5), new Half(-6.5), new Half(7), new Half(5.5));
                var v = ov.swizzle.krbr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9), new Half(-2.5), new Half(-6.5), new Half(-8));
                var v = ov.swizzle.krbrr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9.5), new Half(0.5), new Half(-1), new Half(-2));
                var v = ov.swizzle.krbrg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9), new Half(-5.5), new Half(8.5), new Half(-9.5));
                var v = ov.swizzle.krbrb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-8), new Half(-7), new Half(-2.5), new Half(9.5));
                var v = ov.swizzle.krbra;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(7), new Half(4), new Half(2), new Half(4));
                var v = ov.swizzle.krbrk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), new Half(-6), new Half(-9.5), new Half(-2));
                var v = ov.swizzle.krbg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-4), new Half(8.5), Half.Zero, new Half(0.5));
                var v = ov.swizzle.krbgr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(-9.5), new Half(4), new Half(8.5));
                var v = ov.swizzle.krbgg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4.5), new Half(-1.5), new Half(9), new Half(-6.5));
                var v = ov.swizzle.krbgb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), new Half(-1.5), new Half(-7), new Half(5));
                var v = ov.swizzle.krbga;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7.5), new Half(6.5), new Half(8), new Half(9));
                var v = ov.swizzle.krbgk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-5), new Half(-5.5), new Half(-9), new Half(5.5));
                var v = ov.swizzle.krbb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(-1), new Half(9.5), new Half(5.5));
                var v = ov.swizzle.krbbr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(-6.5), new Half(7), new Half(5));
                var v = ov.swizzle.krbbg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(8.5), new Half(-3), new Half(-1.5), new Half(9.5));
                var v = ov.swizzle.krbbb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9.5), new Half(4.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.krbba;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.Zero, new Half(9.5), new Half(-4), new Half(7.5));
                var v = ov.swizzle.krbbk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8), new Half(0.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.krba;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), Half.Zero, new Half(9), new Half(-5.5));
                var v = ov.swizzle.krbar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(-0.5), new Half(-5), new Half(-3));
                var v = ov.swizzle.krbag;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-3.5), new Half(-8.5), new Half(-2), new Half(-0.5));
                var v = ov.swizzle.krbab;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(7), new Half(8), new Half(8));
                var v = ov.swizzle.krbaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8.5), new Half(4), new Half(5), new Half(-8.5));
                var v = ov.swizzle.krbak;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4), new Half(7.5), new Half(2), Half.Zero);
                var v = ov.swizzle.krbk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(1.5), new Half(1.5), new Half(9.5), new Half(5));
                var v = ov.swizzle.krbkr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7.5), new Half(2), new Half(3), new Half(3));
                var v = ov.swizzle.krbkg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(1.5), new Half(-9), new Half(6), new Half(3));
                var v = ov.swizzle.krbkb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-2.5), new Half(-5.5), new Half(-9.5));
                var v = ov.swizzle.krbka;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(-8.5), new Half(-6.5), new Half(6));
                var v = ov.swizzle.krbkk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(5.5), new Half(-0.5), new Half(-1));
                var v = ov.swizzle.kra;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-7), new Half(-2.5), new Half(-4), new Half(-9));
                var v = ov.swizzle.krar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(4.5), new Half(-8.5), new Half(5), new Half(4));
                var v = ov.swizzle.krarr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(7), new Half(4), new Half(4), new Half(-6.5));
                var v = ov.swizzle.krarg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(2), new Half(8.5), Half.One, new Half(3.5));
                var v = ov.swizzle.krarb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8), new Half(-3), new Half(-7.5), new Half(-6));
                var v = ov.swizzle.krara;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(8), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.krark;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), Half.One, new Half(-4), new Half(3.5), new Half(-3));
                var v = ov.swizzle.krag;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4), new Half(5), new Half(-2.5), new Half(-4.5));
                var v = ov.swizzle.kragr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8.5), new Half(-8.5), new Half(-9.5), Half.Zero);
                var v = ov.swizzle.kragg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(5), new Half(-6), new Half(9.5), new Half(6.5));
                var v = ov.swizzle.kragb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1.5), new Half(4.5), new Half(5.5), new Half(-7));
                var v = ov.swizzle.kraga;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4), new Half(4), new Half(7.5), new Half(5.5));
                var v = ov.swizzle.kragk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-4.5), new Half(-0.5), new Half(-8), new Half(5));
                var v = ov.swizzle.krab;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(3.5), new Half(-1), new Half(2.5), new Half(-4));
                var v = ov.swizzle.krabr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7.5), new Half(-1), new Half(-7), Half.Zero);
                var v = ov.swizzle.krabg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(3.5), new Half(-8.5), new Half(9.5));
                var v = ov.swizzle.krabb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3.5), new Half(8), new Half(5.5), new Half(-2));
                var v = ov.swizzle.kraba;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(7), new Half(-8), new Half(-6), new Half(9.5));
                var v = ov.swizzle.krabk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(9.5), new Half(7), new Half(2.5), new Half(-6));
                var v = ov.swizzle.kraa;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(8), new Half(2), new Half(-4), new Half(-6.5));
                var v = ov.swizzle.kraar;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(4.5), new Half(-5.5), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.kraag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-8), new Half(5.5), new Half(-7.5));
                var v = ov.swizzle.kraab;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(-6.5), new Half(8.5), new Half(-7));
                var v = ov.swizzle.kraaa;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-7), new Half(3.5), new Half(6), new Half(6.5));
                var v = ov.swizzle.kraak;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(5.5), new Half(2.5), new Half(9));
                var v = ov.swizzle.krak;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-0.5), new Half(-9), Half.One, new Half(2.5));
                var v = ov.swizzle.krakr;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(-9), new Half(8.5), new Half(-6));
                var v = ov.swizzle.krakg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(9), new Half(-6.5), new Half(4), new Half(2.5));
                var v = ov.swizzle.krakb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(0.5), new Half(-7.5), new Half(3.5), new Half(-6.5));
                var v = ov.swizzle.kraka;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(8), new Half(-5), Half.Zero);
                var v = ov.swizzle.krakk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-6), new Half(6.5), new Half(-8), new Half(-3));
                var v = ov.swizzle.krk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(8.5), new Half(1.5), new Half(-7), new Half(-4.5));
                var v = ov.swizzle.krkr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-7), new Half(3), new Half(6.5));
                var v = ov.swizzle.krkrr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(2.5), new Half(-4.5), new Half(-6.5), new Half(2.5));
                var v = ov.swizzle.krkrg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3.5), new Half(-0.5), new Half(-4), new Half(4));
                var v = ov.swizzle.krkrb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3.5), new Half(2), new Half(9), new Half(-6));
                var v = ov.swizzle.krkra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9.5), new Half(3), Half.One, Half.One);
                var v = ov.swizzle.krkrk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(7.5), Half.One, new Half(-4.5), new Half(6));
                var v = ov.swizzle.krkg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(5), new Half(-9), new Half(3));
                var v = ov.swizzle.krkgr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-4), new Half(-9), new Half(7.5), new Half(9.5));
                var v = ov.swizzle.krkgg;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), new Half(-3.5), new Half(-6.5), new Half(4.5));
                var v = ov.swizzle.krkgb;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(-7.5), new Half(-4), new Half(2.5));
                var v = ov.swizzle.krkga;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), new Half(-8.5), Half.Zero, new Half(6.5));
                var v = ov.swizzle.krkgk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(4.5), new Half(-5), Half.One, new Half(-3.5));
                var v = ov.swizzle.krkb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(9.5), new Half(-6), new Half(5));
                var v = ov.swizzle.krkbr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2.5), new Half(-1), new Half(-1), new Half(-1));
                var v = ov.swizzle.krkbg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-4), new Half(4), new Half(-1), new Half(-5));
                var v = ov.swizzle.krkbb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4.5), new Half(-8.5), new Half(6), new Half(3));
                var v = ov.swizzle.krkba;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-5), new Half(-1.5), new Half(2.5), new Half(1.5));
                var v = ov.swizzle.krkbk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(7.5), new Half(5), new Half(-7.5), new Half(4.5));
                var v = ov.swizzle.krka;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(-7), new Half(-2), new Half(-3));
                var v = ov.swizzle.krkar;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(2.5), new Half(9), new Half(-7), new Half(7));
                var v = ov.swizzle.krkag;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-6), new Half(-2), new Half(2), new Half(-3.5));
                var v = ov.swizzle.krkab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(1.5), new Half(9), new Half(-3.5), new Half(9.5));
                var v = ov.swizzle.krkaa;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-4), new Half(8), new Half(8.5), Half.One);
                var v = ov.swizzle.krkak;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(2), new Half(6), new Half(-5.5), new Half(-7));
                var v = ov.swizzle.krkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-7.5), new Half(-1.5), new Half(-6), new Half(-1));
                var v = ov.swizzle.krkkr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(6.5), new Half(3.5), new Half(8.5), new Half(3));
                var v = ov.swizzle.krkkg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-5.5), new Half(3), new Half(8.5), new Half(3.5));
                var v = ov.swizzle.krkkb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2), new Half(-4.5), new Half(6), new Half(0.5));
                var v = ov.swizzle.krkka;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(-9), new Half(-6.5), new Half(-9));
                var v = ov.swizzle.krkkk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-0.5), new Half(-9), new Half(9), Half.One);
                var v = ov.swizzle.kg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-3.5), new Half(-3.5), Half.Zero, new Half(-9));
                var v = ov.swizzle.kgr;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2.5), new Half(5.5), new Half(2.5), new Half(-8));
                var v = ov.swizzle.kgrr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(8.5), new Half(-2), new Half(-7.5), new Half(5.5));
                var v = ov.swizzle.kgrrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1), new Half(-1), new Half(5), new Half(2.5));
                var v = ov.swizzle.kgrrg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7), new Half(9.5), new Half(4.5), new Half(-9));
                var v = ov.swizzle.kgrrb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(2), new Half(5), new Half(6.5), new Half(-4.5));
                var v = ov.swizzle.kgrra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-5.5), new Half(6.5), new Half(5.5));
                var v = ov.swizzle.kgrrk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8.5), new Half(3), new Half(-9.5), new Half(4));
                var v = ov.swizzle.kgrg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(7), new Half(3.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.kgrgr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-6), new Half(6.5), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.kgrgg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-9), new Half(-4), new Half(-7), new Half(3.5));
                var v = ov.swizzle.kgrgb;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3.5), new Half(1.5), new Half(-8.5), new Half(-8));
                var v = ov.swizzle.kgrga;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), new Half(8.5), new Half(6), new Half(8.5));
                var v = ov.swizzle.kgrgk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-4), new Half(-5), new Half(-2.5), new Half(-6));
                var v = ov.swizzle.kgrb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(0.5), Half.Zero, new Half(-1));
                var v = ov.swizzle.kgrbr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-5.5), new Half(-1), new Half(9), new Half(-9.5));
                var v = ov.swizzle.kgrbg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(6), new Half(-8), new Half(7), new Half(-1));
                var v = ov.swizzle.kgrbb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4), new Half(6), new Half(3), new Half(3));
                var v = ov.swizzle.kgrba;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(-7.5), Half.One, new Half(-9.5));
                var v = ov.swizzle.kgrbk;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8), new Half(-2.5), new Half(0.5), new Half(7.5));
                var v = ov.swizzle.kgra;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.One, new Half(9), new Half(-2), new Half(6.5));
                var v = ov.swizzle.kgrar;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-1.5), new Half(-3), new Half(6), new Half(2.5));
                var v = ov.swizzle.kgrag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-5), new Half(-8.5), Half.Zero, new Half(3.5));
                var v = ov.swizzle.kgrab;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(1.5), new Half(5.5), new Half(8.5));
                var v = ov.swizzle.kgraa;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(7), new Half(-1), new Half(-6.5), new Half(-6.5));
                var v = ov.swizzle.kgrak;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-4.5), new Half(-0.5), new Half(-9.5), new Half(9));
                var v = ov.swizzle.kgrk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7.5), new Half(-9.5), new Half(-3), new Half(5.5));
                var v = ov.swizzle.kgrkr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), new Half(6), new Half(-2), new Half(3));
                var v = ov.swizzle.kgrkg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(1.5), Half.Zero, new Half(-2), new Half(6.5));
                var v = ov.swizzle.kgrkb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3.5), new Half(-8.5), new Half(7), Half.One);
                var v = ov.swizzle.kgrka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-8), new Half(1.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.kgrkk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(0.5), new Half(-3.5), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.kgg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(9.5), new Half(3.5), new Half(6.5), new Half(9.5));
                var v = ov.swizzle.kggr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(5.5), new Half(7), new Half(5), new Half(9));
                var v = ov.swizzle.kggrr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(-9), new Half(2.5), new Half(-3.5));
                var v = ov.swizzle.kggrg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(9.5), new Half(-2.5), new Half(5));
                var v = ov.swizzle.kggrb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(3), new Half(-8.5), new Half(-9), new Half(-3));
                var v = ov.swizzle.kggra;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5), new Half(-1.5), new Half(9.5), new Half(-8));
                var v = ov.swizzle.kggrk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(-9), Half.Zero, new Half(-8.5));
                var v = ov.swizzle.kggg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7.5), new Half(3), new Half(-3), new Half(-4.5));
                var v = ov.swizzle.kgggr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8), new Half(-6), new Half(7.5), new Half(-9));
                var v = ov.swizzle.kgggg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(8.5), new Half(8.5), new Half(5), new Half(-8.5));
                var v = ov.swizzle.kgggb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(9.5), new Half(-7.5), new Half(-2));
                var v = ov.swizzle.kggga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(-4), new Half(-5.5), new Half(-5.5));
                var v = ov.swizzle.kgggk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7), new Half(8), new Half(-1.5), new Half(-7));
                var v = ov.swizzle.kggb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-8), new Half(-8), new Half(-2), new Half(-4));
                var v = ov.swizzle.kggbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(3), new Half(-3.5), Half.One, new Half(-5.5));
                var v = ov.swizzle.kggbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(-5.5), Half.Zero, new Half(-2));
                var v = ov.swizzle.kggbb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6), new Half(-7.5), new Half(-8), new Half(8));
                var v = ov.swizzle.kggba;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-1), new Half(6.5), new Half(-0.5), new Half(2));
                var v = ov.swizzle.kggbk;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5.5), new Half(-9.5), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.kgga;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(9), new Half(-2.5), new Half(-8.5), new Half(6));
                var v = ov.swizzle.kggar;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-2.5), new Half(2.5), new Half(-2.5));
                var v = ov.swizzle.kggag;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(3), new Half(8.5), new Half(8.5), new Half(1.5));
                var v = ov.swizzle.kggab;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3.5), new Half(-4), new Half(-3), new Half(7));
                var v = ov.swizzle.kggaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-3.5), new Half(0.5), new Half(-9.5), new Half(-4));
                var v = ov.swizzle.kggak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(-0.5), new Half(9), new Half(-8));
                var v = ov.swizzle.kggk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5.5), new Half(7.5), new Half(-8.5), new Half(8));
                var v = ov.swizzle.kggkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), Half.One, new Half(2), new Half(4.5), new Half(-1.5));
                var v = ov.swizzle.kggkg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(-0.5), new Half(0.5), new Half(2));
                var v = ov.swizzle.kggkb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-2), new Half(8.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.kggka;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(7), new Half(-7.5), new Half(-6.5));
                var v = ov.swizzle.kggkk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-9), new Half(7), new Half(7), new Half(3));
                var v = ov.swizzle.kgb;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7), v.z);
            }
            {
                var ov = new hvec5(Half.One, new Half(2.5), new Half(-7), new Half(-5), new Half(-7));
                var v = ov.swizzle.kgbr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(6), new Half(-8), new Half(-0.5), new Half(-8.5));
                var v = ov.swizzle.kgbrr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(1.5), new Half(-9), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.kgbrg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(9.5), new Half(-7), new Half(-5));
                var v = ov.swizzle.kgbrb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-6.5), new Half(1.5), new Half(7.5), new Half(-6));
                var v = ov.swizzle.kgbra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-7), new Half(-6), new Half(7.5), new Half(-9));
                var v = ov.swizzle.kgbrk;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3.5), new Half(5.5), new Half(0.5), new Half(-2.5));
                var v = ov.swizzle.kgbg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(-5), new Half(-4), new Half(-8.5));
                var v = ov.swizzle.kgbgr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(4.5), new Half(8), new Half(-7), new Half(-6.5));
                var v = ov.swizzle.kgbgg;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(1.5), new Half(-5.5), new Half(9), new Half(5));
                var v = ov.swizzle.kgbgb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9), new Half(0.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.kgbga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), Half.Zero, new Half(-9), new Half(8.5), new Half(-7));
                var v = ov.swizzle.kgbgk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(1.5), new Half(-9.5), new Half(-1), new Half(-0.5));
                var v = ov.swizzle.kgbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-0.5), new Half(6.5), new Half(7));
                var v = ov.swizzle.kgbbr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-3.5), new Half(5.5), new Half(-7.5));
                var v = ov.swizzle.kgbbg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4), new Half(-5), new Half(-5), new Half(5));
                var v = ov.swizzle.kgbbb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(2.5), new Half(5), new Half(2.5), new Half(-3.5));
                var v = ov.swizzle.kgbba;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(3), new Half(2), new Half(-6), new Half(8));
                var v = ov.swizzle.kgbbk;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-5.5), new Half(-6), new Half(7.5), new Half(-7));
                var v = ov.swizzle.kgba;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4), new Half(8.5), new Half(-1.5), new Half(-2.5));
                var v = ov.swizzle.kgbar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(-2.5), new Half(2), new Half(2.5));
                var v = ov.swizzle.kgbag;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(4.5), new Half(-1), new Half(-8));
                var v = ov.swizzle.kgbab;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-4.5), new Half(4), new Half(2.5), new Half(7));
                var v = ov.swizzle.kgbaa;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-3.5), new Half(-1.5), new Half(-5.5), new Half(-6));
                var v = ov.swizzle.kgbak;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(3.5), new Half(-3), new Half(-2.5), new Half(4));
                var v = ov.swizzle.kgbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(5), new Half(-1.5), new Half(-9), new Half(-8.5));
                var v = ov.swizzle.kgbkr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6), new Half(-2.5), new Half(-2.5), new Half(0.5));
                var v = ov.swizzle.kgbkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5), new Half(2), new Half(9.5), new Half(-6));
                var v = ov.swizzle.kgbkb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8), new Half(2.5), new Half(8.5), new Half(4));
                var v = ov.swizzle.kgbka;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-9.5), new Half(-5.5), new Half(-0.5), new Half(4));
                var v = ov.swizzle.kgbkk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-3.5), new Half(-5), new Half(-2), new Half(5.5));
                var v = ov.swizzle.kga;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(9.5), new Half(7.5), new Half(2));
                var v = ov.swizzle.kgar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4), new Half(-6), new Half(-0.5), new Half(6.5));
                var v = ov.swizzle.kgarr;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(8.5), new Half(-7), new Half(2), Half.Zero);
                var v = ov.swizzle.kgarg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-6.5), new Half(-1.5), new Half(7), new Half(6.5));
                var v = ov.swizzle.kgarb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), Half.One, new Half(-5), new Half(-6.5), new Half(-2.5));
                var v = ov.swizzle.kgara;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7.5), new Half(8.5), new Half(-5), new Half(6));
                var v = ov.swizzle.kgark;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.Zero, new Half(-5), new Half(2.5), new Half(8));
                var v = ov.swizzle.kgag;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5), new Half(5), new Half(7.5), new Half(-1));
                var v = ov.swizzle.kgagr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(3), Half.One, new Half(-6));
                var v = ov.swizzle.kgagg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(3), new Half(-8.5), new Half(-0.5), new Half(7.5));
                var v = ov.swizzle.kgagb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(8.5), new Half(6), new Half(-5), new Half(-2));
                var v = ov.swizzle.kgaga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-5), new Half(-7), new Half(-1), new Half(3.5));
                var v = ov.swizzle.kgagk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), Half.One, new Half(-6.5), Half.One);
                var v = ov.swizzle.kgab;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-6.5), new Half(-4.5), new Half(3.5), new Half(-6.5));
                var v = ov.swizzle.kgabr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-7), new Half(1.5), new Half(7.5), new Half(-7.5));
                var v = ov.swizzle.kgabg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8.5), new Half(-3), new Half(7), new Half(7));
                var v = ov.swizzle.kgabb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), Half.Zero, new Half(9), new Half(-7), new Half(-4));
                var v = ov.swizzle.kgaba;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(4.5), Half.Zero, new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.kgabk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-0.5), new Half(5.5), new Half(3), new Half(-1.5));
                var v = ov.swizzle.kgaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(8), new Half(1.5), new Half(-8.5), Half.Zero, new Half(-2.5));
                var v = ov.swizzle.kgaar;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-8), new Half(-1.5), new Half(5), new Half(6.5));
                var v = ov.swizzle.kgaag;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(7), new Half(8), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.kgaab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.One, new Half(8), new Half(2), new Half(-1.5));
                var v = ov.swizzle.kgaaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(-4.5), new Half(8), new Half(4));
                var v = ov.swizzle.kgaak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6.5), new Half(4), new Half(4), new Half(-9));
                var v = ov.swizzle.kgak;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-7.5), new Half(-2.5), new Half(9), new Half(-3));
                var v = ov.swizzle.kgakr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-8), new Half(-2), new Half(-9.5), new Half(-2));
                var v = ov.swizzle.kgakg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-2), new Half(4), new Half(-9.5), new Half(8.5));
                var v = ov.swizzle.kgakb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4.5), new Half(6), Half.Zero, new Half(6));
                var v = ov.swizzle.kgaka;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-9.5), new Half(2.5), new Half(-6), new Half(5));
                var v = ov.swizzle.kgakk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(6), new Half(-2), new Half(6.5), new Half(3.5));
                var v = ov.swizzle.kgk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-4), new Half(-5.5), new Half(-3.5), new Half(-5.5));
                var v = ov.swizzle.kgkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-9.5), new Half(9.5), new Half(-8.5), new Half(-9.5));
                var v = ov.swizzle.kgkrr;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-0.5), new Half(-1.5), new Half(1.5), Half.Zero);
                var v = ov.swizzle.kgkrg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(4), new Half(9), new Half(-5));
                var v = ov.swizzle.kgkrb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6), new Half(3), new Half(7.5), new Half(-7));
                var v = ov.swizzle.kgkra;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-0.5), new Half(-2), new Half(3), new Half(9.5));
                var v = ov.swizzle.kgkrk;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5), new Half(-6), new Half(-3.5), new Half(7.5));
                var v = ov.swizzle.kgkg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), new Half(-8), new Half(5.5), new Half(5));
                var v = ov.swizzle.kgkgr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-4.5), new Half(-3.5), new Half(-9.5), new Half(2));
                var v = ov.swizzle.kgkgg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(1.5), Half.One, new Half(-5), new Half(6.5));
                var v = ov.swizzle.kgkgb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), Half.One, new Half(2), new Half(-7.5), new Half(-4.5));
                var v = ov.swizzle.kgkga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1), new Half(-2.5), new Half(9), new Half(2.5));
                var v = ov.swizzle.kgkgk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7), new Half(6.5), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.kgkb;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4), Half.One, new Half(3.5), new Half(-2.5));
                var v = ov.swizzle.kgkbr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-4), new Half(9), new Half(4), new Half(4));
                var v = ov.swizzle.kgkbg;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-0.5), new Half(-6.5), new Half(4.5), new Half(4));
                var v = ov.swizzle.kgkbb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(7.5), new Half(7), new Half(-8));
                var v = ov.swizzle.kgkba;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(3.5), Half.One, Half.Zero);
                var v = ov.swizzle.kgkbk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), Half.Zero, new Half(8), new Half(3), Half.One);
                var v = ov.swizzle.kgka;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1.5), new Half(5), new Half(3.5), new Half(3));
                var v = ov.swizzle.kgkar;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(7), new Half(-2.5), new Half(-4));
                var v = ov.swizzle.kgkag;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(2.5), new Half(7.5), new Half(-7), Half.One);
                var v = ov.swizzle.kgkab;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(2.5), new Half(4), new Half(2.5));
                var v = ov.swizzle.kgkaa;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-1), new Half(-0.5), new Half(3), new Half(5.5));
                var v = ov.swizzle.kgkak;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), Half.Zero, new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.kgkk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(6), new Half(2), new Half(3));
                var v = ov.swizzle.kgkkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-5.5), new Half(0.5), new Half(1.5), new Half(5));
                var v = ov.swizzle.kgkkg;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(9), new Half(3.5), new Half(9));
                var v = ov.swizzle.kgkkb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), new Half(-6), new Half(9.5), new Half(2.5));
                var v = ov.swizzle.kgkka;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(3), new Half(-2), new Half(-3.5));
                var v = ov.swizzle.kgkkk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(9.5), Half.One, new Half(7.5), new Half(8));
                var v = ov.swizzle.kb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-0.5), new Half(-4), new Half(2), new Half(3.5));
                var v = ov.swizzle.kbr;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-8), v.z);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4.5), new Half(5.5), new Half(-4), new Half(7));
                var v = ov.swizzle.kbrr;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(6.5), Half.One, new Half(8.5), new Half(-8.5));
                var v = ov.swizzle.kbrrr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), Half.One, new Half(5.5), new Half(4.5), new Half(5.5));
                var v = ov.swizzle.kbrrg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(4), Half.Zero, Half.Zero, new Half(9));
                var v = ov.swizzle.kbrrb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(5.5), new Half(-7), new Half(-3));
                var v = ov.swizzle.kbrra;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6.5), new Half(3.5), new Half(-7.5), new Half(-2.5));
                var v = ov.swizzle.kbrrk;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(6), new Half(6), Half.Zero, new Half(6));
                var v = ov.swizzle.kbrg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), Half.One, new Half(2.5), new Half(8));
                var v = ov.swizzle.kbrgr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6), new Half(5), new Half(0.5), new Half(1.5));
                var v = ov.swizzle.kbrgg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(3), new Half(7), Half.One, new Half(-9));
                var v = ov.swizzle.kbrgb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-0.5), new Half(-3), new Half(3.5), new Half(-9.5));
                var v = ov.swizzle.kbrga;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(0.5), new Half(-9), Half.One, new Half(-2));
                var v = ov.swizzle.kbrgk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(-9), new Half(-1), Half.Zero);
                var v = ov.swizzle.kbrb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(4.5), new Half(5.5), new Half(-2.5), new Half(-8.5));
                var v = ov.swizzle.kbrbr;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(7), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.kbrbg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(6.5), new Half(5), new Half(-4.5), new Half(-5.5));
                var v = ov.swizzle.kbrbb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5), new Half(1.5), new Half(3), new Half(-4));
                var v = ov.swizzle.kbrba;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3.5), new Half(-4), new Half(-9.5), new Half(6));
                var v = ov.swizzle.kbrbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(1.5), Half.Zero, new Half(-9.5), new Half(7));
                var v = ov.swizzle.kbra;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), new Half(4.5), new Half(-0.5), new Half(2));
                var v = ov.swizzle.kbrar;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(8), new Half(-8.5), new Half(-9.5), new Half(9.5));
                var v = ov.swizzle.kbrag;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8.5), new Half(-8.5), new Half(3), new Half(-4));
                var v = ov.swizzle.kbrab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4.5), new Half(3.5), new Half(-7), new Half(-8.5));
                var v = ov.swizzle.kbraa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-3), new Half(-6), new Half(7.5), new Half(8));
                var v = ov.swizzle.kbrak;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-5), new Half(-9.5), new Half(7.5));
                var v = ov.swizzle.kbrk;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-1.5), new Half(-5.5), new Half(-5));
                var v = ov.swizzle.kbrkr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2), new Half(-6), new Half(-6.5), new Half(0.5));
                var v = ov.swizzle.kbrkg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4.5), new Half(-1), new Half(4), Half.One);
                var v = ov.swizzle.kbrkb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-2), new Half(-1), new Half(6), new Half(2));
                var v = ov.swizzle.kbrka;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(8.5), new Half(-5.5), new Half(9.5), new Half(-7.5));
                var v = ov.swizzle.kbrkk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2), new Half(6.5), new Half(-8.5), new Half(6));
                var v = ov.swizzle.kbg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(4.5), Half.Zero, new Half(-6.5), new Half(-2));
                var v = ov.swizzle.kbgr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(3.5), new Half(7.5), new Half(-1.5), new Half(5.5));
                var v = ov.swizzle.kbgrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9), new Half(9), new Half(-2.5), new Half(8.5));
                var v = ov.swizzle.kbgrg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), Half.One, new Half(-2), new Half(6.5), new Half(8.5));
                var v = ov.swizzle.kbgrb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1), new Half(8), new Half(-7), new Half(8.5));
                var v = ov.swizzle.kbgra;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-8), new Half(-1.5), new Half(2), new Half(-2));
                var v = ov.swizzle.kbgrk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(5), new Half(4.5), new Half(-7), new Half(-8));
                var v = ov.swizzle.kbgg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3.5), new Half(-1.5), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.kbggr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5), new Half(-7.5), new Half(-1), Half.One);
                var v = ov.swizzle.kbggg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(6.5), Half.One, new Half(-0.5));
                var v = ov.swizzle.kbggb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, Half.Zero, new Half(-6.5), new Half(-6.5));
                var v = ov.swizzle.kbgga;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-4.5), new Half(-5.5), new Half(-5.5), new Half(-6.5));
                var v = ov.swizzle.kbggk;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4), new Half(5.5), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.kbgb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(3.5), new Half(9), new Half(9));
                var v = ov.swizzle.kbgbr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-4), new Half(-9), new Half(5), new Half(-8.5));
                var v = ov.swizzle.kbgbg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-0.5), new Half(7.5), new Half(-6), new Half(9));
                var v = ov.swizzle.kbgbb;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8.5), new Half(-2.5), new Half(-3), new Half(-1));
                var v = ov.swizzle.kbgba;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(4), new Half(-2), new Half(3.5), new Half(-6));
                var v = ov.swizzle.kbgbk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9), new Half(3), new Half(9), new Half(7.5));
                var v = ov.swizzle.kbga;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-9.5), new Half(5), new Half(-7.5), new Half(5));
                var v = ov.swizzle.kbgar;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5.5), new Half(-2.5), new Half(1.5), new Half(0.5));
                var v = ov.swizzle.kbgag;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-8.5), new Half(4.5), new Half(2), new Half(-4));
                var v = ov.swizzle.kbgab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-1.5), new Half(7), new Half(-5), new Half(-7.5));
                var v = ov.swizzle.kbgaa;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-8), new Half(-7.5), new Half(5), new Half(-7.5));
                var v = ov.swizzle.kbgak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(3), new Half(9.5), new Half(3.5), new Half(6));
                var v = ov.swizzle.kbgk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(9), new Half(8), new Half(8), new Half(8));
                var v = ov.swizzle.kbgkr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-6.5), new Half(-6), new Half(9), new Half(5.5));
                var v = ov.swizzle.kbgkg;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(4.5), new Half(6.5), new Half(-7.5), new Half(-7.5));
                var v = ov.swizzle.kbgkb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(9), new Half(-9), new Half(3));
                var v = ov.swizzle.kbgka;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.One, new Half(-0.5), new Half(-2.5), new Half(-4.5));
                var v = ov.swizzle.kbgkk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(7.5), new Half(9.5), new Half(9.5), new Half(-5));
                var v = ov.swizzle.kbb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(3.5), new Half(-5.5), Half.Zero);
                var v = ov.swizzle.kbbr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-3), new Half(-3.5), new Half(4.5), new Half(-4.5));
                var v = ov.swizzle.kbbrr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-2), new Half(8.5), new Half(-9.5), new Half(-8));
                var v = ov.swizzle.kbbrg;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-7.5), Half.Zero, new Half(-6.5), new Half(7.5));
                var v = ov.swizzle.kbbrb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(3.5), new Half(-9.5), new Half(0.5), new Half(2.5));
                var v = ov.swizzle.kbbra;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9.5), new Half(-8.5), new Half(-6.5), new Half(-4));
                var v = ov.swizzle.kbbrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-6.5), new Half(-6), new Half(4.5), new Half(-5.5));
                var v = ov.swizzle.kbbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(8), Half.Zero, new Half(-2), new Half(-8.5), new Half(3));
                var v = ov.swizzle.kbbgr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-5.5), new Half(-6), new Half(4.5), new Half(-4));
                var v = ov.swizzle.kbbgg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2), new Half(9), new Half(9), new Half(7));
                var v = ov.swizzle.kbbgb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(-7), new Half(2), new Half(5.5));
                var v = ov.swizzle.kbbga;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-6), new Half(2), new Half(2.5), new Half(-3));
                var v = ov.swizzle.kbbgk;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), new Half(2), new Half(-9.5), new Half(2.5));
                var v = ov.swizzle.kbbb;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(5.5), new Half(3), new Half(5.5), new Half(8));
                var v = ov.swizzle.kbbbr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(9), new Half(-9), new Half(-9.5), new Half(-5.5));
                var v = ov.swizzle.kbbbg;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8), new Half(-4.5), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.kbbbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-1), new Half(-2), new Half(-5), Half.One);
                var v = ov.swizzle.kbbba;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(-4), new Half(9.5), new Half(6));
                var v = ov.swizzle.kbbbk;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(7.5), new Half(-9.5), new Half(8), new Half(4));
                var v = ov.swizzle.kbba;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-8.5), new Half(5.5), new Half(2), new Half(8));
                var v = ov.swizzle.kbbar;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(9.5), new Half(-4), Half.Zero, new Half(1.5));
                var v = ov.swizzle.kbbag;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8), new Half(6.5), new Half(-8), new Half(9.5));
                var v = ov.swizzle.kbbab;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(0.5), new Half(-3.5), new Half(2), new Half(-2.5));
                var v = ov.swizzle.kbbaa;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-9), new Half(-1.5), new Half(-8), new Half(7.5));
                var v = ov.swizzle.kbbak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-7.5), new Half(3), new Half(-1.5), new Half(-6));
                var v = ov.swizzle.kbbk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(0.5), new Half(9), new Half(-5), new Half(2));
                var v = ov.swizzle.kbbkr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-7.5), new Half(-6.5), new Half(7), new Half(-7.5));
                var v = ov.swizzle.kbbkg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(-1), new Half(-5.5), new Half(9.5));
                var v = ov.swizzle.kbbkb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(6.5), Half.Zero, new Half(7));
                var v = ov.swizzle.kbbka;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-2), new Half(-7), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.kbbkk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(3.5), new Half(-8), new Half(5), new Half(9));
                var v = ov.swizzle.kba;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(5), v.z);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(5.5), new Half(-4.5), new Half(-4.5), new Half(-2));
                var v = ov.swizzle.kbar;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8), new Half(-7.5), new Half(-5), new Half(-4.5));
                var v = ov.swizzle.kbarr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(7), new Half(-9), new Half(-8.5), Half.Zero);
                var v = ov.swizzle.kbarg;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(8), new Half(3), new Half(-9), new Half(-9.5));
                var v = ov.swizzle.kbarb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-3.5), new Half(3), new Half(-8.5), new Half(-4));
                var v = ov.swizzle.kbara;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-3), new Half(-1.5), new Half(7.5), Half.Zero);
                var v = ov.swizzle.kbark;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(4), new Half(-8), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.kbag;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(-3.5), new Half(-3), new Half(-3.5));
                var v = ov.swizzle.kbagr;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-1.5), new Half(-8.5), new Half(-5), new Half(1.5));
                var v = ov.swizzle.kbagg;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), new Half(6.5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.kbagb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(0.5), new Half(8.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.kbaga;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(1.5), new Half(4), new Half(-2), new Half(3));
                var v = ov.swizzle.kbagk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-8.5), new Half(-5.5), new Half(-5), new Half(4));
                var v = ov.swizzle.kbab;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-2), new Half(-0.5), new Half(-8.5), new Half(-5.5), new Half(-1));
                var v = ov.swizzle.kbabr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6.5), new Half(0.5), new Half(3.5), new Half(-1));
                var v = ov.swizzle.kbabg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(5), new Half(-1.5), new Half(-0.5), new Half(-8));
                var v = ov.swizzle.kbabb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-6), new Half(6), new Half(-3), new Half(7));
                var v = ov.swizzle.kbaba;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(5), new Half(2.5), new Half(-7), new Half(8.5));
                var v = ov.swizzle.kbabk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(6), new Half(-5), new Half(8), new Half(-3.5));
                var v = ov.swizzle.kbaa;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3), new Half(6), new Half(-1), new Half(-9));
                var v = ov.swizzle.kbaar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-2), new Half(-3), new Half(-1), new Half(4));
                var v = ov.swizzle.kbaag;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(5), new Half(-5), new Half(-8.5));
                var v = ov.swizzle.kbaab;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(3), new Half(-5), new Half(3.5), new Half(-0.5));
                var v = ov.swizzle.kbaaa;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4), new Half(-2), new Half(7), new Half(-4));
                var v = ov.swizzle.kbaak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(7.5), new Half(3), new Half(-4.5), new Half(-2));
                var v = ov.swizzle.kbak;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(8), new Half(-7.5), new Half(7), new Half(-7.5));
                var v = ov.swizzle.kbakr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8.5), new Half(-8), new Half(9), new Half(-2));
                var v = ov.swizzle.kbakg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(5.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.kbakb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), Half.Zero, new Half(-7), new Half(5.5), new Half(4));
                var v = ov.swizzle.kbaka;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(1.5), new Half(-8.5), new Half(-9.5), Half.One);
                var v = ov.swizzle.kbakk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2.5), new Half(9.5), new Half(6.5), new Half(-4));
                var v = ov.swizzle.kbk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(7), new Half(-2.5), new Half(9.5), new Half(-0.5));
                var v = ov.swizzle.kbkr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(Half.One, new Half(-8), new Half(8.5), new Half(3.5), new Half(-4.5));
                var v = ov.swizzle.kbkrr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-4.5), new Half(5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.kbkrg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-8), new Half(3), new Half(-1), new Half(-5.5));
                var v = ov.swizzle.kbkrb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-8.5), new Half(8), new Half(-8.5), new Half(-6));
                var v = ov.swizzle.kbkra;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-2.5), Half.One, new Half(5), new Half(7));
                var v = ov.swizzle.kbkrk;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(9.5), new Half(-8.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.kbkg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-6), new Half(6.5), new Half(-9), new Half(5.5));
                var v = ov.swizzle.kbkgr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(-6.5), new Half(9), new Half(8));
                var v = ov.swizzle.kbkgg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-3.5), new Half(9.5), new Half(4.5), new Half(-9.5));
                var v = ov.swizzle.kbkgb;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-0.5), new Half(-0.5), new Half(-3), new Half(7));
                var v = ov.swizzle.kbkga;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(9.5), new Half(6), new Half(-5.5), new Half(5));
                var v = ov.swizzle.kbkgk;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-6), new Half(2.5), new Half(-4.5), new Half(-7.5));
                var v = ov.swizzle.kbkb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(3), new Half(8), new Half(-8), new Half(0.5));
                var v = ov.swizzle.kbkbr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-7.5), new Half(-4.5), new Half(-5), new Half(-2));
                var v = ov.swizzle.kbkbg;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(7.5), new Half(8.5), new Half(-2), new Half(4));
                var v = ov.swizzle.kbkbb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-1.5), new Half(7), new Half(-4.5), new Half(-1));
                var v = ov.swizzle.kbkba;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(9), new Half(8), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.kbkbk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(9), new Half(-3), new Half(-3), new Half(-8.5));
                var v = ov.swizzle.kbka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(8), new Half(7.5), new Half(-1.5), new Half(-3));
                var v = ov.swizzle.kbkar;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-7), new Half(-7.5), new Half(3), new Half(-5));
                var v = ov.swizzle.kbkag;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(4), new Half(-4), Half.Zero, new Half(3));
                var v = ov.swizzle.kbkab;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.Zero, new Half(4.5), new Half(-9), new Half(8));
                var v = ov.swizzle.kbkaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(8), new Half(6), new Half(-5), new Half(6));
                var v = ov.swizzle.kbkak;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(4.5), new Half(-9.5), Half.Zero, new Half(4.5));
                var v = ov.swizzle.kbkk;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(8), new Half(-2), new Half(4.5), new Half(-6));
                var v = ov.swizzle.kbkkr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(9.5), new Half(-1), new Half(8.5), new Half(7.5));
                var v = ov.swizzle.kbkkg;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5), new Half(3), new Half(-1), new Half(6.5));
                var v = ov.swizzle.kbkkb;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(6.5), new Half(8), new Half(-4.5), new Half(-2.5));
                var v = ov.swizzle.kbkka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5), new Half(3.5), new Half(4), new Half(5.5));
                var v = ov.swizzle.kbkkk;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), Half.One, new Half(-6.5), new Half(-7.5), new Half(-2.5));
                var v = ov.swizzle.ka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7.5), new Half(-8.5), new Half(9), new Half(-9));
                var v = ov.swizzle.kar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-3), v.z);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(-9.5), new Half(-4.5), new Half(8));
                var v = ov.swizzle.karr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(0.5), new Half(5.5), new Half(-8.5), new Half(-2.5));
                var v = ov.swizzle.karrr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4), new Half(6.5), new Half(-9), new Half(6.5));
                var v = ov.swizzle.karrg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-3.5), new Half(4.5), new Half(-4), new Half(9.5));
                var v = ov.swizzle.karrb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-6), new Half(7), new Half(9.5), new Half(-1.5));
                var v = ov.swizzle.karra;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-7), new Half(-0.5), new Half(-2), new Half(-4.5));
                var v = ov.swizzle.karrk;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-4.5), new Half(4.5), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.karg;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-7), new Half(-5.5), new Half(-7), new Half(7.5));
                var v = ov.swizzle.kargr;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-9.5), new Half(-2), new Half(-7), new Half(-5));
                var v = ov.swizzle.kargg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5), new Half(4), new Half(-4.5), new Half(7.5));
                var v = ov.swizzle.kargb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(2), new Half(7), new Half(-1), new Half(8.5));
                var v = ov.swizzle.karga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5.5), new Half(-8.5), new Half(6.5), new Half(-5));
                var v = ov.swizzle.kargk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), Half.One, new Half(-6.5), new Half(5.5), new Half(4));
                var v = ov.swizzle.karb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-1), new Half(4), new Half(-1.5), new Half(-8));
                var v = ov.swizzle.karbr;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), Half.One, new Half(-8), new Half(-7), new Half(4.5));
                var v = ov.swizzle.karbg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(3), new Half(1.5), new Half(-5.5), new Half(5));
                var v = ov.swizzle.karbb;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-2), new Half(3), new Half(-5), new Half(9.5));
                var v = ov.swizzle.karba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7), new Half(-5.5), new Half(3.5), Half.Zero);
                var v = ov.swizzle.karbk;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6.5), new Half(-2.5), Half.One, new Half(-5.5));
                var v = ov.swizzle.kara;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
            }
            {
                var ov = new hvec5(new Half(3), new Half(6.5), new Half(-6), new Half(-2), new Half(-9));
                var v = ov.swizzle.karar;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-2), Half.One, new Half(-7), new Half(7), new Half(-5.5));
                var v = ov.swizzle.karag;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-4.5), new Half(1.5), new Half(-7), new Half(8.5));
                var v = ov.swizzle.karab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(3.5), new Half(6.5), new Half(0.5), new Half(-2.5));
                var v = ov.swizzle.karaa;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(7.5), new Half(8), new Half(6.5), new Half(-5.5));
                var v = ov.swizzle.karak;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3.5), new Half(-1), new Half(-1.5), new Half(-6.5));
                var v = ov.swizzle.kark;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-5), new Half(-6), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.karkr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1.5), new Half(-9), new Half(4), new Half(3.5));
                var v = ov.swizzle.karkg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5.5), new Half(5.5), new Half(1.5), new Half(-5));
                var v = ov.swizzle.karkb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-3.5), new Half(7), new Half(5.5), new Half(-4));
                var v = ov.swizzle.karka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(9.5), new Half(7.5), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.karkk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-1.5), new Half(-9), new Half(-1.5), Half.Zero);
                var v = ov.swizzle.kag;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(0.5), new Half(-1.5), new Half(-5.5), new Half(6));
                var v = ov.swizzle.kagr;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(8), new Half(8.5), new Half(-3.5), new Half(4.5));
                var v = ov.swizzle.kagrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-4), new Half(1.5), new Half(6.5), Half.One);
                var v = ov.swizzle.kagrg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(2), new Half(-8), new Half(-7.5), new Half(-0.5));
                var v = ov.swizzle.kagrb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-9), new Half(-6), new Half(-4), new Half(-7.5));
                var v = ov.swizzle.kagra;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-7), Half.One, new Half(-1), new Half(-5.5));
                var v = ov.swizzle.kagrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(8), new Half(0.5), new Half(3), new Half(7));
                var v = ov.swizzle.kagg;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(-2), new Half(-5.5), new Half(4));
                var v = ov.swizzle.kaggr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-1.5), new Half(-8.5), Half.Zero, new Half(-6));
                var v = ov.swizzle.kaggg;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(8), Half.Zero, new Half(-3), new Half(-6));
                var v = ov.swizzle.kaggb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-1), new Half(7.5), new Half(9.5), new Half(8));
                var v = ov.swizzle.kagga;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(-5), new Half(-5), Half.One, new Half(-0.5));
                var v = ov.swizzle.kaggk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(7), new Half(-2.5), new Half(2), new Half(-9));
                var v = ov.swizzle.kagb;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5.5), new Half(-2.5), new Half(-1.5), new Half(4));
                var v = ov.swizzle.kagbr;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), new Half(3.5), new Half(-7), new Half(2));
                var v = ov.swizzle.kagbg;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(7.5), new Half(-5), new Half(7.5), new Half(5.5));
                var v = ov.swizzle.kagbb;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-7), new Half(-1.5), new Half(5.5), new Half(-9.5));
                var v = ov.swizzle.kagba;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-1), new Half(1.5), new Half(5.5), Half.One);
                var v = ov.swizzle.kagbk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2.5), new Half(9), new Half(4.5), new Half(-2));
                var v = ov.swizzle.kaga;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), Half.Zero, new Half(-9), new Half(-7.5), new Half(-3.5));
                var v = ov.swizzle.kagar;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-8.5), new Half(-2), new Half(7), new Half(-6));
                var v = ov.swizzle.kagag;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7), new Half(-9.5), new Half(6.5), new Half(3));
                var v = ov.swizzle.kagab;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), Half.Zero, new Half(-7), new Half(6), new Half(-8.5));
                var v = ov.swizzle.kagaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-9), new Half(2.5), new Half(-7.5), new Half(-4));
                var v = ov.swizzle.kagak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(2.5), new Half(1.5), new Half(-2.5), new Half(-5.5));
                var v = ov.swizzle.kagk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-8.5), new Half(8.5), new Half(5), new Half(-5.5));
                var v = ov.swizzle.kagkr;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-9), new Half(2.5), new Half(-2), new Half(2.5));
                var v = ov.swizzle.kagkg;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(4), new Half(-9.5), new Half(-9), new Half(7));
                var v = ov.swizzle.kagkb;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(0.5), new Half(4.5), new Half(1.5), new Half(2.5));
                var v = ov.swizzle.kagka;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-6), new Half(3), new Half(-4), new Half(6.5));
                var v = ov.swizzle.kagkk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8), new Half(7.5), new Half(8), new Half(7));
                var v = ov.swizzle.kab;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(-5.5), new Half(-5.5), new Half(8));
                var v = ov.swizzle.kabr;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), new Half(-5), new Half(-3), Half.Zero);
                var v = ov.swizzle.kabrr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7), new Half(4), new Half(-4), new Half(3.5));
                var v = ov.swizzle.kabrg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(8.5), new Half(-3), new Half(-5), new Half(-3.5));
                var v = ov.swizzle.kabrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(8.5), Half.Zero, new Half(5.5), new Half(2));
                var v = ov.swizzle.kabra;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-8), new Half(-4.5), new Half(8), new Half(-5.5));
                var v = ov.swizzle.kabrk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(-5.5), new Half(4), new Half(-7.5));
                var v = ov.swizzle.kabg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-9.5), new Half(5.5), new Half(-1), new Half(-6));
                var v = ov.swizzle.kabgr;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6), new Half(-7.5), new Half(1.5), Half.One);
                var v = ov.swizzle.kabgg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1), new Half(-0.5), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.kabgb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(6.5), new Half(-6.5), new Half(-7.5), new Half(-9));
                var v = ov.swizzle.kabga;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(0.5), new Half(-0.5), new Half(-7.5), new Half(-7));
                var v = ov.swizzle.kabgk;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-7), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3.5), new Half(6), new Half(-1.5), new Half(4));
                var v = ov.swizzle.kabb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(6), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-6.5), Half.Zero, new Half(1.5), new Half(5.5));
                var v = ov.swizzle.kabbr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(2), new Half(2), new Half(8.5), new Half(-7));
                var v = ov.swizzle.kabbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-7), new Half(8), new Half(4.5), new Half(-0.5));
                var v = ov.swizzle.kabbb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-0.5), new Half(4), new Half(-5.5), new Half(-6.5));
                var v = ov.swizzle.kabba;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(8.5), new Half(2), new Half(-4.5), new Half(9));
                var v = ov.swizzle.kabbk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(-4), new Half(3.5), new Half(2));
                var v = ov.swizzle.kaba;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(9), new Half(3.5), new Half(-3.5), new Half(1.5));
                var v = ov.swizzle.kabar;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-1), new Half(7.5), new Half(-4.5), new Half(4.5));
                var v = ov.swizzle.kabag;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(3.5), new Half(-5.5), new Half(5), new Half(6));
                var v = ov.swizzle.kabab;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-8.5), new Half(5.5), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.kabaa;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-0.5), new Half(-7.5), new Half(5), new Half(5));
                var v = ov.swizzle.kabak;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-8.5), new Half(-5), new Half(-7.5), new Half(-1.5));
                var v = ov.swizzle.kabk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-0.5), new Half(8), new Half(6.5), Half.One);
                var v = ov.swizzle.kabkr;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-6.5), new Half(-7.5), new Half(2), new Half(8.5));
                var v = ov.swizzle.kabkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(-9), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.kabkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), new Half(7.5), new Half(-9), new Half(-4));
                var v = ov.swizzle.kabka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(6.5), new Half(-9.5), new Half(6.5), new Half(-8));
                var v = ov.swizzle.kabkk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-2.5), new Half(-2.5), new Half(-8.5), new Half(-8.5));
                var v = ov.swizzle.kaa;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(-6), new Half(6.5), new Half(4.5));
                var v = ov.swizzle.kaar;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(8), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4.5), new Half(-1.5), new Half(3), new Half(2));
                var v = ov.swizzle.kaarr;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(8.5), new Half(2.5), new Half(5.5), new Half(-3.5));
                var v = ov.swizzle.kaarg;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9), new Half(3.5), new Half(-7.5), Half.Zero);
                var v = ov.swizzle.kaarb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-5.5), new Half(5.5), new Half(7), Half.One);
                var v = ov.swizzle.kaara;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(8), new Half(-2), new Half(-8), new Half(-5));
                var v = ov.swizzle.kaark;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(6.5), Half.One, new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.kaag;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-5), new Half(-6.5), new Half(4.5), new Half(-3));
                var v = ov.swizzle.kaagr;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3.5), new Half(3.5), new Half(-6), Half.One);
                var v = ov.swizzle.kaagg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-6), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(3), new Half(-4.5), new Half(9), new Half(-5.5));
                var v = ov.swizzle.kaagb;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(4), new Half(-8.5), new Half(-4.5));
                var v = ov.swizzle.kaaga;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), Half.Zero, new Half(7), new Half(5.5), new Half(1.5));
                var v = ov.swizzle.kaagk;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3), new Half(9), new Half(-1.5), new Half(-3.5));
                var v = ov.swizzle.kaab;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7.5), new Half(-2), new Half(5), new Half(-2));
                var v = ov.swizzle.kaabr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-2.5), new Half(8.5), new Half(8), new Half(-9.5));
                var v = ov.swizzle.kaabg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(1.5), new Half(-9), new Half(6), new Half(-4));
                var v = ov.swizzle.kaabb;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-6.5), Half.One, new Half(4.5), new Half(9.5));
                var v = ov.swizzle.kaaba;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(1.5), new Half(-8.5), new Half(6.5), new Half(4));
                var v = ov.swizzle.kaabk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(7), new Half(-2.5), new Half(3), new Half(-2));
                var v = ov.swizzle.kaaa;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-7), new Half(4), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.kaaar;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(2.5), new Half(-9.5), new Half(8.5), new Half(5));
                var v = ov.swizzle.kaaag;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(6.5), new Half(5.5), Half.One, new Half(-5));
                var v = ov.swizzle.kaaab;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-8.5), Half.One, new Half(-7.5), new Half(0.5));
                var v = ov.swizzle.kaaaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-1), new Half(-6), new Half(-0.5), new Half(4));
                var v = ov.swizzle.kaaak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-6), new Half(-5), Half.Zero, new Half(7.5));
                var v = ov.swizzle.kaak;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(9.5), new Half(4.5), new Half(7.5), new Half(-2));
                var v = ov.swizzle.kaakr;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-3.5), new Half(-0.5), new Half(-8.5), new Half(-7.5));
                var v = ov.swizzle.kaakg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(3), new Half(3), new Half(-1.5), new Half(-1));
                var v = ov.swizzle.kaakb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(5.5), new Half(-9.5), new Half(-8.5), new Half(-1));
                var v = ov.swizzle.kaaka;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(5), new Half(5), new Half(-3), new Half(2.5));
                var v = ov.swizzle.kaakk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), Half.One, new Half(-6), new Half(-4.5), Half.Zero);
                var v = ov.swizzle.kak;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-7), new Half(-9), Half.Zero, new Half(4.5));
                var v = ov.swizzle.kakr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-0.5), Half.One, new Half(7.5), new Half(-0.5), new Half(-6.5));
                var v = ov.swizzle.kakrr;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(1.5), new Half(-9.5), new Half(9.5), new Half(-7.5));
                var v = ov.swizzle.kakrg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(7), new Half(-2.5), new Half(-8), new Half(-8));
                var v = ov.swizzle.kakrb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(6.5), new Half(3.5), new Half(0.5), new Half(4));
                var v = ov.swizzle.kakra;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(4.5), new Half(-8.5), new Half(5), new Half(-5));
                var v = ov.swizzle.kakrk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-1), new Half(4), new Half(-8.5), new Half(6));
                var v = ov.swizzle.kakg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1), v.w);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-5.5), new Half(3), new Half(3.5), new Half(-7.5));
                var v = ov.swizzle.kakgr;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(8.5), new Half(0.5), new Half(8.5), new Half(3));
                var v = ov.swizzle.kakgg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-3.5), new Half(6), new Half(1.5), new Half(-7));
                var v = ov.swizzle.kakgb;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-4), new Half(7.5), new Half(6), new Half(-1));
                var v = ov.swizzle.kakga;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-6.5), new Half(-1.5), new Half(6.5), new Half(-0.5));
                var v = ov.swizzle.kakgk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-9.5), new Half(2.5), new Half(-5), new Half(1.5));
                var v = ov.swizzle.kakb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(-2.5), new Half(9.5), new Half(2.5), new Half(0.5));
                var v = ov.swizzle.kakbr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(3), new Half(4.5), new Half(5.5), new Half(3.5));
                var v = ov.swizzle.kakbg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(5), new Half(5.5), new Half(-2.5), new Half(2));
                var v = ov.swizzle.kakbb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-1.5), new Half(0.5), new Half(-0.5), new Half(-4.5));
                var v = ov.swizzle.kakba;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-3), new Half(7.5), new Half(9), new Half(-1.5));
                var v = ov.swizzle.kakbk;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(5.5), new Half(6), new Half(3), new Half(-2.5));
                var v = ov.swizzle.kaka;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(5), new Half(-6), new Half(7), new Half(6));
                var v = ov.swizzle.kakar;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-2.5), new Half(-4), Half.Zero, new Half(-4.5));
                var v = ov.swizzle.kakag;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(2), new Half(-4), new Half(-9.5));
                var v = ov.swizzle.kakab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-1.5), Half.One, new Half(3.5), new Half(9));
                var v = ov.swizzle.kakaa;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6), new Half(0.5), new Half(3), new Half(0.5), new Half(-4));
                var v = ov.swizzle.kakak;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(0.5), new Half(-0.5), new Half(4), new Half(-7.5));
                var v = ov.swizzle.kakk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6.5), new Half(0.5), new Half(8), new Half(-0.5));
                var v = ov.swizzle.kakkr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(0.5), new Half(-1.5), new Half(-8.5), new Half(-1.5));
                var v = ov.swizzle.kakkg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-4), new Half(0.5), new Half(3), new Half(9.5));
                var v = ov.swizzle.kakkb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(-1), new Half(-5.5), new Half(0.5), new Half(-5));
                var v = ov.swizzle.kakka;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(4.5), new Half(-4), new Half(4.5), new Half(-8.5));
                var v = ov.swizzle.kakkk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(2), new Half(-3.5), new Half(4.5), new Half(-7.5));
                var v = ov.swizzle.kk;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7.5), new Half(9), new Half(-8), new Half(-0.5));
                var v = ov.swizzle.kkr;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-4.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-0.5), new Half(3.5), new Half(-5.5), new Half(4.5));
                var v = ov.swizzle.kkrr;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(9.5), new Half(-8.5), new Half(5), new Half(-7));
                var v = ov.swizzle.kkrrr;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(9.5), new Half(9.5), new Half(0.5), new Half(-5));
                var v = ov.swizzle.kkrrg;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5), new Half(8.5), new Half(0.5), Half.One);
                var v = ov.swizzle.kkrrb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-6.5), new Half(6.5), new Half(-1.5), new Half(-5));
                var v = ov.swizzle.kkrra;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(4.5), new Half(8.5), new Half(3));
                var v = ov.swizzle.kkrrk;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(4), new Half(-2), new Half(-5), new Half(9));
                var v = ov.swizzle.kkrg;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-7), new Half(9.5), new Half(5.5), new Half(1.5));
                var v = ov.swizzle.kkrgr;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-3), new Half(8), new Half(-7), new Half(-2.5));
                var v = ov.swizzle.kkrgg;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(3), new Half(5.5), new Half(-9), new Half(8));
                var v = ov.swizzle.kkrgb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(9.5), new Half(-9), new Half(-6), new Half(-2.5));
                var v = ov.swizzle.kkrga;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(2.5), new Half(5), new Half(9), new Half(-2));
                var v = ov.swizzle.kkrgk;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5), new Half(-6.5), new Half(2), new Half(-7.5));
                var v = ov.swizzle.kkrb;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1.5), new Half(-4.5), new Half(-9.5), new Half(5));
                var v = ov.swizzle.kkrbr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(6), new Half(2), new Half(9.5), new Half(-8.5));
                var v = ov.swizzle.kkrbg;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-4), new Half(-9), Half.Zero, Half.Zero);
                var v = ov.swizzle.kkrbb;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(8), new Half(-5), new Half(0.5), new Half(-5.5));
                var v = ov.swizzle.kkrba;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-4.5), new Half(5.5), new Half(-2.5), new Half(4));
                var v = ov.swizzle.kkrbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(-1), new Half(0.5), new Half(-5.5), new Half(-2));
                var v = ov.swizzle.kkra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(0.5), new Half(6), new Half(4.5), new Half(9.5));
                var v = ov.swizzle.kkrar;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-9), new Half(-5), new Half(-4), new Half(-2));
                var v = ov.swizzle.kkrag;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(6.5), new Half(-9.5), new Half(5.5), new Half(8.5));
                var v = ov.swizzle.kkrab;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-3), new Half(5), new Half(9), new Half(3.5));
                var v = ov.swizzle.kkraa;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(9), new Half(0.5), new Half(2.5), new Half(-8), new Half(-3.5));
                var v = ov.swizzle.kkrak;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(2.5), new Half(8.5), new Half(-6), new Half(-0.5));
                var v = ov.swizzle.kkrk;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(-6), new Half(-9), new Half(-2.5), new Half(5));
                var v = ov.swizzle.kkrkr;
                Assert.AreEqual(new Half(5), v.x);
                Assert.AreEqual(new Half(5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7), new Half(-4.5), Half.Zero, new Half(-4));
                var v = ov.swizzle.kkrkg;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(4.5), Half.One, new Half(-9), new Half(-2));
                var v = ov.swizzle.kkrkb;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-2), v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(5), Half.Zero, new Half(-1.5), new Half(-3));
                var v = ov.swizzle.kkrka;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(4), new Half(-8.5), new Half(0.5), Half.One);
                var v = ov.swizzle.kkrkk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), new Half(-0.5), new Half(8), new Half(6.5));
                var v = ov.swizzle.kkg;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(-8.5), new Half(8.5), new Half(-4.5), new Half(-4.5));
                var v = ov.swizzle.kkgr;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6.5), new Half(-7), new Half(2.5), new Half(-0.5), Half.Zero);
                var v = ov.swizzle.kkgrr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-1.5), new Half(4), new Half(6.5), new Half(3.5));
                var v = ov.swizzle.kkgrg;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(-0.5), new Half(-4), new Half(5), new Half(-3.5));
                var v = ov.swizzle.kkgrb;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(7.5), new Half(2.5), new Half(9), new Half(3), new Half(-4.5));
                var v = ov.swizzle.kkgra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(3), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(5.5), new Half(-1.5), new Half(-3.5), new Half(-8.5));
                var v = ov.swizzle.kkgrk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-9), new Half(-6), new Half(4), new Half(-9));
                var v = ov.swizzle.kkgg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(-9), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(6.5), new Half(-7), new Half(3.5), new Half(-5));
                var v = ov.swizzle.kkggr;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-3), new Half(-1), new Half(-1.5), new Half(-1.5));
                var v = ov.swizzle.kkggg;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), Half.Zero, new Half(-4.5), new Half(7.5), new Half(-4.5));
                var v = ov.swizzle.kkggb;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(-4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-5.5), new Half(-6.5), new Half(-7.5), new Half(8.5));
                var v = ov.swizzle.kkgga;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-1), new Half(4.5), new Half(9.5), new Half(4));
                var v = ov.swizzle.kkggk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(-1.5), new Half(5), new Half(7), new Half(9.5));
                var v = ov.swizzle.kkgb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5), v.w);
            }
            {
                var ov = new hvec5(new Half(4), new Half(-3), Half.Zero, new Half(-7), new Half(-4));
                var v = ov.swizzle.kkgbr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(Half.Zero, v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2), new Half(-8.5), new Half(1.5), new Half(3));
                var v = ov.swizzle.kkgbg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-8.5), new Half(-7.5), new Half(-5), new Half(-1));
                var v = ov.swizzle.kkgbb;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1), new Half(1.5), Half.Zero, new Half(-3.5));
                var v = ov.swizzle.kkgba;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(Half.Zero, v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(3.5), new Half(5), new Half(-8));
                var v = ov.swizzle.kkgbk;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(8), Half.One, new Half(-7), new Half(-1.5), new Half(-4));
                var v = ov.swizzle.kkga;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
            }
            {
                var ov = new hvec5(new Half(4.5), new Half(6), new Half(3), new Half(-1.5), new Half(-5.5));
                var v = ov.swizzle.kkgar;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9.5), new Half(7), new Half(-5.5), new Half(6));
                var v = ov.swizzle.kkgag;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(3), new Half(1.5), new Half(-8), new Half(-4));
                var v = ov.swizzle.kkgab;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(-9.5), new Half(-0.5), new Half(-5.5));
                var v = ov.swizzle.kkgaa;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(7.5), new Half(5), new Half(-7.5), new Half(-7.5));
                var v = ov.swizzle.kkgak;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-7.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-9), new Half(4.5), new Half(9.5), new Half(4));
                var v = ov.swizzle.kkgk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-9), v.z);
                Assert.AreEqual(new Half(4), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(2.5), new Half(-7), new Half(9));
                var v = ov.swizzle.kkgkr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8), new Half(4.5), new Half(1.5), new Half(8));
                var v = ov.swizzle.kkgkg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(2), new Half(6), new Half(4.5), new Half(2));
                var v = ov.swizzle.kkgkb;
                Assert.AreEqual(new Half(2), v.x);
                Assert.AreEqual(new Half(2), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(4), new Half(-6), new Half(2.5), new Half(6.5));
                var v = ov.swizzle.kkgka;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-7.5), new Half(-1.5), new Half(4), new Half(-5.5));
                var v = ov.swizzle.kkgkk;
                Assert.AreEqual(new Half(-5.5), v.x);
                Assert.AreEqual(new Half(-5.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(6.5), Half.One, new Half(-8.5), new Half(5), new Half(-5));
                var v = ov.swizzle.kkb;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(5), new Half(8), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.kkbr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-1), new Half(-5), new Half(7), new Half(5.5));
                var v = ov.swizzle.kkbrr;
                Assert.AreEqual(new Half(5.5), v.x);
                Assert.AreEqual(new Half(5.5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4.5), new Half(-1.5), new Half(-8.5), new Half(3));
                var v = ov.swizzle.kkbrg;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(0.5), new Half(-1), new Half(-9.5), new Half(8));
                var v = ov.swizzle.kkbrb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(3), new Half(3), new Half(2), new Half(2), new Half(-4.5));
                var v = ov.swizzle.kkbra;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(3), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(6), new Half(-1.5), new Half(2.5), new Half(-4));
                var v = ov.swizzle.kkbrk;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(new Half(-7), new Half(6.5), new Half(-1.5), new Half(-6), new Half(-4.5));
                var v = ov.swizzle.kkbg;
                Assert.AreEqual(new Half(-4.5), v.x);
                Assert.AreEqual(new Half(-4.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(4.5), new Half(-1.5), new Half(5), new Half(-4));
                var v = ov.swizzle.kkbgr;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-6), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-0.5), new Half(7), new Half(7.5), new Half(4.5));
                var v = ov.swizzle.kkbgg;
                Assert.AreEqual(new Half(4.5), v.x);
                Assert.AreEqual(new Half(4.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(3.5), new Half(7), Half.One, new Half(7.5));
                var v = ov.swizzle.kkbgb;
                Assert.AreEqual(new Half(7.5), v.x);
                Assert.AreEqual(new Half(7.5), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(5), new Half(0.5), Half.One, new Half(6.5), new Half(-1));
                var v = ov.swizzle.kkbga;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(2), new Half(6), new Half(4.5), new Half(2.5));
                var v = ov.swizzle.kkbgk;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(6), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(-6.5), new Half(-6.5), new Half(4.5), new Half(-8));
                var v = ov.swizzle.kkbb;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(6), new Half(6), new Half(-3), new Half(6.5), new Half(-1.5));
                var v = ov.swizzle.kkbbr;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(6), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(2), new Half(4), new Half(6), new Half(6));
                var v = ov.swizzle.kkbbg;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(5.5), new Half(5), new Half(7), new Half(9.5));
                var v = ov.swizzle.kkbbb;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(5), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9.5), new Half(-2.5), new Half(4.5), new Half(7));
                var v = ov.swizzle.kkbba;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-2.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(4.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(5.5), new Half(1.5), new Half(4), new Half(4));
                var v = ov.swizzle.kkbbk;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(-2.5), new Half(3.5), new Half(-4), new Half(2.5));
                var v = ov.swizzle.kkba;
                Assert.AreEqual(new Half(2.5), v.x);
                Assert.AreEqual(new Half(2.5), v.y);
                Assert.AreEqual(new Half(3.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(5), new Half(-3), new Half(-9), new Half(-1.5));
                var v = ov.swizzle.kkbar;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-8.5), new Half(-2), new Half(-3), new Half(4));
                var v = ov.swizzle.kkbag;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-4.5), new Half(5.5), new Half(0.5), new Half(6.5));
                var v = ov.swizzle.kkbab;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(5.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(7.5), new Half(8.5), new Half(5.5), new Half(0.5));
                var v = ov.swizzle.kkbaa;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(5.5), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(6.5), new Half(-1.5), new Half(-3.5), new Half(0.5));
                var v = ov.swizzle.kkbak;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(-3.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(7), new Half(1.5), new Half(-6));
                var v = ov.swizzle.kkbk;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(7), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(9), new Half(1.5), new Half(-5), new Half(-2.5));
                var v = ov.swizzle.kkbkr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-2.5), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(8), new Half(-6.5), new Half(-3.5), new Half(-9.5), new Half(-9.5));
                var v = ov.swizzle.kkbkg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-3.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8.5), new Half(-1.5), new Half(-4), new Half(0.5), new Half(4));
                var v = ov.swizzle.kkbkb;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(4), v.w);
                Assert.AreEqual(new Half(-4), v.v);
            }
            {
                var ov = new hvec5(Half.One, Half.Zero, Half.Zero, new Half(8), new Half(-8.5));
                var v = ov.swizzle.kkbka;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(Half.Zero, v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-1.5), new Half(8.5), new Half(-6.5), new Half(9));
                var v = ov.swizzle.kkbkk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8), new Half(-2.5), new Half(-0.5), new Half(-7));
                var v = ov.swizzle.kka;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-0.5), v.z);
            }
            {
                var ov = new hvec5(new Half(3), new Half(-4), new Half(-9.5), new Half(7.5), new Half(8.5));
                var v = ov.swizzle.kkar;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(3), v.w);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4.5), new Half(-9.5), new Half(3), new Half(-2.5));
                var v = ov.swizzle.kkarr;
                Assert.AreEqual(new Half(-2.5), v.x);
                Assert.AreEqual(new Half(-2.5), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(Half.One, new Half(-2), new Half(-9), new Half(-5), new Half(8));
                var v = ov.swizzle.kkarg;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(-2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-6.5), new Half(7.5), new Half(-8.5), new Half(-0.5));
                var v = ov.swizzle.kkarb;
                Assert.AreEqual(new Half(-0.5), v.x);
                Assert.AreEqual(new Half(-0.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-4), new Half(8.5), new Half(-1), Half.Zero);
                var v = ov.swizzle.kkara;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(-1), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-1), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(-1), new Half(8), new Half(4), new Half(4));
                var v = ov.swizzle.kkark;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(6.5), new Half(7.5), new Half(2), new Half(-6));
                var v = ov.swizzle.kkag;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(2), v.z);
                Assert.AreEqual(new Half(6.5), v.w);
            }
            {
                var ov = new hvec5(new Half(7), new Half(7), new Half(-6), new Half(2.5), new Half(-1));
                var v = ov.swizzle.kkagr;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(2.5), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-9.5), new Half(7.5), new Half(-8.5), new Half(-9));
                var v = ov.swizzle.kkagg;
                Assert.AreEqual(new Half(-9), v.x);
                Assert.AreEqual(new Half(-9), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(9), new Half(-6.5), new Half(-4), new Half(-6));
                var v = ov.swizzle.kkagb;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(-6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(-9.5), new Half(5), new Half(9.5), new Half(6));
                var v = ov.swizzle.kkaga;
                Assert.AreEqual(new Half(6), v.x);
                Assert.AreEqual(new Half(6), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-5), new Half(9), new Half(7.5), new Half(-8.5));
                var v = ov.swizzle.kkagk;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(7.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3.5), new Half(-6), new Half(9.5), new Half(6.5));
                var v = ov.swizzle.kkab;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(5), new Half(-5), new Half(-6), new Half(9.5), Half.Zero);
                var v = ov.swizzle.kkabr;
                Assert.AreEqual(Half.Zero, v.x);
                Assert.AreEqual(Half.Zero, v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(-6), v.w);
                Assert.AreEqual(new Half(5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(7), new Half(5), new Half(9), new Half(-7.5));
                var v = ov.swizzle.kkabg;
                Assert.AreEqual(new Half(-7.5), v.x);
                Assert.AreEqual(new Half(-7.5), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-7), new Half(-8), new Half(1.5), new Half(8.5));
                var v = ov.swizzle.kkabb;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-2.5), new Half(4.5), new Half(-1.5), new Half(4));
                var v = ov.swizzle.kkaba;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(-1.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-1.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(0.5), new Half(7.5), new Half(6.5), new Half(-3.5));
                var v = ov.swizzle.kkabk;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(7.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(8.5), new Half(-8), new Half(-2), new Half(-1.5));
                var v = ov.swizzle.kkaa;
                Assert.AreEqual(new Half(-1.5), v.x);
                Assert.AreEqual(new Half(-1.5), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-2), v.w);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(4), new Half(7.5), new Half(-5.5), new Half(-4));
                var v = ov.swizzle.kkaar;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-5.5), v.z);
                Assert.AreEqual(new Half(-5.5), v.w);
                Assert.AreEqual(new Half(-7.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(3.5), new Half(-5.5), new Half(-4), new Half(0.5));
                var v = ov.swizzle.kkaag;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(-4), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-5), new Half(5.5), new Half(-8), new Half(-6));
                var v = ov.swizzle.kkaab;
                Assert.AreEqual(new Half(-6), v.x);
                Assert.AreEqual(new Half(-6), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-8), v.w);
                Assert.AreEqual(new Half(5.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-3), new Half(7.5), new Half(-8), new Half(8.5), new Half(-3));
                var v = ov.swizzle.kkaaa;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(2.5), new Half(-2.5), new Half(4.5), new Half(-3.5));
                var v = ov.swizzle.kkaak;
                Assert.AreEqual(new Half(-3.5), v.x);
                Assert.AreEqual(new Half(-3.5), v.y);
                Assert.AreEqual(new Half(4.5), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5), new Half(-8), new Half(-9), new Half(-3), new Half(7));
                var v = ov.swizzle.kkak;
                Assert.AreEqual(new Half(7), v.x);
                Assert.AreEqual(new Half(7), v.y);
                Assert.AreEqual(new Half(-3), v.z);
                Assert.AreEqual(new Half(7), v.w);
            }
            {
                var ov = new hvec5(new Half(-2.5), new Half(-0.5), new Half(3.5), new Half(-7.5), new Half(9.5));
                var v = ov.swizzle.kkakr;
                Assert.AreEqual(new Half(9.5), v.x);
                Assert.AreEqual(new Half(9.5), v.y);
                Assert.AreEqual(new Half(-7.5), v.z);
                Assert.AreEqual(new Half(9.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4.5), new Half(-9), new Half(3.5), new Half(-8), new Half(-1));
                var v = ov.swizzle.kkakg;
                Assert.AreEqual(new Half(-1), v.x);
                Assert.AreEqual(new Half(-1), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-1), v.w);
                Assert.AreEqual(new Half(-9), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(3), new Half(-8.5), new Half(8.5), new Half(-3));
                var v = ov.swizzle.kkakb;
                Assert.AreEqual(new Half(-3), v.x);
                Assert.AreEqual(new Half(-3), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(5.5), new Half(-9), new Half(-9.5), new Half(-4));
                var v = ov.swizzle.kkaka;
                Assert.AreEqual(new Half(-4), v.x);
                Assert.AreEqual(new Half(-4), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-4), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(5.5), new Half(-9.5), new Half(-9.5), new Half(9.5), new Half(3.5));
                var v = ov.swizzle.kkakk;
                Assert.AreEqual(new Half(3.5), v.x);
                Assert.AreEqual(new Half(3.5), v.y);
                Assert.AreEqual(new Half(9.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(0.5), new Half(-8), new Half(2), new Half(8.5), new Half(8.5));
                var v = ov.swizzle.kkk;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
            }
            {
                var ov = new hvec5(new Half(9), new Half(-5), new Half(-2), new Half(5), new Half(3));
                var v = ov.swizzle.kkkr;
                Assert.AreEqual(new Half(3), v.x);
                Assert.AreEqual(new Half(3), v.y);
                Assert.AreEqual(new Half(3), v.z);
                Assert.AreEqual(new Half(9), v.w);
            }
            {
                var ov = new hvec5(new Half(2), new Half(-7.5), new Half(-4), new Half(-8), new Half(0.5));
                var v = ov.swizzle.kkkrr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(2), v.w);
                Assert.AreEqual(new Half(2), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(4), Half.Zero, new Half(-2.5), new Half(8.5));
                var v = ov.swizzle.kkkrg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(2.5), new Half(-2), new Half(-0.5), new Half(-7.5), new Half(1.5));
                var v = ov.swizzle.kkkrb;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(2.5), v.w);
                Assert.AreEqual(new Half(-0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(8.5), new Half(9.5), new Half(9.5), new Half(-2));
                var v = ov.swizzle.kkkra;
                Assert.AreEqual(new Half(-2), v.x);
                Assert.AreEqual(new Half(-2), v.y);
                Assert.AreEqual(new Half(-2), v.z);
                Assert.AreEqual(new Half(-9.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(9), new Half(4.5), new Half(-1.5), new Half(9));
                var v = ov.swizzle.kkkrk;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(7), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(7), new Half(-6), new Half(5.5), new Half(-9.5), Half.One);
                var v = ov.swizzle.kkkg;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-6), v.w);
            }
            {
                var ov = new hvec5(new Half(9.5), new Half(1.5), new Half(-5), new Half(4.5), new Half(9));
                var v = ov.swizzle.kkkgr;
                Assert.AreEqual(new Half(9), v.x);
                Assert.AreEqual(new Half(9), v.y);
                Assert.AreEqual(new Half(9), v.z);
                Assert.AreEqual(new Half(1.5), v.w);
                Assert.AreEqual(new Half(9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(-8.5), Half.Zero, new Half(-0.5), new Half(-9.5));
                var v = ov.swizzle.kkkgg;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(1.5), new Half(-9), new Half(2.5), Half.Zero, Half.One);
                var v = ov.swizzle.kkkgb;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(-9), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-0.5), new Half(-8.5), new Half(7), new Half(-8));
                var v = ov.swizzle.kkkga;
                Assert.AreEqual(new Half(-8), v.x);
                Assert.AreEqual(new Half(-8), v.y);
                Assert.AreEqual(new Half(-8), v.z);
                Assert.AreEqual(new Half(-0.5), v.w);
                Assert.AreEqual(new Half(7), v.v);
            }
            {
                var ov = new hvec5(new Half(-1), new Half(-5), new Half(-2), new Half(3.5), new Half(6.5));
                var v = ov.swizzle.kkkgk;
                Assert.AreEqual(new Half(6.5), v.x);
                Assert.AreEqual(new Half(6.5), v.y);
                Assert.AreEqual(new Half(6.5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(3.5), new Half(-2.5), new Half(-4.5), new Half(8), new Half(-6.5));
                var v = ov.swizzle.kkkb;
                Assert.AreEqual(new Half(-6.5), v.x);
                Assert.AreEqual(new Half(-6.5), v.y);
                Assert.AreEqual(new Half(-6.5), v.z);
                Assert.AreEqual(new Half(-4.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(8), new Half(-8.5), new Half(-3.5), new Half(8.5));
                var v = ov.swizzle.kkkbr;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(-8.5), v.w);
                Assert.AreEqual(new Half(-8), v.v);
            }
            {
                var ov = new hvec5(Half.Zero, new Half(6.5), new Half(4.5), new Half(-2), new Half(-7));
                var v = ov.swizzle.kkkbg;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(4.5), v.w);
                Assert.AreEqual(new Half(6.5), v.v);
            }
            {
                var ov = new hvec5(new Half(8.5), new Half(7.5), new Half(9), new Half(-9.5), new Half(-8.5));
                var v = ov.swizzle.kkkbb;
                Assert.AreEqual(new Half(-8.5), v.x);
                Assert.AreEqual(new Half(-8.5), v.y);
                Assert.AreEqual(new Half(-8.5), v.z);
                Assert.AreEqual(new Half(9), v.w);
                Assert.AreEqual(new Half(9), v.v);
            }
            {
                var ov = new hvec5(new Half(-1.5), new Half(-7), new Half(3.5), new Half(-2.5), new Half(1.5));
                var v = ov.swizzle.kkkba;
                Assert.AreEqual(new Half(1.5), v.x);
                Assert.AreEqual(new Half(1.5), v.y);
                Assert.AreEqual(new Half(1.5), v.z);
                Assert.AreEqual(new Half(3.5), v.w);
                Assert.AreEqual(new Half(-2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-8), new Half(5.5), new Half(-1.5), Half.One, new Half(0.5));
                var v = ov.swizzle.kkkbk;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(-1.5), v.w);
                Assert.AreEqual(new Half(0.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-5.5), new Half(-9.5), new Half(-7.5), new Half(8.5), new Half(-7));
                var v = ov.swizzle.kkka;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
            }
            {
                var ov = new hvec5(new Half(-3.5), new Half(6.5), new Half(2.5), new Half(6), Half.One);
                var v = ov.swizzle.kkkar;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(new Half(6), v.w);
                Assert.AreEqual(new Half(-3.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(8.5), new Half(6), Half.One, Half.One);
                var v = ov.swizzle.kkkag;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(new Half(8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-7.5), new Half(5.5), new Half(8), new Half(0.5), new Half(-9.5));
                var v = ov.swizzle.kkkab;
                Assert.AreEqual(new Half(-9.5), v.x);
                Assert.AreEqual(new Half(-9.5), v.y);
                Assert.AreEqual(new Half(-9.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(8), v.v);
            }
            {
                var ov = new hvec5(new Half(-4), new Half(5), new Half(2.5), new Half(-3), new Half(8));
                var v = ov.swizzle.kkkaa;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(-3), v.w);
                Assert.AreEqual(new Half(-3), v.v);
            }
            {
                var ov = new hvec5(new Half(-6), new Half(3.5), new Half(8.5), new Half(-7), new Half(4));
                var v = ov.swizzle.kkkak;
                Assert.AreEqual(new Half(4), v.x);
                Assert.AreEqual(new Half(4), v.y);
                Assert.AreEqual(new Half(4), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-8.5), new Half(-9), new Half(5.5), new Half(-5));
                var v = ov.swizzle.kkkk;
                Assert.AreEqual(new Half(-5), v.x);
                Assert.AreEqual(new Half(-5), v.y);
                Assert.AreEqual(new Half(-5), v.z);
                Assert.AreEqual(new Half(-5), v.w);
            }
            {
                var ov = new hvec5(new Half(-9.5), new Half(-4), new Half(6.5), new Half(4.5), new Half(0.5));
                var v = ov.swizzle.kkkkr;
                Assert.AreEqual(new Half(0.5), v.x);
                Assert.AreEqual(new Half(0.5), v.y);
                Assert.AreEqual(new Half(0.5), v.z);
                Assert.AreEqual(new Half(0.5), v.w);
                Assert.AreEqual(new Half(-9.5), v.v);
            }
            {
                var ov = new hvec5(new Half(2), new Half(4), new Half(3), new Half(-8), new Half(8.5));
                var v = ov.swizzle.kkkkg;
                Assert.AreEqual(new Half(8.5), v.x);
                Assert.AreEqual(new Half(8.5), v.y);
                Assert.AreEqual(new Half(8.5), v.z);
                Assert.AreEqual(new Half(8.5), v.w);
                Assert.AreEqual(new Half(4), v.v);
            }
            {
                var ov = new hvec5(new Half(-0.5), new Half(-1), new Half(2.5), new Half(-3.5), new Half(8));
                var v = ov.swizzle.kkkkb;
                Assert.AreEqual(new Half(8), v.x);
                Assert.AreEqual(new Half(8), v.y);
                Assert.AreEqual(new Half(8), v.z);
                Assert.AreEqual(new Half(8), v.w);
                Assert.AreEqual(new Half(2.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-6.5), new Half(-3.5), new Half(7.5), new Half(-8.5), new Half(-7));
                var v = ov.swizzle.kkkka;
                Assert.AreEqual(new Half(-7), v.x);
                Assert.AreEqual(new Half(-7), v.y);
                Assert.AreEqual(new Half(-7), v.z);
                Assert.AreEqual(new Half(-7), v.w);
                Assert.AreEqual(new Half(-8.5), v.v);
            }
            {
                var ov = new hvec5(new Half(-9), new Half(-2.5), new Half(9), new Half(0.5), Half.One);
                var v = ov.swizzle.kkkkk;
                Assert.AreEqual(Half.One, v.x);
                Assert.AreEqual(Half.One, v.y);
                Assert.AreEqual(Half.One, v.z);
                Assert.AreEqual(Half.One, v.w);
                Assert.AreEqual(Half.One, v.v);
            }
        }

        [Test]
        public void InlineXYZW()
        {
            {
                var v0 = new hvec5(new Half(9.5), new Half(-5), new Half(2), new Half(-4), new Half(-5));
                var v1 = new hvec2(new Half(5.5), new Half(8.5));
                var v2 = v0.xy;
                v0.xy = v1;
                var v3 = v0.xy;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(5.5), v0.x);
                Assert.AreEqual(new Half(8.5), v0.y);
                Assert.AreEqual(new Half(2), v0.z);
                Assert.AreEqual(new Half(-4), v0.w);
                Assert.AreEqual(new Half(-5), v0.v);
            
                Assert.AreEqual(new Half(9.5), v2.x);
                Assert.AreEqual(new Half(-5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(5.5), new Half(-4), new Half(9), new Half(1.5), Half.Zero);
                var v1 = new hvec2(new Half(-2), new Half(-6));
                var v2 = v0.xz;
                v0.xz = v1;
                var v3 = v0.xz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-2), v0.x);
                Assert.AreEqual(new Half(-4), v0.y);
                Assert.AreEqual(new Half(-6), v0.z);
                Assert.AreEqual(new Half(1.5), v0.w);
                Assert.AreEqual(Half.Zero, v0.v);
            
                Assert.AreEqual(new Half(5.5), v2.x);
                Assert.AreEqual(new Half(9), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-6), new Half(9), new Half(7), new Half(3), new Half(-7.5));
                var v1 = new hvec2(new Half(-3), Half.One);
                var v2 = v0.yz;
                v0.yz = v1;
                var v3 = v0.yz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-6), v0.x);
                Assert.AreEqual(new Half(-3), v0.y);
                Assert.AreEqual(Half.One, v0.z);
                Assert.AreEqual(new Half(3), v0.w);
                Assert.AreEqual(new Half(-7.5), v0.v);
            
                Assert.AreEqual(new Half(9), v2.x);
                Assert.AreEqual(new Half(7), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-1.5), new Half(5.5), new Half(2), new Half(7), new Half(9.5));
                var v1 = new hvec3(new Half(9.5), new Half(-3.5), new Half(-3));
                var v2 = v0.xyz;
                v0.xyz = v1;
                var v3 = v0.xyz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(9.5), v0.x);
                Assert.AreEqual(new Half(-3.5), v0.y);
                Assert.AreEqual(new Half(-3), v0.z);
                Assert.AreEqual(new Half(7), v0.w);
                Assert.AreEqual(new Half(9.5), v0.v);
            
                Assert.AreEqual(new Half(-1.5), v2.x);
                Assert.AreEqual(new Half(5.5), v2.y);
                Assert.AreEqual(new Half(2), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-9), new Half(2.5), new Half(-6.5), new Half(-5.5), new Half(-4.5));
                var v1 = new hvec2(Half.Zero, new Half(-6.5));
                var v2 = v0.xw;
                v0.xw = v1;
                var v3 = v0.xw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(Half.Zero, v0.x);
                Assert.AreEqual(new Half(2.5), v0.y);
                Assert.AreEqual(new Half(-6.5), v0.z);
                Assert.AreEqual(new Half(-6.5), v0.w);
                Assert.AreEqual(new Half(-4.5), v0.v);
            
                Assert.AreEqual(new Half(-9), v2.x);
                Assert.AreEqual(new Half(-5.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-8), new Half(2), new Half(8.5), new Half(-0.5), new Half(3.5));
                var v1 = new hvec2(new Half(-1.5), new Half(9.5));
                var v2 = v0.yw;
                v0.yw = v1;
                var v3 = v0.yw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-8), v0.x);
                Assert.AreEqual(new Half(-1.5), v0.y);
                Assert.AreEqual(new Half(8.5), v0.z);
                Assert.AreEqual(new Half(9.5), v0.w);
                Assert.AreEqual(new Half(3.5), v0.v);
            
                Assert.AreEqual(new Half(2), v2.x);
                Assert.AreEqual(new Half(-0.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-9), new Half(7.5), new Half(-1.5), new Half(-3.5), new Half(-1));
                var v1 = new hvec3(new Half(-6), new Half(-3.5), new Half(6.5));
                var v2 = v0.xyw;
                v0.xyw = v1;
                var v3 = v0.xyw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-6), v0.x);
                Assert.AreEqual(new Half(-3.5), v0.y);
                Assert.AreEqual(new Half(-1.5), v0.z);
                Assert.AreEqual(new Half(6.5), v0.w);
                Assert.AreEqual(new Half(-1), v0.v);
            
                Assert.AreEqual(new Half(-9), v2.x);
                Assert.AreEqual(new Half(7.5), v2.y);
                Assert.AreEqual(new Half(-3.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-1.5), new Half(0.5), new Half(7), new Half(-8), new Half(-1));
                var v1 = new hvec2(new Half(-9), Half.Zero);
                var v2 = v0.zw;
                v0.zw = v1;
                var v3 = v0.zw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-1.5), v0.x);
                Assert.AreEqual(new Half(0.5), v0.y);
                Assert.AreEqual(new Half(-9), v0.z);
                Assert.AreEqual(Half.Zero, v0.w);
                Assert.AreEqual(new Half(-1), v0.v);
            
                Assert.AreEqual(new Half(7), v2.x);
                Assert.AreEqual(new Half(-8), v2.y);
            }
            {
                var v0 = new hvec5(new Half(5), new Half(-5), new Half(5.5), new Half(-3), new Half(-6.5));
                var v1 = new hvec3(new Half(5.5), new Half(-7), new Half(8));
                var v2 = v0.xzw;
                v0.xzw = v1;
                var v3 = v0.xzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(5.5), v0.x);
                Assert.AreEqual(new Half(-5), v0.y);
                Assert.AreEqual(new Half(-7), v0.z);
                Assert.AreEqual(new Half(8), v0.w);
                Assert.AreEqual(new Half(-6.5), v0.v);
            
                Assert.AreEqual(new Half(5), v2.x);
                Assert.AreEqual(new Half(5.5), v2.y);
                Assert.AreEqual(new Half(-3), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-7), new Half(-3.5), new Half(-5), new Half(3.5), new Half(1.5));
                var v1 = new hvec3(new Half(4), new Half(4), new Half(3.5));
                var v2 = v0.yzw;
                v0.yzw = v1;
                var v3 = v0.yzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-7), v0.x);
                Assert.AreEqual(new Half(4), v0.y);
                Assert.AreEqual(new Half(4), v0.z);
                Assert.AreEqual(new Half(3.5), v0.w);
                Assert.AreEqual(new Half(1.5), v0.v);
            
                Assert.AreEqual(new Half(-3.5), v2.x);
                Assert.AreEqual(new Half(-5), v2.y);
                Assert.AreEqual(new Half(3.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-9.5), new Half(-3), new Half(-1.5), new Half(-7), new Half(4));
                var v1 = new hvec4(new Half(-9.5), new Half(-4), new Half(-1.5), new Half(9));
                var v2 = v0.xyzw;
                v0.xyzw = v1;
                var v3 = v0.xyzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-9.5), v0.x);
                Assert.AreEqual(new Half(-4), v0.y);
                Assert.AreEqual(new Half(-1.5), v0.z);
                Assert.AreEqual(new Half(9), v0.w);
                Assert.AreEqual(new Half(4), v0.v);
            
                Assert.AreEqual(new Half(-9.5), v2.x);
                Assert.AreEqual(new Half(-3), v2.y);
                Assert.AreEqual(new Half(-1.5), v2.z);
                Assert.AreEqual(new Half(-7), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-3.5), new Half(-7.5), new Half(3), new Half(2.5), new Half(-7));
                var v1 = new hvec2(new Half(6), new Half(0.5));
                var v2 = v0.xv;
                v0.xv = v1;
                var v3 = v0.xv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(6), v0.x);
                Assert.AreEqual(new Half(-7.5), v0.y);
                Assert.AreEqual(new Half(3), v0.z);
                Assert.AreEqual(new Half(2.5), v0.w);
                Assert.AreEqual(new Half(0.5), v0.v);
            
                Assert.AreEqual(new Half(-3.5), v2.x);
                Assert.AreEqual(new Half(-7), v2.y);
            }
            {
                var v0 = new hvec5(new Half(3), new Half(-8), new Half(6.5), new Half(-6.5), new Half(3.5));
                var v1 = new hvec2(new Half(-8.5), new Half(5));
                var v2 = v0.yv;
                v0.yv = v1;
                var v3 = v0.yv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(3), v0.x);
                Assert.AreEqual(new Half(-8.5), v0.y);
                Assert.AreEqual(new Half(6.5), v0.z);
                Assert.AreEqual(new Half(-6.5), v0.w);
                Assert.AreEqual(new Half(5), v0.v);
            
                Assert.AreEqual(new Half(-8), v2.x);
                Assert.AreEqual(new Half(3.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(4), Half.One, new Half(-1.5), new Half(-2), new Half(9.5));
                var v1 = new hvec3(new Half(6.5), new Half(-6.5), new Half(4.5));
                var v2 = v0.xyv;
                v0.xyv = v1;
                var v3 = v0.xyv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(6.5), v0.x);
                Assert.AreEqual(new Half(-6.5), v0.y);
                Assert.AreEqual(new Half(-1.5), v0.z);
                Assert.AreEqual(new Half(-2), v0.w);
                Assert.AreEqual(new Half(4.5), v0.v);
            
                Assert.AreEqual(new Half(4), v2.x);
                Assert.AreEqual(Half.One, v2.y);
                Assert.AreEqual(new Half(9.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(1.5), new Half(-5.5), new Half(6.5), new Half(-1.5), new Half(5));
                var v1 = new hvec2(new Half(-6.5), new Half(2));
                var v2 = v0.zv;
                v0.zv = v1;
                var v3 = v0.zv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(1.5), v0.x);
                Assert.AreEqual(new Half(-5.5), v0.y);
                Assert.AreEqual(new Half(-6.5), v0.z);
                Assert.AreEqual(new Half(-1.5), v0.w);
                Assert.AreEqual(new Half(2), v0.v);
            
                Assert.AreEqual(new Half(6.5), v2.x);
                Assert.AreEqual(new Half(5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(5.5), new Half(-3.5), Half.One, new Half(7), new Half(2));
                var v1 = new hvec3(new Half(7.5), new Half(-3), new Half(-3));
                var v2 = v0.xzv;
                v0.xzv = v1;
                var v3 = v0.xzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(-3.5), v0.y);
                Assert.AreEqual(new Half(-3), v0.z);
                Assert.AreEqual(new Half(7), v0.w);
                Assert.AreEqual(new Half(-3), v0.v);
            
                Assert.AreEqual(new Half(5.5), v2.x);
                Assert.AreEqual(Half.One, v2.y);
                Assert.AreEqual(new Half(2), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-7), Half.Zero, new Half(-9), new Half(-4.5), new Half(0.5));
                var v1 = new hvec3(new Half(-3), new Half(7), new Half(-8.5));
                var v2 = v0.yzv;
                v0.yzv = v1;
                var v3 = v0.yzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-7), v0.x);
                Assert.AreEqual(new Half(-3), v0.y);
                Assert.AreEqual(new Half(7), v0.z);
                Assert.AreEqual(new Half(-4.5), v0.w);
                Assert.AreEqual(new Half(-8.5), v0.v);
            
                Assert.AreEqual(Half.Zero, v2.x);
                Assert.AreEqual(new Half(-9), v2.y);
                Assert.AreEqual(new Half(0.5), v2.z);
            }
            {
                var v0 = new hvec5(Half.Zero, new Half(8.5), new Half(7), new Half(-5.5), new Half(-6));
                var v1 = new hvec4(new Half(-6), new Half(8), new Half(-4), new Half(1.5));
                var v2 = v0.xyzv;
                v0.xyzv = v1;
                var v3 = v0.xyzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-6), v0.x);
                Assert.AreEqual(new Half(8), v0.y);
                Assert.AreEqual(new Half(-4), v0.z);
                Assert.AreEqual(new Half(-5.5), v0.w);
                Assert.AreEqual(new Half(1.5), v0.v);
            
                Assert.AreEqual(Half.Zero, v2.x);
                Assert.AreEqual(new Half(8.5), v2.y);
                Assert.AreEqual(new Half(7), v2.z);
                Assert.AreEqual(new Half(-6), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-2.5), new Half(1.5), new Half(0.5), new Half(-9.5), new Half(5.5));
                var v1 = new hvec2(new Half(-0.5), Half.One);
                var v2 = v0.wv;
                v0.wv = v1;
                var v3 = v0.wv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-2.5), v0.x);
                Assert.AreEqual(new Half(1.5), v0.y);
                Assert.AreEqual(new Half(0.5), v0.z);
                Assert.AreEqual(new Half(-0.5), v0.w);
                Assert.AreEqual(Half.One, v0.v);
            
                Assert.AreEqual(new Half(-9.5), v2.x);
                Assert.AreEqual(new Half(5.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(6), Half.One, new Half(-6.5), new Half(-1), new Half(-7.5));
                var v1 = new hvec3(new Half(-4.5), new Half(-8), new Half(7));
                var v2 = v0.xwv;
                v0.xwv = v1;
                var v3 = v0.xwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-4.5), v0.x);
                Assert.AreEqual(Half.One, v0.y);
                Assert.AreEqual(new Half(-6.5), v0.z);
                Assert.AreEqual(new Half(-8), v0.w);
                Assert.AreEqual(new Half(7), v0.v);
            
                Assert.AreEqual(new Half(6), v2.x);
                Assert.AreEqual(new Half(-1), v2.y);
                Assert.AreEqual(new Half(-7.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(1.5), new Half(-1.5), new Half(-2), new Half(-1), new Half(-8.5));
                var v1 = new hvec3(new Half(-2), new Half(2.5), new Half(-7.5));
                var v2 = v0.ywv;
                v0.ywv = v1;
                var v3 = v0.ywv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(1.5), v0.x);
                Assert.AreEqual(new Half(-2), v0.y);
                Assert.AreEqual(new Half(-2), v0.z);
                Assert.AreEqual(new Half(2.5), v0.w);
                Assert.AreEqual(new Half(-7.5), v0.v);
            
                Assert.AreEqual(new Half(-1.5), v2.x);
                Assert.AreEqual(new Half(-1), v2.y);
                Assert.AreEqual(new Half(-8.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-5.5), new Half(2), new Half(6.5), new Half(-0.5), new Half(8.5));
                var v1 = new hvec4(new Half(8.5), new Half(-3.5), new Half(-9), new Half(-8));
                var v2 = v0.xywv;
                v0.xywv = v1;
                var v3 = v0.xywv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(8.5), v0.x);
                Assert.AreEqual(new Half(-3.5), v0.y);
                Assert.AreEqual(new Half(6.5), v0.z);
                Assert.AreEqual(new Half(-9), v0.w);
                Assert.AreEqual(new Half(-8), v0.v);
            
                Assert.AreEqual(new Half(-5.5), v2.x);
                Assert.AreEqual(new Half(2), v2.y);
                Assert.AreEqual(new Half(-0.5), v2.z);
                Assert.AreEqual(new Half(8.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-2.5), new Half(-6), new Half(-5), new Half(5), new Half(-7.5));
                var v1 = new hvec3(new Half(2.5), new Half(-8.5), new Half(-2));
                var v2 = v0.zwv;
                v0.zwv = v1;
                var v3 = v0.zwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-2.5), v0.x);
                Assert.AreEqual(new Half(-6), v0.y);
                Assert.AreEqual(new Half(2.5), v0.z);
                Assert.AreEqual(new Half(-8.5), v0.w);
                Assert.AreEqual(new Half(-2), v0.v);
            
                Assert.AreEqual(new Half(-5), v2.x);
                Assert.AreEqual(new Half(5), v2.y);
                Assert.AreEqual(new Half(-7.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-8), new Half(-8), new Half(-1.5), new Half(0.5), new Half(7.5));
                var v1 = new hvec4(new Half(9.5), new Half(-5), new Half(-8.5), new Half(9.5));
                var v2 = v0.xzwv;
                v0.xzwv = v1;
                var v3 = v0.xzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(9.5), v0.x);
                Assert.AreEqual(new Half(-8), v0.y);
                Assert.AreEqual(new Half(-5), v0.z);
                Assert.AreEqual(new Half(-8.5), v0.w);
                Assert.AreEqual(new Half(9.5), v0.v);
            
                Assert.AreEqual(new Half(-8), v2.x);
                Assert.AreEqual(new Half(-1.5), v2.y);
                Assert.AreEqual(new Half(0.5), v2.z);
                Assert.AreEqual(new Half(7.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(2.5), new Half(-2.5), new Half(4), new Half(7.5), new Half(3.5));
                var v1 = new hvec4(new Half(-9), new Half(4.5), new Half(9), new Half(6));
                var v2 = v0.yzwv;
                v0.yzwv = v1;
                var v3 = v0.yzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(2.5), v0.x);
                Assert.AreEqual(new Half(-9), v0.y);
                Assert.AreEqual(new Half(4.5), v0.z);
                Assert.AreEqual(new Half(9), v0.w);
                Assert.AreEqual(new Half(6), v0.v);
            
                Assert.AreEqual(new Half(-2.5), v2.x);
                Assert.AreEqual(new Half(4), v2.y);
                Assert.AreEqual(new Half(7.5), v2.z);
                Assert.AreEqual(new Half(3.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-8), new Half(8.5), new Half(9.5), new Half(3), new Half(8));
                var v1 = new hvec5(new Half(-5), new Half(3), new Half(2.5), new Half(4.5), new Half(8));
                var v2 = v0.xyzwv;
                v0.xyzwv = v1;
                var v3 = v0.xyzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-5), v0.x);
                Assert.AreEqual(new Half(3), v0.y);
                Assert.AreEqual(new Half(2.5), v0.z);
                Assert.AreEqual(new Half(4.5), v0.w);
                Assert.AreEqual(new Half(8), v0.v);
            
                Assert.AreEqual(new Half(-8), v2.x);
                Assert.AreEqual(new Half(8.5), v2.y);
                Assert.AreEqual(new Half(9.5), v2.z);
                Assert.AreEqual(new Half(3), v2.w);
                Assert.AreEqual(new Half(8), v2.v);
            }
        }

        [Test]
        public void InlineRGBA()
        {
            {
                var v0 = new hvec5(new Half(7.5), new Half(4.5), new Half(-4.5), new Half(4.5), new Half(5));
                var v1 = new Half(new Half(7.5));
                var v2 = v0.r;
                v0.r = v1;
                var v3 = v0.r;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(4.5), v0.y);
                Assert.AreEqual(new Half(-4.5), v0.z);
                Assert.AreEqual(new Half(4.5), v0.w);
                Assert.AreEqual(new Half(5), v0.v);
            
                Assert.AreEqual(new Half(7.5), v2);
            }
            {
                var v0 = new hvec5(new Half(-2.5), new Half(9.5), new Half(-8.5), new Half(-9.5), new Half(9));
                var v1 = new Half(new Half(-3));
                var v2 = v0.g;
                v0.g = v1;
                var v3 = v0.g;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-2.5), v0.x);
                Assert.AreEqual(new Half(-3), v0.y);
                Assert.AreEqual(new Half(-8.5), v0.z);
                Assert.AreEqual(new Half(-9.5), v0.w);
                Assert.AreEqual(new Half(9), v0.v);
            
                Assert.AreEqual(new Half(9.5), v2);
            }
            {
                var v0 = new hvec5(Half.One, new Half(8), new Half(-8), new Half(-6.5), new Half(-3));
                var v1 = new hvec2(new Half(7), new Half(-3.5));
                var v2 = v0.rg;
                v0.rg = v1;
                var v3 = v0.rg;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7), v0.x);
                Assert.AreEqual(new Half(-3.5), v0.y);
                Assert.AreEqual(new Half(-8), v0.z);
                Assert.AreEqual(new Half(-6.5), v0.w);
                Assert.AreEqual(new Half(-3), v0.v);
            
                Assert.AreEqual(Half.One, v2.x);
                Assert.AreEqual(new Half(8), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-8.5), new Half(-8), new Half(4.5), new Half(2), new Half(-1.5));
                var v1 = new Half(new Half(6.5));
                var v2 = v0.b;
                v0.b = v1;
                var v3 = v0.b;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-8.5), v0.x);
                Assert.AreEqual(new Half(-8), v0.y);
                Assert.AreEqual(new Half(6.5), v0.z);
                Assert.AreEqual(new Half(2), v0.w);
                Assert.AreEqual(new Half(-1.5), v0.v);
            
                Assert.AreEqual(new Half(4.5), v2);
            }
            {
                var v0 = new hvec5(new Half(-4), new Half(-0.5), new Half(-2), new Half(3.5), new Half(-2));
                var v1 = new hvec2(new Half(-9.5), new Half(-3));
                var v2 = v0.rb;
                v0.rb = v1;
                var v3 = v0.rb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-9.5), v0.x);
                Assert.AreEqual(new Half(-0.5), v0.y);
                Assert.AreEqual(new Half(-3), v0.z);
                Assert.AreEqual(new Half(3.5), v0.w);
                Assert.AreEqual(new Half(-2), v0.v);
            
                Assert.AreEqual(new Half(-4), v2.x);
                Assert.AreEqual(new Half(-2), v2.y);
            }
            {
                var v0 = new hvec5(new Half(0.5), new Half(-3), new Half(8), new Half(-0.5), new Half(8.5));
                var v1 = new hvec2(new Half(1.5), new Half(2.5));
                var v2 = v0.gb;
                v0.gb = v1;
                var v3 = v0.gb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(0.5), v0.x);
                Assert.AreEqual(new Half(1.5), v0.y);
                Assert.AreEqual(new Half(2.5), v0.z);
                Assert.AreEqual(new Half(-0.5), v0.w);
                Assert.AreEqual(new Half(8.5), v0.v);
            
                Assert.AreEqual(new Half(-3), v2.x);
                Assert.AreEqual(new Half(8), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-4.5), new Half(7), new Half(1.5), new Half(-1.5), new Half(8.5));
                var v1 = new hvec3(new Half(9), new Half(-9), new Half(-9.5));
                var v2 = v0.rgb;
                v0.rgb = v1;
                var v3 = v0.rgb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(9), v0.x);
                Assert.AreEqual(new Half(-9), v0.y);
                Assert.AreEqual(new Half(-9.5), v0.z);
                Assert.AreEqual(new Half(-1.5), v0.w);
                Assert.AreEqual(new Half(8.5), v0.v);
            
                Assert.AreEqual(new Half(-4.5), v2.x);
                Assert.AreEqual(new Half(7), v2.y);
                Assert.AreEqual(new Half(1.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(7.5), new Half(5.5), new Half(3), new Half(-6), new Half(-5));
                var v1 = new Half(new Half(4));
                var v2 = v0.a;
                v0.a = v1;
                var v3 = v0.a;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(5.5), v0.y);
                Assert.AreEqual(new Half(3), v0.z);
                Assert.AreEqual(new Half(4), v0.w);
                Assert.AreEqual(new Half(-5), v0.v);
            
                Assert.AreEqual(new Half(-6), v2);
            }
            {
                var v0 = new hvec5(new Half(-7), new Half(-8.5), new Half(3), new Half(1.5), new Half(6.5));
                var v1 = new hvec2(new Half(7.5), new Half(1.5));
                var v2 = v0.ra;
                v0.ra = v1;
                var v3 = v0.ra;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(-8.5), v0.y);
                Assert.AreEqual(new Half(3), v0.z);
                Assert.AreEqual(new Half(1.5), v0.w);
                Assert.AreEqual(new Half(6.5), v0.v);
            
                Assert.AreEqual(new Half(-7), v2.x);
                Assert.AreEqual(new Half(1.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(7), new Half(-5), new Half(6), new Half(9), Half.Zero);
                var v1 = new hvec2(new Half(7.5), new Half(-6.5));
                var v2 = v0.ga;
                v0.ga = v1;
                var v3 = v0.ga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7), v0.x);
                Assert.AreEqual(new Half(7.5), v0.y);
                Assert.AreEqual(new Half(6), v0.z);
                Assert.AreEqual(new Half(-6.5), v0.w);
                Assert.AreEqual(Half.Zero, v0.v);
            
                Assert.AreEqual(new Half(-5), v2.x);
                Assert.AreEqual(new Half(9), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-1.5), new Half(9.5), new Half(-1.5), new Half(-5.5), new Half(-7.5));
                var v1 = new hvec3(new Half(-5), Half.One, new Half(-4));
                var v2 = v0.rga;
                v0.rga = v1;
                var v3 = v0.rga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-5), v0.x);
                Assert.AreEqual(Half.One, v0.y);
                Assert.AreEqual(new Half(-1.5), v0.z);
                Assert.AreEqual(new Half(-4), v0.w);
                Assert.AreEqual(new Half(-7.5), v0.v);
            
                Assert.AreEqual(new Half(-1.5), v2.x);
                Assert.AreEqual(new Half(9.5), v2.y);
                Assert.AreEqual(new Half(-5.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-3.5), new Half(5), new Half(3), new Half(-9), new Half(-8));
                var v1 = new hvec2(new Half(3.5), new Half(2.5));
                var v2 = v0.ba;
                v0.ba = v1;
                var v3 = v0.ba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-3.5), v0.x);
                Assert.AreEqual(new Half(5), v0.y);
                Assert.AreEqual(new Half(3.5), v0.z);
                Assert.AreEqual(new Half(2.5), v0.w);
                Assert.AreEqual(new Half(-8), v0.v);
            
                Assert.AreEqual(new Half(3), v2.x);
                Assert.AreEqual(new Half(-9), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-7), new Half(-0.5), new Half(5.5), new Half(4), new Half(8));
                var v1 = new hvec3(new Half(-3), new Half(2.5), new Half(5));
                var v2 = v0.rba;
                v0.rba = v1;
                var v3 = v0.rba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-3), v0.x);
                Assert.AreEqual(new Half(-0.5), v0.y);
                Assert.AreEqual(new Half(2.5), v0.z);
                Assert.AreEqual(new Half(5), v0.w);
                Assert.AreEqual(new Half(8), v0.v);
            
                Assert.AreEqual(new Half(-7), v2.x);
                Assert.AreEqual(new Half(5.5), v2.y);
                Assert.AreEqual(new Half(4), v2.z);
            }
            {
                var v0 = new hvec5(new Half(7.5), Half.One, new Half(3.5), Half.One, new Half(-7));
                var v1 = new hvec3(new Half(2.5), new Half(-4.5), new Half(-9));
                var v2 = v0.gba;
                v0.gba = v1;
                var v3 = v0.gba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(2.5), v0.y);
                Assert.AreEqual(new Half(-4.5), v0.z);
                Assert.AreEqual(new Half(-9), v0.w);
                Assert.AreEqual(new Half(-7), v0.v);
            
                Assert.AreEqual(Half.One, v2.x);
                Assert.AreEqual(new Half(3.5), v2.y);
                Assert.AreEqual(Half.One, v2.z);
            }
            {
                var v0 = new hvec5(new Half(8.5), new Half(-2), new Half(6.5), new Half(1.5), new Half(7.5));
                var v1 = new hvec4(new Half(6), new Half(-9.5), new Half(4.5), new Half(9.5));
                var v2 = v0.rgba;
                v0.rgba = v1;
                var v3 = v0.rgba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(6), v0.x);
                Assert.AreEqual(new Half(-9.5), v0.y);
                Assert.AreEqual(new Half(4.5), v0.z);
                Assert.AreEqual(new Half(9.5), v0.w);
                Assert.AreEqual(new Half(7.5), v0.v);
            
                Assert.AreEqual(new Half(8.5), v2.x);
                Assert.AreEqual(new Half(-2), v2.y);
                Assert.AreEqual(new Half(6.5), v2.z);
                Assert.AreEqual(new Half(1.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(2), new Half(3), new Half(5.5), new Half(8.5), new Half(-1.5));
                var v1 = new Half(new Half(-8));
                var v2 = v0.k;
                v0.k = v1;
                var v3 = v0.k;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(2), v0.x);
                Assert.AreEqual(new Half(3), v0.y);
                Assert.AreEqual(new Half(5.5), v0.z);
                Assert.AreEqual(new Half(8.5), v0.w);
                Assert.AreEqual(new Half(-8), v0.v);
            
                Assert.AreEqual(new Half(-1.5), v2);
            }
            {
                var v0 = new hvec5(new Half(-9.5), new Half(7.5), new Half(-6), new Half(8.5), new Half(-7));
                var v1 = new hvec2(new Half(-4), new Half(5.5));
                var v2 = v0.rk;
                v0.rk = v1;
                var v3 = v0.rk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-4), v0.x);
                Assert.AreEqual(new Half(7.5), v0.y);
                Assert.AreEqual(new Half(-6), v0.z);
                Assert.AreEqual(new Half(8.5), v0.w);
                Assert.AreEqual(new Half(5.5), v0.v);
            
                Assert.AreEqual(new Half(-9.5), v2.x);
                Assert.AreEqual(new Half(-7), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-0.5), new Half(9), new Half(6.5), new Half(4.5), new Half(1.5));
                var v1 = new hvec2(new Half(-7.5), new Half(-1.5));
                var v2 = v0.gk;
                v0.gk = v1;
                var v3 = v0.gk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-0.5), v0.x);
                Assert.AreEqual(new Half(-7.5), v0.y);
                Assert.AreEqual(new Half(6.5), v0.z);
                Assert.AreEqual(new Half(4.5), v0.w);
                Assert.AreEqual(new Half(-1.5), v0.v);
            
                Assert.AreEqual(new Half(9), v2.x);
                Assert.AreEqual(new Half(1.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(-4), new Half(-5.5), new Half(-8.5), Half.Zero, new Half(-3.5));
                var v1 = new hvec3(new Half(5), new Half(6), new Half(-7.5));
                var v2 = v0.rgk;
                v0.rgk = v1;
                var v3 = v0.rgk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(5), v0.x);
                Assert.AreEqual(new Half(6), v0.y);
                Assert.AreEqual(new Half(-8.5), v0.z);
                Assert.AreEqual(Half.Zero, v0.w);
                Assert.AreEqual(new Half(-7.5), v0.v);
            
                Assert.AreEqual(new Half(-4), v2.x);
                Assert.AreEqual(new Half(-5.5), v2.y);
                Assert.AreEqual(new Half(-3.5), v2.z);
            }
            {
                var v0 = new hvec5(Half.One, new Half(4.5), new Half(-1), new Half(9), Half.Zero);
                var v1 = new hvec2(new Half(5), new Half(5));
                var v2 = v0.bk;
                v0.bk = v1;
                var v3 = v0.bk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(Half.One, v0.x);
                Assert.AreEqual(new Half(4.5), v0.y);
                Assert.AreEqual(new Half(5), v0.z);
                Assert.AreEqual(new Half(9), v0.w);
                Assert.AreEqual(new Half(5), v0.v);
            
                Assert.AreEqual(new Half(-1), v2.x);
                Assert.AreEqual(Half.Zero, v2.y);
            }
            {
                var v0 = new hvec5(new Half(9), new Half(6.5), new Half(6), new Half(9), new Half(-5.5));
                var v1 = new hvec3(new Half(-4), new Half(3), Half.Zero);
                var v2 = v0.rbk;
                v0.rbk = v1;
                var v3 = v0.rbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-4), v0.x);
                Assert.AreEqual(new Half(6.5), v0.y);
                Assert.AreEqual(new Half(3), v0.z);
                Assert.AreEqual(new Half(9), v0.w);
                Assert.AreEqual(Half.Zero, v0.v);
            
                Assert.AreEqual(new Half(9), v2.x);
                Assert.AreEqual(new Half(6), v2.y);
                Assert.AreEqual(new Half(-5.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(4.5), new Half(8), new Half(4), new Half(2), new Half(-6.5));
                var v1 = new hvec3(new Half(-2.5), new Half(5.5), new Half(2));
                var v2 = v0.gbk;
                v0.gbk = v1;
                var v3 = v0.gbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(4.5), v0.x);
                Assert.AreEqual(new Half(-2.5), v0.y);
                Assert.AreEqual(new Half(5.5), v0.z);
                Assert.AreEqual(new Half(2), v0.w);
                Assert.AreEqual(new Half(2), v0.v);
            
                Assert.AreEqual(new Half(8), v2.x);
                Assert.AreEqual(new Half(4), v2.y);
                Assert.AreEqual(new Half(-6.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-6), new Half(7.5), new Half(5), new Half(-4.5), new Half(-9));
                var v1 = new hvec4(new Half(-7.5), new Half(4.5), new Half(-2), new Half(-6.5));
                var v2 = v0.rgbk;
                v0.rgbk = v1;
                var v3 = v0.rgbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-7.5), v0.x);
                Assert.AreEqual(new Half(4.5), v0.y);
                Assert.AreEqual(new Half(-2), v0.z);
                Assert.AreEqual(new Half(-4.5), v0.w);
                Assert.AreEqual(new Half(-6.5), v0.v);
            
                Assert.AreEqual(new Half(-6), v2.x);
                Assert.AreEqual(new Half(7.5), v2.y);
                Assert.AreEqual(new Half(5), v2.z);
                Assert.AreEqual(new Half(-9), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-1), new Half(8.5), new Half(6.5), new Half(-8.5), new Half(-1.5));
                var v1 = new hvec2(new Half(6), new Half(-3));
                var v2 = v0.ak;
                v0.ak = v1;
                var v3 = v0.ak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-1), v0.x);
                Assert.AreEqual(new Half(8.5), v0.y);
                Assert.AreEqual(new Half(6.5), v0.z);
                Assert.AreEqual(new Half(6), v0.w);
                Assert.AreEqual(new Half(-3), v0.v);
            
                Assert.AreEqual(new Half(-8.5), v2.x);
                Assert.AreEqual(new Half(-1.5), v2.y);
            }
            {
                var v0 = new hvec5(new Half(0.5), new Half(-5.5), new Half(9.5), new Half(9.5), new Half(-1.5));
                var v1 = new hvec3(new Half(-8.5), new Half(8.5), new Half(-5));
                var v2 = v0.rak;
                v0.rak = v1;
                var v3 = v0.rak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-8.5), v0.x);
                Assert.AreEqual(new Half(-5.5), v0.y);
                Assert.AreEqual(new Half(9.5), v0.z);
                Assert.AreEqual(new Half(8.5), v0.w);
                Assert.AreEqual(new Half(-5), v0.v);
            
                Assert.AreEqual(new Half(0.5), v2.x);
                Assert.AreEqual(new Half(9.5), v2.y);
                Assert.AreEqual(new Half(-1.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(-1), new Half(-6.5), new Half(-2.5), new Half(2.5), new Half(-8.5));
                var v1 = new hvec3(new Half(2), new Half(-5.5), new Half(5.5));
                var v2 = v0.gak;
                v0.gak = v1;
                var v3 = v0.gak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-1), v0.x);
                Assert.AreEqual(new Half(2), v0.y);
                Assert.AreEqual(new Half(-2.5), v0.z);
                Assert.AreEqual(new Half(-5.5), v0.w);
                Assert.AreEqual(new Half(5.5), v0.v);
            
                Assert.AreEqual(new Half(-6.5), v2.x);
                Assert.AreEqual(new Half(2.5), v2.y);
                Assert.AreEqual(new Half(-8.5), v2.z);
            }
            {
                var v0 = new hvec5(new Half(6), new Half(2.5), new Half(4.5), new Half(-3), new Half(5.5));
                var v1 = new hvec4(new Half(-9.5), new Half(-2.5), new Half(-1.5), new Half(2));
                var v2 = v0.rgak;
                v0.rgak = v1;
                var v3 = v0.rgak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-9.5), v0.x);
                Assert.AreEqual(new Half(-2.5), v0.y);
                Assert.AreEqual(new Half(4.5), v0.z);
                Assert.AreEqual(new Half(-1.5), v0.w);
                Assert.AreEqual(new Half(2), v0.v);
            
                Assert.AreEqual(new Half(6), v2.x);
                Assert.AreEqual(new Half(2.5), v2.y);
                Assert.AreEqual(new Half(-3), v2.z);
                Assert.AreEqual(new Half(5.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(4.5), new Half(-2.5), new Half(-3), new Half(-6), new Half(7));
                var v1 = new hvec3(new Half(-9.5), new Half(5), new Half(2));
                var v2 = v0.bak;
                v0.bak = v1;
                var v3 = v0.bak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(4.5), v0.x);
                Assert.AreEqual(new Half(-2.5), v0.y);
                Assert.AreEqual(new Half(-9.5), v0.z);
                Assert.AreEqual(new Half(5), v0.w);
                Assert.AreEqual(new Half(2), v0.v);
            
                Assert.AreEqual(new Half(-3), v2.x);
                Assert.AreEqual(new Half(-6), v2.y);
                Assert.AreEqual(new Half(7), v2.z);
            }
            {
                var v0 = new hvec5(new Half(2.5), new Half(-2), new Half(9.5), new Half(-2.5), new Half(5.5));
                var v1 = new hvec4(new Half(-4), new Half(4.5), new Half(8.5), new Half(1.5));
                var v2 = v0.rbak;
                v0.rbak = v1;
                var v3 = v0.rbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-4), v0.x);
                Assert.AreEqual(new Half(-2), v0.y);
                Assert.AreEqual(new Half(4.5), v0.z);
                Assert.AreEqual(new Half(8.5), v0.w);
                Assert.AreEqual(new Half(1.5), v0.v);
            
                Assert.AreEqual(new Half(2.5), v2.x);
                Assert.AreEqual(new Half(9.5), v2.y);
                Assert.AreEqual(new Half(-2.5), v2.z);
                Assert.AreEqual(new Half(5.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-5), new Half(5.5), new Half(5.5), new Half(2), new Half(0.5));
                var v1 = new hvec4(new Half(-9.5), new Half(-2.5), new Half(2), new Half(-0.5));
                var v2 = v0.gbak;
                v0.gbak = v1;
                var v3 = v0.gbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(-5), v0.x);
                Assert.AreEqual(new Half(-9.5), v0.y);
                Assert.AreEqual(new Half(-2.5), v0.z);
                Assert.AreEqual(new Half(2), v0.w);
                Assert.AreEqual(new Half(-0.5), v0.v);
            
                Assert.AreEqual(new Half(5.5), v2.x);
                Assert.AreEqual(new Half(5.5), v2.y);
                Assert.AreEqual(new Half(2), v2.z);
                Assert.AreEqual(new Half(0.5), v2.w);
            }
            {
                var v0 = new hvec5(new Half(-1.5), new Half(3.5), new Half(3.5), new Half(-8), new Half(9));
                var v1 = new hvec5(new Half(7.5), new Half(-2), new Half(7.5), new Half(3.5), new Half(4.5));
                var v2 = v0.rgbak;
                v0.rgbak = v1;
                var v3 = v0.rgbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(new Half(7.5), v0.x);
                Assert.AreEqual(new Half(-2), v0.y);
                Assert.AreEqual(new Half(7.5), v0.z);
                Assert.AreEqual(new Half(3.5), v0.w);
                Assert.AreEqual(new Half(4.5), v0.v);
            
                Assert.AreEqual(new Half(-1.5), v2.x);
                Assert.AreEqual(new Half(3.5), v2.y);
                Assert.AreEqual(new Half(3.5), v2.z);
                Assert.AreEqual(new Half(-8), v2.w);
                Assert.AreEqual(new Half(9), v2.v);
            }
        }

    }
}
