using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Numerics;
using System.Linq;
using NUnit.Framework;
using Newtonsoft.Json;
using GlmSharp;

// ReSharper disable InconsistentNaming

namespace GlmSharpTest.Generated.Swizzle
{
    [TestFixture]
    public class TSwizzleVec5Test
    {

        [Test]
        public void xyzwvuts()
        {
            {
                var ov = new gvec5<string>("((21)1)", "7", "((85)-3)", "((-4-7)6)", null);
                var v = ov.swizzle.xx;
                Assert.AreEqual("((21)1)", v.x);
                Assert.AreEqual("((21)1)", v.y);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "((-10)-8)", "", "2", "(-3-6)");
                var v = ov.swizzle.xxx;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
            }
            {
                var ov = new gvec5<string>(null, null, "(-8-6)", "(98)", "(98)");
                var v = ov.swizzle.xxxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-1", "((-62)-1)", "-1", "", "((9-5)1)");
                var v = ov.swizzle.xxxxx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "6", "(-45)", "(-45)");
                var v = ov.swizzle.xxxxy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "(-4-5)", "((-31)-8)", "8", "8");
                var v = ov.swizzle.xxxxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-31)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-9-6)", "2", "(0-3)", "((-9-6)9)");
                var v = ov.swizzle.xxxxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((37)-9)", null, "", null, "");
                var v = ov.swizzle.xxxxv;
                Assert.AreEqual("((37)-9)", v.x);
                Assert.AreEqual("((37)-9)", v.y);
                Assert.AreEqual("((37)-9)", v.z);
                Assert.AreEqual("((37)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "0", "((-75)6)", "2", "(-83)");
                var v = ov.swizzle.xxxy;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(-51)", "((-63)6)", "((-63)6)", "((21)9)", "(-1-7)");
                var v = ov.swizzle.xxxyx;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("((-63)6)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-1)7)", "", "9", "((0-1)7)", "((0-1)7)");
                var v = ov.swizzle.xxxyy;
                Assert.AreEqual("((0-1)7)", v.x);
                Assert.AreEqual("((0-1)7)", v.y);
                Assert.AreEqual("((0-1)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-1)6)", "(-87)", "(-6-8)", "6", "(-87)");
                var v = ov.swizzle.xxxyz;
                Assert.AreEqual("((-4-1)6)", v.x);
                Assert.AreEqual("((-4-1)6)", v.y);
                Assert.AreEqual("((-4-1)6)", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-11)", "((67)-2)", "((67)-2)", "-4");
                var v = ov.swizzle.xxxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("((67)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)1)", null, "-1", "-9", "-1");
                var v = ov.swizzle.xxxyv;
                Assert.AreEqual("((2-3)1)", v.x);
                Assert.AreEqual("((2-3)1)", v.y);
                Assert.AreEqual("((2-3)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-5)-1)", "((-9-1)-5)", "", "((-9-1)-5)");
                var v = ov.swizzle.xxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-1)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "(18)", "((-4-8)-7)", "", "((34)3)");
                var v = ov.swizzle.xxxzx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-4-8)-7)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(57)", "((9-8)-1)", "", "(-1-1)", "((68)2)");
                var v = ov.swizzle.xxxzy;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("(57)", v.y);
                Assert.AreEqual("(57)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((9-8)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((93)2)", "-7", "((55)4)", "((-1-3)-4)", "((-1-3)-4)");
                var v = ov.swizzle.xxxzz;
                Assert.AreEqual("((93)2)", v.x);
                Assert.AreEqual("((93)2)", v.y);
                Assert.AreEqual("((93)2)", v.z);
                Assert.AreEqual("((55)4)", v.w);
                Assert.AreEqual("((55)4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-13)-1)", "-7", "((91)2)");
                var v = ov.swizzle.xxxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-13)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-74)3)", "(-2-5)", null, "((-5-3)-1)");
                var v = ov.swizzle.xxxzv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("((-5-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "(-1-6)", "(-1-6)", "((-39)7)", "((-8-2)9)");
                var v = ov.swizzle.xxxw;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("((-39)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-61)", "8", "((-67)-1)", "", "((-67)-1)");
                var v = ov.swizzle.xxxwx;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-34)-8)", "(87)", "-6", "(87)");
                var v = ov.swizzle.xxxwy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-34)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)-1)", "-4", "-9", "-4", "");
                var v = ov.swizzle.xxxwz;
                Assert.AreEqual("((-9-3)-1)", v.x);
                Assert.AreEqual("((-9-3)-1)", v.y);
                Assert.AreEqual("((-9-3)-1)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(1-9)", "(1-9)", "-2", "((-2-6)-3)", "");
                var v = ov.swizzle.xxxww;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("(1-9)", v.z);
                Assert.AreEqual("((-2-6)-3)", v.w);
                Assert.AreEqual("((-2-6)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "((-5-8)0)", null, "(-91)", "(93)");
                var v = ov.swizzle.xxxwv;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(93)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-2)1)", "-9", "2", "((-3-4)-4)", "((58)-5)");
                var v = ov.swizzle.xxxv;
                Assert.AreEqual("((-5-2)1)", v.x);
                Assert.AreEqual("((-5-2)1)", v.y);
                Assert.AreEqual("((-5-2)1)", v.z);
                Assert.AreEqual("((58)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "(0-4)", "(51)", "(0-4)");
                var v = ov.swizzle.xxxvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "((-18)-5)", "3", "((4-8)-4)");
                var v = ov.swizzle.xxxvy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((4-8)-4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", null, "(0-3)", "((15)-7)", "3");
                var v = ov.swizzle.xxxvz;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)7)", "-2", "", "(-9-4)", "((4-1)4)");
                var v = ov.swizzle.xxxvw;
                Assert.AreEqual("((-9-3)7)", v.x);
                Assert.AreEqual("((-9-3)7)", v.y);
                Assert.AreEqual("((-9-3)7)", v.z);
                Assert.AreEqual("((4-1)4)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((77)3)", "((-6-7)-6)", "(-59)", "((2-8)8)", "-6");
                var v = ov.swizzle.xxxvv;
                Assert.AreEqual("((77)3)", v.x);
                Assert.AreEqual("((77)3)", v.y);
                Assert.AreEqual("((77)3)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, null, "((-48)0)", "9");
                var v = ov.swizzle.xxy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("-7", "(-84)", "-6", "((-40)-1)", "((-5-5)0)");
                var v = ov.swizzle.xxyx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "((-4-4)0)", "-7", "((79)0)", "-7");
                var v = ov.swizzle.xxyxx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-4-4)0)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-5", "(95)", "((99)-8)");
                var v = ov.swizzle.xxyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((33)1)", "-1", "((8-2)-7)", "1");
                var v = ov.swizzle.xxyxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((33)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(59)", "0", null, "");
                var v = ov.swizzle.xxyxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "-4", "((30)9)", "(-28)", "-4");
                var v = ov.swizzle.xxyxv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", null, "(51)", "((-93)-6)");
                var v = ov.swizzle.xxyy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-5", null, "(-79)", null, "(-79)");
                var v = ov.swizzle.xxyyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-6-3)-5)", "((-6-3)-5)", "((-9-8)4)", "6");
                var v = ov.swizzle.xxyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-6-3)-5)", v.z);
                Assert.AreEqual("((-6-3)-5)", v.w);
                Assert.AreEqual("((-6-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-9)6)", "(51)", "", "((2-3)-5)", "3");
                var v = ov.swizzle.xxyyz;
                Assert.AreEqual("((5-9)6)", v.x);
                Assert.AreEqual("((5-9)6)", v.y);
                Assert.AreEqual("(51)", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(6-7)", "((8-2)-5)", "((8-2)-5)", "((38)9)");
                var v = ov.swizzle.xxyyw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("(6-7)", v.w);
                Assert.AreEqual("((8-2)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)-3)", null, "-8", "8", "");
                var v = ov.swizzle.xxyyv;
                Assert.AreEqual("((-79)-3)", v.x);
                Assert.AreEqual("((-79)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(37)", "((-54)-7)", "(37)", null);
                var v = ov.swizzle.xxyz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((-54)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(68)", "((18)-9)", null, "((-70)-8)", "((35)0)");
                var v = ov.swizzle.xxyzx;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("((18)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-82)", "(-10)", "-8", "");
                var v = ov.swizzle.xxyzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "6", "(-81)", null);
                var v = ov.swizzle.xxyzz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "((11)-5)", "", "((7-4)2)");
                var v = ov.swizzle.xxyzw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((11)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-3-6)3)", "(-2-3)", "((74)-7)", "");
                var v = ov.swizzle.xxyzv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-6)3)", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-61)", "(-61)", "((-93)7)", "(-2-3)", "-1");
                var v = ov.swizzle.xxyw;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("(-2-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(2-6)", "", "4", "", "(3-1)");
                var v = ov.swizzle.xxywx;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-5", "(-7-5)", "-5", "-4");
                var v = ov.swizzle.xxywy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)3)", "4", "", null, "((57)2)");
                var v = ov.swizzle.xxywz;
                Assert.AreEqual("((-7-4)3)", v.x);
                Assert.AreEqual("((-7-4)3)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-5-7)", "(-5-7)", "((0-2)-8)", "(8-7)");
                var v = ov.swizzle.xxyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("((0-2)-8)", v.w);
                Assert.AreEqual("((0-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "2", "(-6-6)", "(-6-6)");
                var v = ov.swizzle.xxywv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-3-5)1)", "(-5-4)", "0", "((1-6)-8)");
                var v = ov.swizzle.xxyv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-5)1)", v.z);
                Assert.AreEqual("((1-6)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "7", "-5", "-5", null);
                var v = ov.swizzle.xxyvx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-74)", "-6", "-9", "-9", "-7");
                var v = ov.swizzle.xxyvy;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)-3)", "-7", "(-53)", "((-29)-3)", "(48)");
                var v = ov.swizzle.xxyvz;
                Assert.AreEqual("((0-4)-3)", v.x);
                Assert.AreEqual("((0-4)-3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(48)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("(09)", "(09)", "", "((6-5)8)", "");
                var v = ov.swizzle.xxyvw;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-5)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "((-73)9)", "(42)", "(42)", "-9");
                var v = ov.swizzle.xxyvv;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("((-73)9)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-3-4)", "(-3-4)", "((73)-5)", "-7");
                var v = ov.swizzle.xxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-4)", v.z);
            }
            {
                var ov = new gvec5<string>("-4", "-2", null, null, "((-8-2)-5)");
                var v = ov.swizzle.xxzx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((-83)4)", "((-83)4)", "7", "", "((8-2)1)");
                var v = ov.swizzle.xxzxx;
                Assert.AreEqual("((-83)4)", v.x);
                Assert.AreEqual("((-83)4)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-83)4)", v.w);
                Assert.AreEqual("((-83)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(64)", "(1-7)", "(-94)", "");
                var v = ov.swizzle.xxzxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(4-2)", "((25)6)", "(-9-5)", "(4-2)");
                var v = ov.swizzle.xxzxz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((25)6)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((25)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-2)-4)", "((1-2)-4)", "((-4-2)6)", "-2", "((-4-2)6)");
                var v = ov.swizzle.xxzxw;
                Assert.AreEqual("((1-2)-4)", v.x);
                Assert.AreEqual("((1-2)-4)", v.y);
                Assert.AreEqual("((-4-2)6)", v.z);
                Assert.AreEqual("((1-2)-4)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "6", "((2-8)8)", "6");
                var v = ov.swizzle.xxzxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-5-7)-3)", "(-8-8)", "(-69)", "");
                var v = ov.swizzle.xxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("((-5-7)-3)", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(13)", "(-60)", "6");
                var v = ov.swizzle.xxzyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(72)", "((-9-9)-1)", "-9", "(72)", null);
                var v = ov.swizzle.xxzyy;
                Assert.AreEqual("(72)", v.x);
                Assert.AreEqual("(72)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-9-9)-1)", v.w);
                Assert.AreEqual("((-9-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-8", "(59)", "");
                var v = ov.swizzle.xxzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)7)", "-4", "((40)8)", "((06)3)", "-4");
                var v = ov.swizzle.xxzyw;
                Assert.AreEqual("((-1-4)7)", v.x);
                Assert.AreEqual("((-1-4)7)", v.y);
                Assert.AreEqual("((40)8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((06)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-5)", "-5", "((63)0)", "((9-7)4)", "-1");
                var v = ov.swizzle.xxzyv;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("((63)0)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(6-3)", "(-5-1)", "((17)2)", "(-5-1)");
                var v = ov.swizzle.xxzz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-5-1)", v.z);
                Assert.AreEqual("(-5-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-1)9)", "-7", "((8-1)9)", null, "((-25)9)");
                var v = ov.swizzle.xxzzx;
                Assert.AreEqual("((8-1)9)", v.x);
                Assert.AreEqual("((8-1)9)", v.y);
                Assert.AreEqual("((8-1)9)", v.z);
                Assert.AreEqual("((8-1)9)", v.w);
                Assert.AreEqual("((8-1)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((27)-6)", "(9-6)", "-7", "-7", "4");
                var v = ov.swizzle.xxzzy;
                Assert.AreEqual("((27)-6)", v.x);
                Assert.AreEqual("((27)-6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-72)", "((-14)1)", "", "((20)-1)");
                var v = ov.swizzle.xxzzz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-14)1)", v.z);
                Assert.AreEqual("((-14)1)", v.w);
                Assert.AreEqual("((-14)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "((-25)-1)", "((6-2)-4)", "-4", "((-25)-1)");
                var v = ov.swizzle.xxzzw;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("(1-8)", v.y);
                Assert.AreEqual("((6-2)-4)", v.z);
                Assert.AreEqual("((6-2)-4)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", "(9-4)", "-2", "(-2-6)", null);
                var v = ov.swizzle.xxzzv;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-5-9)0)", "-2", "(-4-5)", "(36)");
                var v = ov.swizzle.xxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-4-5)", v.w);
            }
            {
                var ov = new gvec5<string>("", null, "((14)-5)", "(-92)", "9");
                var v = ov.swizzle.xxzwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((14)-5)", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(60)", "(60)", "((42)-7)", "-9", "(-9-2)");
                var v = ov.swizzle.xxzwy;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("((42)-7)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-1)-7)", "(4-7)", "6", null);
                var v = ov.swizzle.xxzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(4-7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-1)4)", "2", "-7", "((00)4)", "((00)4)");
                var v = ov.swizzle.xxzww;
                Assert.AreEqual("((-4-1)4)", v.x);
                Assert.AreEqual("((-4-1)4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((00)4)", v.w);
                Assert.AreEqual("((00)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-27)", "((6-9)-9)", "((6-9)-9)", "-1", null);
                var v = ov.swizzle.xxzwv;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("((6-9)-9)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "1", "((-6-2)7)", "(-94)", "");
                var v = ov.swizzle.xxzv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-6-2)7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("", null, null, "(59)", "((3-4)5)");
                var v = ov.swizzle.xxzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-4)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(9-8)", "", "((-76)3)", "-4", "-4");
                var v = ov.swizzle.xxzvy;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("((-76)3)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)-9)", "(-97)", "(-21)", "((33)1)", "8");
                var v = ov.swizzle.xxzvz;
                Assert.AreEqual("((-11)-9)", v.x);
                Assert.AreEqual("((-11)-9)", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "(-4-1)", "(-44)", "-3", "((98)-5)");
                var v = ov.swizzle.xxzvw;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("((98)-5)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-91)2)", "-6", "-6", "((-91)2)");
                var v = ov.swizzle.xxzvv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-91)2)", v.w);
                Assert.AreEqual("((-91)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((38)8)", "-4", "(4-2)", null, "5");
                var v = ov.swizzle.xxw;
                Assert.AreEqual("((38)8)", v.x);
                Assert.AreEqual("((38)8)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "((41)-9)", "8", "-6", "(-7-3)");
                var v = ov.swizzle.xxwx;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-1-4)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "((5-9)-6)", null, "((5-9)-6)", "-4");
                var v = ov.swizzle.xxwxx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((5-9)-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((2-5)4)", "((4-5)-5)", "((4-5)-5)", "((0-8)0)", "-9");
                var v = ov.swizzle.xxwxy;
                Assert.AreEqual("((2-5)4)", v.x);
                Assert.AreEqual("((2-5)4)", v.y);
                Assert.AreEqual("((0-8)0)", v.z);
                Assert.AreEqual("((2-5)4)", v.w);
                Assert.AreEqual("((4-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", "(-6-1)", "(-6-1)", "", "-6");
                var v = ov.swizzle.xxwxz;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("(-10)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-4)8)", "-7", "((44)5)", "0", "-7");
                var v = ov.swizzle.xxwxw;
                Assert.AreEqual("((8-4)8)", v.x);
                Assert.AreEqual("((8-4)8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((8-4)8)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "(3-3)", "(3-3)", "((-47)-4)", "6");
                var v = ov.swizzle.xxwxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-47)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)8)", null, "(-89)", null, "(-89)");
                var v = ov.swizzle.xxwy;
                Assert.AreEqual("((4-2)8)", v.x);
                Assert.AreEqual("((4-2)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(-4-3)", "((90)-3)", "(8-3)", "-4");
                var v = ov.swizzle.xxwyx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("(-4-3)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((99)8)", "(-8-9)", "-5", "((50)2)", "(-8-9)");
                var v = ov.swizzle.xxwyy;
                Assert.AreEqual("((99)8)", v.x);
                Assert.AreEqual("((99)8)", v.y);
                Assert.AreEqual("((50)2)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual("(-8-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-19)-6)", "-7", "(33)", "-7", "-7");
                var v = ov.swizzle.xxwyz;
                Assert.AreEqual("((-19)-6)", v.x);
                Assert.AreEqual("((-19)-6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "(47)", "", null, "");
                var v = ov.swizzle.xxwyw;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(47)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-35)-1)", "((63)0)", "", "(-8-6)");
                var v = ov.swizzle.xxwyv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-35)-1)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)5)", "(-82)", "-3", "5", "((-18)3)");
                var v = ov.swizzle.xxwz;
                Assert.AreEqual("((-62)5)", v.x);
                Assert.AreEqual("((-62)5)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("((0-2)3)", "", "((0-2)3)", "", "3");
                var v = ov.swizzle.xxwzx;
                Assert.AreEqual("((0-2)3)", v.x);
                Assert.AreEqual("((0-2)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((0-2)3)", v.w);
                Assert.AreEqual("((0-2)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)8)", "-5", "(9-3)", "((-96)8)", "(-11)");
                var v = ov.swizzle.xxwzy;
                Assert.AreEqual("((-96)8)", v.x);
                Assert.AreEqual("((-96)8)", v.y);
                Assert.AreEqual("((-96)8)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "((-9-9)-7)", "(6-4)", "((-1-9)-2)");
                var v = ov.swizzle.xxwzz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual("((-9-9)-7)", v.w);
                Assert.AreEqual("((-9-9)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-8)-1)", "-2", "-2", "((9-9)8)", "-2");
                var v = ov.swizzle.xxwzw;
                Assert.AreEqual("((-6-8)-1)", v.x);
                Assert.AreEqual("((-6-8)-1)", v.y);
                Assert.AreEqual("((9-9)8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((9-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-56)", "((-8-9)5)", "5", "", "((-9-7)-9)");
                var v = ov.swizzle.xxwzv;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-9-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-2)", "((19)-9)", "0", "(-1-2)", "(60)");
                var v = ov.swizzle.xxww;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("(-1-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(42)", "(42)", "(-99)", "((6-8)-1)", "((-20)-5)");
                var v = ov.swizzle.xxwwx;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("((6-8)-1)", v.z);
                Assert.AreEqual("((6-8)-1)", v.w);
                Assert.AreEqual("(42)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((0-6)3)", "((0-6)3)", "-7", "");
                var v = ov.swizzle.xxwwy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((0-6)3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(7-1)", "3", "((-6-3)-6)", "((27)-7)");
                var v = ov.swizzle.xxwwz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-6-3)-6)", v.z);
                Assert.AreEqual("((-6-3)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "(-8-1)", "(-5-5)", null, "");
                var v = ov.swizzle.xxwww;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-58)-7)", "(53)", "(-7-2)", "-1", "((-58)-7)");
                var v = ov.swizzle.xxwwv;
                Assert.AreEqual("((-58)-7)", v.x);
                Assert.AreEqual("((-58)-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-58)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((9-8)0)", "(6-2)", "(6-2)", "((9-8)0)");
                var v = ov.swizzle.xxwv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("((9-8)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((5-1)5)", "(-7-2)", "-7", "", "");
                var v = ov.swizzle.xxwvx;
                Assert.AreEqual("((5-1)5)", v.x);
                Assert.AreEqual("((5-1)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((5-1)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-5)-8)", "1", "((-27)-4)", "((-27)-4)", "");
                var v = ov.swizzle.xxwvy;
                Assert.AreEqual("((-8-5)-8)", v.x);
                Assert.AreEqual("((-8-5)-8)", v.y);
                Assert.AreEqual("((-27)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-4-5)-1)", "(-5-4)", null);
                var v = ov.swizzle.xxwvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-4-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((74)-4)", "((74)-4)", "((-7-5)-5)", "3", "5");
                var v = ov.swizzle.xxwvw;
                Assert.AreEqual("((74)-4)", v.x);
                Assert.AreEqual("((74)-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((89)9)", "", null, "((89)9)");
                var v = ov.swizzle.xxwvv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((89)9)", v.w);
                Assert.AreEqual("((89)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-9)", "-5", "-5", "(4-9)", "((-65)7)");
                var v = ov.swizzle.xxv;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual("(4-9)", v.y);
                Assert.AreEqual("((-65)7)", v.z);
            }
            {
                var ov = new gvec5<string>("((02)5)", "((26)4)", "(-65)", "(3-3)", "4");
                var v = ov.swizzle.xxvx;
                Assert.AreEqual("((02)5)", v.x);
                Assert.AreEqual("((02)5)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((02)5)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "((-66)-6)", "6", "((-66)-6)");
                var v = ov.swizzle.xxvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-66)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-2)", "(3-7)", "(3-7)", "(-2-2)", "9");
                var v = ov.swizzle.xxvxy;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-21)-7)", "1", "((-21)-7)", "1", "(98)");
                var v = ov.swizzle.xxvxz;
                Assert.AreEqual("((-21)-7)", v.x);
                Assert.AreEqual("((-21)-7)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("((-21)-7)", v.w);
                Assert.AreEqual("((-21)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "(4-4)", "(-7-3)", "((55)9)", "");
                var v = ov.swizzle.xxvxw;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-4)", v.w);
                Assert.AreEqual("((55)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-9)", "", "(8-3)", "-1", "7");
                var v = ov.swizzle.xxvxv;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(6-9)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((12)-4)", "(-56)", "(8-7)");
                var v = ov.swizzle.xxvy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("(94)", null, "", "(-85)", "");
                var v = ov.swizzle.xxvyx;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-3)", "((39)0)", "2", "(-6-1)");
                var v = ov.swizzle.xxvyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("(-7-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-76)", "(30)", "((-9-5)-5)", "((2-1)3)");
                var v = ov.swizzle.xxvyz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((2-1)3)", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)-9)", "", null, "(38)", null);
                var v = ov.swizzle.xxvyw;
                Assert.AreEqual("((16)-9)", v.x);
                Assert.AreEqual("((16)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(38)", v.v);
            }
            {
                var ov = new gvec5<string>("((35)-2)", "8", null, "(08)", "(22)");
                var v = ov.swizzle.xxvyv;
                Assert.AreEqual("((35)-2)", v.x);
                Assert.AreEqual("((35)-2)", v.y);
                Assert.AreEqual("(22)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-9-6)-5)", "((-53)4)", "((-53)4)", "1");
                var v = ov.swizzle.xxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-53)4)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "1", "-4", "((-11)-1)");
                var v = ov.swizzle.xxvzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-11)-1)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)5)", "1", "((-33)-5)", "(8-6)", "(5-4)");
                var v = ov.swizzle.xxvzy;
                Assert.AreEqual("((6-9)5)", v.x);
                Assert.AreEqual("((6-9)5)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("((-33)-5)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "(-69)", "6", null);
                var v = ov.swizzle.xxvzz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("(-69)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-8)-6)", "((3-8)-6)", "((-6-8)-1)", "-6", null);
                var v = ov.swizzle.xxvzw;
                Assert.AreEqual("((3-8)-6)", v.x);
                Assert.AreEqual("((3-8)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-8)-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "(-71)", "9", "((6-8)2)", "(-71)");
                var v = ov.swizzle.xxvzv;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("(49)", "(28)", "((-41)-4)", "((-28)-4)", "(31)");
                var v = ov.swizzle.xxvw;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("((-28)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((56)8)", "2", "(-7-5)", null, "");
                var v = ov.swizzle.xxvwx;
                Assert.AreEqual("((56)8)", v.x);
                Assert.AreEqual("((56)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((56)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-6", "((2-2)1)", null, "");
                var v = ov.swizzle.xxvwy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((70)7)", "(-3-4)", "-6", "(4-1)");
                var v = ov.swizzle.xxvwz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "(-1-8)", "((-52)-9)", "((-52)-9)", "-8");
                var v = ov.swizzle.xxvww;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-52)-9)", v.w);
                Assert.AreEqual("((-52)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)1)", "-1", "-1", "((-5-8)1)", "((-5-8)1)");
                var v = ov.swizzle.xxvwv;
                Assert.AreEqual("((-5-8)1)", v.x);
                Assert.AreEqual("((-5-8)1)", v.y);
                Assert.AreEqual("((-5-8)1)", v.z);
                Assert.AreEqual("((-5-8)1)", v.w);
                Assert.AreEqual("((-5-8)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "-6", null, "-8");
                var v = ov.swizzle.xxvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(7-1)", "-3", "-3", "", "-5");
                var v = ov.swizzle.xxvvx;
                Assert.AreEqual("(7-1)", v.x);
                Assert.AreEqual("(7-1)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-65)-8)", "", "1", "((-65)-8)", "(29)");
                var v = ov.swizzle.xxvvy;
                Assert.AreEqual("((-65)-8)", v.x);
                Assert.AreEqual("((-65)-8)", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("(29)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-39)9)", "(41)", "((-39)9)", "(-56)", "-7");
                var v = ov.swizzle.xxvvz;
                Assert.AreEqual("((-39)9)", v.x);
                Assert.AreEqual("((-39)9)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-39)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(27)", "(-84)", "", null);
                var v = ov.swizzle.xxvvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-15)", "(12)", "(-84)", "(12)", "((41)0)");
                var v = ov.swizzle.xxvvv;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual("((41)0)", v.z);
                Assert.AreEqual("((41)0)", v.w);
                Assert.AreEqual("((41)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(19)", "(-6-1)", "(-12)", "-8", "");
                var v = ov.swizzle.xy;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
            }
            {
                var ov = new gvec5<string>("0", "0", null, "((-1-6)5)", "((1-1)7)");
                var v = ov.swizzle.xyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
            }
            {
                var ov = new gvec5<string>("((07)2)", "(5-5)", "-6", null, "(5-5)");
                var v = ov.swizzle.xyxx;
                Assert.AreEqual("((07)2)", v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("((07)2)", v.z);
                Assert.AreEqual("((07)2)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "((-54)5)", "((-13)-2)", "", "((-13)-2)");
                var v = ov.swizzle.xyxxx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-54)5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(11)", "(2-5)", null, "((4-8)-9)");
                var v = ov.swizzle.xyxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("((-57)-9)", "((-57)-9)", "(4-8)", "((-57)-9)", "(1-9)");
                var v = ov.swizzle.xyxxz;
                Assert.AreEqual("((-57)-9)", v.x);
                Assert.AreEqual("((-57)-9)", v.y);
                Assert.AreEqual("((-57)-9)", v.z);
                Assert.AreEqual("((-57)-9)", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-50)", "-7", "(-93)", "(7-6)", "(-50)");
                var v = ov.swizzle.xyxxw;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(-50)", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-73)", "((-6-5)2)", "((5-1)-9)", "(-73)");
                var v = ov.swizzle.xyxxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "", "", "((-33)6)", "(32)");
                var v = ov.swizzle.xyxy;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(28)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-89)8)", "(76)", "(0-8)", "-5", "((-89)8)");
                var v = ov.swizzle.xyxyx;
                Assert.AreEqual("((-89)8)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("((-89)8)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("((-89)8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((3-7)-4)", "((3-7)-4)", "(-6-1)", "5");
                var v = ov.swizzle.xyxyy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((3-7)-4)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((3-7)-4)", v.w);
                Assert.AreEqual("((3-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-20)", "", "(-20)", null);
                var v = ov.swizzle.xyxyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-4)", "(0-4)", "(-2-4)", "((-5-8)-5)");
                var v = ov.swizzle.xyxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)5)", "((-29)3)", "-6", "((0-8)2)", null);
                var v = ov.swizzle.xyxyv;
                Assert.AreEqual("((8-2)5)", v.x);
                Assert.AreEqual("((-29)3)", v.y);
                Assert.AreEqual("((8-2)5)", v.z);
                Assert.AreEqual("((-29)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "5", null, "9");
                var v = ov.swizzle.xyxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((3-3)-4)", "", "(32)", "((8-1)-2)");
                var v = ov.swizzle.xyxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-3)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-2-5)", "((-93)3)", "((6-3)-9)", "(-3-8)");
                var v = ov.swizzle.xyxzy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-93)3)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-5)", "-1", "((21)4)", "(-2-3)", "3");
                var v = ov.swizzle.xyxzz;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("((21)4)", v.w);
                Assert.AreEqual("((21)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-45)", "3", "-8", "((37)8)", "3");
                var v = ov.swizzle.xyxzw;
                Assert.AreEqual("(-45)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-45)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((37)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "-2", "-6", "(70)");
                var v = ov.swizzle.xyxzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(70)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((89)3)", "-6", "(58)", "-5");
                var v = ov.swizzle.xyxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((89)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(58)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((11)3)", "-2", "8", "-2");
                var v = ov.swizzle.xyxwx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((11)3)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-1-5)-9)", "(6-2)", "-6", "(6-2)");
                var v = ov.swizzle.xyxwy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-1-5)-9)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-1-5)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "0", "(-6-2)", "((52)-6)");
                var v = ov.swizzle.xyxwz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-3", "((-5-9)-4)", "((-5-9)-4)", "((-6-8)-7)");
                var v = ov.swizzle.xyxww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-5-9)-4)", v.w);
                Assert.AreEqual("((-5-9)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(67)", null, "-1", "");
                var v = ov.swizzle.xyxwv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((2-1)-5)", "((-61)6)", "6");
                var v = ov.swizzle.xyxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((86)9)", "(14)", "((86)9)", "", "(-66)");
                var v = ov.swizzle.xyxvx;
                Assert.AreEqual("((86)9)", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("((86)9)", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("((86)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-4)", "1", "1", "(-6-4)", "-8");
                var v = ov.swizzle.xyxvy;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-6-4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "2", "-6", "(01)");
                var v = ov.swizzle.xyxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)7)", "((-8-2)7)", "0", "-6", "((35)-1)");
                var v = ov.swizzle.xyxvw;
                Assert.AreEqual("((-8-2)7)", v.x);
                Assert.AreEqual("((-8-2)7)", v.y);
                Assert.AreEqual("((-8-2)7)", v.z);
                Assert.AreEqual("((35)-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "((3-4)-7)", "2", "((9-5)-6)");
                var v = ov.swizzle.xyxvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-5)-6)", v.w);
                Assert.AreEqual("((9-5)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((39)8)", "((-72)4)", "1", "1", null);
                var v = ov.swizzle.xyy;
                Assert.AreEqual("((39)8)", v.x);
                Assert.AreEqual("((-72)4)", v.y);
                Assert.AreEqual("((-72)4)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-9", "8", "(0-4)", "((7-4)-1)");
                var v = ov.swizzle.xyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-14)", "(-6-6)", "((-9-8)-9)", "", "8");
                var v = ov.swizzle.xyyxx;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "(-8-2)", "(-3-1)", "3", "");
                var v = ov.swizzle.xyyxy;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-96)", "((4-2)-7)", "(-96)", "(-96)", "");
                var v = ov.swizzle.xyyxz;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("((4-2)-7)", v.y);
                Assert.AreEqual("((4-2)-7)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-2", "8", "((-80)1)", null);
                var v = ov.swizzle.xyyxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-80)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((33)8)", "((4-6)-7)", "((-1-5)-6)", "5", "(9-3)");
                var v = ov.swizzle.xyyxv;
                Assert.AreEqual("((33)8)", v.x);
                Assert.AreEqual("((4-6)-7)", v.y);
                Assert.AreEqual("((4-6)-7)", v.z);
                Assert.AreEqual("((33)8)", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((82)-8)", "-9", "-9", "-9", "-9");
                var v = ov.swizzle.xyyy;
                Assert.AreEqual("((82)-8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("((92)-8)", "(-6-3)", "((-85)6)", "", "");
                var v = ov.swizzle.xyyyx;
                Assert.AreEqual("((92)-8)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("((92)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "((-39)-4)", "(4-4)", "((94)-4)");
                var v = ov.swizzle.xyyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-87)", "((-4-2)-6)", "2", "((-3-3)0)");
                var v = ov.swizzle.xyyyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("((-4-2)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-4", "4", "((36)9)", "5");
                var v = ov.swizzle.xyyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((36)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-96)", "(-96)", "1", "1");
                var v = ov.swizzle.xyyyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-8)-7)", "((-15)2)", "((-3-8)-7)", "((-15)2)", "-9");
                var v = ov.swizzle.xyyz;
                Assert.AreEqual("((-3-8)-7)", v.x);
                Assert.AreEqual("((-15)2)", v.y);
                Assert.AreEqual("((-15)2)", v.z);
                Assert.AreEqual("((-3-8)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "", "((-12)0)", "(53)", "(-77)");
                var v = ov.swizzle.xyyzx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-12)0)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-5)-7)", "4", "-7", "-3", "(-5-1)");
                var v = ov.swizzle.xyyzy;
                Assert.AreEqual("((-1-5)-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", null, "2", "((5-6)6)");
                var v = ov.swizzle.xyyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "((8-2)6)", "(2-5)", "3", "-8");
                var v = ov.swizzle.xyyzw;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("((8-2)6)", v.y);
                Assert.AreEqual("((8-2)6)", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-7-8)-6)", "3", "(-85)", "(-71)");
                var v = ov.swizzle.xyyzv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-7-8)-6)", v.y);
                Assert.AreEqual("((-7-8)-6)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-4", "-9", "((7-8)6)");
                var v = ov.swizzle.xyyw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-2-5)", "((76)6)", "(-9-1)", "-5");
                var v = ov.swizzle.xyywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-4-3)1)", "5", "((78)4)", "((-4-3)1)");
                var v = ov.swizzle.xyywy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-4-3)1)", v.y);
                Assert.AreEqual("((-4-3)1)", v.z);
                Assert.AreEqual("((78)4)", v.w);
                Assert.AreEqual("((-4-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-5)-1)", "5", "(-51)", "(65)", "((3-6)3)");
                var v = ov.swizzle.xyywz;
                Assert.AreEqual("((-2-5)-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(65)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-3)-3)", "(-29)", "-7", "(-9-8)", "(-29)");
                var v = ov.swizzle.xyyww;
                Assert.AreEqual("((3-3)-3)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)5)", null, "((7-7)-7)", "(22)", "((-6-4)8)");
                var v = ov.swizzle.xyywv;
                Assert.AreEqual("((0-4)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("((-6-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "(-58)", "-7", "", "-7");
                var v = ov.swizzle.xyyv;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(52)", "((9-5)8)", "((-2-3)4)", "1", "1");
                var v = ov.swizzle.xyyvx;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((9-5)8)", v.y);
                Assert.AreEqual("((9-5)8)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "((26)6)", "(01)", "(-92)", "((-1-7)9)");
                var v = ov.swizzle.xyyvy;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((26)6)", v.y);
                Assert.AreEqual("((26)6)", v.z);
                Assert.AreEqual("((-1-7)9)", v.w);
                Assert.AreEqual("((26)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "(-4-6)", "(-4-6)", "(-32)");
                var v = ov.swizzle.xyyvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-32)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-89)", null, "", "((-5-2)-8)", "((-5-2)-8)");
                var v = ov.swizzle.xyyvw;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-5-2)-8)", v.w);
                Assert.AreEqual("((-5-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-9-2)9)", "", "", "-7");
                var v = ov.swizzle.xyyvv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-9-2)9)", v.y);
                Assert.AreEqual("((-9-2)9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", "-1", "-1", "((-2-2)1)", "-4");
                var v = ov.swizzle.xyz;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>("", "", "-6", "(-57)", "((-91)7)");
                var v = ov.swizzle.xyzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-6)2)", "((-7-6)2)", "(-7-2)", null, "(-9-4)");
                var v = ov.swizzle.xyzxx;
                Assert.AreEqual("((-7-6)2)", v.x);
                Assert.AreEqual("((-7-6)2)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("((-7-6)2)", v.w);
                Assert.AreEqual("((-7-6)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", null, "0", "((-7-6)5)", "((-68)-8)");
                var v = ov.swizzle.xyzxy;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "", "0", "((-85)-6)", "");
                var v = ov.swizzle.xyzxz;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "0", "5", "((9-7)7)", "((-5-5)-2)");
                var v = ov.swizzle.xyzxw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((9-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", null, "8", "((43)5)", "-9");
                var v = ov.swizzle.xyzxv;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("9", "0", null, null, "");
                var v = ov.swizzle.xyzy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "(-3-1)", "(68)", null, "((19)-9)");
                var v = ov.swizzle.xyzyx;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "((86)-9)", "((86)-9)", "((-80)-8)");
                var v = ov.swizzle.xyzyy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((86)-9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(39)", "-1", "(39)", "((4-6)-7)", "-1");
                var v = ov.swizzle.xyzyz;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(0-3)", "((8-2)9)", "(0-3)", "4");
                var v = ov.swizzle.xyzyw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(0-3)", v.y);
                Assert.AreEqual("((8-2)9)", v.z);
                Assert.AreEqual("(0-3)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((1-9)-8)", "((2-3)8)", "", "");
                var v = ov.swizzle.xyzyv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((1-9)-8)", v.y);
                Assert.AreEqual("((2-3)8)", v.z);
                Assert.AreEqual("((1-9)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-1-5)", "((-40)4)", "0", "");
                var v = ov.swizzle.xyzz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-1-5)", v.y);
                Assert.AreEqual("((-40)4)", v.z);
                Assert.AreEqual("((-40)4)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "2", "2", "8", "(6-2)");
                var v = ov.swizzle.xyzzx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "", "(1-7)", "((-42)5)");
                var v = ov.swizzle.xyzzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((25)5)", "(-6-9)", "-5", "(06)", "((-20)-4)");
                var v = ov.swizzle.xyzzz;
                Assert.AreEqual("((25)5)", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((7-2)0)", "", null, "-5", "((-67)-8)");
                var v = ov.swizzle.xyzzw;
                Assert.AreEqual("((7-2)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "(-73)", "(-73)", "", "-7");
                var v = ov.swizzle.xyzzv;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-9)", "((-37)-9)", "((-78)8)", "-8", null);
                var v = ov.swizzle.xyzw;
                Assert.AreEqual("((-37)-9)", v.x);
                Assert.AreEqual("((-37)-9)", v.y);
                Assert.AreEqual("((-78)8)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(81)", "(-16)", "((-91)-9)", "(-16)", "((7-2)8)");
                var v = ov.swizzle.xyzwx;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual("((-91)-9)", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-7)", "-7", "((75)4)", "(1-1)", "5");
                var v = ov.swizzle.xyzwy;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((75)4)", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "(96)", "(96)", "-7");
                var v = ov.swizzle.xyzwz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("(-24)", "((79)-2)", "2", null, null);
                var v = ov.swizzle.xyzww;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("((79)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-52)4)", "((0-9)5)", "(-3-4)", "7", "(-3-4)");
                var v = ov.swizzle.xyzwv;
                Assert.AreEqual("((-52)4)", v.x);
                Assert.AreEqual("((0-9)5)", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(56)", "(56)", "4", "-3");
                var v = ov.swizzle.xyzv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("(-37)", "((-6-5)-4)", null, "", null);
                var v = ov.swizzle.xyzvx;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("((-6-5)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("((27)1)", "(-3-7)", "-1", "((-9-5)0)", "(-4-5)");
                var v = ov.swizzle.xyzvy;
                Assert.AreEqual("((27)1)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-4-5)", v.w);
                Assert.AreEqual("(-3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "((-1-5)4)", "-1", "((2-1)-2)", "((34)-6)");
                var v = ov.swizzle.xyzvz;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("((-1-5)4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((34)-6)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(04)", "(4-1)", "(04)", "(4-1)");
                var v = ov.swizzle.xyzvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(04)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "((2-4)-6)", "((2-7)-4)", "(07)", "(5-2)");
                var v = ov.swizzle.xyzvv;
                Assert.AreEqual("(07)", v.x);
                Assert.AreEqual("((2-4)-6)", v.y);
                Assert.AreEqual("((2-7)-4)", v.z);
                Assert.AreEqual("(5-2)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "((-12)-2)", "2", "((-52)-6)");
                var v = ov.swizzle.xyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec5<string>("((-78)-1)", null, "4", "((88)9)", "((-78)-1)");
                var v = ov.swizzle.xywx;
                Assert.AreEqual("((-78)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((88)9)", v.z);
                Assert.AreEqual("((-78)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(1-8)", "-8", "0", "((2-8)0)");
                var v = ov.swizzle.xywxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(1-8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-6", "(-9-9)", "(-9-9)", "8");
                var v = ov.swizzle.xywxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-5)-4)", "((25)0)", "((-8-5)-4)", "-2", "(-61)");
                var v = ov.swizzle.xywxz;
                Assert.AreEqual("((-8-5)-4)", v.x);
                Assert.AreEqual("((25)0)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-8-5)-4)", v.w);
                Assert.AreEqual("((-8-5)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-3-6)", "-9", "", "((83)-6)");
                var v = ov.swizzle.xywxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "(-9-4)", "(-25)", "(-9-4)", "((-7-7)7)");
                var v = ov.swizzle.xywxv;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("((-7-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", "(-78)", "", "((-54)7)", "-3");
                var v = ov.swizzle.xywy;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("((-54)7)", v.z);
                Assert.AreEqual("(-78)", v.w);
            }
            {
                var ov = new gvec5<string>("((-39)-2)", "((8-5)-9)", "((-94)1)", "((8-5)-9)", "(52)");
                var v = ov.swizzle.xywyx;
                Assert.AreEqual("((-39)-2)", v.x);
                Assert.AreEqual("((8-5)-9)", v.y);
                Assert.AreEqual("((8-5)-9)", v.z);
                Assert.AreEqual("((8-5)-9)", v.w);
                Assert.AreEqual("((-39)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "((8-2)2)", null, "(-82)");
                var v = ov.swizzle.xywyy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", "3", "(-91)", "((29)8)", "(-91)");
                var v = ov.swizzle.xywyz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((29)8)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "7", "(-1-2)", "-8", "-8");
                var v = ov.swizzle.xywyw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(96)", "(01)", "(96)", "-9", "((8-3)-5)");
                var v = ov.swizzle.xywyv;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("((8-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(53)", "(9-9)", "((5-5)2)", "((-83)6)", "-1");
                var v = ov.swizzle.xywz;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("((-83)6)", v.z);
                Assert.AreEqual("((5-5)2)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "-1", "(9-5)", "((-5-7)-2)");
                var v = ov.swizzle.xywzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-14)", "4", "(-29)", "((08)-9)", "(-29)");
                var v = ov.swizzle.xywzy;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((08)-9)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "((76)7)", "-3", "", "(-63)");
                var v = ov.swizzle.xywzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((76)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-5)", null, "((-84)-5)", "((-84)-5)", "((4-9)5)");
                var v = ov.swizzle.xywzw;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-84)-5)", v.z);
                Assert.AreEqual("((-84)-5)", v.w);
                Assert.AreEqual("((-84)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-85)1)", "((-7-8)-8)", "", "((-7-8)-8)", "(-2-6)");
                var v = ov.swizzle.xywzv;
                Assert.AreEqual("((-85)1)", v.x);
                Assert.AreEqual("((-7-8)-8)", v.y);
                Assert.AreEqual("((-7-8)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "", "((-6-8)-3)", "1", "(98)");
                var v = ov.swizzle.xyww;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("6", "((9-9)7)", "6", "(-7-4)", "((-61)-9)");
                var v = ov.swizzle.xywwx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((9-9)7)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("(-7-4)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-9)", "(7-6)", "(7-6)", "((-1-6)0)", "(7-6)");
                var v = ov.swizzle.xywwy;
                Assert.AreEqual("((61)-9)", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("((-1-6)0)", v.z);
                Assert.AreEqual("((-1-6)0)", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "-2", "(-28)", "7", "((23)0)");
                var v = ov.swizzle.xywwz;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "-6", "4", "(-12)", "((-8-5)-1)");
                var v = ov.swizzle.xywww;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("(-12)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(9-5)", "", "(1-3)", "-9");
                var v = ov.swizzle.xywwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-5)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "", "((1-1)-8)", "9", "");
                var v = ov.swizzle.xywv;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((7-9)5)", null, "(-4-7)", "((7-9)5)", "1");
                var v = ov.swizzle.xywvx;
                Assert.AreEqual("((7-9)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-9)5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((7-9)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((63)-1)", "-3", "(31)", "(-82)", "(-15)");
                var v = ov.swizzle.xywvy;
                Assert.AreEqual("((63)-1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((20)-1)", "9", "(5-9)", "9", "((-5-7)-7)");
                var v = ov.swizzle.xywvz;
                Assert.AreEqual("((20)-1)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-5-7)-7)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-3", null, "((-8-6)9)");
                var v = ov.swizzle.xywvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-6)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((7-7)3)", "((-14)8)", "((-14)8)", "-1");
                var v = ov.swizzle.xywvv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((7-7)3)", v.y);
                Assert.AreEqual("((-14)8)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(8-8)", null, "-5", "9", "-5");
                var v = ov.swizzle.xyv;
                Assert.AreEqual("(8-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
            }
            {
                var ov = new gvec5<string>("", "(47)", "((-7-9)4)", "(-2-4)", "((-7-9)4)");
                var v = ov.swizzle.xyvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("((-7-9)4)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(6-9)", "((4-4)4)", "(1-3)", null, "((65)-2)");
                var v = ov.swizzle.xyvxx;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("((4-4)4)", v.y);
                Assert.AreEqual("((65)-2)", v.z);
                Assert.AreEqual("(6-9)", v.w);
                Assert.AreEqual("(6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-7", "7", "7", "7");
                var v = ov.swizzle.xyvxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", "2", "(7-8)", "(-7-2)", "((9-8)4)");
                var v = ov.swizzle.xyvxz;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((9-8)4)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-30)1)", "((7-1)-6)", "(-25)", "((7-1)-6)", "((-14)8)");
                var v = ov.swizzle.xyvxw;
                Assert.AreEqual("((-30)1)", v.x);
                Assert.AreEqual("((7-1)-6)", v.y);
                Assert.AreEqual("((-14)8)", v.z);
                Assert.AreEqual("((-30)1)", v.w);
                Assert.AreEqual("((7-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((9-1)-8)", "((23)-9)", "(5-1)", "(5-1)");
                var v = ov.swizzle.xyvxv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((9-1)-8)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((0-6)5)", "(-81)", "((7-3)7)", "(-8-3)");
                var v = ov.swizzle.xyvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-6)5)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("((0-6)5)", v.w);
            }
            {
                var ov = new gvec5<string>("(0-2)", "((19)2)", "2", "(0-2)", "");
                var v = ov.swizzle.xyvyx;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("((19)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((19)2)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((67)7)", null, null, null, "-3");
                var v = ov.swizzle.xyvyy;
                Assert.AreEqual("((67)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "(-89)", "((-4-3)5)", "((-9-6)3)");
                var v = ov.swizzle.xyvyz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-9-6)3)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "2", "(-82)", "((-93)3)");
                var v = ov.swizzle.xyvyw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-93)3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)-5)", "((-64)-6)", "1", "", "(5-1)");
                var v = ov.swizzle.xyvyv;
                Assert.AreEqual("((-6-4)-5)", v.x);
                Assert.AreEqual("((-64)-6)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("((-64)-6)", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)-9)", "((-69)-9)", "((-3-9)1)", "9", null);
                var v = ov.swizzle.xyvz;
                Assert.AreEqual("((-69)-9)", v.x);
                Assert.AreEqual("((-69)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-3-9)1)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", null, "(29)", "(29)");
                var v = ov.swizzle.xyvzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)7)", "((59)-9)", null, "(93)", "7");
                var v = ov.swizzle.xyvzy;
                Assert.AreEqual("((5-4)7)", v.x);
                Assert.AreEqual("((59)-9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((59)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((8-1)4)", "(0-3)", "(3-5)", "(0-3)");
                var v = ov.swizzle.xyvzz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((8-1)4)", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("(0-3)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-62)3)", "(-69)", "((-94)-7)", "");
                var v = ov.swizzle.xyvzw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-62)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("((-94)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-40)-4)", "((-40)-4)", "((-40)-4)", "-1", "(91)");
                var v = ov.swizzle.xyvzv;
                Assert.AreEqual("((-40)-4)", v.x);
                Assert.AreEqual("((-40)-4)", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("((-40)-4)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "(-5-4)", "((-7-3)0)", null, "((-27)-1)");
                var v = ov.swizzle.xyvw;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("((-27)-1)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((08)-1)", "((33)-9)", "(03)", "(03)", "((6-4)-3)");
                var v = ov.swizzle.xyvwx;
                Assert.AreEqual("((08)-1)", v.x);
                Assert.AreEqual("((33)-9)", v.y);
                Assert.AreEqual("((6-4)-3)", v.z);
                Assert.AreEqual("(03)", v.w);
                Assert.AreEqual("((08)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "", "6", "((-65)-8)", "");
                var v = ov.swizzle.xyvwy;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-65)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "(-31)", "(2-6)", "((-4-7)3)", "(-31)");
                var v = ov.swizzle.xyvwz;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("((-4-7)3)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(78)", null, "3", "", null);
                var v = ov.swizzle.xyvww;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "", "2", "((-28)5)", "7");
                var v = ov.swizzle.xyvwv;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-28)5)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "((-12)4)", "((8-7)-8)", "", "(8-3)");
                var v = ov.swizzle.xyvv;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual("((-12)4)", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("(8-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((52)-9)", "", "-3", "-6", "-6");
                var v = ov.swizzle.xyvvx;
                Assert.AreEqual("((52)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((52)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-5)", "(86)", "((54)2)", "((-18)-6)");
                var v = ov.swizzle.xyvvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("((-18)-6)", v.z);
                Assert.AreEqual("((-18)-6)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-9", "8", "(04)", "((-9-8)-7)");
                var v = ov.swizzle.xyvvz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-9-8)-7)", v.z);
                Assert.AreEqual("((-9-8)-7)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "(3-7)", "8", "-1", "8");
                var v = ov.swizzle.xyvvw;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("(3-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "", "((-7-1)-8)", "1");
                var v = ov.swizzle.xyvvv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-17)1)", "(3-8)", "3", "((9-9)7)", "(-95)");
                var v = ov.swizzle.xz;
                Assert.AreEqual("((-17)1)", v.x);
                Assert.AreEqual("3", v.y);
            }
            {
                var ov = new gvec5<string>("-5", "((49)0)", "(-72)", "((49)0)", "-5");
                var v = ov.swizzle.xzx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-72)", v.y);
                Assert.AreEqual("-5", v.z);
            }
            {
                var ov = new gvec5<string>("4", null, "(-1-1)", "((-8-4)9)", "");
                var v = ov.swizzle.xzxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(4-8)", "", "(3-2)", "");
                var v = ov.swizzle.xzxxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-1)4)", "9", "(-99)", "(-1-5)", "((-1-1)4)");
                var v = ov.swizzle.xzxxy;
                Assert.AreEqual("((-1-1)4)", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("((-1-1)4)", v.z);
                Assert.AreEqual("((-1-1)4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "((-1-5)-3)", "((3-2)3)", "(8-5)", "((3-3)6)");
                var v = ov.swizzle.xzxxz;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("((3-2)3)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("((3-2)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)-7)", "7", "((-36)-5)", "((-36)-5)", "(67)");
                var v = ov.swizzle.xzxxw;
                Assert.AreEqual("((-8-1)-7)", v.x);
                Assert.AreEqual("((-36)-5)", v.y);
                Assert.AreEqual("((-8-1)-7)", v.z);
                Assert.AreEqual("((-8-1)-7)", v.w);
                Assert.AreEqual("((-36)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)7)", "((34)-3)", null, "-4", "(-77)");
                var v = ov.swizzle.xzxxv;
                Assert.AreEqual("((-11)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-11)7)", v.z);
                Assert.AreEqual("((-11)7)", v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "(-64)", "(-55)", "((89)7)");
                var v = ov.swizzle.xzxy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-64)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((8-2)6)", "-3", "-3", "-3", "(-6-9)");
                var v = ov.swizzle.xzxyx;
                Assert.AreEqual("((8-2)6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((8-2)6)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((8-2)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)-2)", "((91)-2)", "((-6-7)1)", "((6-5)-8)", "(11)");
                var v = ov.swizzle.xzxyy;
                Assert.AreEqual("((91)-2)", v.x);
                Assert.AreEqual("((-6-7)1)", v.y);
                Assert.AreEqual("((91)-2)", v.z);
                Assert.AreEqual("((91)-2)", v.w);
                Assert.AreEqual("((91)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((7-6)-8)", "(4-1)", "(6-1)", "-2");
                var v = ov.swizzle.xzxyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((7-6)-8)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-2-7)", "5", "(16)", "5");
                var v = ov.swizzle.xzxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("(16)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-64)0)", "", "-8", "(-45)");
                var v = ov.swizzle.xzxyv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-64)0)", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec5<string>("((-35)-9)", "", "(79)", "-3", "(1-9)");
                var v = ov.swizzle.xzxz;
                Assert.AreEqual("((-35)-9)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("((-35)-9)", v.z);
                Assert.AreEqual("(79)", v.w);
            }
            {
                var ov = new gvec5<string>("((-18)6)", "((9-8)-1)", null, "(78)", "4");
                var v = ov.swizzle.xzxzx;
                Assert.AreEqual("((-18)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-18)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-18)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((79)-9)", "", null, "", "((-59)-1)");
                var v = ov.swizzle.xzxzy;
                Assert.AreEqual("((79)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((79)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(1-1)", "", "(4-6)", "((79)-7)", "");
                var v = ov.swizzle.xzxzz;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual("(4-6)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "((-38)3)", null, null);
                var v = ov.swizzle.xzxzw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-38)3)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-38)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(1-3)", "-3", "-7", "-7", "-7");
                var v = ov.swizzle.xzxzv;
                Assert.AreEqual("(1-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "(44)", null, "-9");
                var v = ov.swizzle.xzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-55)", "(-9-9)", "((52)-1)", "((3-8)5)", "((52)-1)");
                var v = ov.swizzle.xzxwx;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("((52)-1)", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("((3-8)5)", v.w);
                Assert.AreEqual("(-55)", v.v);
            }
            {
                var ov = new gvec5<string>("((-90)-5)", "5", null, "", "(-92)");
                var v = ov.swizzle.xzxwy;
                Assert.AreEqual("((-90)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-90)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((3-7)-4)", "4", "((11)4)", "(39)", "-7");
                var v = ov.swizzle.xzxwz;
                Assert.AreEqual("((3-7)-4)", v.x);
                Assert.AreEqual("((11)4)", v.y);
                Assert.AreEqual("((3-7)-4)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("((11)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-5)", "((26)3)", "5", "((26)3)", null);
                var v = ov.swizzle.xzxww;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("((26)3)", v.w);
                Assert.AreEqual("((26)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-4-6)", "-5", "(-4-6)", "((-1-9)0)");
                var v = ov.swizzle.xzxwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((-1-9)0)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "((-66)-6)", "9", "(-2-5)");
                var v = ov.swizzle.xzxv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-66)-6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-2-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-5-5)-4)", "0", "0", "((-3-5)-4)", "(-45)");
                var v = ov.swizzle.xzxvx;
                Assert.AreEqual("((-5-5)-4)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-5-5)-4)", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("((-5-5)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-4", "0", "7");
                var v = ov.swizzle.xzxvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "-4", "((-6-7)3)", null, "(67)");
                var v = ov.swizzle.xzxvz;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((-6-7)3)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("(67)", v.w);
                Assert.AreEqual("((-6-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-3)", "3", "((-90)-4)", "-8");
                var v = ov.swizzle.xzxvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-90)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", null, "((-4-2)3)", "((-32)-7)");
                var v = ov.swizzle.xzxvv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-32)-7)", v.w);
                Assert.AreEqual("((-32)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((83)5)", "((2-1)3)", "((83)5)", "4");
                var v = ov.swizzle.xzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((2-1)3)", v.y);
                Assert.AreEqual("((83)5)", v.z);
            }
            {
                var ov = new gvec5<string>("((-26)8)", null, "((-5-6)-9)", "(33)", "(0-5)");
                var v = ov.swizzle.xzyx;
                Assert.AreEqual("((-26)8)", v.x);
                Assert.AreEqual("((-5-6)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-26)8)", v.w);
            }
            {
                var ov = new gvec5<string>("(8-1)", null, "((-2-8)2)", "(-2-1)", "(-2-1)");
                var v = ov.swizzle.xzyxx;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("((-2-8)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-4)", "((-27)-4)", "(-94)", "", "((-25)6)");
                var v = ov.swizzle.xzyxy;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("(-94)", v.y);
                Assert.AreEqual("((-27)-4)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("((-27)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((89)3)", "", "((6-2)9)", "", "((89)3)");
                var v = ov.swizzle.xzyxz;
                Assert.AreEqual("((89)3)", v.x);
                Assert.AreEqual("((6-2)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((89)3)", v.w);
                Assert.AreEqual("((6-2)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "(20)", "(5-6)", "(90)", "6");
                var v = ov.swizzle.xzyxw;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>("(-62)", "(04)", "(04)", null, "((-4-7)-6)");
                var v = ov.swizzle.xzyxv;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("(04)", v.y);
                Assert.AreEqual("(04)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("((-4-7)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "(-9-5)", "((-5-7)-3)", "-7", "(59)");
                var v = ov.swizzle.xzyy;
                Assert.AreEqual("(-9-5)", v.x);
                Assert.AreEqual("((-5-7)-3)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("(-9-5)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "(0-6)", "", "9", "");
                var v = ov.swizzle.xzyyx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("(0-6)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "-5", "(5-2)", "(5-2)");
                var v = ov.swizzle.xzyyy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)1)", "((-5-7)8)", "7", "(-23)", "7");
                var v = ov.swizzle.xzyyz;
                Assert.AreEqual("((-8-1)1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-5-7)8)", v.z);
                Assert.AreEqual("((-5-7)8)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "((-4-7)-8)", "(17)", "(9-2)");
                var v = ov.swizzle.xzyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-7)-8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-4)6)", "((-2-4)6)", "((51)-7)", "-4", null);
                var v = ov.swizzle.xzyyv;
                Assert.AreEqual("((-2-4)6)", v.x);
                Assert.AreEqual("((51)-7)", v.y);
                Assert.AreEqual("((-2-4)6)", v.z);
                Assert.AreEqual("((-2-4)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(-5-6)", "(6-7)", "(6-7)", "-6");
                var v = ov.swizzle.xzyz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("(6-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(7-5)", null, "-9", null);
                var v = ov.swizzle.xzyzx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(7-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((82)-7)", "(60)", "(8-3)", "(60)", "((-42)-3)");
                var v = ov.swizzle.xzyzy;
                Assert.AreEqual("((82)-7)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(8-3)", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("((-80)-8)", "", null, "((-56)-6)", "9");
                var v = ov.swizzle.xzyzz;
                Assert.AreEqual("((-80)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((57)4)", "((57)4)", null, "6", "6");
                var v = ov.swizzle.xzyzw;
                Assert.AreEqual("((57)4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((57)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)-9)", "(-47)", "(-47)", "", "-8");
                var v = ov.swizzle.xzyzv;
                Assert.AreEqual("((-7-3)-9)", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-58)", "", "-9", "0");
                var v = ov.swizzle.xzyw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("5", "5", "((-4-2)0)", "5", "((-61)5)");
                var v = ov.swizzle.xzywx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-4-2)0)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "(90)", "", "(-43)", "");
                var v = ov.swizzle.xzywy;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(90)", v.z);
                Assert.AreEqual("(-43)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", null, "-3", "-8", "((-29)-6)");
                var v = ov.swizzle.xzywz;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-1)", "((75)1)", "(-2-1)", "4", "-6");
                var v = ov.swizzle.xzyww;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual("(-2-1)", v.y);
                Assert.AreEqual("((75)1)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "-6", "((-31)9)", "");
                var v = ov.swizzle.xzywv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-31)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "((-5-5)0)", "(65)", "", "4");
                var v = ov.swizzle.xzyv;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("((-5-5)0)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(5-8)", "-1", "-1", "((-2-2)-2)", null);
                var v = ov.swizzle.xzyvx;
                Assert.AreEqual("(5-8)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((91)-2)", "", "((-3-4)2)", "(-81)");
                var v = ov.swizzle.xzyvy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((91)-2)", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("((91)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", "((-9-8)-3)", "-4", "((-9-8)-3)", null);
                var v = ov.swizzle.xzyvz;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-9-8)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-4-2)", null, "((-36)3)", "((-1-2)-4)");
                var v = ov.swizzle.xzyvw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("((-1-2)-4)", v.w);
                Assert.AreEqual("((-36)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(64)", "(1-3)", "(64)", null, "(64)");
                var v = ov.swizzle.xzyvv;
                Assert.AreEqual("(64)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(64)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-90)", "((-5-1)4)", "(2-8)");
                var v = ov.swizzle.xzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("(-90)", v.z);
            }
            {
                var ov = new gvec5<string>("3", "", "(61)", "-1", "((9-1)-5)");
                var v = ov.swizzle.xzzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("(61)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((78)-2)", "-9", "((78)-2)", null, "(8-5)");
                var v = ov.swizzle.xzzxx;
                Assert.AreEqual("((78)-2)", v.x);
                Assert.AreEqual("((78)-2)", v.y);
                Assert.AreEqual("((78)-2)", v.z);
                Assert.AreEqual("((78)-2)", v.w);
                Assert.AreEqual("((78)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "-7", "((-61)0)", "-7", "((-9-6)4)");
                var v = ov.swizzle.xzzxy;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("((-61)0)", v.y);
                Assert.AreEqual("((-61)0)", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-4)-8)", "((-9-7)-5)", "((-9-7)-5)", "-8", "(49)");
                var v = ov.swizzle.xzzxz;
                Assert.AreEqual("((-8-4)-8)", v.x);
                Assert.AreEqual("((-9-7)-5)", v.y);
                Assert.AreEqual("((-9-7)-5)", v.z);
                Assert.AreEqual("((-8-4)-8)", v.w);
                Assert.AreEqual("((-9-7)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)4)", "((-5-5)5)", "", "(67)", "0");
                var v = ov.swizzle.xzzxw;
                Assert.AreEqual("((-76)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-76)4)", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "", "(38)", "(5-3)");
                var v = ov.swizzle.xzzxv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(5-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-6)6)", "", "(-72)", "(-72)");
                var v = ov.swizzle.xzzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((3-6)6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((86)9)", "(91)", "((-74)7)", "((-74)7)");
                var v = ov.swizzle.xzzyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("((86)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", "-3", "((-2-6)5)", "(-4-2)", "((5-6)3)");
                var v = ov.swizzle.xzzyy;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("((-2-6)5)", v.y);
                Assert.AreEqual("((-2-6)5)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "0", "((-8-5)6)", "-9", "(07)");
                var v = ov.swizzle.xzzyz;
                Assert.AreEqual("(07)", v.x);
                Assert.AreEqual("((-8-5)6)", v.y);
                Assert.AreEqual("((-8-5)6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-8-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((64)-5)", "", "", "", "((64)-5)");
                var v = ov.swizzle.xzzyw;
                Assert.AreEqual("((64)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((3-3)-6)", "(-6-9)", "1", "((-79)-3)", null);
                var v = ov.swizzle.xzzyv;
                Assert.AreEqual("((3-3)-6)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-6-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-74)", "(97)", "", "8", "((67)-8)");
                var v = ov.swizzle.xzzz;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("2", "-3", "2", "2", "(2-4)");
                var v = ov.swizzle.xzzzx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "((4-9)-2)", "(-8-3)", "(5-8)", "(-8-3)");
                var v = ov.swizzle.xzzzy;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("((4-9)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-7)5)", "(-3-4)", null, "", null);
                var v = ov.swizzle.xzzzz;
                Assert.AreEqual("((-8-7)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "(-53)", "(-17)", "(-67)", "(-67)");
                var v = ov.swizzle.xzzzw;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-7)-3)", "3", "9", "((70)8)");
                var v = ov.swizzle.xzzzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((70)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-5", "", "(-9-5)");
                var v = ov.swizzle.xzzw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-1-9)", "(-1-9)", "((-87)2)", "((47)-1)");
                var v = ov.swizzle.xzzwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("((-87)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)8)", "5", "((-8-3)9)", "(56)", "((-8-3)9)");
                var v = ov.swizzle.xzzwy;
                Assert.AreEqual("((6-5)8)", v.x);
                Assert.AreEqual("((-8-3)9)", v.y);
                Assert.AreEqual("((-8-3)9)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((52)1)", "-7", "((52)1)", "(-60)");
                var v = ov.swizzle.xzzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((52)1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(2-5)", "9", "", "");
                var v = ov.swizzle.xzzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((30)7)", null, "", null);
                var v = ov.swizzle.xzzwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "9", "((0-9)-8)", "-3", "((69)9)");
                var v = ov.swizzle.xzzv;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("((0-9)-8)", v.y);
                Assert.AreEqual("((0-9)-8)", v.z);
                Assert.AreEqual("((69)9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-51)", "((-23)-8)", "0", "", "(-87)");
                var v = ov.swizzle.xzzvx;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "((77)2)", "", "(-53)", "((82)7)");
                var v = ov.swizzle.xzzvy;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((82)7)", v.w);
                Assert.AreEqual("((77)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((23)6)", "(77)", "-7", "");
                var v = ov.swizzle.xzzvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("(77)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(77)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-9", "((7-5)0)", "(08)", "((7-5)0)");
                var v = ov.swizzle.xzzvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-5)0)", v.y);
                Assert.AreEqual("((7-5)0)", v.z);
                Assert.AreEqual("((7-5)0)", v.w);
                Assert.AreEqual("(08)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-2)", "1", "((80)5)", "", "((80)5)");
                var v = ov.swizzle.xzzvv;
                Assert.AreEqual("(8-2)", v.x);
                Assert.AreEqual("((80)5)", v.y);
                Assert.AreEqual("((80)5)", v.z);
                Assert.AreEqual("((80)5)", v.w);
                Assert.AreEqual("((80)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)7)", "", "(-23)", "7", "((-95)-3)");
                var v = ov.swizzle.xzw;
                Assert.AreEqual("((9-8)7)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((-5-4)5)", "3", "5", "", "((4-9)9)");
                var v = ov.swizzle.xzwx;
                Assert.AreEqual("((-5-4)5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-4)5)", v.w);
            }
            {
                var ov = new gvec5<string>("", "6", null, "((64)3)", "((-6-2)-7)");
                var v = ov.swizzle.xzwxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((64)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-6)", "-2", "(33)", "(-98)", "(33)");
                var v = ov.swizzle.xzwxy;
                Assert.AreEqual("((-7-9)-6)", v.x);
                Assert.AreEqual("(33)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("((-7-9)-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "", "((7-9)-3)", "((-9-4)-2)", "(-97)");
                var v = ov.swizzle.xzwxz;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("((7-9)-3)", v.y);
                Assert.AreEqual("((-9-4)-2)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("((7-9)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-8-7)", "(20)", "(27)", "-2");
                var v = ov.swizzle.xzwxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec5<string>("(69)", "(83)", "", "-6", null);
                var v = ov.swizzle.xzwxv;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(69)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-2", "((-19)0)", "((5-1)-9)");
                var v = ov.swizzle.xzwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-19)0)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((54)-7)", "0", "1", "-9");
                var v = ov.swizzle.xzwyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((54)-7)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((9-4)-2)", "2", "((36)3)", "(9-6)", "(9-6)");
                var v = ov.swizzle.xzwyy;
                Assert.AreEqual("((9-4)-2)", v.x);
                Assert.AreEqual("((36)3)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-58)", "((57)5)", "((-73)9)", "(-58)", "(1-3)");
                var v = ov.swizzle.xzwyz;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((-73)9)", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("((57)5)", v.w);
                Assert.AreEqual("((-73)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)8)", "((75)-9)", "(0-5)", "((12)8)", "((12)8)");
                var v = ov.swizzle.xzwyw;
                Assert.AreEqual("((12)8)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("((12)8)", v.z);
                Assert.AreEqual("((75)-9)", v.w);
                Assert.AreEqual("((12)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((35)7)", "", "0", "0", "((-77)3)");
                var v = ov.swizzle.xzwyv;
                Assert.AreEqual("((35)7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-77)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-85)-9)", "5", "5", "(79)", "((0-9)-9)");
                var v = ov.swizzle.xzwz;
                Assert.AreEqual("((-85)-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("", "(41)", "-1", "(8-8)", "(41)");
                var v = ov.swizzle.xzwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(8-8)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-13)4)", null, "", "9", null);
                var v = ov.swizzle.xzwzy;
                Assert.AreEqual("((-13)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)2)", "(0-5)", "0", "((3-1)2)", "((82)5)");
                var v = ov.swizzle.xzwzz;
                Assert.AreEqual("((3-1)2)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((3-1)2)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((21)-3)", null, "((60)-6)", "-2");
                var v = ov.swizzle.xzwzw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((60)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((60)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-61)", "-4", "", "2", "");
                var v = ov.swizzle.xzwzv;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)4)", "5", "-3", "((-34)1)", "((-34)1)");
                var v = ov.swizzle.xzww;
                Assert.AreEqual("((-9-1)4)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-34)1)", v.z);
                Assert.AreEqual("((-34)1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-8-6)4)", "((-75)-9)", "((-8-6)4)", "3", "5");
                var v = ov.swizzle.xzwwx;
                Assert.AreEqual("((-8-6)4)", v.x);
                Assert.AreEqual("((-8-6)4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-8-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "", "((45)9)", "(-45)");
                var v = ov.swizzle.xzwwy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((45)9)", v.z);
                Assert.AreEqual("((45)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-3-9)", "-3", "8", "8");
                var v = ov.swizzle.xzwwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-2", "", "(5-1)", "((84)-6)");
                var v = ov.swizzle.xzwww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-8", "(-1-3)", "", "(-2-5)");
                var v = ov.swizzle.xzwwv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "(-46)", "((-79)2)", "0", "6");
                var v = ov.swizzle.xzwv;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("((-79)2)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((-3-4)1)", "(60)", "((-3-4)1)", "-1", "-3");
                var v = ov.swizzle.xzwvx;
                Assert.AreEqual("((-3-4)1)", v.x);
                Assert.AreEqual("((-3-4)1)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-3-4)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(43)", "5", "5");
                var v = ov.swizzle.xzwvy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(0-9)", "(9-4)", "3", "((1-1)-9)");
                var v = ov.swizzle.xzwvz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((1-1)-9)", v.w);
                Assert.AreEqual("(9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(52)", "5", "(52)");
                var v = ov.swizzle.xzwvw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((9-7)4)", "(-7-8)", "((78)-8)", "");
                var v = ov.swizzle.xzwvv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("((78)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "-2", null, "(-7-3)", "(-3-1)");
                var v = ov.swizzle.xzv;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-3-1)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "((-3-6)5)", "0", "(8-5)", "(66)");
                var v = ov.swizzle.xzvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((97)-1)", "-9", "((-7-4)7)", "((97)-1)", "(9-6)");
                var v = ov.swizzle.xzvxx;
                Assert.AreEqual("((97)-1)", v.x);
                Assert.AreEqual("((-7-4)7)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("((97)-1)", v.w);
                Assert.AreEqual("((97)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-9)6)", "((-4-6)7)", null, "0", "3");
                var v = ov.swizzle.xzvxy;
                Assert.AreEqual("((2-9)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((2-9)6)", v.w);
                Assert.AreEqual("((-4-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-56)0)", "(78)", "3", null, "(-63)");
                var v = ov.swizzle.xzvxz;
                Assert.AreEqual("((-56)0)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("((-56)0)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-86)9)", "((5-8)2)", "((5-8)2)", null, "((-86)9)");
                var v = ov.swizzle.xzvxw;
                Assert.AreEqual("((-86)9)", v.x);
                Assert.AreEqual("((5-8)2)", v.y);
                Assert.AreEqual("((-86)9)", v.z);
                Assert.AreEqual("((-86)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)0)", "-4", "-4", "4", "((-2-2)-3)");
                var v = ov.swizzle.xzvxv;
                Assert.AreEqual("((-9-6)0)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-2-2)-3)", v.z);
                Assert.AreEqual("((-9-6)0)", v.w);
                Assert.AreEqual("((-2-2)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-86)4)", "9", "((1-3)-7)", "((6-8)6)");
                var v = ov.swizzle.xzvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((6-8)6)", v.z);
                Assert.AreEqual("((-86)4)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((85)2)", "((02)-5)", "-1", "-7");
                var v = ov.swizzle.xzvyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((02)-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((85)2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "(72)", "(72)", "-3");
                var v = ov.swizzle.xzvyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(72)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-3-3)-1)", "((14)-1)", "-9", "((-3-3)-1)");
                var v = ov.swizzle.xzvyz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((14)-1)", v.y);
                Assert.AreEqual("((-3-3)-1)", v.z);
                Assert.AreEqual("((-3-3)-1)", v.w);
                Assert.AreEqual("((14)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "((91)2)", "-2", "((91)2)", "(-2-6)");
                var v = ov.swizzle.xzvyw;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("((91)2)", v.w);
                Assert.AreEqual("((91)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(84)", "(84)", "(81)", "((-26)6)");
                var v = ov.swizzle.xzvyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(84)", v.y);
                Assert.AreEqual("((-26)6)", v.z);
                Assert.AreEqual("(84)", v.w);
                Assert.AreEqual("((-26)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "(-72)", "((-76)6)", "((-76)6)", "0");
                var v = ov.swizzle.xzvz;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("((-76)6)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-76)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-15)", null, "(-71)", "((89)-3)", "(-15)");
                var v = ov.swizzle.xzvzx;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("((21)-9)", "7", "(-9-1)", "(-9-1)", "5");
                var v = ov.swizzle.xzvzy;
                Assert.AreEqual("((21)-9)", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)-2)", "(-8-8)", "9", "4", "4");
                var v = ov.swizzle.xzvzz;
                Assert.AreEqual("((2-6)-2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(9-6)", "((31)-5)", "(9-6)", "-7");
                var v = ov.swizzle.xzvzw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((31)-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((31)-5)", v.w);
                Assert.AreEqual("(9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "(28)", null, "((3-9)5)", "2");
                var v = ov.swizzle.xzvzv;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "(45)", "-3", "9");
                var v = ov.swizzle.xzvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("(9-8)", "(18)", "7", "((88)7)", "(18)");
                var v = ov.swizzle.xzvwx;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("((88)7)", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-99)-4)", null, "", "(24)", "0");
                var v = ov.swizzle.xzvwy;
                Assert.AreEqual("((-99)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(24)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", "-5", "((05)-5)", "((05)-5)", "(-20)");
                var v = ov.swizzle.xzvwz;
                Assert.AreEqual("(-77)", v.x);
                Assert.AreEqual("((05)-5)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("((05)-5)", v.w);
                Assert.AreEqual("((05)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-39)", "((5-1)-3)", "", "(-9-2)");
                var v = ov.swizzle.xzvww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-1)-3)", v.y);
                Assert.AreEqual("(-9-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "-1", "-1", "0", "");
                var v = ov.swizzle.xzvwv;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-3)-4)", "", "(2-3)", null, "-9");
                var v = ov.swizzle.xzvv;
                Assert.AreEqual("((-2-3)-4)", v.x);
                Assert.AreEqual("(2-3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-6)", "((18)6)", "((18)6)", "((-6-5)-1)", "((1-1)2)");
                var v = ov.swizzle.xzvvx;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("((18)6)", v.y);
                Assert.AreEqual("((1-1)2)", v.z);
                Assert.AreEqual("((1-1)2)", v.w);
                Assert.AreEqual("(-3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((84)5)", "(84)", "((-8-8)0)", "(-3-8)", null);
                var v = ov.swizzle.xzvvy;
                Assert.AreEqual("((84)5)", v.x);
                Assert.AreEqual("((-8-8)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(84)", v.v);
            }
            {
                var ov = new gvec5<string>("((-72)0)", "-4", "((-72)0)", "-4", "((-72)0)");
                var v = ov.swizzle.xzvvz;
                Assert.AreEqual("((-72)0)", v.x);
                Assert.AreEqual("((-72)0)", v.y);
                Assert.AreEqual("((-72)0)", v.z);
                Assert.AreEqual("((-72)0)", v.w);
                Assert.AreEqual("((-72)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-45)6)", "((9-9)2)", null, "(-16)");
                var v = ov.swizzle.xzvvw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((9-9)2)", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "(1-1)", "(45)", "((70)-7)", null);
                var v = ov.swizzle.xzvvv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)6)", "((6-6)6)", "6", "((-5-4)1)", "(2-3)");
                var v = ov.swizzle.xw;
                Assert.AreEqual("((6-6)6)", v.x);
                Assert.AreEqual("((-5-4)1)", v.y);
            }
            {
                var ov = new gvec5<string>("(88)", "((8-4)-2)", "-9", "7", "((8-4)-2)");
                var v = ov.swizzle.xwx;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(88)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "9", "-8", "(7-6)", null);
                var v = ov.swizzle.xwxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-9-9)6)", "(65)", "((3-8)8)", "7", "((-3-4)-6)");
                var v = ov.swizzle.xwxxx;
                Assert.AreEqual("((-9-9)6)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-9-9)6)", v.z);
                Assert.AreEqual("((-9-9)6)", v.w);
                Assert.AreEqual("((-9-9)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "((4-4)9)", "(-5-7)", "(98)", null);
                var v = ov.swizzle.xwxxy;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("((4-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)6)", "-1", "(-1-3)", "((3-3)-1)", "(-97)");
                var v = ov.swizzle.xwxxz;
                Assert.AreEqual("((4-9)6)", v.x);
                Assert.AreEqual("((3-3)-1)", v.y);
                Assert.AreEqual("((4-9)6)", v.z);
                Assert.AreEqual("((4-9)6)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-1)", "((81)-7)", "(0-3)", "5", "((23)-6)");
                var v = ov.swizzle.xwxxw;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "((6-3)6)", "((63)1)", "(-95)", "(24)");
                var v = ov.swizzle.xwxxv;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("(24)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(0-4)", "((-7-6)-7)", "((-34)6)", "5");
                var v = ov.swizzle.xwxy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-34)6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(0-4)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "(68)", "(68)", "(68)", "");
                var v = ov.swizzle.xwxyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(68)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((87)1)", "(5-7)", "((87)1)", "-5");
                var v = ov.swizzle.xwxyy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((87)1)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((87)1)", v.w);
                Assert.AreEqual("((87)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-65)-3)", "5", "5", "(7-8)", "(-38)");
                var v = ov.swizzle.xwxyz;
                Assert.AreEqual("((-65)-3)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("((-65)-3)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((9-3)8)", "", "(-58)", "(76)");
                var v = ov.swizzle.xwxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-3)8)", v.w);
                Assert.AreEqual("(-58)", v.v);
            }
            {
                var ov = new gvec5<string>("((-34)-5)", "(4-4)", "((-34)-5)", "((-41)7)", "-5");
                var v = ov.swizzle.xwxyv;
                Assert.AreEqual("((-34)-5)", v.x);
                Assert.AreEqual("((-41)7)", v.y);
                Assert.AreEqual("((-34)-5)", v.z);
                Assert.AreEqual("(4-4)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(8-9)", "((-17)-6)", "((5-7)-3)", "((-17)-6)", null);
                var v = ov.swizzle.xwxz;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("((-17)-6)", v.y);
                Assert.AreEqual("(8-9)", v.z);
                Assert.AreEqual("((5-7)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(53)", "((-9-3)-8)", "", null, "(98)");
                var v = ov.swizzle.xwxzx;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-9-7)-8)", "2", "-3", "-3");
                var v = ov.swizzle.xwxzy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-9-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "-7", null, "0", "((54)-9)");
                var v = ov.swizzle.xwxzz;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-31)", "5", "(-4-1)", "((-2-8)8)", "5");
                var v = ov.swizzle.xwxzw;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("((-2-8)8)", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("((-2-8)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "-5", "-9", "(7-3)", null);
                var v = ov.swizzle.xwxzv;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)7)", "9", "-2", "9", "(-87)");
                var v = ov.swizzle.xwxw;
                Assert.AreEqual("((1-1)7)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((1-1)7)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("5", "-3", "((-9-3)7)", "-5", "(4-5)");
                var v = ov.swizzle.xwxwx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(72)", "((90)-5)", "(72)", "-5", "-6");
                var v = ov.swizzle.xwxwy;
                Assert.AreEqual("(72)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((90)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-2)", "(-78)", "(2-3)", "(2-3)", "(-78)");
                var v = ov.swizzle.xwxwz;
                Assert.AreEqual("((93)-2)", v.x);
                Assert.AreEqual("(2-3)", v.y);
                Assert.AreEqual("((93)-2)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", "(6-5)", "", "7");
                var v = ov.swizzle.xwxww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((17)9)", null, "", "((17)9)");
                var v = ov.swizzle.xwxwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((17)9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(44)", "", "0", "(44)");
                var v = ov.swizzle.xwxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(44)", v.w);
            }
            {
                var ov = new gvec5<string>("(-96)", "(3-6)", "-6", "7", "7");
                var v = ov.swizzle.xwxvx;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec5<string>("(-55)", "((54)-9)", "(19)", "((54)-9)", "(19)");
                var v = ov.swizzle.xwxvy;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("((54)-9)", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("(19)", v.w);
                Assert.AreEqual("((54)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-38)-8)", "(7-7)", "((0-8)-7)", "(7-7)", null);
                var v = ov.swizzle.xwxvz;
                Assert.AreEqual("((-38)-8)", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("((-38)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-40)-8)", "2", "(1-9)", "((-40)-8)");
                var v = ov.swizzle.xwxvw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-40)-8)", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "-4", "(-7-3)", "1");
                var v = ov.swizzle.xwxvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-64)9)", "8", "(8-2)", "((-6-3)3)", "(8-2)");
                var v = ov.swizzle.xwy;
                Assert.AreEqual("((-64)9)", v.x);
                Assert.AreEqual("((-6-3)3)", v.y);
                Assert.AreEqual("8", v.z);
            }
            {
                var ov = new gvec5<string>("(0-9)", "7", "((8-2)-7)", "((-22)-9)", "((-91)5)");
                var v = ov.swizzle.xwyx;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("((-22)-9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(0-9)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((71)-3)", "-6", "-3", "((0-1)-5)");
                var v = ov.swizzle.xwyxx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((71)-3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "(-5-9)", "(-5-9)", "-5", "9");
                var v = ov.swizzle.xwyxy;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "3", "3", "-1", "(-58)");
                var v = ov.swizzle.xwyxz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)-5)", "((-6-8)7)", "(0-9)", "0", "");
                var v = ov.swizzle.xwyxw;
                Assert.AreEqual("((7-1)-5)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-6-8)7)", v.z);
                Assert.AreEqual("((7-1)-5)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", null, "2", "(-34)");
                var v = ov.swizzle.xwyxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-34)", v.v);
            }
            {
                var ov = new gvec5<string>("(22)", null, "(4-5)", "(3-5)", "((-26)-1)");
                var v = ov.swizzle.xwyy;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "((4-9)-3)", "6", "6", null);
                var v = ov.swizzle.xwyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((4-9)-3)", v.z);
                Assert.AreEqual("((4-9)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-9", "(9-7)", "(47)", "((1-5)6)");
                var v = ov.swizzle.xwyyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("3", "4", "3", "4", "");
                var v = ov.swizzle.xwyyz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-1-5)", "(9-6)", "", "");
                var v = ov.swizzle.xwyyw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-5)", v.z);
                Assert.AreEqual("(-1-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((3-6)6)", "((18)4)", "", "-6");
                var v = ov.swizzle.xwyyv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((3-6)6)", v.z);
                Assert.AreEqual("((3-6)6)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", null, "(16)", "");
                var v = ov.swizzle.xwyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(16)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(85)", "6", "(-44)", "(-44)", "6");
                var v = ov.swizzle.xwyzx;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-45)1)", "(4-7)", "((-45)1)", "((-45)1)");
                var v = ov.swizzle.xwyzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-45)1)", v.y);
                Assert.AreEqual("((-45)1)", v.z);
                Assert.AreEqual("(4-7)", v.w);
                Assert.AreEqual("((-45)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "((-57)8)", "2", "(8-8)");
                var v = ov.swizzle.xwyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-57)8)", v.w);
                Assert.AreEqual("((-57)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(-77)", "((17)5)", "-8");
                var v = ov.swizzle.xwyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((17)5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("((17)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", null, null, "-6", "-9");
                var v = ov.swizzle.xwyzv;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(33)", "((5-3)-8)", "-2", "(33)", "((5-3)-8)");
                var v = ov.swizzle.xwyw;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("(33)", v.y);
                Assert.AreEqual("((5-3)-8)", v.z);
                Assert.AreEqual("(33)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", null, null, "(10)", "((3-1)6)");
                var v = ov.swizzle.xwywx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)-2)", "((26)9)", "((-9-9)-2)", "(1-4)", "((26)9)");
                var v = ov.swizzle.xwywy;
                Assert.AreEqual("((-9-9)-2)", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("((26)9)", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("((26)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((77)1)", "((18)9)", "((-6-4)-3)", "(-5-1)", null);
                var v = ov.swizzle.xwywz;
                Assert.AreEqual("((77)1)", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("((18)9)", v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual("((-6-4)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((74)8)", "7", "7", "((-6-9)8)", null);
                var v = ov.swizzle.xwyww;
                Assert.AreEqual("((74)8)", v.x);
                Assert.AreEqual("((-6-9)8)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-6-9)8)", v.w);
                Assert.AreEqual("((-6-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "((9-4)2)", "((06)6)", "(-1-4)", "(-1-4)");
                var v = ov.swizzle.xwywv;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("((9-4)2)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "((-1-2)-1)", "((96)-1)", "((96)-1)");
                var v = ov.swizzle.xwyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((96)-1)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((96)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((00)8)", "(32)", "((8-4)2)", "(42)", "((00)8)");
                var v = ov.swizzle.xwyvx;
                Assert.AreEqual("((00)8)", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("((00)8)", v.w);
                Assert.AreEqual("((00)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "", null, "8");
                var v = ov.swizzle.xwyvy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((91)6)", "4", "(-60)", "4", null);
                var v = ov.swizzle.xwyvz;
                Assert.AreEqual("((91)6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec5<string>("((-77)-8)", "(7-7)", "8", "", "7");
                var v = ov.swizzle.xwyvw;
                Assert.AreEqual("((-77)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-62)-7)", "-4", "(42)", "(52)");
                var v = ov.swizzle.xwyvv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("((-62)-7)", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-1)", "(-89)", "", "", "((-4-3)-8)");
                var v = ov.swizzle.xwz;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((10)3)", "-8", "-9", "5", "-9");
                var v = ov.swizzle.xwzx;
                Assert.AreEqual("((10)3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((10)3)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "4", "((32)4)", "-8", "-2");
                var v = ov.swizzle.xwzxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((32)4)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(63)", "((-2-1)6)", "8", "");
                var v = ov.swizzle.xwzxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-2-1)6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "(-92)", null, "((-58)1)", "");
                var v = ov.swizzle.xwzxz;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((-58)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-8-6)-3)", "2", "8", "8");
                var v = ov.swizzle.xwzxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(58)", "((65)-7)", null, "(1-8)");
                var v = ov.swizzle.xwzxv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((65)-7)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(1-8)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "5", "(-45)", "(-45)");
                var v = ov.swizzle.xwzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((2-1)-5)", "-1", "-1", "(-74)", "-7");
                var v = ov.swizzle.xwzyx;
                Assert.AreEqual("((2-1)-5)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((2-1)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "(25)", "(-17)", "(25)", "(-17)");
                var v = ov.swizzle.xwzyy;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(25)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "-5", "9", "((-6-2)-4)");
                var v = ov.swizzle.xwzyz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-45)", "(-58)", null, "1", "(-45)");
                var v = ov.swizzle.xwzyw;
                Assert.AreEqual("(-45)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((9-1)-9)", "-6", "-6", "(-6-1)");
                var v = ov.swizzle.xwzyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((9-1)-9)", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-2)-2)", "((-71)-5)", "((7-2)-2)", "-8", "((-71)-5)");
                var v = ov.swizzle.xwzz;
                Assert.AreEqual("((7-2)-2)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((7-2)-2)", v.z);
                Assert.AreEqual("((7-2)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-17)", "((-92)-8)", "", "((4-3)-2)", "(70)");
                var v = ov.swizzle.xwzzx;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("((4-3)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("(-59)", "((-97)1)", "3", null, "3");
                var v = ov.swizzle.xwzzy;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-97)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "((9-1)-7)", "5", "(-9-2)");
                var v = ov.swizzle.xwzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((9-1)-7)", v.z);
                Assert.AreEqual("((9-1)-7)", v.w);
                Assert.AreEqual("((9-1)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "4", "", "");
                var v = ov.swizzle.xwzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-33)-7)", "(5-5)", "((4-3)-5)", "((7-6)-6)");
                var v = ov.swizzle.xwzzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((4-3)-5)", v.y);
                Assert.AreEqual("(5-5)", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("((7-6)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "-7", "(-5-1)", null);
                var v = ov.swizzle.xwzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-5-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-8)-8)", "", null, "", "-7");
                var v = ov.swizzle.xwzwx;
                Assert.AreEqual("((-4-8)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-4-8)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(5-7)", "-4", "-5", "-5");
                var v = ov.swizzle.xwzwy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "8", "((1-4)9)", "", "8");
                var v = ov.swizzle.xwzwz;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-4)9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)5)", "(-89)", "((-8-1)5)", null, null);
                var v = ov.swizzle.xwzww;
                Assert.AreEqual("((-8-1)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-8-1)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "-7", "(-8-7)", "((76)-6)", "((76)-6)");
                var v = ov.swizzle.xwzwv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((76)-6)", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("((76)-6)", v.w);
                Assert.AreEqual("((76)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-6)-7)", "4", "((-62)-3)", "((5-6)-7)", "-2");
                var v = ov.swizzle.xwzv;
                Assert.AreEqual("((5-6)-7)", v.x);
                Assert.AreEqual("((5-6)-7)", v.y);
                Assert.AreEqual("((-62)-3)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((0-6)-8)", "((74)3)", "(-6-5)", "");
                var v = ov.swizzle.xwzvx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-6-5)", v.y);
                Assert.AreEqual("((74)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", null, "", "(39)", null);
                var v = ov.swizzle.xwzvy;
                Assert.AreEqual("(-1-5)", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "((-3-2)4)", "(-2-1)", "-1", "(92)");
                var v = ov.swizzle.xwzvz;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("(-2-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-66)", null, "((-16)3)", "((55)-1)", "((55)-1)");
                var v = ov.swizzle.xwzvw;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("((55)-1)", v.y);
                Assert.AreEqual("((-16)3)", v.z);
                Assert.AreEqual("((55)-1)", v.w);
                Assert.AreEqual("((55)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "8", "((-5-8)-4)", "-6", "(73)");
                var v = ov.swizzle.xwzvv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-5-8)-4)", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-53)", "(-87)", "", "(-87)");
                var v = ov.swizzle.xww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((29)-2)", "((23)7)", "-7", "((29)-2)", "(-8-2)");
                var v = ov.swizzle.xwwx;
                Assert.AreEqual("((29)-2)", v.x);
                Assert.AreEqual("((29)-2)", v.y);
                Assert.AreEqual("((29)-2)", v.z);
                Assert.AreEqual("((29)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(35)", "(35)", "-8", "(35)", "");
                var v = ov.swizzle.xwwxx;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("((59)-3)", "(1-5)", null, "9", "(8-1)");
                var v = ov.swizzle.xwwxy;
                Assert.AreEqual("((59)-3)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((59)-3)", v.w);
                Assert.AreEqual("(1-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-92)-9)", null, "-9", "2", null);
                var v = ov.swizzle.xwwxz;
                Assert.AreEqual("((-92)-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-92)-9)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("2", "5", "(86)", "-3", "((4-8)-5)");
                var v = ov.swizzle.xwwxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((96)-5)", "", "", "((-3-6)-8)", "((17)5)");
                var v = ov.swizzle.xwwxv;
                Assert.AreEqual("((96)-5)", v.x);
                Assert.AreEqual("((-3-6)-8)", v.y);
                Assert.AreEqual("((-3-6)-8)", v.z);
                Assert.AreEqual("((96)-5)", v.w);
                Assert.AreEqual("((17)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "5", "-3", "((9-4)-3)");
                var v = ov.swizzle.xwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("(1-1)", "(1-1)", "(-94)", "-7", "(1-1)");
                var v = ov.swizzle.xwwyx;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "6", "(86)", null, "");
                var v = ov.swizzle.xwwyy;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "(67)", "(-66)", "-2", "(67)");
                var v = ov.swizzle.xwwyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(67)", v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("(-93)", "-6", "-6", "-6", "0");
                var v = ov.swizzle.xwwyw;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((0-9)-1)", "(1-7)", "2", "9");
                var v = ov.swizzle.xwwyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((0-9)-1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "0", null, null);
                var v = ov.swizzle.xwwz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(2-3)", "((05)-6)", null, "(2-3)");
                var v = ov.swizzle.xwwzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((05)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "-1", "-1", "((63)1)");
                var v = ov.swizzle.xwwzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)2)", "((1-7)2)", "(-51)", null, null);
                var v = ov.swizzle.xwwzz;
                Assert.AreEqual("((1-7)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-51)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", null, "((9-7)9)", "((9-7)9)", "((9-7)9)");
                var v = ov.swizzle.xwwzw;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("((9-7)9)", v.y);
                Assert.AreEqual("((9-7)9)", v.z);
                Assert.AreEqual("((9-7)9)", v.w);
                Assert.AreEqual("((9-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "(-9-8)", "-9", "((00)4)", "-1");
                var v = ov.swizzle.xwwzv;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("((00)4)", v.y);
                Assert.AreEqual("((00)4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-5", "(-82)", "(-82)", "((2-9)-7)");
                var v = ov.swizzle.xwww;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("(-82)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-7", "((1-8)9)", "((-47)2)", null);
                var v = ov.swizzle.xwwwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-47)2)", v.y);
                Assert.AreEqual("((-47)2)", v.z);
                Assert.AreEqual("((-47)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "-1", null, "((81)-4)");
                var v = ov.swizzle.xwwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-67)1)", "((7-5)4)", "(5-3)", "(83)", "7");
                var v = ov.swizzle.xwwwz;
                Assert.AreEqual("((-67)1)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("(5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(69)", "(25)", "", "", "((-1-2)8)");
                var v = ov.swizzle.xwwww;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "((9-5)8)", "-4", "1");
                var v = ov.swizzle.xwwwv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)-7)", null, "", "(05)", null);
                var v = ov.swizzle.xwwv;
                Assert.AreEqual("((5-1)-7)", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "((-29)1)", "", "8", "(01)");
                var v = ov.swizzle.xwwvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "(3-2)", "(3-2)", "((74)-4)");
                var v = ov.swizzle.xwwvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("((74)-4)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(7-6)", "(7-6)", "(5-3)", "");
                var v = ov.swizzle.xwwvz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "((08)-3)", "(2-8)", "(-1-9)");
                var v = ov.swizzle.xwwvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-97)", "((-17)-3)", "((-22)9)", null, "(-14)");
                var v = ov.swizzle.xwwvv;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "-5", null);
                var v = ov.swizzle.xwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("0", "((01)5)", "((01)5)", "(-20)", "-8");
                var v = ov.swizzle.xwvx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(-97)", "", "-4", "-4", "(89)");
                var v = ov.swizzle.xwvxx;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", null, "(0-7)", "((-92)9)");
                var v = ov.swizzle.xwvxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("((-92)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-3-6)4)", "(-40)", "-5");
                var v = ov.swizzle.xwvxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-40)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-3-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "-8", null, "((87)9)");
                var v = ov.swizzle.xwvxw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((87)9)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-3)", "-9", "2", "((-6-7)7)", "((-64)0)");
                var v = ov.swizzle.xwvxv;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("((-6-7)7)", v.y);
                Assert.AreEqual("((-64)0)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("((-64)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-5", "((39)6)", null, "((88)7)");
                var v = ov.swizzle.xwvy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((88)7)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("(6-6)", "", "-9", "9", null);
                var v = ov.swizzle.xwvyx;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-5)", null, "((9-4)4)", "3", "((9-4)4)");
                var v = ov.swizzle.xwvyy;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((9-4)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-49)-5)", "6", "(-7-4)", "", "(-7-4)");
                var v = ov.swizzle.xwvyz;
                Assert.AreEqual("((-49)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-8)-7)", "((-1-8)-7)", "(5-9)", "(-6-4)", "(-6-4)");
                var v = ov.swizzle.xwvyw;
                Assert.AreEqual("((-1-8)-7)", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("(-6-4)", v.z);
                Assert.AreEqual("((-1-8)-7)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(9-7)", "((-4-8)7)", "(-16)", "");
                var v = ov.swizzle.xwvyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(74)", "-8", "");
                var v = ov.swizzle.xwvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(74)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "", "5", null, "(-1-9)");
                var v = ov.swizzle.xwvzx;
                Assert.AreEqual("(-7-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((31)-9)", "((15)-6)", "((8-4)-7)", "(69)", "(62)");
                var v = ov.swizzle.xwvzy;
                Assert.AreEqual("((31)-9)", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("((8-4)-7)", v.w);
                Assert.AreEqual("((15)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "(34)", "-6", null, null);
                var v = ov.swizzle.xwvzz;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "(-2-7)", "((5-4)3)", "-3");
                var v = ov.swizzle.xwvzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-4)3)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("((5-4)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-9)", "-7", "2", "(-56)", "((-93)6)");
                var v = ov.swizzle.xwvzv;
                Assert.AreEqual("((-37)-9)", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual("((-93)6)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-93)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((25)0)", "5", "", "-1", "(-41)");
                var v = ov.swizzle.xwvw;
                Assert.AreEqual("((25)0)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "((7-2)-8)", "((-2-8)4)", "(1-7)", "(-8-9)");
                var v = ov.swizzle.xwvwx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("(1-7)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((66)-1)", "7", "(3-9)", "((66)-1)", "(-63)");
                var v = ov.swizzle.xwvwy;
                Assert.AreEqual("((66)-1)", v.x);
                Assert.AreEqual("((66)-1)", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("((66)-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((97)1)", "((-25)-6)", "((97)1)", "(-8-6)", "-4");
                var v = ov.swizzle.xwvwz;
                Assert.AreEqual("((97)1)", v.x);
                Assert.AreEqual("(-8-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("((97)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((89)8)", "(0-7)", "5", "-4");
                var v = ov.swizzle.xwvww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(4-2)", "-9", "((4-6)4)");
                var v = ov.swizzle.xwvwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((4-6)4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((4-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, "((89)-7)", "(67)", "(67)");
                var v = ov.swizzle.xwvv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-7)", "(-4-2)", null, "(-4-2)", "-8");
                var v = ov.swizzle.xwvvx;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-2)", "-1", "((-1-2)-2)", "-1", "(-5-9)");
                var v = ov.swizzle.xwvvy;
                Assert.AreEqual("(8-2)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "((11)0)", "", null, "");
                var v = ov.swizzle.xwvvz;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-2)", "1", "(-1-2)", "", "((14)1)");
                var v = ov.swizzle.xwvvw;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((14)1)", v.z);
                Assert.AreEqual("((14)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((-6-3)8)", "", "3");
                var v = ov.swizzle.xwvvv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "5", "((-72)-9)", "");
                var v = ov.swizzle.xv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "", "", null, null);
                var v = ov.swizzle.xvx;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-4)", v.z);
            }
            {
                var ov = new gvec5<string>("((-7-2)3)", "(08)", "((37)-9)", "(08)", "-8");
                var v = ov.swizzle.xvxx;
                Assert.AreEqual("((-7-2)3)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-7-2)3)", v.z);
                Assert.AreEqual("((-7-2)3)", v.w);
            }
            {
                var ov = new gvec5<string>("(60)", null, "(80)", "((-3-3)-5)", "((-14)-6)");
                var v = ov.swizzle.xvxxx;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("((-14)-6)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "(3-1)", "", null, "(-77)");
                var v = ov.swizzle.xvxxy;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("(-77)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "(2-5)", null, "((-60)1)", "((-60)1)");
                var v = ov.swizzle.xvxxz;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("((-60)1)", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", "(75)", "((62)-5)", null, "5");
                var v = ov.swizzle.xvxxw;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(-1-6)", "4", "0");
                var v = ov.swizzle.xvxxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((88)1)", "(3-8)", "((88)1)", "-4", "");
                var v = ov.swizzle.xvxy;
                Assert.AreEqual("((88)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((88)1)", v.z);
                Assert.AreEqual("(3-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-93)", "((6-6)-2)", "(-7-4)", "((6-6)-2)", "(-12)");
                var v = ov.swizzle.xvxyx;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("(-12)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("((6-6)-2)", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "", "((-41)2)", "(2-5)");
                var v = ov.swizzle.xvxyy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "((-80)-6)", "", "7");
                var v = ov.swizzle.xvxyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-80)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "(-17)", null, "6", "((9-8)7)");
                var v = ov.swizzle.xvxyw;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("((9-8)7)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)-5)", "((76)-8)", "((76)-8)", "((4-1)6)", "(-18)");
                var v = ov.swizzle.xvxyv;
                Assert.AreEqual("((-8-6)-5)", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("((-8-6)-5)", v.z);
                Assert.AreEqual("((76)-8)", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "(6-4)", "(6-4)", "4");
                var v = ov.swizzle.xvxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(9-9)", "", "-3", "-7", "-7");
                var v = ov.swizzle.xvxzx;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)6)", "((97)6)", "(-4-4)", "((97)6)", "(-4-4)");
                var v = ov.swizzle.xvxzy;
                Assert.AreEqual("((97)6)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("((97)6)", v.z);
                Assert.AreEqual("(-4-4)", v.w);
                Assert.AreEqual("((97)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(9-1)", "(9-1)", "8", null);
                var v = ov.swizzle.xvxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-9)-2)", null, null, null, "((23)-6)");
                var v = ov.swizzle.xvxzw;
                Assert.AreEqual("((3-9)-2)", v.x);
                Assert.AreEqual("((23)-6)", v.y);
                Assert.AreEqual("((3-9)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "(09)", "", "-1", "(09)");
                var v = ov.swizzle.xvxzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((3-1)-3)", "-8", "((9-1)-7)", "-8");
                var v = ov.swizzle.xvxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((9-1)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((39)7)", "(36)", "((52)-9)", "4", "(-21)");
                var v = ov.swizzle.xvxwx;
                Assert.AreEqual("((39)7)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("((39)7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((39)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(26)", "((23)-5)", null, "((2-8)-4)");
                var v = ov.swizzle.xvxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((2-8)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(26)", v.v);
            }
            {
                var ov = new gvec5<string>("((05)-4)", "((05)-4)", "(-2-2)", "", "-1");
                var v = ov.swizzle.xvxwz;
                Assert.AreEqual("((05)-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((05)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "", "((58)2)", "(-7-9)", "2");
                var v = ov.swizzle.xvxww;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-7)", "((6-4)9)", "(6-7)", "-3");
                var v = ov.swizzle.xvxwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)5)", "(1-5)", null, "(1-5)", "5");
                var v = ov.swizzle.xvxv;
                Assert.AreEqual("((-76)5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-76)5)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>(null, "4", "(68)", "((-5-4)-7)", "9");
                var v = ov.swizzle.xvxvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-49)", "(97)", "(97)", "-4");
                var v = ov.swizzle.xvxvy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-4-1)", "-9", "(-73)", "");
                var v = ov.swizzle.xvxvz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)-1)", "-5", "(5-8)", "-5", "8");
                var v = ov.swizzle.xvxvw;
                Assert.AreEqual("((0-3)-1)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((0-3)-1)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "((-2-1)2)", "(4-2)", null, "");
                var v = ov.swizzle.xvxvv;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(4-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(26)", null, "");
                var v = ov.swizzle.xvy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
            }
            {
                var ov = new gvec5<string>("9", "1", "1", "(-8-5)", "1");
                var v = ov.swizzle.xvyx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-81)-6)", "((-81)-6)", "((-84)4)", "((-84)4)");
                var v = ov.swizzle.xvyxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-84)4)", v.y);
                Assert.AreEqual("((-81)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-27)", "(-7-8)", "((4-5)8)", "((53)3)", "((4-5)8)");
                var v = ov.swizzle.xvyxy;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("((4-5)8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-8)", null, "", "((68)7)");
                var v = ov.swizzle.xvyxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((68)7)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "((9-8)-5)", "(6-8)", "((-5-7)9)", "");
                var v = ov.swizzle.xvyxw;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((9-8)-5)", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("((-5-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "", "((-31)2)", "(94)");
                var v = ov.swizzle.xvyxv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "((-7-4)1)", "(-32)", "((-2-8)5)");
                var v = ov.swizzle.xvyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-8)5)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-31)", "6", "8", "6");
                var v = ov.swizzle.xvyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(3-2)", "((23)-5)", "-4", "((1-2)-5)");
                var v = ov.swizzle.xvyyy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((1-2)-5)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-5-2)-6)", "", "(-6-3)", null);
                var v = ov.swizzle.xvyyz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-2)-6)", v.z);
                Assert.AreEqual("((-5-2)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "((11)6)", null, "", null);
                var v = ov.swizzle.xvyyw;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((11)6)", v.z);
                Assert.AreEqual("((11)6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(26)", "-6", "((7-5)1)", null, "(-4-7)");
                var v = ov.swizzle.xvyyv;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-3)7)", "((84)-3)", "((-8-3)7)", "4", "(0-7)");
                var v = ov.swizzle.xvyz;
                Assert.AreEqual("((-8-3)7)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("((84)-3)", v.z);
                Assert.AreEqual("((-8-3)7)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "(66)", "(66)", null);
                var v = ov.swizzle.xvyzx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "(41)", null, "-4", "-7");
                var v = ov.swizzle.xvyzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-35)", "3", "3", "((42)3)");
                var v = ov.swizzle.xvyzz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((42)3)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "(-30)", "", "(-11)", null);
                var v = ov.swizzle.xvyzw;
                Assert.AreEqual("(-88)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "", "6", null, "((98)-6)");
                var v = ov.swizzle.xvyzv;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("((98)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((98)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(39)", "(39)", "(-7-7)", "((78)-7)");
                var v = ov.swizzle.xvyw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((78)-7)", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-59)4)", "((-59)4)", "-2", "-2");
                var v = ov.swizzle.xvywx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-59)4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((88)2)", "((88)2)", "4", "(8-2)", "5");
                var v = ov.swizzle.xvywy;
                Assert.AreEqual("((88)2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((88)2)", v.z);
                Assert.AreEqual("(8-2)", v.w);
                Assert.AreEqual("((88)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-1)", "", "9", "(95)", "");
                var v = ov.swizzle.xvywz;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", "((-25)-1)", "(-22)", "(-6-4)", "((-5-8)-9)");
                var v = ov.swizzle.xvyww;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("((-5-8)-9)", v.y);
                Assert.AreEqual("((-25)-1)", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-3-5)-4)", "((-3-5)-4)", "2", "((-3-5)-4)");
                var v = ov.swizzle.xvywv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-3-5)-4)", v.y);
                Assert.AreEqual("((-3-5)-4)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-3-5)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "(26)", "(26)", "-8", "((00)5)");
                var v = ov.swizzle.xvyv;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("((00)5)", v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("((00)5)", v.w);
            }
            {
                var ov = new gvec5<string>("(49)", "(-2-9)", "((1-1)-5)", "-4", "(49)");
                var v = ov.swizzle.xvyvx;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("(49)", v.w);
                Assert.AreEqual("(49)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)-4)", null, "((-26)-4)", "((-26)-4)", "(08)");
                var v = ov.swizzle.xvyvy;
                Assert.AreEqual("((-26)-4)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "((9-4)7)", "((0-7)-8)", "(-9-4)", "(-36)");
                var v = ov.swizzle.xvyvz;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("((9-4)7)", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("((0-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)-2)", "((-9-3)-2)", "(-3-2)", "(-3-2)", null);
                var v = ov.swizzle.xvyvw;
                Assert.AreEqual("((-9-3)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-9-3)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-2", "-2", "(-37)", "9");
                var v = ov.swizzle.xvyvv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(65)", "(-6-3)", "((-9-1)0)", "((1-3)8)");
                var v = ov.swizzle.xvz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((1-3)8)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
            }
            {
                var ov = new gvec5<string>("(4-8)", null, "-2", "((-2-3)-6)", "((06)3)");
                var v = ov.swizzle.xvzx;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("((06)3)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(4-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-3)", "((-98)3)", "((-1-7)-7)", "((11)-5)", "(5-9)");
                var v = ov.swizzle.xvzxx;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("((-1-7)-7)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-6-6)9)", "1", "", null);
                var v = ov.swizzle.xvzxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-6-6)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "(05)", "((-8-6)-9)", "(6-9)", "5");
                var v = ov.swizzle.xvzxz;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-8-6)-9)", v.z);
                Assert.AreEqual("(05)", v.w);
                Assert.AreEqual("((-8-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((07)-3)", "((-7-5)1)", "-8", "(-14)", "-5");
                var v = ov.swizzle.xvzxw;
                Assert.AreEqual("((07)-3)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((07)-3)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "-8", "0", "-8", "(-4-9)");
                var v = ov.swizzle.xvzxv;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-4-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((08)-5)", "(6-1)", "0", "");
                var v = ov.swizzle.xvzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("((08)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "-7", "(-40)", "(-3-9)", "-2");
                var v = ov.swizzle.xvzyx;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-7)-5)", "-4", "(-64)", "((-43)7)", "(-50)");
                var v = ov.swizzle.xvzyy;
                Assert.AreEqual("((2-7)-5)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)-5)", "((8-6)-3)", null, "((-23)-5)", null);
                var v = ov.swizzle.xvzyz;
                Assert.AreEqual("((-23)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-6)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(10)", "4", null, "");
                var v = ov.swizzle.xvzyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "", "-4", "((4-1)3)");
                var v = ov.swizzle.xvzyv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((4-1)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((2-8)9)", "-3", "((6-1)1)", "0");
                var v = ov.swizzle.xvzz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("(0-9)", "(0-9)", "((34)9)", "3", "(2-4)");
                var v = ov.swizzle.xvzzx;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("(2-4)", v.y);
                Assert.AreEqual("((34)9)", v.z);
                Assert.AreEqual("((34)9)", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-9-8)1)", "((-1-3)-2)", "-8", "((-9-8)1)");
                var v = ov.swizzle.xvzzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-8)1)", v.y);
                Assert.AreEqual("((-1-3)-2)", v.z);
                Assert.AreEqual("((-1-3)-2)", v.w);
                Assert.AreEqual("((-9-8)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "3", "((50)4)", "(-6-1)", "8");
                var v = ov.swizzle.xvzzz;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((50)4)", v.z);
                Assert.AreEqual("((50)4)", v.w);
                Assert.AreEqual("((50)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((32)-8)", "((-8-1)9)", "(79)", "(79)", "1");
                var v = ov.swizzle.xvzzw;
                Assert.AreEqual("((32)-8)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", null, "(9-4)", null, "-8");
                var v = ov.swizzle.xvzzv;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-2-9)", null, "((3-3)-3)", "(-82)");
                var v = ov.swizzle.xvzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-3)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "7", null, "(8-6)", "7");
                var v = ov.swizzle.xvzwx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(8-6)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((76)-1)", "-4", "(8-5)", "((-7-2)-5)", "((93)6)");
                var v = ov.swizzle.xvzwy;
                Assert.AreEqual("((76)-1)", v.x);
                Assert.AreEqual("((93)6)", v.y);
                Assert.AreEqual("(8-5)", v.z);
                Assert.AreEqual("((-7-2)-5)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)3)", "3", "((31)-7)", null, "3");
                var v = ov.swizzle.xvzwz;
                Assert.AreEqual("((4-9)3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((31)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((31)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-12)", "((-68)-9)", "-7", "(-1-8)");
                var v = ov.swizzle.xvzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("((-68)-9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "-2", "-3", "");
                var v = ov.swizzle.xvzwv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", "((97)-6)", "(-32)", null, "((97)-6)");
                var v = ov.swizzle.xvzv;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("((97)-6)", v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("((97)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((13)-3)", "7", "2", "((13)-3)", "(-31)");
                var v = ov.swizzle.xvzvx;
                Assert.AreEqual("((13)-3)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("((13)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)5)", "(4-4)", "6", "(4-4)", "((-79)5)");
                var v = ov.swizzle.xvzvy;
                Assert.AreEqual("((-79)5)", v.x);
                Assert.AreEqual("((-79)5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-79)5)", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-61)-5)", "-2", "-2", "(5-8)", "(5-8)");
                var v = ov.swizzle.xvzvz;
                Assert.AreEqual("((-61)-5)", v.x);
                Assert.AreEqual("(5-8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(5-8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-56)", "(-56)", "-6", "((9-5)-6)", "-6");
                var v = ov.swizzle.xvzvw;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((9-5)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(-7-2)", "(5-8)", "-1");
                var v = ov.swizzle.xvzvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "-6", "-6", "3", null);
                var v = ov.swizzle.xvw;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("8", "8", null, "(-83)", null);
                var v = ov.swizzle.xvwx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((0-8)-1)", "(41)", null, "((1-5)-9)", "-9");
                var v = ov.swizzle.xvwxx;
                Assert.AreEqual("((0-8)-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((1-5)-9)", v.z);
                Assert.AreEqual("((0-8)-1)", v.w);
                Assert.AreEqual("((0-8)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((0-2)-4)", null, "(-9-9)", null);
                var v = ov.swizzle.xvwxy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((0-2)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-30)-5)", "7", "2", "((-4-9)-1)");
                var v = ov.swizzle.xvwxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-9)-1)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-58)", "((-98)-2)", "-2", "(-75)");
                var v = ov.swizzle.xvwxw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-33)4)", "(41)", "-3", "-6", "(41)");
                var v = ov.swizzle.xvwxv;
                Assert.AreEqual("((-33)4)", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-33)4)", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-29)", "4", "((-5-2)6)", "(-5-4)");
                var v = ov.swizzle.xvwy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("((-5-2)6)", v.z);
                Assert.AreEqual("(-29)", v.w);
            }
            {
                var ov = new gvec5<string>("(73)", "-6", "(73)", "1", null);
                var v = ov.swizzle.xvwyx;
                Assert.AreEqual("(73)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec5<string>("6", null, "(77)", "", "6");
                var v = ov.swizzle.xvwyy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", "(-7-5)", null, "(1-5)", "((18)2)");
                var v = ov.swizzle.xvwyz;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("((18)2)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "(5-5)", null, "(-9-8)");
                var v = ov.swizzle.xvwyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((7-3)-9)", "", null, "(6-5)", "((-75)6)");
                var v = ov.swizzle.xvwyv;
                Assert.AreEqual("((7-3)-9)", v.x);
                Assert.AreEqual("((-75)6)", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-75)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-2)7)", "-7", "(-6-1)", "(-11)", "(-4-7)");
                var v = ov.swizzle.xvwz;
                Assert.AreEqual("((-4-2)7)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(-86)", "", "-3", "3", "");
                var v = ov.swizzle.xvwzx;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-86)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "4", "((-72)9)", "((0-3)6)", "(63)");
                var v = ov.swizzle.xvwzy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("((0-3)6)", v.z);
                Assert.AreEqual("((-72)9)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((17)1)", "((17)1)", "(-36)", "8", "");
                var v = ov.swizzle.xvwzz;
                Assert.AreEqual("((17)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)-4)", "(-93)", "((36)7)", "((50)-4)", null);
                var v = ov.swizzle.xvwzw;
                Assert.AreEqual("((50)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((50)-4)", v.z);
                Assert.AreEqual("((36)7)", v.w);
                Assert.AreEqual("((50)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "", "(-8-6)", "((0-8)-3)");
                var v = ov.swizzle.xvwzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-8)-3)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((0-8)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(50)", "(-83)", "4", "4", "");
                var v = ov.swizzle.xvww;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(5-1)", "((-87)3)", "((-37)-3)", "", "(5-1)");
                var v = ov.swizzle.xvwwx;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(59)", "", "((85)5)", "", null);
                var v = ov.swizzle.xvwwy;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((5-8)8)", "(70)", "2", "0", "2");
                var v = ov.swizzle.xvwwz;
                Assert.AreEqual("((5-8)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-6", "(8-4)", "(15)", "-6");
                var v = ov.swizzle.xvwww;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-9)8)", "((-74)-6)", null, "((-74)-6)", "((-74)-6)");
                var v = ov.swizzle.xvwwv;
                Assert.AreEqual("((2-9)8)", v.x);
                Assert.AreEqual("((-74)-6)", v.y);
                Assert.AreEqual("((-74)-6)", v.z);
                Assert.AreEqual("((-74)-6)", v.w);
                Assert.AreEqual("((-74)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-9)-4)", "(-54)", "(-54)", "(-9-3)", "(-9-3)");
                var v = ov.swizzle.xvwv;
                Assert.AreEqual("((-6-9)-4)", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("(-9-3)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-8)", "(-7-5)", "(-7-5)", "6", "(-7-5)");
                var v = ov.swizzle.xvwvx;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "(7-4)", "((-3-5)6)", "2", "0");
                var v = ov.swizzle.xvwvy;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "(-9-9)", "((-46)5)", "3", "3");
                var v = ov.swizzle.xvwvz;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-46)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)-1)", "7", "-7", "5", "(-8-8)");
                var v = ov.swizzle.xvwvw;
                Assert.AreEqual("((-7-3)-1)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-26)", null, "-1", "(-1-9)");
                var v = ov.swizzle.xvwvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-9-2)", "((6-8)-4)", "((0-9)-7)", "((6-8)-4)");
                var v = ov.swizzle.xvv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((6-8)-4)", v.y);
                Assert.AreEqual("((6-8)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("((09)1)", "", "(-6-3)", "(-38)", "(-38)");
                var v = ov.swizzle.xvvx;
                Assert.AreEqual("((09)1)", v.x);
                Assert.AreEqual("(-38)", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("((09)1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-8-7)-5)", "((-8-7)-5)", "(95)", "(95)", "-6");
                var v = ov.swizzle.xvvxx;
                Assert.AreEqual("((-8-7)-5)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-8-7)-5)", v.w);
                Assert.AreEqual("((-8-7)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-55)-9)", "9", "(5-6)", "-9");
                var v = ov.swizzle.xvvxy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-55)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "7", "-8", null, "(-8-9)");
                var v = ov.swizzle.xvvxz;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "(03)", "2", "-7", "(-25)");
                var v = ov.swizzle.xvvxw;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((75)4)", "4", null, "4", "(-8-4)");
                var v = ov.swizzle.xvvxv;
                Assert.AreEqual("((75)4)", v.x);
                Assert.AreEqual("(-8-4)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("((75)4)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "", "", null);
                var v = ov.swizzle.xvvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("((5-3)3)", "-8", "((02)2)", "-8", null);
                var v = ov.swizzle.xvvyx;
                Assert.AreEqual("((5-3)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((5-3)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-3)", "2", "(5-5)", "((9-9)-4)", null);
                var v = ov.swizzle.xvvyy;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "(49)", null, "(49)");
                var v = ov.swizzle.xvvyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(49)", v.v);
            }
            {
                var ov = new gvec5<string>("((-43)-9)", "(55)", "(55)", "(9-5)", "");
                var v = ov.swizzle.xvvyw;
                Assert.AreEqual("((-43)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)-1)", null, "-5", "-5", "(-2-6)");
                var v = ov.swizzle.xvvyv;
                Assert.AreEqual("((9-8)-1)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "(1-7)", "(-8-5)", "((2-5)7)");
                var v = ov.swizzle.xvvz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((2-5)7)", v.y);
                Assert.AreEqual("((2-5)7)", v.z);
                Assert.AreEqual("(1-7)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(4-8)", "(-6-2)", "-3", "((-78)7)");
                var v = ov.swizzle.xvvzx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-78)7)", v.y);
                Assert.AreEqual("((-78)7)", v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(67)", "((6-3)6)", "0", "7");
                var v = ov.swizzle.xvvzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((6-3)6)", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "((-53)-7)", "", null, "3");
                var v = ov.swizzle.xvvzz;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-8-8)", "", "((11)-1)", "((-5-9)6)");
                var v = ov.swizzle.xvvzw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-5-9)6)", v.y);
                Assert.AreEqual("((-5-9)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((11)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-46)5)", null, "(5-3)", "((-10)-4)", "7");
                var v = ov.swizzle.xvvzv;
                Assert.AreEqual("((-46)5)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-4-9)", "((3-8)1)", "(60)", "-1");
                var v = ov.swizzle.xvvw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(60)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((89)4)", "", null, "4");
                var v = ov.swizzle.xvvwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(0-3)", null, "(2-6)", "5", "((-38)9)");
                var v = ov.swizzle.xvvwy;
                Assert.AreEqual("(0-3)", v.x);
                Assert.AreEqual("((-38)9)", v.y);
                Assert.AreEqual("((-38)9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((10)1)", "(6-9)", "", "(-9-9)", "(6-9)");
                var v = ov.swizzle.xvvwz;
                Assert.AreEqual("((10)1)", v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("(6-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((40)6)", "(8-7)", "5", "5", "");
                var v = ov.swizzle.xvvww;
                Assert.AreEqual("((40)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "6", "((1-9)7)", "6");
                var v = ov.swizzle.xvvwv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((1-9)7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((67)-8)", "", "((67)-8)", "-3", "(-16)");
                var v = ov.swizzle.xvvv;
                Assert.AreEqual("((67)-8)", v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("(-16)", v.w);
            }
            {
                var ov = new gvec5<string>("((75)4)", "(1-2)", "(-32)", "(1-2)", "((75)4)");
                var v = ov.swizzle.xvvvx;
                Assert.AreEqual("((75)4)", v.x);
                Assert.AreEqual("((75)4)", v.y);
                Assert.AreEqual("((75)4)", v.z);
                Assert.AreEqual("((75)4)", v.w);
                Assert.AreEqual("((75)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)9)", "((1-4)-4)", "", "(-5-2)", "4");
                var v = ov.swizzle.xvvvy;
                Assert.AreEqual("((4-4)9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((1-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((88)7)", "((-42)1)", "-4", "-1", "");
                var v = ov.swizzle.xvvvz;
                Assert.AreEqual("((88)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "8", "", "8", "((-6-9)-6)");
                var v = ov.swizzle.xvvvw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-6-9)-6)", v.y);
                Assert.AreEqual("((-6-9)-6)", v.z);
                Assert.AreEqual("((-6-9)-6)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(85)", "((-52)-2)", "((-97)5)", "8");
                var v = ov.swizzle.xvvvv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((9-3)2)", "(1-7)", "", "((9-3)2)", "(1-7)");
                var v = ov.swizzle.yx;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("((9-3)2)", v.y);
            }
            {
                var ov = new gvec5<string>("(-5-8)", "-1", "(47)", null, "((9-6)-1)");
                var v = ov.swizzle.yxx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("(-5-8)", v.z);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "(-35)", "2", "-9");
                var v = ov.swizzle.yxxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((-42)8)", "((-4-7)-4)", "", "((-4-7)-4)", "5");
                var v = ov.swizzle.yxxxx;
                Assert.AreEqual("((-4-7)-4)", v.x);
                Assert.AreEqual("((-42)8)", v.y);
                Assert.AreEqual("((-42)8)", v.z);
                Assert.AreEqual("((-42)8)", v.w);
                Assert.AreEqual("((-42)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)0)", "(21)", null, "(-56)", "((2-6)0)");
                var v = ov.swizzle.yxxxy;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("((2-6)0)", v.y);
                Assert.AreEqual("((2-6)0)", v.z);
                Assert.AreEqual("((2-6)0)", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "3", "((-53)0)", "6", "(-39)");
                var v = ov.swizzle.yxxxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-53)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-7)0)", "(57)", "((62)7)", "-3", "");
                var v = ov.swizzle.yxxxw;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("((3-7)0)", v.y);
                Assert.AreEqual("((3-7)0)", v.z);
                Assert.AreEqual("((3-7)0)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-3-9)-1)", "(08)", "((3-7)3)", "(55)");
                var v = ov.swizzle.yxxxv;
                Assert.AreEqual("((-3-9)-1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "(-49)", "((49)4)", "(8-8)", "-7");
                var v = ov.swizzle.yxxy;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("(-49)", v.w);
            }
            {
                var ov = new gvec5<string>("((01)6)", "2", "", "(95)", "");
                var v = ov.swizzle.yxxyx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((01)6)", v.y);
                Assert.AreEqual("((01)6)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((01)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((10)6)", "-2", "(73)", "((10)6)", "3");
                var v = ov.swizzle.yxxyy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((10)6)", v.y);
                Assert.AreEqual("((10)6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-4-7)-9)", "4", "", "");
                var v = ov.swizzle.yxxyz;
                Assert.AreEqual("((-4-7)-9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-4-7)-9)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((23)-5)", "", "(-2-4)", "(0-2)", null);
                var v = ov.swizzle.yxxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((23)-5)", v.y);
                Assert.AreEqual("((23)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "(00)", "(00)", "(4-8)", "-6");
                var v = ov.swizzle.yxxyv;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("(00)", v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "((3-2)-8)", "((3-2)-8)", null);
                var v = ov.swizzle.yxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((3-2)-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-5", "(1-4)", "((38)5)", "((4-1)0)");
                var v = ov.swizzle.yxxzx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-31)", "(-31)", "((-24)5)", "(6-3)");
                var v = ov.swizzle.yxxzy;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("(-31)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-1-6)-6)", "((-1-6)-6)", null, "-2");
                var v = ov.swizzle.yxxzz;
                Assert.AreEqual("((-1-6)-6)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-1-6)-6)", v.w);
                Assert.AreEqual("((-1-6)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-3)9)", null, "0", "", "7");
                var v = ov.swizzle.yxxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-3)9)", v.y);
                Assert.AreEqual("((5-3)9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-3", "-7", "(19)", "-7");
                var v = ov.swizzle.yxxzv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-16)", "((59)-4)", "-7", "((40)-4)");
                var v = ov.swizzle.yxxw;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(37)", "(18)", "", "(65)", "(37)");
                var v = ov.swizzle.yxxwx;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("(65)", v.w);
                Assert.AreEqual("(37)", v.v);
            }
            {
                var ov = new gvec5<string>("((73)1)", "2", "(-11)", "0", "((-18)5)");
                var v = ov.swizzle.yxxwy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((73)1)", v.y);
                Assert.AreEqual("((73)1)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "-7", "(6-1)", "((-5-7)7)", "");
                var v = ov.swizzle.yxxwz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("((-5-7)7)", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-6)", "(4-6)", "6", "6", "((-6-4)7)");
                var v = ov.swizzle.yxxww;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual("(4-6)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", null, "(-9-6)", "-6", "((-8-1)6)");
                var v = ov.swizzle.yxxwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-8-1)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(5-1)", "", "(6-8)", null);
                var v = ov.swizzle.yxxv;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(07)", "5", "((-9-6)9)", "((1-4)-9)", "((1-4)-9)");
                var v = ov.swizzle.yxxvx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual("((1-4)-9)", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec5<string>("((-27)-2)", "((06)4)", "((06)4)", "((-27)-2)", "((-3-3)-3)");
                var v = ov.swizzle.yxxvy;
                Assert.AreEqual("((06)4)", v.x);
                Assert.AreEqual("((-27)-2)", v.y);
                Assert.AreEqual("((-27)-2)", v.z);
                Assert.AreEqual("((-3-3)-3)", v.w);
                Assert.AreEqual("((06)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(52)", "((-8-8)6)", "(-4-9)", "(52)");
                var v = ov.swizzle.yxxvz;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("((-8-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "(46)", "((-5-8)8)", "-4");
                var v = ov.swizzle.yxxvw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-5-8)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(58)", "0", "((-74)2)", "2", "((2-9)8)");
                var v = ov.swizzle.yxxvv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("((2-9)8)", v.w);
                Assert.AreEqual("((2-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", "", "((0-7)-6)", "0", "0");
                var v = ov.swizzle.yxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((34)3)", "((-25)6)", "((34)3)", "-9", "(99)");
                var v = ov.swizzle.yxyx;
                Assert.AreEqual("((-25)6)", v.x);
                Assert.AreEqual("((34)3)", v.y);
                Assert.AreEqual("((-25)6)", v.z);
                Assert.AreEqual("((34)3)", v.w);
            }
            {
                var ov = new gvec5<string>("(6-4)", "(-60)", "(-63)", "1", "(-63)");
                var v = ov.swizzle.yxyxx;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual("(6-4)", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("(6-4)", v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(53)", "3", "((-63)1)", null, "");
                var v = ov.swizzle.yxyxy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "((5-4)-8)", "(-5-9)", "((-2-9)-4)");
                var v = ov.swizzle.yxyxz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((5-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)-6)", "-9", "0", "(-78)", "(52)");
                var v = ov.swizzle.yxyxw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((4-1)-6)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((4-1)-6)", v.w);
                Assert.AreEqual("(-78)", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "9", "-1", "((-4-1)7)", "((-4-1)7)");
                var v = ov.swizzle.yxyxv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(24)", v.w);
                Assert.AreEqual("((-4-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(21)", "-9", "((-14)2)", "((-14)2)");
                var v = ov.swizzle.yxyy;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("(21)", v.w);
            }
            {
                var ov = new gvec5<string>("2", null, "((-54)4)", "(-32)", "5");
                var v = ov.swizzle.yxyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "((-10)3)", "-6", "(-39)");
                var v = ov.swizzle.yxyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-8)6)", "-3", "((2-7)-2)", "((-2-8)6)", "-4");
                var v = ov.swizzle.yxyyz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-2-8)6)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((2-7)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-3)-3)", "(26)", "((-1-3)-3)", "((4-6)-9)", "(2-8)");
                var v = ov.swizzle.yxyyw;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("((-1-3)-3)", v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("(26)", v.w);
                Assert.AreEqual("((4-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-6-9)", "-4", null, "((-6-3)-7)");
                var v = ov.swizzle.yxyyv;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-6-9)", v.z);
                Assert.AreEqual("(-6-9)", v.w);
                Assert.AreEqual("((-6-3)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((3-7)2)", "(12)", "4", "(-90)");
                var v = ov.swizzle.yxyz;
                Assert.AreEqual("((3-7)2)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((3-7)2)", v.z);
                Assert.AreEqual("(12)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(3-7)", "(-79)", "(3-7)", "2");
                var v = ov.swizzle.yxyzx;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(-79)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "(-7-2)", "((7-9)-8)", "9", "");
                var v = ov.swizzle.yxyzy;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("(-7-2)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("((7-9)-8)", v.w);
                Assert.AreEqual("(-7-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "-1", "-1", "(76)", "(5-4)");
                var v = ov.swizzle.yxyzz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((9-3)-8)", "(-64)", null, "(56)", "5");
                var v = ov.swizzle.yxyzw;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("((9-3)-8)", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("(-50)", "(-4-2)", "1", "((-5-9)7)", "((-66)-8)");
                var v = ov.swizzle.yxyzv;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-66)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "4", "", "(-21)");
                var v = ov.swizzle.yxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-8)", "(6-9)", "((11)-1)", "(-3-8)", "(6-9)");
                var v = ov.swizzle.yxywx;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(6-9)", v.z);
                Assert.AreEqual("(-3-8)", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-4)-1)", "((-9-4)-1)", "(4-6)", "(1-1)");
                var v = ov.swizzle.yxywy;
                Assert.AreEqual("((-9-4)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-9-4)-1)", v.z);
                Assert.AreEqual("(4-6)", v.w);
                Assert.AreEqual("((-9-4)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "3", "-6", "(-46)", "-6");
                var v = ov.swizzle.yxywz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(-93)", "(6-3)", "(6-3)");
                var v = ov.swizzle.yxyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-6)", "((-6-1)-8)", "-7", "((-35)8)", null);
                var v = ov.swizzle.yxywv;
                Assert.AreEqual("((-6-1)-8)", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("((-6-1)-8)", v.z);
                Assert.AreEqual("((-35)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-22)", "((7-1)0)", "-2", "-2");
                var v = ov.swizzle.yxyv;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("4", "(-38)", "(20)", "1", "");
                var v = ov.swizzle.yxyvx;
                Assert.AreEqual("(-38)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", null, "(94)", "((5-6)-1)", "");
                var v = ov.swizzle.yxyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-19)", null, "-8", "((09)1)", "((09)1)");
                var v = ov.swizzle.yxyvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((09)1)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-9)7)", null, "((-4-9)7)", "5", "((6-2)-6)");
                var v = ov.swizzle.yxyvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-9)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((6-2)-6)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-1-6)3)", "", "(67)", "((-1-6)3)");
                var v = ov.swizzle.yxyvv;
                Assert.AreEqual("((-1-6)3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-1-6)3)", v.z);
                Assert.AreEqual("((-1-6)3)", v.w);
                Assert.AreEqual("((-1-6)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "((-36)-6)", "((4-4)5)", "(7-8)", "");
                var v = ov.swizzle.yxz;
                Assert.AreEqual("((-36)-6)", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("((4-4)5)", v.z);
            }
            {
                var ov = new gvec5<string>("((51)0)", "2", "", "2", "((51)0)");
                var v = ov.swizzle.yxzx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((51)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((51)0)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "((2-7)-8)", "(-35)", "9", null);
                var v = ov.swizzle.yxzxx;
                Assert.AreEqual("((2-7)-8)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", null, "8", "7");
                var v = ov.swizzle.yxzxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)-6)", "((-9-4)-6)", null, "8", "((-2-4)6)");
                var v = ov.swizzle.yxzxz;
                Assert.AreEqual("((-9-4)-6)", v.x);
                Assert.AreEqual("((-9-4)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-4)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-8-6)2)", "(22)", "((-51)6)", "-8");
                var v = ov.swizzle.yxzxw;
                Assert.AreEqual("((-8-6)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(22)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-51)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", null, "2", "");
                var v = ov.swizzle.yxzxv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)-2)", "(27)", "6", "((76)-6)", null);
                var v = ov.swizzle.yxzy;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("((1-7)-2)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(27)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "((5-9)-3)", "3", "(73)", "");
                var v = ov.swizzle.yxzyx;
                Assert.AreEqual("((5-9)-3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((5-9)-3)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((81)-1)", "-8", "1", "(42)", "((81)-1)");
                var v = ov.swizzle.yxzyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((81)-1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((98)-3)", "", "2");
                var v = ov.swizzle.yxzyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((98)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((98)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-6", "-3", "(-94)", "((4-2)9)");
                var v = ov.swizzle.yxzyw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-94)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "(-7-3)", "3", "3");
                var v = ov.swizzle.yxzyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-28)", null, "(5-2)", "(-5-8)");
                var v = ov.swizzle.yxzz;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(-67)", "(9-3)", null, "-2");
                var v = ov.swizzle.yxzzx;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((1-3)-7)", null, "(3-6)", "-5", "-7");
                var v = ov.swizzle.yxzzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((1-3)-7)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(9-7)", "((-79)-2)", "((-79)-2)", "(-8-1)", "((-79)-2)");
                var v = ov.swizzle.yxzzz;
                Assert.AreEqual("((-79)-2)", v.x);
                Assert.AreEqual("(9-7)", v.y);
                Assert.AreEqual("((-79)-2)", v.z);
                Assert.AreEqual("((-79)-2)", v.w);
                Assert.AreEqual("((-79)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "(-94)", "", "");
                var v = ov.swizzle.yxzzw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)-9)", "(32)", null, "1", "((-98)7)");
                var v = ov.swizzle.yxzzv;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("((8-1)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-98)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", null, "((-7-2)7)", null);
                var v = ov.swizzle.yxzw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-2)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-2)", "(-72)", "2", "(5-7)", "");
                var v = ov.swizzle.yxzwx;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-6)", "(-97)", "-1", "-9", "5");
                var v = ov.swizzle.yxzwy;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "(-3-9)", "", "", null);
                var v = ov.swizzle.yxzwz;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "(19)", "((14)-4)", "5");
                var v = ov.swizzle.yxzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("((14)-4)", v.w);
                Assert.AreEqual("((14)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "((-2-2)-8)", "((-9-4)9)", "((-2-2)-8)");
                var v = ov.swizzle.yxzwv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-2)-8)", v.z);
                Assert.AreEqual("((-9-4)9)", v.w);
                Assert.AreEqual("((-2-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-1)5)", "-2", "", null, "0");
                var v = ov.swizzle.yxzv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-3-1)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "((0-9)8)", "8", "(-3-5)", "((0-9)8)");
                var v = ov.swizzle.yxzvx;
                Assert.AreEqual("((0-9)8)", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((0-9)8)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", null, "-6", "0");
                var v = ov.swizzle.yxzvy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "1", "(09)", "", "-1");
                var v = ov.swizzle.yxzvz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("(33)", "8", null, "8", "8");
                var v = ov.swizzle.yxzvw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(33)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((6-3)-4)", "", "8", "((-9-6)0)", "(-6-7)");
                var v = ov.swizzle.yxzvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-3)-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)3)", "(5-5)", "((02)9)", "(5-5)", "(4-9)");
                var v = ov.swizzle.yxw;
                Assert.AreEqual("(5-5)", v.x);
                Assert.AreEqual("((97)3)", v.y);
                Assert.AreEqual("(5-5)", v.z);
            }
            {
                var ov = new gvec5<string>("((19)-5)", "", "(-69)", "", "(8-9)");
                var v = ov.swizzle.yxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((19)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((19)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((53)7)", "-5", "((53)7)", "(02)", "(-6-2)");
                var v = ov.swizzle.yxwxx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((53)7)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("((53)7)", v.w);
                Assert.AreEqual("((53)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "(1-6)", "-6", "-3", "((-42)6)");
                var v = ov.swizzle.yxwxy;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-39)6)", "((-39)6)", "(-87)", null);
                var v = ov.swizzle.yxwxz;
                Assert.AreEqual("((-39)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-39)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", null, "", "-3");
                var v = ov.swizzle.yxwxw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "", "2", "-7", "");
                var v = ov.swizzle.yxwxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-40)5)", "(-30)", "-4", "((3-8)6)", "");
                var v = ov.swizzle.yxwy;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("((-40)5)", v.y);
                Assert.AreEqual("((3-8)6)", v.z);
                Assert.AreEqual("(-30)", v.w);
            }
            {
                var ov = new gvec5<string>("((5-9)-9)", "9", "9", "(10)", "8");
                var v = ov.swizzle.yxwyx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((5-9)-9)", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((5-9)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((58)-8)", "-1", "(47)", "", "((4-4)0)");
                var v = ov.swizzle.yxwyy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((58)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((8-9)0)", "5", null, "3");
                var v = ov.swizzle.yxwyz;
                Assert.AreEqual("((8-9)0)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-9)0)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(6-7)", "5", "", null);
                var v = ov.swizzle.yxwyw;
                Assert.AreEqual("(6-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-4)9)", "-6", "(3-6)", "((-2-8)5)", "-6");
                var v = ov.swizzle.yxwyv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((8-4)9)", v.y);
                Assert.AreEqual("((-2-8)5)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((3-8)8)", "(-1-7)", "-5", "((3-8)8)");
                var v = ov.swizzle.yxwz;
                Assert.AreEqual("((3-8)8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-1-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-3-5)", "((2-2)-5)", "(-95)", "((2-2)-5)");
                var v = ov.swizzle.yxwzx;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("((2-2)-5)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-73)7)", "(01)", "(-89)", "(-89)");
                var v = ov.swizzle.yxwzy;
                Assert.AreEqual("((-73)7)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("((-73)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "-7", "(0-6)", "((3-1)-7)", "(40)");
                var v = ov.swizzle.yxwzz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("((3-1)-7)", v.z);
                Assert.AreEqual("(0-6)", v.w);
                Assert.AreEqual("(0-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(37)", "-4", "(-96)", "((-14)-6)", "-7");
                var v = ov.swizzle.yxwzw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("((-14)-6)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("((-14)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "7", "(7-3)", "((-86)-6)", "-3");
                var v = ov.swizzle.yxwzv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("((-86)-6)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-29)0)", "(59)", "((-73)-9)", "4", "");
                var v = ov.swizzle.yxww;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("((-29)0)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("((-97)1)", "((-97)1)", "-1", "-2", "(97)");
                var v = ov.swizzle.yxwwx;
                Assert.AreEqual("((-97)1)", v.x);
                Assert.AreEqual("((-97)1)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-97)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)0)", "((-42)0)", "(65)", "1", "");
                var v = ov.swizzle.yxwwy;
                Assert.AreEqual("((-42)0)", v.x);
                Assert.AreEqual("((-42)0)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-42)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", null, null, "((16)-2)", "(6-5)");
                var v = ov.swizzle.yxwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("((16)-2)", v.z);
                Assert.AreEqual("((16)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-8", "-6", "8", "");
                var v = ov.swizzle.yxwww;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-8", "-9", "(21)", "-9");
                var v = ov.swizzle.yxwwv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("(21)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)2)", "", "((4-8)2)", "(51)", null);
                var v = ov.swizzle.yxwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-8)2)", v.y);
                Assert.AreEqual("(51)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((82)8)", "8", null, null, null);
                var v = ov.swizzle.yxwvx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((82)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((82)8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(92)", "((-91)-3)", "((-99)-2)", "(-68)");
                var v = ov.swizzle.yxwvy;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-99)-2)", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("(92)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-1)5)", "((-6-1)5)", "-8", "(34)", "(-3-8)");
                var v = ov.swizzle.yxwvz;
                Assert.AreEqual("((-6-1)5)", v.x);
                Assert.AreEqual("((-6-1)5)", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("(-3-8)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "", "5", "((93)-1)", "(4-4)");
                var v = ov.swizzle.yxwvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual("((93)-1)", v.z);
                Assert.AreEqual("(4-4)", v.w);
                Assert.AreEqual("((93)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)7)", "((-6-9)4)", "(-71)", "((7-3)-9)", "(-96)");
                var v = ov.swizzle.yxwvv;
                Assert.AreEqual("((-6-9)4)", v.x);
                Assert.AreEqual("((-41)7)", v.y);
                Assert.AreEqual("((7-3)-9)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)7)", "", "4", "(-3-5)", "-9");
                var v = ov.swizzle.yxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-9)7)", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec5<string>("-4", "(-2-5)", "", "", "5");
                var v = ov.swizzle.yxvx;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(-1-6)", "(66)", "4", "");
                var v = ov.swizzle.yxvxx;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-8)", "(-7-8)", "7", "");
                var v = ov.swizzle.yxvxy;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)-5)", "((6-8)6)", "((6-8)6)", null, "6");
                var v = ov.swizzle.yxvxz;
                Assert.AreEqual("((6-8)6)", v.x);
                Assert.AreEqual("((6-8)-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((6-8)-5)", v.w);
                Assert.AreEqual("((6-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "-6", "((87)7)", "");
                var v = ov.swizzle.yxvxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((87)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)-6)", "((4-4)-6)", "((-83)-5)", "9", "((86)-1)");
                var v = ov.swizzle.yxvxv;
                Assert.AreEqual("((4-4)-6)", v.x);
                Assert.AreEqual("((4-4)-6)", v.y);
                Assert.AreEqual("((86)-1)", v.z);
                Assert.AreEqual("((4-4)-6)", v.w);
                Assert.AreEqual("((86)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-50)-2)", "7", "(01)", "(8-8)");
                var v = ov.swizzle.yxvy;
                Assert.AreEqual("((-50)-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(8-8)", v.z);
                Assert.AreEqual("((-50)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "8", "(2-5)", "((-6-7)-5)", "-6");
                var v = ov.swizzle.yxvyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((12)-5)", "-3", "(-63)", "(5-6)");
                var v = ov.swizzle.yxvyy;
                Assert.AreEqual("((12)-5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual("((12)-5)", v.w);
                Assert.AreEqual("((12)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)0)", null, "9", "(35)", "9");
                var v = ov.swizzle.yxvyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-5)0)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(7-2)", null, "(-4-5)");
                var v = ov.swizzle.yxvyw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-61)", "8", "2", "2");
                var v = ov.swizzle.yxvyv;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-61)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "6", "1", "((1-3)6)", "(-5-2)");
                var v = ov.swizzle.yxvz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-4-3)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("8", null, "((-45)6)", "(-9-6)", "(-7-4)");
                var v = ov.swizzle.yxvzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("((-45)6)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((98)0)", "(-93)", "4", "((98)0)", "4");
                var v = ov.swizzle.yxvzy;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("((98)0)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "((-19)-3)", "(43)");
                var v = ov.swizzle.yxvzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "(-9-1)", "((00)-6)", "-2");
                var v = ov.swizzle.yxvzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual("((00)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-4)", "((-46)7)", "((-50)5)", "((-64)-9)", "((-64)-9)");
                var v = ov.swizzle.yxvzv;
                Assert.AreEqual("((-46)7)", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("((-64)-9)", v.z);
                Assert.AreEqual("((-50)5)", v.w);
                Assert.AreEqual("((-64)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-21)", null, "-7", "-7");
                var v = ov.swizzle.yxvw;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "4", "((-53)-5)", "0", "");
                var v = ov.swizzle.yxvwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-7)", "((5-5)5)", "((-27)8)", "");
                var v = ov.swizzle.yxvwy;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-27)8)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "-5", "-2", "(11)", "((15)1)");
                var v = ov.swizzle.yxvwz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-12)", v.y);
                Assert.AreEqual("((15)1)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "((-88)8)", "(66)", "2");
                var v = ov.swizzle.yxvww;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("((-68)-5)", "", "5", "-3", "(-33)");
                var v = ov.swizzle.yxvwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-68)-5)", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)0)", "((-8-1)0)", null, "-9", "-4");
                var v = ov.swizzle.yxvv;
                Assert.AreEqual("((-8-1)0)", v.x);
                Assert.AreEqual("((-8-1)0)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(12)", "(39)", "((75)-3)", "(12)", "(39)");
                var v = ov.swizzle.yxvvx;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "9", "(-19)", "((-46)6)");
                var v = ov.swizzle.yxvvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-46)6)", v.z);
                Assert.AreEqual("((-46)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)0)", "2", null, "-7", "(-2-2)");
                var v = ov.swizzle.yxvvz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((9-2)0)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((1-5)-4)", "(-8-4)", "3", "");
                var v = ov.swizzle.yxvvw;
                Assert.AreEqual("((1-5)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "(-42)", null, "", "(-42)");
                var v = ov.swizzle.yxvvv;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "((-8-5)-7)", "((0-4)0)", null, "0");
                var v = ov.swizzle.yy;
                Assert.AreEqual("((-8-5)-7)", v.x);
                Assert.AreEqual("((-8-5)-7)", v.y);
            }
            {
                var ov = new gvec5<string>("((1-6)9)", "-9", "0", "((1-6)9)", "(02)");
                var v = ov.swizzle.yyx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((1-6)9)", v.z);
            }
            {
                var ov = new gvec5<string>("(6-7)", "((-9-2)-6)", "", "-5", "");
                var v = ov.swizzle.yyxx;
                Assert.AreEqual("((-9-2)-6)", v.x);
                Assert.AreEqual("((-9-2)-6)", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("(6-7)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-9-2)", "8", "(-9-2)", "8");
                var v = ov.swizzle.yyxxx;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((9-6)6)", "((9-6)6)", null, "");
                var v = ov.swizzle.yyxxy;
                Assert.AreEqual("((9-6)6)", v.x);
                Assert.AreEqual("((9-6)6)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((9-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-5-4)", "-8", "-8", "-8");
                var v = ov.swizzle.yyxxz;
                Assert.AreEqual("(-5-4)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-3)-1)", "(7-2)", "(7-2)", "((-2-3)-1)", null);
                var v = ov.swizzle.yyxxw;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("((-2-3)-1)", v.z);
                Assert.AreEqual("((-2-3)-1)", v.w);
                Assert.AreEqual("((-2-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-4)2)", "((52)8)", "((52)8)", "((52)8)", "1");
                var v = ov.swizzle.yyxxv;
                Assert.AreEqual("((52)8)", v.x);
                Assert.AreEqual("((52)8)", v.y);
                Assert.AreEqual("((7-4)2)", v.z);
                Assert.AreEqual("((7-4)2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-2)2)", null, "0", null, "1");
                var v = ov.swizzle.yyxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-6-2)2)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("4", "-2", "4", "", "-2");
                var v = ov.swizzle.yyxyx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(60)", "3", "3", "-9", "7");
                var v = ov.swizzle.yyxyy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((17)4)", "(99)", null, "((23)-2)", "((17)4)");
                var v = ov.swizzle.yyxyz;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("((17)4)", v.z);
                Assert.AreEqual("(99)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-11)0)", "((-8-8)-7)", null, null);
                var v = ov.swizzle.yyxyw;
                Assert.AreEqual("((-11)0)", v.x);
                Assert.AreEqual("((-11)0)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-11)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "8", "((-8-5)-7)", null, "-8");
                var v = ov.swizzle.yyxyv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((24)4)", "((8-4)3)", "((24)4)", "-4", "9");
                var v = ov.swizzle.yyxz;
                Assert.AreEqual("((8-4)3)", v.x);
                Assert.AreEqual("((8-4)3)", v.y);
                Assert.AreEqual("((24)4)", v.z);
                Assert.AreEqual("((24)4)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", null, "((-9-9)-9)", "(96)", "");
                var v = ov.swizzle.yyxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-9-9)-9)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)-7)", "((-69)5)", "(-54)", "-1", "((-69)5)");
                var v = ov.swizzle.yyxzy;
                Assert.AreEqual("((-69)5)", v.x);
                Assert.AreEqual("((-69)5)", v.y);
                Assert.AreEqual("((-1-4)-7)", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("((-69)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((13)-5)", "((1-1)-9)", "((74)-2)", "(-43)");
                var v = ov.swizzle.yyxzz;
                Assert.AreEqual("((13)-5)", v.x);
                Assert.AreEqual("((13)-5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((1-1)-9)", v.w);
                Assert.AreEqual("((1-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", null, "((39)3)", "((56)-9)", "4");
                var v = ov.swizzle.yyxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("((39)3)", v.w);
                Assert.AreEqual("((56)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((8-4)-5)", "-7", "(-4-6)", "-7");
                var v = ov.swizzle.yyxzv;
                Assert.AreEqual("((8-4)-5)", v.x);
                Assert.AreEqual("((8-4)-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(20)", "(-68)", "((-59)-7)", "(20)");
                var v = ov.swizzle.yyxw;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-59)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "(4-5)", "(8-1)", "(-35)", "5");
                var v = ov.swizzle.yyxwx;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-35)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-75)-1)", "7", "((-46)-7)", "((-75)-1)", "((3-5)-4)");
                var v = ov.swizzle.yyxwy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-75)-1)", v.z);
                Assert.AreEqual("((-75)-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(1-2)", "", "1", "((5-4)1)");
                var v = ov.swizzle.yyxwz;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "(3-4)", "(07)", "((43)-4)");
                var v = ov.swizzle.yyxww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(07)", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-7-5)1)", "", "(-19)", "9");
                var v = ov.swizzle.yyxwv;
                Assert.AreEqual("((-7-5)1)", v.x);
                Assert.AreEqual("((-7-5)1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("7", null, "((48)5)", "((7-5)4)", null);
                var v = ov.swizzle.yyxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "-1", "((-77)-8)", "", "((40)-3)");
                var v = ov.swizzle.yyxvx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((40)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(8-1)", "-1", "-2");
                var v = ov.swizzle.yyxvy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-60)", null, "-5", null, "-6");
                var v = ov.swizzle.yyxvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(59)", "(-32)", "(59)", "(57)");
                var v = ov.swizzle.yyxvw;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(57)", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "", "", "-8", "-8");
                var v = ov.swizzle.yyxvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "-7", "((-1-8)-4)", "((-1-8)-4)");
                var v = ov.swizzle.yyy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
            }
            {
                var ov = new gvec5<string>("-7", "(-49)", null, "((5-2)0)", "-9");
                var v = ov.swizzle.yyyx;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "(3-5)", "-8", "(-91)");
                var v = ov.swizzle.yyyxx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "(4-2)", "(7-2)", "0");
                var v = ov.swizzle.yyyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)6)", "((9-2)6)", "5", "((9-2)6)", "((77)-9)");
                var v = ov.swizzle.yyyxz;
                Assert.AreEqual("((9-2)6)", v.x);
                Assert.AreEqual("((9-2)6)", v.y);
                Assert.AreEqual("((9-2)6)", v.z);
                Assert.AreEqual("((9-2)6)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(45)", "(-2-9)", "-3", "-9", "(-5-3)");
                var v = ov.swizzle.yyyxw;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(08)", "(-8-8)", "-9", "-3", "((4-4)0)");
                var v = ov.swizzle.yyyxv;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((4-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-9", "-9", "((5-2)7)", "(9-4)");
                var v = ov.swizzle.yyyy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("((1-2)-1)", null, null, "((0-1)-4)", "3");
                var v = ov.swizzle.yyyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((1-2)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((1-4)8)", "-1", null, "0");
                var v = ov.swizzle.yyyyy;
                Assert.AreEqual("((1-4)8)", v.x);
                Assert.AreEqual("((1-4)8)", v.y);
                Assert.AreEqual("((1-4)8)", v.z);
                Assert.AreEqual("((1-4)8)", v.w);
                Assert.AreEqual("((1-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "6", "(-26)", "((5-2)1)", "(6-6)");
                var v = ov.swizzle.yyyyz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-26)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((8-2)-6)", "", "(4-9)", "-1");
                var v = ov.swizzle.yyyyw;
                Assert.AreEqual("((8-2)-6)", v.x);
                Assert.AreEqual("((8-2)-6)", v.y);
                Assert.AreEqual("((8-2)-6)", v.z);
                Assert.AreEqual("((8-2)-6)", v.w);
                Assert.AreEqual("(4-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "3", "", "");
                var v = ov.swizzle.yyyyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(98)", "(-54)", "3", "((34)-9)");
                var v = ov.swizzle.yyyz;
                Assert.AreEqual("(98)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("(-54)", v.w);
            }
            {
                var ov = new gvec5<string>("(-21)", "(-21)", "((-7-7)8)", "((-44)8)", null);
                var v = ov.swizzle.yyyzx;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("((-7-7)8)", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "((0-8)0)", "-6", "");
                var v = ov.swizzle.yyyzy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((0-8)0)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", null, "", "(-7-5)", "(34)");
                var v = ov.swizzle.yyyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-4-2)", "(-4-2)", null, "-6");
                var v = ov.swizzle.yyyzw;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((3-1)-4)", "4", "((-2-8)7)", "(41)");
                var v = ov.swizzle.yyyzv;
                Assert.AreEqual("((3-1)-4)", v.x);
                Assert.AreEqual("((3-1)-4)", v.y);
                Assert.AreEqual("((3-1)-4)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-6)", "((-57)6)", "(0-4)", "(80)", "(9-6)");
                var v = ov.swizzle.yyyw;
                Assert.AreEqual("((-57)6)", v.x);
                Assert.AreEqual("((-57)6)", v.y);
                Assert.AreEqual("((-57)6)", v.z);
                Assert.AreEqual("(80)", v.w);
            }
            {
                var ov = new gvec5<string>("(-39)", "-2", "(-39)", "-3", null);
                var v = ov.swizzle.yyywx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-39)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(4-2)", "-4", "(4-2)", null);
                var v = ov.swizzle.yyywy;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("(4-2)", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("(4-2)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "6", "1", "1");
                var v = ov.swizzle.yyywz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "(-9-3)", "8", "-9");
                var v = ov.swizzle.yyyww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((3-5)4)", null, "", "((3-5)4)", "((3-5)4)");
                var v = ov.swizzle.yyywv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-5)4)", v.w);
                Assert.AreEqual("((3-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-2)-8)", "((-5-4)9)", "((-5-4)9)", "1", "((-14)4)");
                var v = ov.swizzle.yyyv;
                Assert.AreEqual("((-5-4)9)", v.x);
                Assert.AreEqual("((-5-4)9)", v.y);
                Assert.AreEqual("((-5-4)9)", v.z);
                Assert.AreEqual("((-14)4)", v.w);
            }
            {
                var ov = new gvec5<string>("(9-1)", "(9-2)", "((8-1)-1)", null, "7");
                var v = ov.swizzle.yyyvx;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-2)", "6", "(-1-2)", "((-6-5)-1)");
                var v = ov.swizzle.yyyvy;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("((-6-5)-1)", v.w);
                Assert.AreEqual("(-1-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((17)7)", "((17)7)", "-6", "(-60)", "((17)7)");
                var v = ov.swizzle.yyyvz;
                Assert.AreEqual("((17)7)", v.x);
                Assert.AreEqual("((17)7)", v.y);
                Assert.AreEqual("((17)7)", v.z);
                Assert.AreEqual("((17)7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "4", "", "(87)");
                var v = ov.swizzle.yyyvw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)6)", "4", null, "-7", "-9");
                var v = ov.swizzle.yyyvv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-3)", "5", "5", "((3-4)-6)");
                var v = ov.swizzle.yyz;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("(61)", "-6", "-6", "((8-8)7)", "((8-8)7)");
                var v = ov.swizzle.yyzx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(61)", v.w);
            }
            {
                var ov = new gvec5<string>("(-21)", "((9-2)9)", "((18)2)", "1", null);
                var v = ov.swizzle.yyzxx;
                Assert.AreEqual("((9-2)9)", v.x);
                Assert.AreEqual("((9-2)9)", v.y);
                Assert.AreEqual("((18)2)", v.z);
                Assert.AreEqual("(-21)", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("(03)", "((-10)-3)", "(03)", "((75)1)", "(73)");
                var v = ov.swizzle.yyzxy;
                Assert.AreEqual("((-10)-3)", v.x);
                Assert.AreEqual("((-10)-3)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("(03)", v.w);
                Assert.AreEqual("((-10)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "4", "(-1-6)", "2", "(-5-9)");
                var v = ov.swizzle.yyzxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-73)1)", "", "(95)", "((43)-5)");
                var v = ov.swizzle.yyzxw;
                Assert.AreEqual("((-73)1)", v.x);
                Assert.AreEqual("((-73)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(95)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-9)-1)", "-8", "(-39)", null, "((15)-9)");
                var v = ov.swizzle.yyzxv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-39)", v.z);
                Assert.AreEqual("((-8-9)-1)", v.w);
                Assert.AreEqual("((15)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((61)9)", "", "-8", "((24)0)");
                var v = ov.swizzle.yyzy;
                Assert.AreEqual("((61)9)", v.x);
                Assert.AreEqual("((61)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((61)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-2)2)", "(-37)", "-1", "(-37)", "((-8-2)0)");
                var v = ov.swizzle.yyzyx;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("((-4-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((51)3)", "((51)3)", "(65)", "(73)", "(65)");
                var v = ov.swizzle.yyzyy;
                Assert.AreEqual("((51)3)", v.x);
                Assert.AreEqual("((51)3)", v.y);
                Assert.AreEqual("(65)", v.z);
                Assert.AreEqual("((51)3)", v.w);
                Assert.AreEqual("((51)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-5)", "(-2-9)", "6", "((18)0)", "(-2-9)");
                var v = ov.swizzle.yyzyz;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-48)", "-1", "((90)-2)", "((-6-7)9)");
                var v = ov.swizzle.yyzyw;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-48)", v.w);
                Assert.AreEqual("((90)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(0-7)", "(0-7)", "1");
                var v = ov.swizzle.yyzyv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((45)0)", "(7-5)", "((3-5)-1)", "-4", "((45)0)");
                var v = ov.swizzle.yyzz;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("((3-5)-1)", v.z);
                Assert.AreEqual("((3-5)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(27)", "", "(-5-7)", "(-5-7)", "4");
                var v = ov.swizzle.yyzzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(6-7)", "-4", "-3", "8");
                var v = ov.swizzle.yyzzy;
                Assert.AreEqual("(6-7)", v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-3)", "(-2-9)", "9", "(6-3)", "((24)2)");
                var v = ov.swizzle.yyzzz;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-7-9)4)", "0", "0");
                var v = ov.swizzle.yyzzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-7-9)4)", v.z);
                Assert.AreEqual("((-7-9)4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((02)7)", "((02)7)", "(7-6)", "9");
                var v = ov.swizzle.yyzzv;
                Assert.AreEqual("((02)7)", v.x);
                Assert.AreEqual("((02)7)", v.y);
                Assert.AreEqual("((02)7)", v.z);
                Assert.AreEqual("((02)7)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "(-17)", "4", "");
                var v = ov.swizzle.yyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-9)-2)", "((-8-2)8)", null, "4", "(4-6)");
                var v = ov.swizzle.yyzwx;
                Assert.AreEqual("((-8-2)8)", v.x);
                Assert.AreEqual("((-8-2)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-6-9)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "((2-8)1)", "", "3", "(-7-8)");
                var v = ov.swizzle.yyzwy;
                Assert.AreEqual("((2-8)1)", v.x);
                Assert.AreEqual("((2-8)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((2-8)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-60)9)", "-8", "-8", "((-6-8)-2)", "((-60)9)");
                var v = ov.swizzle.yyzwz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-6-8)-2)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((59)-8)", "((59)-8)", "-2", "", null);
                var v = ov.swizzle.yyzww;
                Assert.AreEqual("((59)-8)", v.x);
                Assert.AreEqual("((59)-8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(9-1)", "(51)", "((-2-4)-8)", "((7-7)-3)", "(9-1)");
                var v = ov.swizzle.yyzwv;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("((-2-4)-8)", v.z);
                Assert.AreEqual("((7-7)-3)", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "-5", "", "((-78)-1)");
                var v = ov.swizzle.yyzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-78)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(-15)", "(-8-9)", "((-2-2)-4)", "((0-5)0)", "(-8-9)");
                var v = ov.swizzle.yyzvx;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("((-2-2)-4)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-8)", "", "((95)-1)", "((6-4)9)", "(8-8)");
                var v = ov.swizzle.yyzvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((95)-1)", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-85)", "3", "2", "((-1-8)1)", "((-8-4)0)");
                var v = ov.swizzle.yyzvz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-8-4)0)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-6", "((-15)-5)", "((-15)-5)", null);
                var v = ov.swizzle.yyzvw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-15)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-15)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "-2", "-2", "7");
                var v = ov.swizzle.yyzvv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "3", "3", "(94)", "3");
                var v = ov.swizzle.yyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(94)", v.z);
            }
            {
                var ov = new gvec5<string>("((-18)7)", "3", "6", "(-57)", "(-57)");
                var v = ov.swizzle.yywx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-57)", v.z);
                Assert.AreEqual("((-18)7)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", null, "1", "", "1");
                var v = ov.swizzle.yywxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("6", "1", "(-68)", "1", "(3-1)");
                var v = ov.swizzle.yywxy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((72)-8)", "((3-2)-4)", "((3-2)-4)", "((3-2)-4)");
                var v = ov.swizzle.yywxz;
                Assert.AreEqual("((72)-8)", v.x);
                Assert.AreEqual("((72)-8)", v.y);
                Assert.AreEqual("((3-2)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-2)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "-1", "((-9-1)5)", "-1", "-7");
                var v = ov.swizzle.yywxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-8-1)-4)", null, null, "(6-4)");
                var v = ov.swizzle.yywxv;
                Assert.AreEqual("((-8-1)-4)", v.x);
                Assert.AreEqual("((-8-1)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "3", "", "((-3-7)8)");
                var v = ov.swizzle.yywy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-2", "(37)", "-6", "((9-9)-3)");
                var v = ov.swizzle.yywyx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "", "-2", "", null);
                var v = ov.swizzle.yywyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "(79)", "((-29)-6)", "((07)4)", "");
                var v = ov.swizzle.yywyz;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("((07)4)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("((-29)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-71)2)", "(08)", "5", "((1-4)9)", "((8-4)-3)");
                var v = ov.swizzle.yywyw;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("((1-4)9)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((1-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "((63)-8)", "(9-3)", "(-67)");
                var v = ov.swizzle.yywyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec5<string>("(77)", "(-9-4)", "4", null, "(7-5)");
                var v = ov.swizzle.yywz;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("7", "(9-5)", "((10)3)", "(-85)", null);
                var v = ov.swizzle.yywzx;
                Assert.AreEqual("(9-5)", v.x);
                Assert.AreEqual("(9-5)", v.y);
                Assert.AreEqual("(-85)", v.z);
                Assert.AreEqual("((10)3)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-3)", "((43)2)", "(-16)", "((-57)-7)", "((-71)-7)");
                var v = ov.swizzle.yywzy;
                Assert.AreEqual("((43)2)", v.x);
                Assert.AreEqual("((43)2)", v.y);
                Assert.AreEqual("((-57)-7)", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("((43)2)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "-6", "(69)", "(17)", "(4-8)");
                var v = ov.swizzle.yywzz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(69)", v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)5)", "", "(-22)", "(-1-3)", "(-22)");
                var v = ov.swizzle.yywzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-3)", v.z);
                Assert.AreEqual("(-22)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((18)-8)", "-1", "((18)-8)", "(-94)", null);
                var v = ov.swizzle.yywzv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("((18)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "", "-6", "-6", "");
                var v = ov.swizzle.yyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("((24)-3)", "((52)-7)", "-1", "-9", "(01)");
                var v = ov.swizzle.yywwx;
                Assert.AreEqual("((52)-7)", v.x);
                Assert.AreEqual("((52)-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((24)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "((09)4)", "", null);
                var v = ov.swizzle.yywwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", null, "-5", "((96)-5)", null);
                var v = ov.swizzle.yywwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((96)-5)", v.z);
                Assert.AreEqual("((96)-5)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(7-8)", "(43)", "(43)", "(7-8)", "4");
                var v = ov.swizzle.yywww;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "(3-6)", "((-13)7)", "((-26)2)", "-1");
                var v = ov.swizzle.yywwv;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("((-26)2)", v.z);
                Assert.AreEqual("((-26)2)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(4-6)", "((-9-1)9)", "7", "((-9-1)9)", "3");
                var v = ov.swizzle.yywv;
                Assert.AreEqual("((-9-1)9)", v.x);
                Assert.AreEqual("((-9-1)9)", v.y);
                Assert.AreEqual("((-9-1)9)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(02)", "-6", "(-1-1)", "((-9-2)7)");
                var v = ov.swizzle.yywvx;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("((-9-2)7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)-6)", "(8-9)", "", "(0-2)", "((-79)-6)");
                var v = ov.swizzle.yywvy;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((-79)-6)", v.w);
                Assert.AreEqual("(8-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "((8-1)4)", "6", "(-6-8)", null);
                var v = ov.swizzle.yywvz;
                Assert.AreEqual("((8-1)4)", v.x);
                Assert.AreEqual("((8-1)4)", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((38)-3)", "((38)-3)", "-9", "(-61)", "-4");
                var v = ov.swizzle.yywvw;
                Assert.AreEqual("((38)-3)", v.x);
                Assert.AreEqual("((38)-3)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "-8", null, "-8");
                var v = ov.swizzle.yywvv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("7", null, "(-4-7)", "-1", "7");
                var v = ov.swizzle.yyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((74)-7)", "(-7-8)", "8", "9", "((1-8)4)");
                var v = ov.swizzle.yyvx;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("((1-8)4)", v.z);
                Assert.AreEqual("((74)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((-38)8)", "", "(4-8)", "-2", "((6-9)8)");
                var v = ov.swizzle.yyvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-9)8)", v.z);
                Assert.AreEqual("((-38)8)", v.w);
                Assert.AreEqual("((-38)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((9-3)7)", null, "((9-3)7)", "(55)");
                var v = ov.swizzle.yyvxy;
                Assert.AreEqual("((9-3)7)", v.x);
                Assert.AreEqual("((9-3)7)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-3)7)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((4-1)-8)", "", "-7");
                var v = ov.swizzle.yyvxz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((4-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-2-8)", "-4", null, "(-2-8)");
                var v = ov.swizzle.yyvxw;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("(-2-8)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "4", "4", "", "-6");
                var v = ov.swizzle.yyvxv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(30)", null, "((08)-4)", "1", "(1-7)");
                var v = ov.swizzle.yyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "0", "-9", "(-93)");
                var v = ov.swizzle.yyvyx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, null, "-2", "((-32)9)");
                var v = ov.swizzle.yyvyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-32)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-3)4)", null, "", "((53)-5)", "3");
                var v = ov.swizzle.yyvyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-7)", "(75)", "(1-5)", "((54)6)", "4");
                var v = ov.swizzle.yyvyw;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual("((54)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-17)", "(-13)", "((8-3)1)", "((8-3)1)");
                var v = ov.swizzle.yyvyv;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("((8-3)1)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("((8-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "-1", null, "5", "-1");
                var v = ov.swizzle.yyvz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "(-27)", "(0-7)", "(-27)", "4");
                var v = ov.swizzle.yyvzx;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(0-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)-7)", "-9", "((01)7)", "", "");
                var v = ov.swizzle.yyvzy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((01)7)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((34)7)", "(63)", "-3", "-8", "");
                var v = ov.swizzle.yyvzz;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(8-4)", null, "-4", "3");
                var v = ov.swizzle.yyvzw;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "8", "(5-4)", "(5-4)", "(91)");
                var v = ov.swizzle.yyvzv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((73)-1)", "(-7-9)", "((73)-1)", "7");
                var v = ov.swizzle.yyvw;
                Assert.AreEqual("((73)-1)", v.x);
                Assert.AreEqual("((73)-1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((73)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(8-3)", "", "((-24)-2)", "7", null);
                var v = ov.swizzle.yyvwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "((-99)6)", "5", "5");
                var v = ov.swizzle.yyvwy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "((-7-3)-6)", "(8-5)", "");
                var v = ov.swizzle.yyvwz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("((-7-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)-3)", "((-1-5)5)", "-4", null, "(38)");
                var v = ov.swizzle.yyvww;
                Assert.AreEqual("((-1-5)5)", v.x);
                Assert.AreEqual("((-1-5)5)", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(95)", "4", "((-54)7)", "((-54)7)", "-1");
                var v = ov.swizzle.yyvwv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-54)7)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-7)3)", "(01)", "((-11)-7)", "1", null);
                var v = ov.swizzle.yyvv;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(94)", "((-1-4)-1)", "2", "((-1-4)-1)", "3");
                var v = ov.swizzle.yyvvx;
                Assert.AreEqual("((-1-4)-1)", v.x);
                Assert.AreEqual("((-1-4)-1)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-51)", "((-9-9)-8)", "(-51)", "(70)");
                var v = ov.swizzle.yyvvy;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-23)", "(2-2)", "((09)-4)", "");
                var v = ov.swizzle.yyvvz;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "((5-7)3)", "((5-7)3)", "-8", "((5-7)3)");
                var v = ov.swizzle.yyvvw;
                Assert.AreEqual("((5-7)3)", v.x);
                Assert.AreEqual("((5-7)3)", v.y);
                Assert.AreEqual("((5-7)3)", v.z);
                Assert.AreEqual("((5-7)3)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((46)-6)", null, "(95)", "");
                var v = ov.swizzle.yyvvv;
                Assert.AreEqual("((46)-6)", v.x);
                Assert.AreEqual("((46)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((18)-1)", "(-9-5)", "-5", null, "-1");
                var v = ov.swizzle.yz;
                Assert.AreEqual("(-9-5)", v.x);
                Assert.AreEqual("-5", v.y);
            }
            {
                var ov = new gvec5<string>("-6", "(-18)", "", "5", "(-2-3)");
                var v = ov.swizzle.yzx;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
            }
            {
                var ov = new gvec5<string>("", "(0-7)", "((-5-1)4)", "((-6-6)8)", "");
                var v = ov.swizzle.yzxx;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("((-5-1)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-9)-6)", "8", "8", "8", "(20)");
                var v = ov.swizzle.yzxxx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-7-9)-6)", v.z);
                Assert.AreEqual("((-7-9)-6)", v.w);
                Assert.AreEqual("((-7-9)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(6-1)", "((2-8)-7)", "(-93)", "(6-1)");
                var v = ov.swizzle.yzxxy;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("((2-8)-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(41)", "", "((-12)-5)", "((-12)-5)", "(36)");
                var v = ov.swizzle.yzxxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-12)-5)", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual("(41)", v.w);
                Assert.AreEqual("((-12)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((10)7)", "9", "(-77)", null);
                var v = ov.swizzle.yzxxw;
                Assert.AreEqual("((10)7)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-3)-4)", "(-29)", "6", "", "");
                var v = ov.swizzle.yzxxv;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((3-3)-4)", v.z);
                Assert.AreEqual("((3-3)-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-52)", "(-52)", "-9", "1", "((-59)1)");
                var v = ov.swizzle.yzxy;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("(-52)", v.w);
            }
            {
                var ov = new gvec5<string>("((-48)-5)", "-6", "((-1-6)-6)", "-6", "(4-6)");
                var v = ov.swizzle.yzxyx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-1-6)-6)", v.y);
                Assert.AreEqual("((-48)-5)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-48)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "8", "(-9-9)", "((4-2)6)", "((30)5)");
                var v = ov.swizzle.yzxyy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)4)", "-6", "(-1-8)", "-6", "8");
                var v = ov.swizzle.yzxyz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("((0-3)4)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-5)2)", "(38)", "(-2-6)", "-5", "((55)6)");
                var v = ov.swizzle.yzxyw;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("((-6-5)2)", v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((8-9)5)", "((8-9)5)", "", "(-1-1)");
                var v = ov.swizzle.yzxyv;
                Assert.AreEqual("((8-9)5)", v.x);
                Assert.AreEqual("((8-9)5)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((8-9)5)", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((7-7)4)", "((7-8)7)", "((94)9)", "((7-8)7)");
                var v = ov.swizzle.yzxz;
                Assert.AreEqual("((7-7)4)", v.x);
                Assert.AreEqual("((7-8)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-8)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-1)", "(-6-1)", "(-6-1)", "2", "2");
                var v = ov.swizzle.yzxzx;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-8)", "", "-2", "(6-4)", null);
                var v = ov.swizzle.yzxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(8-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((17)-8)", "(-51)", null, null, "(-51)");
                var v = ov.swizzle.yzxzz;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((17)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((82)-7)", "(-91)", "-5", "0");
                var v = ov.swizzle.yzxzw;
                Assert.AreEqual("((82)-7)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((42)3)", "", "(-56)", "-6", "((88)9)");
                var v = ov.swizzle.yzxzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual("((42)3)", v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("((88)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)9)", "(20)", "-9", "(20)", "((9-7)8)");
                var v = ov.swizzle.yzxw;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((02)9)", v.z);
                Assert.AreEqual("(20)", v.w);
            }
            {
                var ov = new gvec5<string>("(2-5)", "((18)-2)", "-7", null, "1");
                var v = ov.swizzle.yzxwx;
                Assert.AreEqual("((18)-2)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", "((2-5)0)", "((-4-9)0)", "", "(-7-7)");
                var v = ov.swizzle.yzxwy;
                Assert.AreEqual("((2-5)0)", v.x);
                Assert.AreEqual("((-4-9)0)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((2-5)0)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "3", "(-2-5)", null);
                var v = ov.swizzle.yzxwz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((04)1)", "(4-6)", "((04)1)", null, "-7");
                var v = ov.swizzle.yzxww;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("((04)1)", v.y);
                Assert.AreEqual("((04)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)9)", "((8-6)1)", "((8-2)9)", "(7-5)", "((53)-6)");
                var v = ov.swizzle.yzxwv;
                Assert.AreEqual("((8-6)1)", v.x);
                Assert.AreEqual("((8-2)9)", v.y);
                Assert.AreEqual("((8-2)9)", v.z);
                Assert.AreEqual("(7-5)", v.w);
                Assert.AreEqual("((53)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "(10)", "((46)9)", "9", "((46)9)");
                var v = ov.swizzle.yzxv;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("((46)9)", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("((46)9)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(1-6)", "8", null, "4");
                var v = ov.swizzle.yzxvx;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "1", "((6-3)-6)", null, "");
                var v = ov.swizzle.yzxvy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((6-3)-6)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "(-89)", "((7-1)4)", "-4");
                var v = ov.swizzle.yzxvz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec5<string>("((-86)-4)", "((-86)-4)", "((-43)6)", "2", "((-43)6)");
                var v = ov.swizzle.yzxvw;
                Assert.AreEqual("((-86)-4)", v.x);
                Assert.AreEqual("((-43)6)", v.y);
                Assert.AreEqual("((-86)-4)", v.z);
                Assert.AreEqual("((-43)6)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "((63)8)", "2", null, null);
                var v = ov.swizzle.yzxvv;
                Assert.AreEqual("((63)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-39)-5)", "(4-5)", "(4-5)", "((-7-5)-2)", null);
                var v = ov.swizzle.yzy;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("(4-5)", v.z);
            }
            {
                var ov = new gvec5<string>("-7", "(41)", "(53)", "(-3-2)", "(41)");
                var v = ov.swizzle.yzyx;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(89)", "(89)", "-9", "", "((-84)-7)");
                var v = ov.swizzle.yzyxx;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)2)", "((-5-7)2)", "((-6-7)-8)", "(-58)", "0");
                var v = ov.swizzle.yzyxy;
                Assert.AreEqual("((-5-7)2)", v.x);
                Assert.AreEqual("((-6-7)-8)", v.y);
                Assert.AreEqual("((-5-7)2)", v.z);
                Assert.AreEqual("((-5-7)2)", v.w);
                Assert.AreEqual("((-5-7)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)5)", "", "(5-5)", "", null);
                var v = ov.swizzle.yzyxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-15)5)", v.w);
                Assert.AreEqual("(5-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(-8-5)", "", "1");
                var v = ov.swizzle.yzyxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(9-9)", "((43)-4)", "((43)-4)", "-9", "((-9-4)-4)");
                var v = ov.swizzle.yzyxv;
                Assert.AreEqual("((43)-4)", v.x);
                Assert.AreEqual("((43)-4)", v.y);
                Assert.AreEqual("((43)-4)", v.z);
                Assert.AreEqual("(9-9)", v.w);
                Assert.AreEqual("((-9-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)5)", "(6-3)", "((-23)-9)", "((-3-8)-4)", "((-23)-9)");
                var v = ov.swizzle.yzyy;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("((-23)-9)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("(6-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-7)6)", null, "", "((3-7)1)", "(1-6)");
                var v = ov.swizzle.yzyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(87)", "((53)-5)", "(-90)", "((71)-4)");
                var v = ov.swizzle.yzyyy;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("((53)-5)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("(87)", v.v);
            }
            {
                var ov = new gvec5<string>("(-89)", "(9-4)", null, "-5", "(7-1)");
                var v = ov.swizzle.yzyyz;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "(2-6)", "-7", "((-70)-1)", "(-28)");
                var v = ov.swizzle.yzyyw;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("((-70)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)9)", "(1-8)", "7", "6", "((-29)-9)");
                var v = ov.swizzle.yzyyv;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(1-8)", v.z);
                Assert.AreEqual("(1-8)", v.w);
                Assert.AreEqual("((-29)-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((21)6)", "((12)-6)", "", "((8-3)7)");
                var v = ov.swizzle.yzyz;
                Assert.AreEqual("((21)6)", v.x);
                Assert.AreEqual("((12)-6)", v.y);
                Assert.AreEqual("((21)6)", v.z);
                Assert.AreEqual("((12)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((5-8)3)", "(47)", "-5", "(-45)", "((19)6)");
                var v = ov.swizzle.yzyzx;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((5-8)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "((0-8)-5)", "(-46)", "(-77)", "7");
                var v = ov.swizzle.yzyzy;
                Assert.AreEqual("((0-8)-5)", v.x);
                Assert.AreEqual("(-46)", v.y);
                Assert.AreEqual("((0-8)-5)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("((0-8)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-97)-9)", "(45)", "((-97)-9)", "((22)9)");
                var v = ov.swizzle.yzyzz;
                Assert.AreEqual("((-97)-9)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("((-97)-9)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((78)4)", "((4-2)0)", "((78)4)", "");
                var v = ov.swizzle.yzyzw;
                Assert.AreEqual("((78)4)", v.x);
                Assert.AreEqual("((4-2)0)", v.y);
                Assert.AreEqual("((78)4)", v.z);
                Assert.AreEqual("((4-2)0)", v.w);
                Assert.AreEqual("((78)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-84)", "", "5", "((10)5)");
                var v = ov.swizzle.yzyzv;
                Assert.AreEqual("(-84)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((10)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)-5)", "((4-8)2)", "((-15)-5)", "(99)", "-4");
                var v = ov.swizzle.yzyw;
                Assert.AreEqual("((4-8)2)", v.x);
                Assert.AreEqual("((-15)-5)", v.y);
                Assert.AreEqual("((4-8)2)", v.z);
                Assert.AreEqual("(99)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "(-29)", "((4-5)-4)", "((-8-4)1)", "(-8-8)");
                var v = ov.swizzle.yzywx;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("((4-5)-4)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("((-8-4)1)", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(18)", "7", "(-80)", "(18)");
                var v = ov.swizzle.yzywy;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("(-80)", v.w);
                Assert.AreEqual("(18)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-6", "-6", "((66)-2)", "-6");
                var v = ov.swizzle.yzywz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((66)-2)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(74)", "-5", "", "((-67)8)", "((-23)8)");
                var v = ov.swizzle.yzyww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-67)8)", v.w);
                Assert.AreEqual("((-67)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((96)-3)", "(-27)", null, "3");
                var v = ov.swizzle.yzywv;
                Assert.AreEqual("((96)-3)", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("((96)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "(47)", "((-38)-1)", "");
                var v = ov.swizzle.yzyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "((10)4)", "(4-2)", "(-3-3)", "-8");
                var v = ov.swizzle.yzyvx;
                Assert.AreEqual("((10)4)", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("((10)4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(7-8)", "((-7-4)-6)", "(1-2)", "(-8-8)", "((-2-9)8)");
                var v = ov.swizzle.yzyvy;
                Assert.AreEqual("((-7-4)-6)", v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual("((-7-4)-6)", v.z);
                Assert.AreEqual("((-2-9)8)", v.w);
                Assert.AreEqual("((-7-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "-3", "-3", null);
                var v = ov.swizzle.yzyvz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((94)-8)", "(-8-2)", "(-77)", "9");
                var v = ov.swizzle.yzyvw;
                Assert.AreEqual("((94)-8)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("((94)-8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec5<string>("((-27)-1)", "(77)", null, "5", "(13)");
                var v = ov.swizzle.yzyvv;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(77)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("(13)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", "(7-6)", "((8-9)0)", null, "(7-6)");
                var v = ov.swizzle.yzz;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("((8-9)0)", v.y);
                Assert.AreEqual("((8-9)0)", v.z);
            }
            {
                var ov = new gvec5<string>("4", "((-4-1)4)", "", "-7", "");
                var v = ov.swizzle.yzzx;
                Assert.AreEqual("((-4-1)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(8-7)", "6", "", "", "((-5-4)-1)");
                var v = ov.swizzle.yzzxx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(8-7)", v.w);
                Assert.AreEqual("(8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-5)0)", "(64)", "-3", "((-5-4)7)");
                var v = ov.swizzle.yzzxy;
                Assert.AreEqual("((6-5)0)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-5)0)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(78)", "(78)", "((4-1)-8)", "((4-1)-8)");
                var v = ov.swizzle.yzzxz;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((38)0)", "", "", "((72)6)");
                var v = ov.swizzle.yzzxw;
                Assert.AreEqual("((38)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "0", "0", "((-74)9)");
                var v = ov.swizzle.yzzxv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-74)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(66)", "(-99)", "(66)", "(69)", "-4");
                var v = ov.swizzle.yzzy;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("(-99)", v.w);
            }
            {
                var ov = new gvec5<string>("((36)1)", "((-4-1)-3)", "9", "((-97)8)", "(-3-3)");
                var v = ov.swizzle.yzzyx;
                Assert.AreEqual("((-4-1)-3)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-4-1)-3)", v.w);
                Assert.AreEqual("((36)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)-7)", "((55)-1)", "(67)", "(67)", "6");
                var v = ov.swizzle.yzzyy;
                Assert.AreEqual("((55)-1)", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("((55)-1)", v.w);
                Assert.AreEqual("((55)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((61)3)", "(-66)", "0", "(-66)", "");
                var v = ov.swizzle.yzzyz;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)-1)", "8", "5", null, "5");
                var v = ov.swizzle.yzzyw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)-1)", "7", "7", "7", "((-3-3)1)");
                var v = ov.swizzle.yzzyv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((-3-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-7", "-7", "(70)");
                var v = ov.swizzle.yzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("", "0", "(7-2)", "2", null);
                var v = ov.swizzle.yzzzx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-3", null, "6", "((-3-3)6)");
                var v = ov.swizzle.yzzzy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-7)", "", "2", "((8-9)-7)", "((-37)-7)");
                var v = ov.swizzle.yzzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-9-9)", "7", null, "7");
                var v = ov.swizzle.yzzzw;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-5-6)-2)", "(-5-4)", null, "(-4-2)", "((-1-1)8)");
                var v = ov.swizzle.yzzzv;
                Assert.AreEqual("(-5-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-1-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(24)", "(-59)", "-2", "-2");
                var v = ov.swizzle.yzzw;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("((20)4)", null, "9", "(-1-2)", "((-27)-9)");
                var v = ov.swizzle.yzzwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("((20)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "-9", null, "(51)");
                var v = ov.swizzle.yzzwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((52)-8)", "((-3-8)6)", "0", "((55)-3)", "(85)");
                var v = ov.swizzle.yzzwz;
                Assert.AreEqual("((-3-8)6)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((55)-3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-4-6)-4)", "(4-8)", "((-4-6)1)", "((-4-6)-4)");
                var v = ov.swizzle.yzzww;
                Assert.AreEqual("((-4-6)-4)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("((-4-6)1)", v.w);
                Assert.AreEqual("((-4-6)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "1", "((-43)7)", "2", "(73)");
                var v = ov.swizzle.yzzwv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-43)7)", v.y);
                Assert.AreEqual("((-43)7)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "", "((-9-2)-9)", "(02)", "-3");
                var v = ov.swizzle.yzzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-2)-9)", v.y);
                Assert.AreEqual("((-9-2)-9)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("", "(18)", "((46)-9)", "-3", "((-73)7)");
                var v = ov.swizzle.yzzvx;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("((46)-9)", v.y);
                Assert.AreEqual("((46)-9)", v.z);
                Assert.AreEqual("((-73)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-6-1)-9)", "(-92)", "-7", "((-6-1)-9)");
                var v = ov.swizzle.yzzvy;
                Assert.AreEqual("((-6-1)-9)", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("((-6-1)-9)", v.w);
                Assert.AreEqual("((-6-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "-4", "", null);
                var v = ov.swizzle.yzzvz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", null, "((-39)6)", "-5", "-9");
                var v = ov.swizzle.yzzvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-39)6)", v.y);
                Assert.AreEqual("((-39)6)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-70)-9)", "", "7", "(1-3)");
                var v = ov.swizzle.yzzvv;
                Assert.AreEqual("((-70)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((90)-5)", null, "1", "", "((3-5)-5)");
                var v = ov.swizzle.yzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("8", null, "(02)", "(3-5)", "(96)");
                var v = ov.swizzle.yzwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("7", "(81)", "(31)", "(31)", "-4");
                var v = ov.swizzle.yzwxx;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "((-44)-6)", "(-17)", "((60)-5)");
                var v = ov.swizzle.yzwxy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-44)-6)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((0-6)7)", "", "(-9-3)", "1", "(-9-3)");
                var v = ov.swizzle.yzwxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((0-6)7)", v.w);
                Assert.AreEqual("(-9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-1", "3", "1", "(4-2)");
                var v = ov.swizzle.yzwxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-7)2)", "((-15)0)", "((-2-7)2)", "(17)", "(-32)");
                var v = ov.swizzle.yzwxv;
                Assert.AreEqual("((-15)0)", v.x);
                Assert.AreEqual("((-2-7)2)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("((-2-7)2)", v.w);
                Assert.AreEqual("(-32)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", "(7-6)", "(63)", "((47)1)", "((3-1)6)");
                var v = ov.swizzle.yzwy;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("((47)1)", v.z);
                Assert.AreEqual("(7-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-17)", "((3-7)8)", "", "-7", "");
                var v = ov.swizzle.yzwyx;
                Assert.AreEqual("((3-7)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((3-7)8)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "-2", "", "(-28)", "((-9-1)-9)");
                var v = ov.swizzle.yzwyy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((5-9)-6)", "((07)5)", "(95)", "");
                var v = ov.swizzle.yzwyz;
                Assert.AreEqual("((5-9)-6)", v.x);
                Assert.AreEqual("((07)5)", v.y);
                Assert.AreEqual("(95)", v.z);
                Assert.AreEqual("((5-9)-6)", v.w);
                Assert.AreEqual("((07)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "((-66)1)", "(-2-4)", "-7", "(-91)");
                var v = ov.swizzle.yzwyw;
                Assert.AreEqual("((-66)1)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-66)1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-5-9)", "-7", "(-35)", "");
                var v = ov.swizzle.yzwyv;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "", "(-9-7)", "((-30)8)");
                var v = ov.swizzle.yzwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-3-3)-1)", "(5-1)", "((9-8)-8)", "(5-1)");
                var v = ov.swizzle.yzwzx;
                Assert.AreEqual("((-3-3)-1)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("((9-8)-8)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "((1-4)-2)", "7", "", "5");
                var v = ov.swizzle.yzwzy;
                Assert.AreEqual("((1-4)-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((1-4)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((0-9)2)", "((0-9)2)", "-3", "(34)");
                var v = ov.swizzle.yzwzz;
                Assert.AreEqual("((0-9)2)", v.x);
                Assert.AreEqual("((0-9)2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((0-9)2)", v.w);
                Assert.AreEqual("((0-9)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "((-95)-8)", "((-65)2)", "((6-4)-1)");
                var v = ov.swizzle.yzwzw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-95)-8)", v.y);
                Assert.AreEqual("((-65)2)", v.z);
                Assert.AreEqual("((-95)-8)", v.w);
                Assert.AreEqual("((-65)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "0", null, "-2");
                var v = ov.swizzle.yzwzv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-7)-8)", "(-80)", "", "((-2-7)-8)", "((-2-7)-8)");
                var v = ov.swizzle.yzww;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-7)-8)", v.z);
                Assert.AreEqual("((-2-7)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((0-2)-6)", "((26)-3)", "((26)-3)", null, "");
                var v = ov.swizzle.yzwwx;
                Assert.AreEqual("((26)-3)", v.x);
                Assert.AreEqual("((26)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-2)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-4)", "((61)8)", null, "-1", "");
                var v = ov.swizzle.yzwwy;
                Assert.AreEqual("((61)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((61)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "-5", "", "-5", "(-28)");
                var v = ov.swizzle.yzwwz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-7-3)-9)", "2", "((-7-3)-9)", "2");
                var v = ov.swizzle.yzwww;
                Assert.AreEqual("((-7-3)-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-7-3)-9)", v.z);
                Assert.AreEqual("((-7-3)-9)", v.w);
                Assert.AreEqual("((-7-3)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "3", null, "(-9-9)", "((90)8)");
                var v = ov.swizzle.yzwwv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((90)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-36)4)", "((-54)-2)", "((-36)4)", "(5-8)", null);
                var v = ov.swizzle.yzwv;
                Assert.AreEqual("((-54)-2)", v.x);
                Assert.AreEqual("((-36)4)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-4-9)9)", "((-4-9)9)", "((-4-9)9)", "-9", "((-4-9)9)");
                var v = ov.swizzle.yzwvx;
                Assert.AreEqual("((-4-9)9)", v.x);
                Assert.AreEqual("((-4-9)9)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-4-9)9)", v.w);
                Assert.AreEqual("((-4-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(-4-9)", "", "-2");
                var v = ov.swizzle.yzwvy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(8-6)", "((-58)-8)", "((-58)-8)", "-8", null);
                var v = ov.swizzle.yzwvz;
                Assert.AreEqual("((-58)-8)", v.x);
                Assert.AreEqual("((-58)-8)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-58)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(06)", "", null, "2");
                var v = ov.swizzle.yzwvw;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "(8-6)", "((45)-7)", "(-8-9)", "");
                var v = ov.swizzle.yzwvv;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("((45)-7)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-8-2)2)", "(7-7)", "", "((-37)5)");
                var v = ov.swizzle.yzv;
                Assert.AreEqual("((-8-2)2)", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("((-37)5)", v.z);
            }
            {
                var ov = new gvec5<string>("(-94)", "", "((2-5)6)", "((2-5)6)", "((2-5)6)");
                var v = ov.swizzle.yzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((2-5)6)", v.y);
                Assert.AreEqual("((2-5)6)", v.z);
                Assert.AreEqual("(-94)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-1-9)0)", "", "((-1-9)0)", "(-89)");
                var v = ov.swizzle.yzvxx;
                Assert.AreEqual("((-1-9)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-1-3)", "-8", "((1-1)2)", "-8");
                var v = ov.swizzle.yzvxy;
                Assert.AreEqual("(-1-3)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "(2-9)", "", "((44)4)", "((-65)2)");
                var v = ov.swizzle.yzvxz;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-65)2)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-96)-3)", "2", "((-96)-3)", "-8");
                var v = ov.swizzle.yzvxw;
                Assert.AreEqual("((-96)-3)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-96)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-45)2)", "(-9-8)", "(-83)", "((-45)2)");
                var v = ov.swizzle.yzvxv;
                Assert.AreEqual("((-45)2)", v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual("((-45)2)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-45)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "(-3-4)", "((2-5)-7)", "((2-5)-7)", "8");
                var v = ov.swizzle.yzvy;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("((2-5)-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-3-4)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "", "0", "0", "((7-5)-8)");
                var v = ov.swizzle.yzvyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((7-5)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-9-9)7)", "((-9-8)-4)", "((-9-8)-4)", "4");
                var v = ov.swizzle.yzvyy;
                Assert.AreEqual("((-9-9)7)", v.x);
                Assert.AreEqual("((-9-8)-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-9-9)7)", v.w);
                Assert.AreEqual("((-9-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)5)", "2", "((5-2)7)", "(48)", null);
                var v = ov.swizzle.yzvyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((5-2)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((5-2)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(68)", null, null, "(68)", "-8");
                var v = ov.swizzle.yzvyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)-3)", "((-1-9)-3)", "8", "8", "(28)");
                var v = ov.swizzle.yzvyv;
                Assert.AreEqual("((-1-9)-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(28)", v.z);
                Assert.AreEqual("((-1-9)-3)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>("((51)1)", null, null, "((51)1)", "((1-1)-2)");
                var v = ov.swizzle.yzvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((1-1)-2)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-37)5)", "((-37)5)", "(43)", "6", "6");
                var v = ov.swizzle.yzvzx;
                Assert.AreEqual("((-37)5)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("((-37)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "(8-4)", "(8-4)", "-5", "-2");
                var v = ov.swizzle.yzvzy;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "(-40)", "((-8-4)-4)", "(-40)", "-1");
                var v = ov.swizzle.yzvzz;
                Assert.AreEqual("(-40)", v.x);
                Assert.AreEqual("((-8-4)-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-8-4)-4)", v.w);
                Assert.AreEqual("((-8-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "8", null, "(-3-9)");
                var v = ov.swizzle.yzvzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "9", "9", "((-34)7)", "9");
                var v = ov.swizzle.yzvzv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", null, "9", "-1", "(-33)");
                var v = ov.swizzle.yzvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("(-62)", "-1", "-9", "((-97)-2)", "((-97)-2)");
                var v = ov.swizzle.yzvwx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-97)-2)", v.z);
                Assert.AreEqual("((-97)-2)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "3", "", "(-82)", "3");
                var v = ov.swizzle.yzvwy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-82)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((58)-3)", "(-5-1)", "-7", "((-2-3)-3)", "(-5-1)");
                var v = ov.swizzle.yzvwz;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-5-1)", v.z);
                Assert.AreEqual("((-2-3)-3)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(1-2)", "(8-5)", "(1-2)", "(8-5)", "4");
                var v = ov.swizzle.yzvww;
                Assert.AreEqual("(8-5)", v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-4)7)", "-5", "4", "(-37)");
                var v = ov.swizzle.yzvwv;
                Assert.AreEqual("((-3-4)7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("(19)", "((-11)9)", "1", "-9", "((-2-8)9)");
                var v = ov.swizzle.yzvv;
                Assert.AreEqual("((-11)9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-2-8)9)", v.z);
                Assert.AreEqual("((-2-8)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((5-2)-5)", "((-99)9)", "5", "(-1-8)", "");
                var v = ov.swizzle.yzvvx;
                Assert.AreEqual("((-99)9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((5-2)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((29)5)", "-4", "-4", "(6-1)");
                var v = ov.swizzle.yzvvy;
                Assert.AreEqual("((29)5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("(6-1)", v.w);
                Assert.AreEqual("((29)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "(4-3)", "4", "5", "4");
                var v = ov.swizzle.yzvvz;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-70)", "((-28)6)", "(-70)", "9");
                var v = ov.swizzle.yzvvw;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual("((-28)6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-1)", "(-8-7)", "", "(-27)", "(8-1)");
                var v = ov.swizzle.yzvvv;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-67)-2)", "-4", "(-2-6)", "-4", "-4");
                var v = ov.swizzle.yw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
            }
            {
                var ov = new gvec5<string>("", "((9-9)7)", "-7", "4", "-7");
                var v = ov.swizzle.ywx;
                Assert.AreEqual("((9-9)7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((6-9)2)", "((9-7)6)", "(40)", "-7", "(-53)");
                var v = ov.swizzle.ywxx;
                Assert.AreEqual("((9-7)6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((6-9)2)", v.z);
                Assert.AreEqual("((6-9)2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-70)", "((04)-7)", "(-4-1)", "(8-3)", "-6");
                var v = ov.swizzle.ywxxx;
                Assert.AreEqual("((04)-7)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((78)-6)", "", "(48)", "(-98)");
                var v = ov.swizzle.ywxxy;
                Assert.AreEqual("((78)-6)", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((78)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "7", "(-28)", "-9");
                var v = ov.swizzle.ywxxz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(14)", "(-98)", "((51)-6)", "(-98)");
                var v = ov.swizzle.ywxxw;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("((51)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((51)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)-3)", "(-5-9)", "(-5-9)", "6", "7");
                var v = ov.swizzle.ywxxv;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((91)-3)", v.z);
                Assert.AreEqual("((91)-3)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(35)", "-3", null, "");
                var v = ov.swizzle.ywxy;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(35)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(48)", "(-11)", "9", "(48)");
                var v = ov.swizzle.ywxyx;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(48)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-30)", "(8-3)", "((9-8)3)", "-2");
                var v = ov.swizzle.ywxyy;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("((9-8)3)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-30)", v.w);
                Assert.AreEqual("(-30)", v.v);
            }
            {
                var ov = new gvec5<string>("(21)", "((30)4)", "((30)4)", "(3-1)", null);
                var v = ov.swizzle.ywxyz;
                Assert.AreEqual("((30)4)", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("((30)4)", v.w);
                Assert.AreEqual("((30)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "((-11)5)", "", "-6", "-6");
                var v = ov.swizzle.ywxyw;
                Assert.AreEqual("((-11)5)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("((-11)5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(7-8)", null, "((36)-2)", "((7-5)6)", "");
                var v = ov.swizzle.ywxyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-5)6)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "(4-7)", "(-1-2)", null);
                var v = ov.swizzle.ywxz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(4-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((51)3)", "5", "(-74)", null, "(25)");
                var v = ov.swizzle.ywxzx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((51)3)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("((51)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "(80)", "-9", "((-3-9)1)", "3");
                var v = ov.swizzle.ywxzy;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("((-3-9)1)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(80)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)4)", "0", "-7", "(-8-2)", "(70)");
                var v = ov.swizzle.ywxzz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("((50)4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(67)", "((5-9)7)", "", "2");
                var v = ov.swizzle.ywxzw;
                Assert.AreEqual("(67)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-9)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(35)", "-1", "((-31)8)", "-1", "((58)-5)");
                var v = ov.swizzle.ywxzv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("((-31)8)", v.w);
                Assert.AreEqual("((58)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-7)", "((5-5)-7)", "(-90)", "((-9-2)2)", "(-9-1)");
                var v = ov.swizzle.ywxw;
                Assert.AreEqual("((5-5)-7)", v.x);
                Assert.AreEqual("((-9-2)2)", v.y);
                Assert.AreEqual("((5-5)-7)", v.z);
                Assert.AreEqual("((-9-2)2)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "", "6", "9", "6");
                var v = ov.swizzle.ywxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", null, "-4", "(8-7)", "(8-7)");
                var v = ov.swizzle.ywxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-7)", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("(8-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "((51)8)", "3", "(-29)", "((-34)4)");
                var v = ov.swizzle.ywxwz;
                Assert.AreEqual("((51)8)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-1-1)5)", "-5", "(3-5)", "2");
                var v = ov.swizzle.ywxww;
                Assert.AreEqual("((-1-1)5)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("(3-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-16)", "((-91)-7)", null, "(-16)");
                var v = ov.swizzle.ywxwv;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "((-9-4)-1)", "(09)", "((-9-4)-1)");
                var v = ov.swizzle.ywxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-9-4)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-4-7)0)", "(52)", null, "4");
                var v = ov.swizzle.ywxvx;
                Assert.AreEqual("((-4-7)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-1)", "6", "((44)8)", null, "((21)-7)");
                var v = ov.swizzle.ywxvy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("((21)-7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(19)", "", "((-35)3)", "");
                var v = ov.swizzle.ywxvz;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("((-35)3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-85)", "9", "((71)8)", "9", "(-85)");
                var v = ov.swizzle.ywxvw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-85)", v.z);
                Assert.AreEqual("(-85)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-3-1)", "", "", "");
                var v = ov.swizzle.ywxvv;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-7", "3", "1", "1");
                var v = ov.swizzle.ywy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>("(-23)", "-8", "((49)-9)", "", "((-11)-3)");
                var v = ov.swizzle.ywyx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-23)", v.w);
            }
            {
                var ov = new gvec5<string>("((-72)6)", "((25)9)", "-8", "((-72)6)", null);
                var v = ov.swizzle.ywyxx;
                Assert.AreEqual("((25)9)", v.x);
                Assert.AreEqual("((-72)6)", v.y);
                Assert.AreEqual("((25)9)", v.z);
                Assert.AreEqual("((-72)6)", v.w);
                Assert.AreEqual("((-72)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "", null, "((9-3)-7)", "(7-1)");
                var v = ov.swizzle.ywyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((9-3)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-49)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-34)", "(-5-9)", "((-3-4)4)", "((-21)-6)");
                var v = ov.swizzle.ywyxz;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("((-3-4)4)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((-8-2)-2)", "((-8-2)-2)", "8");
                var v = ov.swizzle.ywyxw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-8-2)-2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-8-2)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-71)", "((13)-4)", "3");
                var v = ov.swizzle.ywyxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((13)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)0)", "(36)", "1", "1", "(-18)");
                var v = ov.swizzle.ywyy;
                Assert.AreEqual("(36)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("(36)", v.w);
            }
            {
                var ov = new gvec5<string>("((9-4)7)", "(57)", "((9-3)-4)", "5", "");
                var v = ov.swizzle.ywyyx;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(57)", v.z);
                Assert.AreEqual("(57)", v.w);
                Assert.AreEqual("((9-4)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-85)5)", "-2", "((-77)2)", "-8");
                var v = ov.swizzle.ywyyy;
                Assert.AreEqual("((-85)5)", v.x);
                Assert.AreEqual("((-77)2)", v.y);
                Assert.AreEqual("((-85)5)", v.z);
                Assert.AreEqual("((-85)5)", v.w);
                Assert.AreEqual("((-85)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-9)3)", "((-82)6)", "(3-5)", "((07)-7)", "((-82)6)");
                var v = ov.swizzle.ywyyz;
                Assert.AreEqual("((-82)6)", v.x);
                Assert.AreEqual("((07)-7)", v.y);
                Assert.AreEqual("((-82)6)", v.z);
                Assert.AreEqual("((-82)6)", v.w);
                Assert.AreEqual("(3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "(-8-6)", "(-2-2)", "-8");
                var v = ov.swizzle.ywyyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)5)", "-2", "(2-5)", "(2-5)", null);
                var v = ov.swizzle.ywyyv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-4-1)", null, "-1");
                var v = ov.swizzle.ywyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-1)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "0", "6", "-8", "((-2-3)7)");
                var v = ov.swizzle.ywyzx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "((29)-6)", "(-5-5)", "4");
                var v = ov.swizzle.ywyzy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((29)-6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(64)", "((-77)-2)", "", "", "1");
                var v = ov.swizzle.ywyzz;
                Assert.AreEqual("((-77)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-77)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-4-9)", "((-8-4)-3)", "8", "");
                var v = ov.swizzle.ywyzw;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("((-8-4)-3)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("0", "1", "4", "0", "(8-3)");
                var v = ov.swizzle.ywyzv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((11)-8)", "", "1", "(99)", "((11)-8)");
                var v = ov.swizzle.ywyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(99)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "(87)", "(98)", "(87)", "(98)");
                var v = ov.swizzle.ywywx;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-4", "", "(-7-9)", "((8-6)6)");
                var v = ov.swizzle.ywywy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "", "-8", "((8-5)-3)", "((0-2)-2)");
                var v = ov.swizzle.ywywz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-5)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((8-5)-3)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-90)7)", "-3", "5", "", "-5");
                var v = ov.swizzle.ywyww;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-78)2)", "((-54)8)", null, "(3-4)", "(3-4)");
                var v = ov.swizzle.ywywv;
                Assert.AreEqual("((-54)8)", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual("((-54)8)", v.z);
                Assert.AreEqual("(3-4)", v.w);
                Assert.AreEqual("(3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-4)", "8", null, "((-3-6)-4)", "8");
                var v = ov.swizzle.ywyv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-3-6)-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("(32)", "((88)7)", "-2", "((88)7)", "(38)");
                var v = ov.swizzle.ywyvx;
                Assert.AreEqual("((88)7)", v.x);
                Assert.AreEqual("((88)7)", v.y);
                Assert.AreEqual("((88)7)", v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("((40)8)", "-5", "-5", "", "(-72)");
                var v = ov.swizzle.ywyvy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-9)", "8", "((0-9)-5)", "8");
                var v = ov.swizzle.ywyvz;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual("((0-9)-5)", v.y);
                Assert.AreEqual("(7-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((19)-1)", "", null, "((19)-1)", "(08)");
                var v = ov.swizzle.ywyvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((19)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((19)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)5)", null, "(-7-2)", "6", null);
                var v = ov.swizzle.ywyvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(48)", "((05)-9)", "((-59)8)", "((05)-9)", "((05)-9)");
                var v = ov.swizzle.ywz;
                Assert.AreEqual("((05)-9)", v.x);
                Assert.AreEqual("((05)-9)", v.y);
                Assert.AreEqual("((-59)8)", v.z);
            }
            {
                var ov = new gvec5<string>("(89)", "", "-2", "(-3-2)", "((1-7)0)");
                var v = ov.swizzle.ywzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(89)", v.w);
            }
            {
                var ov = new gvec5<string>("((0-1)-4)", "((-7-2)-4)", "(-6-1)", "", "-4");
                var v = ov.swizzle.ywzxx;
                Assert.AreEqual("((-7-2)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("((0-1)-4)", v.w);
                Assert.AreEqual("((0-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "3", "", "(-37)", "3");
                var v = ov.swizzle.ywzxy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "", "((-43)-4)", "(89)", "((2-7)2)");
                var v = ov.swizzle.ywzxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((-43)-4)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("((-43)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-8)-1)", "", "((-64)-2)", null);
                var v = ov.swizzle.ywzxw;
                Assert.AreEqual("((-6-8)-1)", v.x);
                Assert.AreEqual("((-64)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-64)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(9-2)", "((73)8)", "((-5-3)2)", "(30)");
                var v = ov.swizzle.ywzxv;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("((-5-3)2)", v.y);
                Assert.AreEqual("((73)8)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "(4-9)", null, "", "(4-9)");
                var v = ov.swizzle.ywzy;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "(23)", "-3", "(6-2)", "((-4-3)7)");
                var v = ov.swizzle.ywzyx;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "(24)", "5", "((-68)-1)");
                var v = ov.swizzle.ywzyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-98)-5)", "1", "(20)", "((-6-9)9)", "((-98)-5)");
                var v = ov.swizzle.ywzyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-6-9)9)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec5<string>("((-17)1)", null, "(-89)", "8", "-3");
                var v = ov.swizzle.ywzyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-3-9)", "((28)4)", "((-58)-4)", "((-87)2)");
                var v = ov.swizzle.ywzyv;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("((-58)-4)", v.y);
                Assert.AreEqual("((28)4)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("((-87)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((77)0)", "-9", "((0-8)-9)", "-5", "6");
                var v = ov.swizzle.ywzz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((0-8)-9)", v.z);
                Assert.AreEqual("((0-8)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-37)", "(-37)", "-2", "(-31)", "((6-1)4)");
                var v = ov.swizzle.ywzzx;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)9)", "((0-8)-4)", "((-1-4)9)", "-7", "");
                var v = ov.swizzle.ywzzy;
                Assert.AreEqual("((0-8)-4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-1-4)9)", v.z);
                Assert.AreEqual("((-1-4)9)", v.w);
                Assert.AreEqual("((0-8)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "3", "((-10)8)", "(7-4)", "(-20)");
                var v = ov.swizzle.ywzzz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("((-10)8)", v.z);
                Assert.AreEqual("((-10)8)", v.w);
                Assert.AreEqual("((-10)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-4)7)", "((-75)3)", "((7-4)7)", "(-3-6)", "");
                var v = ov.swizzle.ywzzw;
                Assert.AreEqual("((-75)3)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("((7-4)7)", v.z);
                Assert.AreEqual("((7-4)7)", v.w);
                Assert.AreEqual("(-3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "(-98)", "((-3-4)-9)", "-2");
                var v = ov.swizzle.ywzzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-4)-9)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("(-98)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "1", "1", "-4", "(-2-9)");
                var v = ov.swizzle.ywzw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("1", "((-47)6)", "(-3-3)", "(-5-1)", "(-70)");
                var v = ov.swizzle.ywzwx;
                Assert.AreEqual("((-47)6)", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("(-3-3)", v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(29)", "-9", "((76)-8)", "");
                var v = ov.swizzle.ywzwy;
                Assert.AreEqual("(29)", v.x);
                Assert.AreEqual("((76)-8)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((76)-8)", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "(0-9)", "((-1-7)-7)", "-1", "((-1-7)-7)");
                var v = ov.swizzle.ywzwz;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-1-7)-7)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-1-7)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((4-5)-5)", "((4-5)-5)", "(36)", "(36)");
                var v = ov.swizzle.ywzww;
                Assert.AreEqual("((4-5)-5)", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("((4-5)-5)", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("(36)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "3", "((56)-4)", "((56)-4)", "((56)-4)");
                var v = ov.swizzle.ywzwv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((56)-4)", v.y);
                Assert.AreEqual("((56)-4)", v.z);
                Assert.AreEqual("((56)-4)", v.w);
                Assert.AreEqual("((56)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)-8)", "(59)", "((8-1)-8)", "", "(1-1)");
                var v = ov.swizzle.ywzv;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((8-1)-8)", v.z);
                Assert.AreEqual("(1-1)", v.w);
            }
            {
                var ov = new gvec5<string>("", "-8", "", "(-83)", "-8");
                var v = ov.swizzle.ywzvx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(7-5)", "((6-6)-5)", "((-99)-3)", "((6-6)-5)", "(9-2)");
                var v = ov.swizzle.ywzvy;
                Assert.AreEqual("((6-6)-5)", v.x);
                Assert.AreEqual("((6-6)-5)", v.y);
                Assert.AreEqual("((-99)-3)", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("((6-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-37)9)", "(78)", "", null);
                var v = ov.swizzle.ywzvz;
                Assert.AreEqual("((-37)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)-5)", "((-6-2)1)", "(-42)", "((-6-2)1)", "(-42)");
                var v = ov.swizzle.ywzvw;
                Assert.AreEqual("((-6-2)1)", v.x);
                Assert.AreEqual("((-6-2)1)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("((-6-2)1)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "1", "(-4-3)", "((09)4)", "((80)5)");
                var v = ov.swizzle.ywzvv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((09)4)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("((80)5)", v.w);
                Assert.AreEqual("((80)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((56)0)", "(-4-4)", "(-4-4)", "((-47)0)", "((-47)0)");
                var v = ov.swizzle.yww;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("((-47)0)", v.y);
                Assert.AreEqual("((-47)0)", v.z);
            }
            {
                var ov = new gvec5<string>("-2", "(05)", "((4-1)-9)", "-2", "((1-3)3)");
                var v = ov.swizzle.ywwx;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-62)", "((97)5)", "", "((97)5)");
                var v = ov.swizzle.ywwxx;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(7-3)", "(24)", "(-3-8)", "", "((2-8)-5)");
                var v = ov.swizzle.ywwxy;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", null, "((-83)2)", "(2-9)");
                var v = ov.swizzle.ywwxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-83)2)", v.y);
                Assert.AreEqual("((-83)2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((04)-7)", "((63)1)", "0", "-1", "(-6-5)");
                var v = ov.swizzle.ywwxw;
                Assert.AreEqual("((63)1)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((04)-7)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-57)7)", "(52)", "((-9-2)2)", "5", null);
                var v = ov.swizzle.ywwxv;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-57)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "-5", "(1-1)", "((-19)9)", "(1-1)");
                var v = ov.swizzle.ywwy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-19)9)", v.y);
                Assert.AreEqual("((-19)9)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(0-1)", "7", "((1-9)-3)");
                var v = ov.swizzle.ywwyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(11)", "((79)-6)", "-2", null, "");
                var v = ov.swizzle.ywwyy;
                Assert.AreEqual("((79)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((79)-6)", v.w);
                Assert.AreEqual("((79)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "(-71)", "-9", "(-6-3)");
                var v = ov.swizzle.ywwyz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("((-70)-1)", "8", "((-70)-1)", "(0-9)", "-3");
                var v = ov.swizzle.ywwyw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "((-5-9)-3)", "-1", "(-5-9)", "((4-7)7)");
                var v = ov.swizzle.ywwyv;
                Assert.AreEqual("((-5-9)-3)", v.x);
                Assert.AreEqual("(-5-9)", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("((-5-9)-3)", v.w);
                Assert.AreEqual("((4-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "6", "((24)8)", "((24)8)", "0");
                var v = ov.swizzle.ywwz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((24)8)", v.y);
                Assert.AreEqual("((24)8)", v.z);
                Assert.AreEqual("((24)8)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "", "2", "((-34)-5)", "(21)");
                var v = ov.swizzle.ywwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-34)-5)", v.y);
                Assert.AreEqual("((-34)-5)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)-8)", "((78)-2)", "9", "", "((83)-5)");
                var v = ov.swizzle.ywwzy;
                Assert.AreEqual("((78)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((78)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "-7", "((91)3)", "", "((2-5)-2)");
                var v = ov.swizzle.ywwzz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((91)3)", v.w);
                Assert.AreEqual("((91)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", "((9-8)-4)", "(1-1)", "(1-1)", "(1-1)");
                var v = ov.swizzle.ywwzw;
                Assert.AreEqual("((9-8)-4)", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((44)-3)", "(-4-5)", "((44)-3)", "", "((44)-3)");
                var v = ov.swizzle.ywwzv;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((44)-3)", v.w);
                Assert.AreEqual("((44)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-3)", "(66)", "((-4-4)-3)", "", "((70)7)");
                var v = ov.swizzle.ywww;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((8-8)0)", "1", "1", "6", "((8-8)0)");
                var v = ov.swizzle.ywwwx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((8-8)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-1)", "(-61)", "", "7", "7");
                var v = ov.swizzle.ywwwy;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "(-7-5)", "((-47)-2)", null);
                var v = ov.swizzle.ywwwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-47)-2)", v.y);
                Assert.AreEqual("((-47)-2)", v.z);
                Assert.AreEqual("((-47)-2)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "(-8-6)", null, null, "-6");
                var v = ov.swizzle.ywwww;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "(-22)", "5", "(-22)", "(14)");
                var v = ov.swizzle.ywwwv;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("(-22)", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("(-22)", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "0", "(2-1)", null, "0");
                var v = ov.swizzle.ywwv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("((-9-1)1)", "", "(-2-5)", "", null);
                var v = ov.swizzle.ywwvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-1)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-4)0)", "1", "8", null, "(-6-6)");
                var v = ov.swizzle.ywwvy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "", "-7", "((-88)-3)");
                var v = ov.swizzle.ywwvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-88)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((08)-6)", "8", "", "((63)-5)", "((-4-2)2)");
                var v = ov.swizzle.ywwvw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((63)-5)", v.y);
                Assert.AreEqual("((63)-5)", v.z);
                Assert.AreEqual("((-4-2)2)", v.w);
                Assert.AreEqual("((63)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-94)", "-4", null, "((-33)2)", "(-94)");
                var v = ov.swizzle.ywwvv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-33)2)", v.y);
                Assert.AreEqual("((-33)2)", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("(-94)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "-3", "(0-6)", "(1-8)");
                var v = ov.swizzle.ywv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("(1-8)", v.z);
            }
            {
                var ov = new gvec5<string>("9", "9", "(-3-8)", "(0-2)", "(-3-8)");
                var v = ov.swizzle.ywvx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("1", "((-9-3)6)", "2", "(-4-6)", "((-34)2)");
                var v = ov.swizzle.ywvxx;
                Assert.AreEqual("((-9-3)6)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("((-34)2)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(8-5)", "-4", "-4", "((59)-7)");
                var v = ov.swizzle.ywvxy;
                Assert.AreEqual("(8-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((59)-7)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-94)-3)", null, "", "((-94)-3)", "((-45)-4)");
                var v = ov.swizzle.ywvxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-94)-3)", v.y);
                Assert.AreEqual("((-45)-4)", v.z);
                Assert.AreEqual("((-94)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-9)", "((-19)5)", "-9", "((-7-9)6)");
                var v = ov.swizzle.ywvxw;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-7-9)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((94)-8)", "((-8-1)-3)", "", "((94)-8)", "");
                var v = ov.swizzle.ywvxv;
                Assert.AreEqual("((-8-1)-3)", v.x);
                Assert.AreEqual("((94)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((94)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "3", "(-3-8)", "(-3-8)");
                var v = ov.swizzle.ywvy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "(-9-7)", "8", null, "((-47)7)");
                var v = ov.swizzle.ywvyx;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-47)7)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "((2-8)4)", "((86)-9)", "(-9-1)");
                var v = ov.swizzle.ywvyy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((86)-9)", v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "((-93)-9)", "(88)", "-9", "-5");
                var v = ov.swizzle.ywvyz;
                Assert.AreEqual("((-93)-9)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-93)-9)", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "", null, "(5-9)", "1");
                var v = ov.swizzle.ywvyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "-3", "-7", null, null);
                var v = ov.swizzle.ywvyv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-52)-6)", "(6-4)", "(-73)", "((-8-7)2)");
                var v = ov.swizzle.ywvz;
                Assert.AreEqual("((-52)-6)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("((-8-7)2)", v.z);
                Assert.AreEqual("(6-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-5)", "((0-6)-1)", "(-1-4)", "(-1-4)", "((-7-9)3)");
                var v = ov.swizzle.ywvzx;
                Assert.AreEqual("((0-6)-1)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("((-7-9)3)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((0-4)-7)", "((-18)-7)", "((-18)-7)", "((-18)-7)");
                var v = ov.swizzle.ywvzy;
                Assert.AreEqual("((0-4)-7)", v.x);
                Assert.AreEqual("((-18)-7)", v.y);
                Assert.AreEqual("((-18)-7)", v.z);
                Assert.AreEqual("((-18)-7)", v.w);
                Assert.AreEqual("((0-4)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-9", "((-3-3)-5)", "(62)", "-1");
                var v = ov.swizzle.ywvzz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-3-3)-5)", v.w);
                Assert.AreEqual("((-3-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(3-4)", "", null, "((53)-5)");
                var v = ov.swizzle.ywvzw;
                Assert.AreEqual("(3-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((53)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "-9", "((-9-4)7)", "(21)", "((1-1)-3)");
                var v = ov.swizzle.ywvzv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("((1-1)-3)", v.z);
                Assert.AreEqual("((-9-4)7)", v.w);
                Assert.AreEqual("((1-1)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)9)", "(-3-9)", "(4-3)", "", "((-6-2)-5)");
                var v = ov.swizzle.ywvw;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-6-2)-5)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-72)", "((7-8)-9)", "", "7", "(32)");
                var v = ov.swizzle.ywvwx;
                Assert.AreEqual("((7-8)-9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-72)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)2)", "((-2-9)-4)", "((50)2)", "((-2-9)-4)", "");
                var v = ov.swizzle.ywvwy;
                Assert.AreEqual("((-2-9)-4)", v.x);
                Assert.AreEqual("((-2-9)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-2-9)-4)", v.w);
                Assert.AreEqual("((-2-9)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-2)", "((68)-8)", "8", "((68)-8)", "-4");
                var v = ov.swizzle.ywvwz;
                Assert.AreEqual("((68)-8)", v.x);
                Assert.AreEqual("((68)-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((68)-8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-6)-6)", "", "4", "((-4-6)-6)");
                var v = ov.swizzle.ywvww;
                Assert.AreEqual("((-4-6)-6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-4-6)-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)-9)", "((-11)-9)", "4", "4", "2");
                var v = ov.swizzle.ywvwv;
                Assert.AreEqual("((-11)-9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-99)", "(-99)", "", "(84)");
                var v = ov.swizzle.ywvv;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(84)", v.z);
                Assert.AreEqual("(84)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-7)-6)", null, "(-8-8)", "-2", "-9");
                var v = ov.swizzle.ywvvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((6-7)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "((6-2)2)", null, "-9", null);
                var v = ov.swizzle.ywvvy;
                Assert.AreEqual("((6-2)2)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "5", "5", "");
                var v = ov.swizzle.ywvvz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "0", "(-14)", "((-57)8)", "(94)");
                var v = ov.swizzle.ywvvw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-57)8)", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("((-57)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", "(7-1)", "-1", "((38)-5)", "(9-2)");
                var v = ov.swizzle.ywvvv;
                Assert.AreEqual("(7-1)", v.x);
                Assert.AreEqual("((38)-5)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("(9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "(3-2)", "-5", "(-2-3)", "((-3-3)-3)");
                var v = ov.swizzle.yv;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("((-3-3)-3)", v.y);
            }
            {
                var ov = new gvec5<string>("-7", "(1-4)", "", "0", null);
                var v = ov.swizzle.yvx;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>("(-61)", "((-60)7)", "9", "((-60)7)", "(64)");
                var v = ov.swizzle.yvxx;
                Assert.AreEqual("((-60)7)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("(-61)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "0", "", "((7-3)-6)");
                var v = ov.swizzle.yvxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((7-3)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-60)-3)", "(1-9)", "((-60)-3)", "2", "-1");
                var v = ov.swizzle.yvxxy;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-60)-3)", v.z);
                Assert.AreEqual("((-60)-3)", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(11)", "-3", "(-7-9)", null, null);
                var v = ov.swizzle.yvxxz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "-6", "(-71)", "(05)");
                var v = ov.swizzle.yvxxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "(4-3)", "((71)5)", "-5", "((33)5)");
                var v = ov.swizzle.yvxxv;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("((33)5)", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual("((33)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-29)-8)", "", "(-1-8)", "-5");
                var v = ov.swizzle.yvxy;
                Assert.AreEqual("((-29)-8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-29)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-42)", "(-57)", "6", "", "-3");
                var v = ov.swizzle.yvxyx;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(5-3)", "-3", null, "(5-3)");
                var v = ov.swizzle.yvxyy;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("(5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "9", "9", "-1", null);
                var v = ov.swizzle.yvxyz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "((-12)-5)", "(6-4)", "-9");
                var v = ov.swizzle.yvxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-16)", "(3-3)", "-1", "");
                var v = ov.swizzle.yvxyv;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)2)", "(20)", null, "2", "((4-2)2)");
                var v = ov.swizzle.yvxz;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("((4-2)2)", v.y);
                Assert.AreEqual("((4-2)2)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "3", "((-32)-1)", null, "");
                var v = ov.swizzle.yvxzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-32)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "((5-8)-7)", "(-87)", "-5");
                var v = ov.swizzle.yvxzy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-8)-7)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "(-35)", "(2-2)", "((05)-5)");
                var v = ov.swizzle.yvxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((05)-5)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-35)", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>("(99)", "(-1-5)", "((36)8)", null, "-1");
                var v = ov.swizzle.yvxzw;
                Assert.AreEqual("(-1-5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("((36)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-74)", "((-2-9)-5)", "(-2-4)", "(98)");
                var v = ov.swizzle.yvxzv;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-2-9)-5)", v.w);
                Assert.AreEqual("(98)", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "", "(74)", "(89)", "-8");
                var v = ov.swizzle.yvxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("(89)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "((51)-8)", "", "9", "(-42)");
                var v = ov.swizzle.yvxwx;
                Assert.AreEqual("((51)-8)", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-95)-4)", "(-52)", "((-14)-9)", "-8");
                var v = ov.swizzle.yvxwy;
                Assert.AreEqual("((-95)-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-14)-9)", v.w);
                Assert.AreEqual("((-95)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(61)", "((-54)3)", "((-1-8)2)", "", "(8-3)");
                var v = ov.swizzle.yvxwz;
                Assert.AreEqual("((-54)3)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(61)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-1-8)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "(6-6)", "(-1-9)", "6");
                var v = ov.swizzle.yvxww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-81)-5)", "((-81)-5)", "6", "5");
                var v = ov.swizzle.yvxwv;
                Assert.AreEqual("((-81)-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((8-6)3)", "(41)", "(41)", "-5", "-5");
                var v = ov.swizzle.yvxv;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((8-6)3)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((-52)8)", "(89)", "(25)", "-1", "((24)-2)");
                var v = ov.swizzle.yvxvx;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("((24)-2)", v.y);
                Assert.AreEqual("((-52)8)", v.z);
                Assert.AreEqual("((24)-2)", v.w);
                Assert.AreEqual("((-52)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "1", "(-6-9)", "1");
                var v = ov.swizzle.yvxvy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", null, "-8", "3", "3");
                var v = ov.swizzle.yvxvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-8-7)9)", "", null, "((58)-4)");
                var v = ov.swizzle.yvxvw;
                Assert.AreEqual("((-8-7)9)", v.x);
                Assert.AreEqual("((58)-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((58)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-87)5)", "(77)", "(-3-6)", "((98)0)", "3");
                var v = ov.swizzle.yvxvv;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-87)5)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-43)-4)", "((-43)-4)", "-1", "9", "((6-4)-1)");
                var v = ov.swizzle.yvy;
                Assert.AreEqual("((-43)-4)", v.x);
                Assert.AreEqual("((6-4)-1)", v.y);
                Assert.AreEqual("((-43)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("", "4", "((03)-4)", "(-26)", "");
                var v = ov.swizzle.yvyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "(-78)", "(-78)", "((4-9)-1)", "(-9-5)");
                var v = ov.swizzle.yvyxx;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("(-9-5)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-9-5)", v.w);
                Assert.AreEqual("(-9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)0)", "", "((7-8)0)", "((88)8)", null);
                var v = ov.swizzle.yvyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-8)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "", "((-11)4)", "(-47)");
                var v = ov.swizzle.yvyxz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((33)7)", "((33)-1)", "((33)7)", "(-1-8)", "(-65)");
                var v = ov.swizzle.yvyxw;
                Assert.AreEqual("((33)-1)", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("((33)-1)", v.z);
                Assert.AreEqual("((33)7)", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", null, "(78)", "");
                var v = ov.swizzle.yvyxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-2-8)", "-5", "-5", "(08)");
                var v = ov.swizzle.yvyy;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("(-2-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(8-9)", "((5-2)8)", null, "-5");
                var v = ov.swizzle.yvyyx;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(8-9)", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(0-1)", "-9", "(0-1)", "(0-1)", "((1-9)3)");
                var v = ov.swizzle.yvyyy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((1-9)3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-9-5)-4)", "(6-1)", "4", "(6-1)");
                var v = ov.swizzle.yvyyz;
                Assert.AreEqual("((-9-5)-4)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("((-9-5)-4)", v.z);
                Assert.AreEqual("((-9-5)-4)", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)-7)", "((-85)1)", "-5", null, null);
                var v = ov.swizzle.yvyyw;
                Assert.AreEqual("((-85)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-85)1)", v.z);
                Assert.AreEqual("((-85)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(51)", null, "-2", "(51)", null);
                var v = ov.swizzle.yvyyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(13)", "((-36)5)", "((87)-9)", "7", "(-4-6)");
                var v = ov.swizzle.yvyz;
                Assert.AreEqual("((-36)5)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("((-36)5)", v.z);
                Assert.AreEqual("((87)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-4)7)", "-9", "(15)", "-9", "(-23)");
                var v = ov.swizzle.yvyzx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("((8-4)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-29)-4)", null, "9", "((-54)3)", "(30)");
                var v = ov.swizzle.yvyzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-46)-2)", "(-13)", "-9", "-9");
                var v = ov.swizzle.yvyzz;
                Assert.AreEqual("((-46)-2)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-46)-2)", v.z);
                Assert.AreEqual("(-13)", v.w);
                Assert.AreEqual("(-13)", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "((-7-3)2)", "((36)6)", "-7");
                var v = ov.swizzle.yvyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-3)2)", v.w);
                Assert.AreEqual("((36)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "0", "0", null, "-4");
                var v = ov.swizzle.yvyzv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "5", "", "((4-8)-5)", "((-1-2)9)");
                var v = ov.swizzle.yvyw;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-1-2)9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((4-8)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(1-3)", "(84)", "((-3-5)-3)", "((-3-5)-3)", "(84)");
                var v = ov.swizzle.yvywx;
                Assert.AreEqual("(84)", v.x);
                Assert.AreEqual("(84)", v.y);
                Assert.AreEqual("(84)", v.z);
                Assert.AreEqual("((-3-5)-3)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-5-4)-4)", "(92)", "", null);
                var v = ov.swizzle.yvywy;
                Assert.AreEqual("((-5-4)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-4)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(70)", "((-7-2)-7)", null, null);
                var v = ov.swizzle.yvywz;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-7-2)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", "(6-3)", "((-5-1)-6)", null, "((-5-1)-6)");
                var v = ov.swizzle.yvyww;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("((-5-1)-6)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "(-23)", null, "9", "((88)4)");
                var v = ov.swizzle.yvywv;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("((88)4)", v.y);
                Assert.AreEqual("(-23)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((88)4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(59)", "(-3-9)", "9", "");
                var v = ov.swizzle.yvyv;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "6", "-6", "(9-6)");
                var v = ov.swizzle.yvyvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(9-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-7-8)", null, "-4", null, "((14)6)");
                var v = ov.swizzle.yvyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((14)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((14)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "(-90)", "((-12)2)");
                var v = ov.swizzle.yvyvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-12)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-12)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-41)", null, "4", "4");
                var v = ov.swizzle.yvyvw;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-2)", null, "((81)4)", "(-7-7)", "8");
                var v = ov.swizzle.yvyvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-14)", null, "(-14)", "((59)-8)", "((-7-5)-8)");
                var v = ov.swizzle.yvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-5)-8)", v.y);
                Assert.AreEqual("(-14)", v.z);
            }
            {
                var ov = new gvec5<string>("((-85)9)", "((-85)9)", "(-35)", "(77)", "4");
                var v = ov.swizzle.yvzx;
                Assert.AreEqual("((-85)9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("((-85)9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((56)2)", null, "0", null);
                var v = ov.swizzle.yvzxx;
                Assert.AreEqual("((56)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-31)-2)", "(-4-4)", "((-4-8)9)", "(51)", "(-71)");
                var v = ov.swizzle.yvzxy;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("((-4-8)9)", v.z);
                Assert.AreEqual("((-31)-2)", v.w);
                Assert.AreEqual("(-4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((-1-8)4)", "((70)5)", "((70)5)", "(58)");
                var v = ov.swizzle.yvzxz;
                Assert.AreEqual("((-1-8)4)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("((70)5)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("((70)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-9)", "((9-3)-5)", "-5", "-5", "-3");
                var v = ov.swizzle.yvzxw;
                Assert.AreEqual("((9-3)-5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(5-9)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((28)-3)", "2", "(-21)", "(1-5)", "");
                var v = ov.swizzle.yvzxv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("((28)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "((2-6)-3)", "2", "((2-6)-3)", "2");
                var v = ov.swizzle.yvzy;
                Assert.AreEqual("((2-6)-3)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((2-6)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(43)", "((-15)-5)", "3", "3", "((-8-3)-2)");
                var v = ov.swizzle.yvzyx;
                Assert.AreEqual("((-15)-5)", v.x);
                Assert.AreEqual("((-8-3)-2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-15)-5)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec5<string>("((87)-4)", "((-92)9)", "-7", "-8", "-7");
                var v = ov.swizzle.yvzyy;
                Assert.AreEqual("((-92)9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-92)9)", v.w);
                Assert.AreEqual("((-92)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "-5", "((-40)-8)", "(81)", "3");
                var v = ov.swizzle.yvzyz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-40)-8)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-40)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "3", "(-23)", "(4-8)", null);
                var v = ov.swizzle.yvzyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-23)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-69)", "((1-8)7)", "((-68)1)", "9", "(1-3)");
                var v = ov.swizzle.yvzyv;
                Assert.AreEqual("((1-8)7)", v.x);
                Assert.AreEqual("(1-3)", v.y);
                Assert.AreEqual("((-68)1)", v.z);
                Assert.AreEqual("((1-8)7)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((44)6)", "-4", "(-33)", null, "");
                var v = ov.swizzle.yvzz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("(-33)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-5)-5)", "((-6-5)-5)", "0", "(-5-1)", "1");
                var v = ov.swizzle.yvzzx;
                Assert.AreEqual("((-6-5)-5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-6-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)2)", "", "4", "4", "((8-4)9)");
                var v = ov.swizzle.yvzzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-4)9)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, null, "", null);
                var v = ov.swizzle.yvzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((00)8)", "((-35)2)", "(24)", "");
                var v = ov.swizzle.yvzzw;
                Assert.AreEqual("((00)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-35)2)", v.z);
                Assert.AreEqual("((-35)2)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)-5)", "5", "5", "((8-2)5)", "(-9-4)");
                var v = ov.swizzle.yvzzv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-63)-1)", "", null, "3");
                var v = ov.swizzle.yvzw;
                Assert.AreEqual("((-63)-1)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("7", "((-49)-8)", "((1-8)-8)", "5", "((-49)-8)");
                var v = ov.swizzle.yvzwx;
                Assert.AreEqual("((-49)-8)", v.x);
                Assert.AreEqual("((-49)-8)", v.y);
                Assert.AreEqual("((1-8)-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((85)7)", "((2-7)-7)", "", "(-92)", "((-6-5)-6)");
                var v = ov.swizzle.yvzwy;
                Assert.AreEqual("((2-7)-7)", v.x);
                Assert.AreEqual("((-6-5)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("((2-7)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)8)", "7", "((-74)8)", "7", "(-25)");
                var v = ov.swizzle.yvzwz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("((-74)8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((-74)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(94)", "0", null, "-5");
                var v = ov.swizzle.yvzww;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "((3-9)-7)", "6", "-6", "-9");
                var v = ov.swizzle.yvzwv;
                Assert.AreEqual("((3-9)-7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-61)", "(-9-6)", "(4-6)", "6");
                var v = ov.swizzle.yvzv;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("(-28)", "((-6-7)3)", "(-77)", null, null);
                var v = ov.swizzle.yvzvx;
                Assert.AreEqual("((-6-7)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-77)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(5-8)", "(3-3)", "((7-9)-9)", null);
                var v = ov.swizzle.yvzvy;
                Assert.AreEqual("(5-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "8", null, "((90)3)", "(23)");
                var v = ov.swizzle.yvzvz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", null, null, "2", "(-39)");
                var v = ov.swizzle.yvzvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-39)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "(30)", "-6", "6", "((0-5)1)");
                var v = ov.swizzle.yvzvv;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("((0-5)1)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((0-5)1)", v.w);
                Assert.AreEqual("((0-5)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((58)2)", "((-76)-4)", "(83)", "5", "((-76)-4)");
                var v = ov.swizzle.yvw;
                Assert.AreEqual("((-76)-4)", v.x);
                Assert.AreEqual("((-76)-4)", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("((65)8)", "((81)-6)", "-3", "-4", "(4-8)");
                var v = ov.swizzle.yvwx;
                Assert.AreEqual("((81)-6)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((65)8)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "(71)", "(85)", "((4-1)-3)", "(85)");
                var v = ov.swizzle.yvwxx;
                Assert.AreEqual("(71)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("((4-1)-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-72)-3)", "-3", "", "0");
                var v = ov.swizzle.yvwxy;
                Assert.AreEqual("((-72)-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-72)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(58)", "(-3-1)", "(-3-1)", "-6", "(-3-1)");
                var v = ov.swizzle.yvwxz;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-52)2)", null, "((96)9)", "(-67)");
                var v = ov.swizzle.yvwxw;
                Assert.AreEqual("((-52)2)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("((96)9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((96)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(-67)", "(-67)", "(-67)");
                var v = ov.swizzle.yvwxv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)-6)", "(80)", null, null, "(-4-1)");
                var v = ov.swizzle.yvwy;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(80)", v.w);
            }
            {
                var ov = new gvec5<string>("(12)", "", "(-85)", "((-40)-5)", null);
                var v = ov.swizzle.yvwyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-40)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("((86)0)", "((86)0)", null, "-6", "(41)");
                var v = ov.swizzle.yvwyy;
                Assert.AreEqual("((86)0)", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((86)0)", v.w);
                Assert.AreEqual("((86)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "4", "(-8-9)", null, "(-16)");
                var v = ov.swizzle.yvwyz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-8-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-7-7)-9)", "(-6-7)", "(-6-7)", "5");
                var v = ov.swizzle.yvwyw;
                Assert.AreEqual("((-7-7)-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("((-7-7)-9)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "((7-9)1)", "(-17)", "((7-9)1)", "(-54)");
                var v = ov.swizzle.yvwyv;
                Assert.AreEqual("((7-9)1)", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("((7-9)1)", v.z);
                Assert.AreEqual("((7-9)1)", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "0", "(-9-6)", null, "");
                var v = ov.swizzle.yvwz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-9-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-1)-4)", "((-5-2)-2)", "((-6-1)-4)", "(30)", "((-82)6)");
                var v = ov.swizzle.yvwzx;
                Assert.AreEqual("((-5-2)-2)", v.x);
                Assert.AreEqual("((-82)6)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("((-6-1)-4)", v.w);
                Assert.AreEqual("((-6-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "", "((-83)4)", null, "(-35)");
                var v = ov.swizzle.yvwzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-35)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-83)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(3-3)", "(63)", "((2-6)5)", "(63)");
                var v = ov.swizzle.yvwzz;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("((2-6)5)", v.z);
                Assert.AreEqual("(63)", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-2)7)", "(3-9)", "-8", "(75)", null);
                var v = ov.swizzle.yvwzw;
                Assert.AreEqual("(3-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(75)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-4)9)", "(-95)", "(-4-9)", "", "(-4-6)");
                var v = ov.swizzle.yvwzv;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-5)-4)", "((-26)-5)", null, "", "-1");
                var v = ov.swizzle.yvww;
                Assert.AreEqual("((-26)-5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-5)", "-4", "", "-4", "-4");
                var v = ov.swizzle.yvwwx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((10)2)", "((13)2)", "", "(53)");
                var v = ov.swizzle.yvwwy;
                Assert.AreEqual("((10)2)", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((10)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)-6)", "", "((9-5)-3)", null, "-6");
                var v = ov.swizzle.yvwwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-80)", "((-1-7)2)", "((-84)2)", "5");
                var v = ov.swizzle.yvwww;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-84)2)", v.z);
                Assert.AreEqual("((-84)2)", v.w);
                Assert.AreEqual("((-84)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-4-5)", "8", "((-5-7)1)", "(-4-5)");
                var v = ov.swizzle.yvwwv;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("((-5-7)1)", v.z);
                Assert.AreEqual("((-5-7)1)", v.w);
                Assert.AreEqual("(-4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "(5-4)", "", "((-7-5)7)");
                var v = ov.swizzle.yvwv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-7-5)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-5)7)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(20)", "2", "-5", "(20)");
                var v = ov.swizzle.yvwvx;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-3)", "", "((50)9)", "((-8-1)-2)", "(3-3)");
                var v = ov.swizzle.yvwvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((-8-1)-2)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-79)", null, "6", "((0-8)-5)");
                var v = ov.swizzle.yvwvz;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("((0-8)-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((0-8)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "6", "((27)5)", null);
                var v = ov.swizzle.yvwvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((27)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((27)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)-4)", "((4-5)-1)", "-6", "((4-5)-1)", "");
                var v = ov.swizzle.yvwvv;
                Assert.AreEqual("((4-5)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((4-5)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((64)-1)", "7", "", "7");
                var v = ov.swizzle.yvv;
                Assert.AreEqual("((64)-1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((4-4)4)", "(14)", "((05)9)", "(14)", "(5-4)");
                var v = ov.swizzle.yvvx;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("((4-4)4)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "((-4-3)-2)", "((-4-3)-2)", "3", "-7");
                var v = ov.swizzle.yvvxx;
                Assert.AreEqual("((-4-3)-2)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "((18)-3)", "(32)", "(-1-7)");
                var v = ov.swizzle.yvvxy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)-1)", "-7", "(7-1)", "-7", "-2");
                var v = ov.swizzle.yvvxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((2-2)-1)", v.w);
                Assert.AreEqual("(7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-14)", "9", "(-14)", "(-7-8)");
                var v = ov.swizzle.yvvxw;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-4)", "((-36)-1)", null, "((64)-3)", "");
                var v = ov.swizzle.yvvxv;
                Assert.AreEqual("((-36)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((6-9)-8)", "7", "-6", "(-7-4)");
                var v = ov.swizzle.yvvy;
                Assert.AreEqual("((6-9)-8)", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("((6-9)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((2-1)-8)", "-5", "", "3");
                var v = ov.swizzle.yvvyx;
                Assert.AreEqual("((2-1)-8)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((2-1)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((40)-6)", "(9-1)", "((2-1)-8)");
                var v = ov.swizzle.yvvyy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((2-1)-8)", v.y);
                Assert.AreEqual("((2-1)-8)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-1-5)-5)", "((11)8)", "((11)8)", "7");
                var v = ov.swizzle.yvvyz;
                Assert.AreEqual("((-1-5)-5)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-1-5)-5)", v.w);
                Assert.AreEqual("((11)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-28)4)", "((6-2)-2)", "((-28)4)", "((6-2)-2)");
                var v = ov.swizzle.yvvyw;
                Assert.AreEqual("((-28)4)", v.x);
                Assert.AreEqual("((6-2)-2)", v.y);
                Assert.AreEqual("((6-2)-2)", v.z);
                Assert.AreEqual("((-28)4)", v.w);
                Assert.AreEqual("((-28)4)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", null, "6", "");
                var v = ov.swizzle.yvvyv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((07)5)", "(22)", "((3-3)-3)", "-4", null);
                var v = ov.swizzle.yvvz;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-3)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "((16)7)", "((16)7)", "((8-7)8)", "((8-7)8)");
                var v = ov.swizzle.yvvzx;
                Assert.AreEqual("((16)7)", v.x);
                Assert.AreEqual("((8-7)8)", v.y);
                Assert.AreEqual("((8-7)8)", v.z);
                Assert.AreEqual("((16)7)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", null, "(1-7)", "(1-7)");
                var v = ov.swizzle.yvvzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(26)", "((8-3)2)", null, null);
                var v = ov.swizzle.yvvzz;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-3)2)", v.w);
                Assert.AreEqual("((8-3)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-6", "(-5-2)", "((23)6)", "(-38)");
                var v = ov.swizzle.yvvzw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-38)", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("((23)6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-7", "((3-2)-7)", "((3-2)-7)", "(-36)");
                var v = ov.swizzle.yvvzv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual("((3-2)-7)", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-2)-2)", null, "((-3-4)-5)", "3", "(-7-3)");
                var v = ov.swizzle.yvvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((20)8)", "((3-5)0)", "", "(4-7)", "7");
                var v = ov.swizzle.yvvwx;
                Assert.AreEqual("((3-5)0)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(4-7)", v.w);
                Assert.AreEqual("((20)8)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-3", "(-62)", "-7", "((-90)-6)");
                var v = ov.swizzle.yvvwy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-90)-6)", v.y);
                Assert.AreEqual("((-90)-6)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-6)3)", "((7-3)-3)", "-8", "((-6-6)3)", "-8");
                var v = ov.swizzle.yvvwz;
                Assert.AreEqual("((7-3)-3)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-6-6)3)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(98)", "((6-8)7)", "2", "-2");
                var v = ov.swizzle.yvvww;
                Assert.AreEqual("(98)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)2)", "((-7-2)2)", "-3", "(-6-3)", "-3");
                var v = ov.swizzle.yvvwv;
                Assert.AreEqual("((-7-2)2)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "0", "((-4-9)4)", "", "(75)");
                var v = ov.swizzle.yvvv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("(75)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-76)3)", "4", "(-26)", "((-7-7)9)");
                var v = ov.swizzle.yvvvx;
                Assert.AreEqual("((-76)3)", v.x);
                Assert.AreEqual("((-7-7)9)", v.y);
                Assert.AreEqual("((-7-7)9)", v.z);
                Assert.AreEqual("((-7-7)9)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-7)", null, "((8-9)-5)", "8", "8");
                var v = ov.swizzle.yvvvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-5)", "(-2-5)", "((82)-4)", "(7-7)");
                var v = ov.swizzle.yvvvz;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-5)7)", "6", "(-69)", "(58)", "(67)");
                var v = ov.swizzle.yvvvw;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-8)", "((-6-1)-5)", null, "(-9-8)", "-5");
                var v = ov.swizzle.yvvvv;
                Assert.AreEqual("((-6-1)-5)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "(-8-9)", "1", "-8");
                var v = ov.swizzle.zx;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("1", v.y);
            }
            {
                var ov = new gvec5<string>("(94)", "(-3-6)", "5", "((2-3)1)", "(94)");
                var v = ov.swizzle.zxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(94)", v.z);
            }
            {
                var ov = new gvec5<string>("((-9-1)0)", "((-32)7)", "5", "((2-1)9)", "((-9-1)0)");
                var v = ov.swizzle.zxxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-9-1)0)", v.y);
                Assert.AreEqual("((-9-1)0)", v.z);
                Assert.AreEqual("((-9-1)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((-34)-5)", null, "((24)3)", "((24)3)", "");
                var v = ov.swizzle.zxxxx;
                Assert.AreEqual("((24)3)", v.x);
                Assert.AreEqual("((-34)-5)", v.y);
                Assert.AreEqual("((-34)-5)", v.z);
                Assert.AreEqual("((-34)-5)", v.w);
                Assert.AreEqual("((-34)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)-1)", "8", "8", "-5", "(-57)");
                var v = ov.swizzle.zxxxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-96)-1)", v.y);
                Assert.AreEqual("((-96)-1)", v.z);
                Assert.AreEqual("((-96)-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)1)", "(63)", "5", "-3", null);
                var v = ov.swizzle.zxxxz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((4-2)1)", v.y);
                Assert.AreEqual("((4-2)1)", v.z);
                Assert.AreEqual("((4-2)1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "((8-7)-2)", "(-9-9)", "((9-2)-2)");
                var v = ov.swizzle.zxxxw;
                Assert.AreEqual("((8-7)-2)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "-4", "(7-2)", null, "-8");
                var v = ov.swizzle.zxxxv;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "(8-4)", "((-3-5)4)");
                var v = ov.swizzle.zxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "(-21)", "((63)-1)", "(01)");
                var v = ov.swizzle.zxxyx;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "(-1-9)", "((4-4)-9)", "2", "9");
                var v = ov.swizzle.zxxyy;
                Assert.AreEqual("((4-4)-9)", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)5)", "(4-7)", "(4-7)", "((-2-2)-2)", "(4-7)");
                var v = ov.swizzle.zxxyz;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual("((2-2)5)", v.y);
                Assert.AreEqual("((2-2)5)", v.z);
                Assert.AreEqual("(4-7)", v.w);
                Assert.AreEqual("(4-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(09)", "5", "-8");
                var v = ov.swizzle.zxxyw;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "", null, "(3-8)");
                var v = ov.swizzle.zxxyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)-3)", "6", "((7-1)-3)", null, "((-2-5)-6)");
                var v = ov.swizzle.zxxz;
                Assert.AreEqual("((7-1)-3)", v.x);
                Assert.AreEqual("((7-1)-3)", v.y);
                Assert.AreEqual("((7-1)-3)", v.z);
                Assert.AreEqual("((7-1)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "9", "9", null);
                var v = ov.swizzle.zxxzx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "", "-1", "");
                var v = ov.swizzle.zxxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((8-5)-9)", "-1", "(89)", "-1", "(-97)");
                var v = ov.swizzle.zxxzz;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("((8-5)-9)", v.y);
                Assert.AreEqual("((8-5)-9)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "9", "", "((34)-5)", "8");
                var v = ov.swizzle.zxxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((34)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-8)-9)", "(82)", "((63)-7)", "(82)", "(5-5)");
                var v = ov.swizzle.zxxzv;
                Assert.AreEqual("((63)-7)", v.x);
                Assert.AreEqual("((3-8)-9)", v.y);
                Assert.AreEqual("((3-8)-9)", v.z);
                Assert.AreEqual("((63)-7)", v.w);
                Assert.AreEqual("(5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "", "(-97)", "(62)");
                var v = ov.swizzle.zxxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-97)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-41)-3)", "(-60)", "-6", "4");
                var v = ov.swizzle.zxxwx;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-8", "((06)-4)", "(-4-1)");
                var v = ov.swizzle.zxxwy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((06)-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "-1", "-1", "(86)");
                var v = ov.swizzle.zxxwz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "(-29)", "-5", null, "((-3-4)-5)");
                var v = ov.swizzle.zxxww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-10)", "(2-5)", "((68)-4)", "((0-7)-8)");
                var v = ov.swizzle.zxxwv;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((68)-4)", v.w);
                Assert.AreEqual("((0-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "1", "((1-7)-3)", "3");
                var v = ov.swizzle.zxxv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("7", "((33)-6)", "(-6-4)", "-9", "((33)-6)");
                var v = ov.swizzle.zxxvx;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((33)-6)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-20)", "((-97)-4)", "8", "", "-6");
                var v = ov.swizzle.zxxvy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-97)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-51)-3)", null, "((-7-7)0)", "(3-8)", "((-51)-3)");
                var v = ov.swizzle.zxxvz;
                Assert.AreEqual("((-7-7)0)", v.x);
                Assert.AreEqual("((-51)-3)", v.y);
                Assert.AreEqual("((-51)-3)", v.z);
                Assert.AreEqual("((-51)-3)", v.w);
                Assert.AreEqual("((-7-7)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-6)", "(8-5)", "(8-5)", "((-28)-4)");
                var v = ov.swizzle.zxxvw;
                Assert.AreEqual("(8-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-28)-4)", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "((-78)-9)", null, "1", "");
                var v = ov.swizzle.zxxvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "(-9-6)", "-8", "(06)");
                var v = ov.swizzle.zxy;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
            }
            {
                var ov = new gvec5<string>(null, "((61)-3)", null, "-5", "(8-7)");
                var v = ov.swizzle.zxyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((61)-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((75)-1)", "5", "", "-5", "-2");
                var v = ov.swizzle.zxyxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((75)-1)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((75)-1)", v.w);
                Assert.AreEqual("((75)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-27)", "((91)-5)", "(-8-2)", "((-6-9)-3)");
                var v = ov.swizzle.zxyxy;
                Assert.AreEqual("((91)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-27)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-27)", v.v);
            }
            {
                var ov = new gvec5<string>("((42)8)", "", "((42)8)", "(09)", "((-10)7)");
                var v = ov.swizzle.zxyxz;
                Assert.AreEqual("((42)8)", v.x);
                Assert.AreEqual("((42)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((42)8)", v.w);
                Assert.AreEqual("((42)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(8-3)", null, "(-7-1)", "1");
                var v = ov.swizzle.zxyxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((9-9)-8)", null, "(-5-5)", null);
                var v = ov.swizzle.zxyxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((9-9)-8)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(0-2)", "", "(0-2)", "(89)", "");
                var v = ov.swizzle.zxyy;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "2", "((23)-9)", "((23)-9)", "6");
                var v = ov.swizzle.zxyyx;
                Assert.AreEqual("((23)-9)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-34)", "((-1-6)-5)", null, "((76)5)", "((-1-6)-5)");
                var v = ov.swizzle.zxyyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("((-1-6)-5)", v.z);
                Assert.AreEqual("((-1-6)-5)", v.w);
                Assert.AreEqual("((-1-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(32)", "(32)", "5");
                var v = ov.swizzle.zxyyz;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-8)", "", "", "", "-9");
                var v = ov.swizzle.zxyyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "(8-3)", null, "((-5-1)8)", "(43)");
                var v = ov.swizzle.zxyyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("(8-3)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-4)", "4", "((-7-9)-6)", "(-56)", "((00)-3)");
                var v = ov.swizzle.zxyz;
                Assert.AreEqual("((-7-9)-6)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-7-9)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((2-8)-8)", "(0-2)", "(43)", "((2-8)-8)", null);
                var v = ov.swizzle.zxyzx;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("((2-8)-8)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("((2-8)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-33)-7)", "(-8-8)", "(-20)", "((95)4)", "4");
                var v = ov.swizzle.zxyzy;
                Assert.AreEqual("(-20)", v.x);
                Assert.AreEqual("((-33)-7)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "(08)", "((-5-4)-8)", "");
                var v = ov.swizzle.zxyzz;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("(08)", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", "(-78)", "((8-9)3)", "((-8-6)-9)", "(74)");
                var v = ov.swizzle.zxyzw;
                Assert.AreEqual("((8-9)3)", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("((8-9)3)", v.w);
                Assert.AreEqual("((-8-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-9)", "(9-9)", "-5", "((-8-3)9)", "((-3-7)1)");
                var v = ov.swizzle.zxyzv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-3-7)1)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-3-1)", "(-3-1)", "((-31)9)", "-9");
                var v = ov.swizzle.zxyw;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("((-31)9)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-71)", "((-9-1)7)", "(-8-9)", null);
                var v = ov.swizzle.zxywx;
                Assert.AreEqual("((-9-1)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-63)2)", "", "(26)", "(4-7)");
                var v = ov.swizzle.zxywy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-63)2)", v.z);
                Assert.AreEqual("(26)", v.w);
                Assert.AreEqual("((-63)2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-7-4)6)", "(06)", "(3-4)", "((-6-8)-9)");
                var v = ov.swizzle.zxywz;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-7-4)6)", v.z);
                Assert.AreEqual("(3-4)", v.w);
                Assert.AreEqual("(06)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-8)1)", "(6-7)", "((7-7)-2)", "0", "3");
                var v = ov.swizzle.zxyww;
                Assert.AreEqual("((7-7)-2)", v.x);
                Assert.AreEqual("((-6-8)1)", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((52)-2)", null, "(-36)", "(1-9)", "");
                var v = ov.swizzle.zxywv;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("((52)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-6-9)", "((76)1)", "-3", "((9-5)-9)");
                var v = ov.swizzle.zxyv;
                Assert.AreEqual("((76)1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-6-9)", v.z);
                Assert.AreEqual("((9-5)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "4", "", "((-3-4)-3)", "");
                var v = ov.swizzle.zxyvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-29)5)", "((-29)5)", "((-29)5)", "(97)", null);
                var v = ov.swizzle.zxyvy;
                Assert.AreEqual("((-29)5)", v.x);
                Assert.AreEqual("((-29)5)", v.y);
                Assert.AreEqual("((-29)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-29)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "-2", "5", "((50)-7)", "-2");
                var v = ov.swizzle.zxyvz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-9-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((68)2)", "((68)2)", "", "((62)-5)", "8");
                var v = ov.swizzle.zxyvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((68)2)", v.y);
                Assert.AreEqual("((68)2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((62)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", null, "", "-7", "-7");
                var v = ov.swizzle.zxyvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-36)", "((-4-4)-1)", "3", "", "((-8-4)-5)");
                var v = ov.swizzle.zxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("-8", "((70)3)", "(6-8)", "", "(6-8)");
                var v = ov.swizzle.zxzx;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(6-8)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((09)-5)", "", "(-3-2)", "(-3-2)", "((13)-7)");
                var v = ov.swizzle.zxzxx;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("((09)-5)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("((09)-5)", v.w);
                Assert.AreEqual("((09)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-2)0)", null, "-9", "-9");
                var v = ov.swizzle.zxzxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-4-2)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-6)", "((4-8)-4)", "", null, "9");
                var v = ov.swizzle.zxzxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((88)1)", "((06)0)", "(6-3)", "-6", "");
                var v = ov.swizzle.zxzxw;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("((88)1)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("((88)1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-97)", "5", "(-3-5)", "(-67)", "((-40)5)");
                var v = ov.swizzle.zxzxv;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(-97)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("((-40)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-7)", null, "-6", "-9", "-9");
                var v = ov.swizzle.zxzy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((-3-3)-6)", "((-3-3)-6)", "-5", "(0-9)");
                var v = ov.swizzle.zxzyx;
                Assert.AreEqual("((-3-3)-6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-3-3)-6)", v.z);
                Assert.AreEqual("((-3-3)-6)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "((9-6)-5)", null, "", "-2");
                var v = ov.swizzle.zxzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-6)-5)", v.w);
                Assert.AreEqual("((9-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-77)1)", null, "(-27)", "(9-1)");
                var v = ov.swizzle.zxzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-77)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "2", "(8-7)", "0");
                var v = ov.swizzle.zxzyw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)7)", "((3-6)6)", "(8-7)", "", "(-52)");
                var v = ov.swizzle.zxzyv;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("((-7-9)7)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("((3-6)6)", v.w);
                Assert.AreEqual("(-52)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-7)6)", "(9-7)", "-6", "((6-5)8)", "");
                var v = ov.swizzle.zxzz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((2-7)6)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-1)", "((20)5)", "2", "((20)5)", "");
                var v = ov.swizzle.zxzzx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((47)-5)", "3", "(3-7)", "(-52)", null);
                var v = ov.swizzle.zxzzy;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("((47)-5)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((3-5)-6)", "((6-3)1)", null, "(73)", "-3");
                var v = ov.swizzle.zxzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-5)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "8", "(74)", null, "(-83)");
                var v = ov.swizzle.zxzzw;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("(74)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "3", "(20)", "((64)9)", "((64)9)");
                var v = ov.swizzle.zxzzv;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("((64)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-6-2)", "(-6-2)", "((-2-9)8)", "-4");
                var v = ov.swizzle.zxzw;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-6-2)", v.z);
                Assert.AreEqual("((-2-9)8)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "(-1-4)", "(-1-6)", "-7", "(-1-6)");
                var v = ov.swizzle.zxzwx;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-3)", "((-2-6)9)", "(22)", "9");
                var v = ov.swizzle.zxzwy;
                Assert.AreEqual("((-2-6)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-6)9)", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, "7", null, null);
                var v = ov.swizzle.zxzwz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", null, "((9-6)-7)", "((-7-9)-5)");
                var v = ov.swizzle.zxzww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-6)-7)", v.w);
                Assert.AreEqual("((9-6)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((4-8)-6)", "((4-8)-6)", "(-10)", "((4-8)-6)");
                var v = ov.swizzle.zxzwv;
                Assert.AreEqual("((4-8)-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((4-8)-6)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("((4-8)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "((-64)5)", "((-7-7)-9)", "", "(-80)");
                var v = ov.swizzle.zxzv;
                Assert.AreEqual("((-7-7)-9)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("((-7-7)-9)", v.z);
                Assert.AreEqual("(-80)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-8)7)", "9", "", "8", "((-6-8)7)");
                var v = ov.swizzle.zxzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-8)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-8)7)", v.w);
                Assert.AreEqual("((-6-8)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "(8-3)", "(8-3)", "6", "((9-1)9)");
                var v = ov.swizzle.zxzvy;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("((9-1)9)", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-17)", "(47)", null, "-9");
                var v = ov.swizzle.zxzvz;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-7)0)", "((19)9)", "-3", "", "-3");
                var v = ov.swizzle.zxzvw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((2-7)0)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)5)", "(-31)", "-6", "(43)", "((3-6)6)");
                var v = ov.swizzle.zxzvv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((4-1)5)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((3-6)6)", v.w);
                Assert.AreEqual("((3-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)0)", "((1-5)0)", "(67)", "(-4-5)", "(7-4)");
                var v = ov.swizzle.zxw;
                Assert.AreEqual("(67)", v.x);
                Assert.AreEqual("((1-5)0)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
            }
            {
                var ov = new gvec5<string>("-7", null, "((8-7)0)", "", "(-1-8)");
                var v = ov.swizzle.zxwx;
                Assert.AreEqual("((8-7)0)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(7-6)", "((-6-6)-5)", "6", "(7-6)", "(7-6)");
                var v = ov.swizzle.zxwxx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("(7-6)", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-4)", "", "(-62)", null, "(26)");
                var v = ov.swizzle.zxwxy;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("((5-5)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((5-5)-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-92)-8)", "(-61)", "-7", "((-2-6)-7)");
                var v = ov.swizzle.zxwxz;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-4-1)3)", "9", "(-49)", "");
                var v = ov.swizzle.zxwxw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-8-1)5)", "", "((-8-1)5)", "((-14)6)");
                var v = ov.swizzle.zxwxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-8-1)5)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-14)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-85)", "((-35)2)", "-1", "((-35)2)", "-9");
                var v = ov.swizzle.zxwy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-85)", v.y);
                Assert.AreEqual("((-35)2)", v.z);
                Assert.AreEqual("((-35)2)", v.w);
            }
            {
                var ov = new gvec5<string>("(59)", "(9-9)", "(59)", "((9-6)0)", "((13)6)");
                var v = ov.swizzle.zxwyx;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("((9-6)0)", v.z);
                Assert.AreEqual("(9-9)", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(5-8)", null, "(5-8)", "((7-6)3)");
                var v = ov.swizzle.zxwyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("(5-8)", v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", null, null, "(-17)", "4");
                var v = ov.swizzle.zxwyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-7-3)", "", "((4-7)3)", "-9");
                var v = ov.swizzle.zxwyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((4-7)3)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("((4-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(95)", "(-98)", "-4", "(-98)", "-8");
                var v = ov.swizzle.zxwyv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("(-98)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-89)-7)", "((0-3)-4)", "-1", null);
                var v = ov.swizzle.zxwz;
                Assert.AreEqual("((0-3)-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((0-3)-4)", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "((4-3)-4)", "(-55)", "6");
                var v = ov.swizzle.zxwzx;
                Assert.AreEqual("((4-3)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("((4-3)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((24)-7)", "((24)-7)", "((6-3)-7)", "(8-1)", "((24)-7)");
                var v = ov.swizzle.zxwzy;
                Assert.AreEqual("((6-3)-7)", v.x);
                Assert.AreEqual("((24)-7)", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("((6-3)-7)", v.w);
                Assert.AreEqual("((24)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-2)", "-8", "((-46)5)", "((80)-6)", "(7-5)");
                var v = ov.swizzle.zxwzz;
                Assert.AreEqual("((-46)5)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((80)-6)", v.z);
                Assert.AreEqual("((-46)5)", v.w);
                Assert.AreEqual("((-46)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "((-9-6)2)", "(-8-1)", "(2-6)");
                var v = ov.swizzle.zxwzw;
                Assert.AreEqual("((-9-6)2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("((-9-6)2)", v.w);
                Assert.AreEqual("(-8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "((9-6)1)", "(-16)", "((50)0)", "-4");
                var v = ov.swizzle.zxwzv;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("(-7-2)", v.y);
                Assert.AreEqual("((50)0)", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-9-6)2)", "((-3-7)-1)", null, "4");
                var v = ov.swizzle.zxww;
                Assert.AreEqual("((-3-7)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(38)", "(38)", null, "-7", "((13)-8)");
                var v = ov.swizzle.zxwwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(38)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(38)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((8-4)-8)", null, "-4", "(-85)");
                var v = ov.swizzle.zxwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((8-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "", null, "-2");
                var v = ov.swizzle.zxwwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-83)", "-6", "(6-9)");
                var v = ov.swizzle.zxwww;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, "((7-1)-4)", "((-5-8)9)", "4");
                var v = ov.swizzle.zxwwv;
                Assert.AreEqual("((7-1)-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-5-8)9)", v.z);
                Assert.AreEqual("((-5-8)9)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-2)", "-9", "(9-2)", "(9-2)", "(9-2)");
                var v = ov.swizzle.zxwv;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("(9-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "((9-3)-1)", "((84)8)", null, "((84)8)");
                var v = ov.swizzle.zxwvx;
                Assert.AreEqual("((84)8)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((84)8)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)-2)", "-1", "((-8-6)-2)", "", "4");
                var v = ov.swizzle.zxwvy;
                Assert.AreEqual("((-8-6)-2)", v.x);
                Assert.AreEqual("((-8-6)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)0)", "((-8-6)1)", "(-4-2)", "(8-7)", "((0-2)-8)");
                var v = ov.swizzle.zxwvz;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("((0-2)0)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("((0-2)-8)", v.w);
                Assert.AreEqual("(-4-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-58)", "", "((26)-4)", "-1", "(99)");
                var v = ov.swizzle.zxwvw;
                Assert.AreEqual("((26)-4)", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(99)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-5)-2)", "(-2-6)", "0", "(-2-6)", "(2-8)");
                var v = ov.swizzle.zxwvv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-3-5)-2)", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "((-95)8)", "", "((-95)8)");
                var v = ov.swizzle.zxv;
                Assert.AreEqual("((-95)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-95)8)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-1", "((-1-3)-5)", null, "((-4-9)8)");
                var v = ov.swizzle.zxvx;
                Assert.AreEqual("((-1-3)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-9)8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(2-8)", null, "", "2", "(2-8)");
                var v = ov.swizzle.zxvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((67)-4)", "((-52)-5)", "7", "(-94)", "");
                var v = ov.swizzle.zxvxy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((67)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((67)-4)", v.w);
                Assert.AreEqual("((-52)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "((-35)2)", "((-26)3)", "(-21)", "(-21)");
                var v = ov.swizzle.zxvxz;
                Assert.AreEqual("((-26)3)", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual("((-26)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", null, null, "", "(12)");
                var v = ov.swizzle.zxvxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-96)", "-3", "((8-3)7)", "((34)-2)", "((34)-2)");
                var v = ov.swizzle.zxvxv;
                Assert.AreEqual("((8-3)7)", v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual("((34)-2)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("((34)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "1", "(1-8)", "1");
                var v = ov.swizzle.zxvy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-7)-3)", "((-6-7)-3)", "7", "5", "");
                var v = ov.swizzle.zxvyx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-6-7)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-7)-3)", v.w);
                Assert.AreEqual("((-6-7)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "(-12)", "-4", "((7-6)9)", "((0-4)-5)");
                var v = ov.swizzle.zxvyy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-12)", v.y);
                Assert.AreEqual("((0-4)-5)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("(-12)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-3", "((-9-2)9)", "(-85)", "4");
                var v = ov.swizzle.zxvyz;
                Assert.AreEqual("((-9-2)9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-9-2)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", null, "(26)", "(26)");
                var v = ov.swizzle.zxvyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(26)", v.v);
            }
            {
                var ov = new gvec5<string>("(-44)", "5", "(-44)", "(-44)", null);
                var v = ov.swizzle.zxvyv;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-36)", "(-36)", "");
                var v = ov.swizzle.zxvz;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-36)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "9", "9", "", "(-7-3)");
                var v = ov.swizzle.zxvzx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-62)", "-7", "6", "((79)-5)", "((2-1)-3)");
                var v = ov.swizzle.zxvzy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("((2-1)-3)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "(9-4)", "((-84)-5)", "((4-9)4)");
                var v = ov.swizzle.zxvzz;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((4-9)4)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("(9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-88)5)", "((-88)5)", "-5", "4", "9");
                var v = ov.swizzle.zxvzw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-88)5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(2-1)", "((-7-8)8)", "0", "((22)6)", "4");
                var v = ov.swizzle.zxvzv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "((-7-4)-6)", "(3-9)", "");
                var v = ov.swizzle.zxvw;
                Assert.AreEqual("((-7-4)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(3-9)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(88)", "((2-6)-2)", null, "7");
                var v = ov.swizzle.zxvwx;
                Assert.AreEqual("((2-6)-2)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "((18)4)", "", "(2-6)");
                var v = ov.swizzle.zxvwy;
                Assert.AreEqual("((18)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "-2", "3", "((0-1)-7)");
                var v = ov.swizzle.zxvwz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((0-1)-7)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-26)0)", null, "7", "((-56)1)");
                var v = ov.swizzle.zxvww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-56)1)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((5-1)9)", "-9", "(8-1)", "(11)");
                var v = ov.swizzle.zxvwv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("((36)-1)", "(-65)", "3", "((-54)-6)", "((-54)-6)");
                var v = ov.swizzle.zxvv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((36)-1)", v.y);
                Assert.AreEqual("((-54)-6)", v.z);
                Assert.AreEqual("((-54)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((-15)0)", "((-15)0)", "(4-8)", "((-3-6)-7)", "(6-7)");
                var v = ov.swizzle.zxvvx;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("((-15)0)", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("(6-7)", v.w);
                Assert.AreEqual("((-15)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((19)-5)", "((-8-8)9)", "(-5-7)", "(-8-4)", "2");
                var v = ov.swizzle.zxvvy;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("((19)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-8-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "8", "((5-5)-5)", "8");
                var v = ov.swizzle.zxvvz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "-3", "-6", "((-98)4)");
                var v = ov.swizzle.zxvvw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-98)4)", v.z);
                Assert.AreEqual("((-98)4)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-3)", "4", "", "(54)", "((86)4)");
                var v = ov.swizzle.zxvvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((93)-3)", v.y);
                Assert.AreEqual("((86)4)", v.z);
                Assert.AreEqual("((86)4)", v.w);
                Assert.AreEqual("((86)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)-1)", "6", "0", "(8-6)", "((-11)-1)");
                var v = ov.swizzle.zy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("6", v.y);
            }
            {
                var ov = new gvec5<string>(null, "5", "((4-8)3)", "", "((8-6)5)");
                var v = ov.swizzle.zyx;
                Assert.AreEqual("((4-8)3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("", "7", "(9-3)", "", "3");
                var v = ov.swizzle.zyxx;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(29)", "((26)-4)", "((2-2)1)", "(9-6)", "((4-6)3)");
                var v = ov.swizzle.zyxxx;
                Assert.AreEqual("((2-2)1)", v.x);
                Assert.AreEqual("((26)-4)", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("(29)", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("(46)", "6", "(-99)", "(-99)", "");
                var v = ov.swizzle.zyxxy;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(46)", v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "(86)", "", null);
                var v = ov.swizzle.zyxxz;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)9)", "((7-2)5)", "((-23)9)", "-4", "((-23)9)");
                var v = ov.swizzle.zyxxw;
                Assert.AreEqual("((-23)9)", v.x);
                Assert.AreEqual("((7-2)5)", v.y);
                Assert.AreEqual("((-23)9)", v.z);
                Assert.AreEqual("((-23)9)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(0-8)", "((98)5)", "4", "((-41)8)", "4");
                var v = ov.swizzle.zyxxv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((98)5)", v.y);
                Assert.AreEqual("(0-8)", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "((7-2)-3)", "(-1-6)", "(-57)", "-6");
                var v = ov.swizzle.zyxy;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("((7-2)-3)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("((7-2)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((46)-3)", "((-9-6)9)", null, "(8-8)", "(37)");
                var v = ov.swizzle.zyxyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-6)9)", v.y);
                Assert.AreEqual("((46)-3)", v.z);
                Assert.AreEqual("((-9-6)9)", v.w);
                Assert.AreEqual("((46)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-2)-1)", "((-80)2)", "((-80)2)", null, null);
                var v = ov.swizzle.zyxyy;
                Assert.AreEqual("((-80)2)", v.x);
                Assert.AreEqual("((-80)2)", v.y);
                Assert.AreEqual("((6-2)-1)", v.z);
                Assert.AreEqual("((-80)2)", v.w);
                Assert.AreEqual("((-80)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "((4-5)0)", "(-8-3)", "((2-6)5)", "((9-1)0)");
                var v = ov.swizzle.zyxyz;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((4-5)0)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("((4-5)0)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(8-8)", "((60)0)", "(8-8)", "2");
                var v = ov.swizzle.zyxyw;
                Assert.AreEqual("((60)0)", v.x);
                Assert.AreEqual("(8-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("(8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", "", "(18)", "((9-5)-1)");
                var v = ov.swizzle.zyxyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((9-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(5-6)", "((9-9)5)", null);
                var v = ov.swizzle.zyxz;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(5-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-14)-6)", "(90)", "", "(-45)");
                var v = ov.swizzle.zyxzx;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("((-14)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(4-8)", "(-71)", "-3", "(-16)", "(4-8)");
                var v = ov.swizzle.zyxzy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "(62)", "((-96)-3)", "((-5-7)3)");
                var v = ov.swizzle.zyxzz;
                Assert.AreEqual("(62)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(62)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-8)-2)", "(91)", "(91)", "(-58)");
                var v = ov.swizzle.zyxzw;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("((-6-8)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(91)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "0", "8", "(05)", "((-49)4)");
                var v = ov.swizzle.zyxzv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-49)4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "(3-8)", "((7-1)-6)", "9");
                var v = ov.swizzle.zyxw;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((7-1)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "", "-6", "(1-1)", "");
                var v = ov.swizzle.zyxwx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((98)4)", "", "", "((0-6)5)");
                var v = ov.swizzle.zyxwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((98)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((98)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "2", "(-6-2)", "(-99)", "-3");
                var v = ov.swizzle.zyxwz;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("(-99)", v.w);
                Assert.AreEqual("(-6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-82)", "9", "2", "", "((-44)-2)");
                var v = ov.swizzle.zyxww;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-54)6)", "((-3-9)-9)", null, "((-3-9)-9)", "9");
                var v = ov.swizzle.zyxwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-9)-9)", v.y);
                Assert.AreEqual("((-54)6)", v.z);
                Assert.AreEqual("((-3-9)-9)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-9", "(-4-9)", "(-19)");
                var v = ov.swizzle.zyxv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-19)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((0-9)2)", "(12)", "((1-5)2)", null);
                var v = ov.swizzle.zyxvx;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("((0-9)2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-1)", null, "((-8-5)-9)", "((-8-5)-9)", "-8");
                var v = ov.swizzle.zyxvy;
                Assert.AreEqual("((-8-5)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((91)3)", "(-15)", "(-5-6)", "(9-1)", "-1");
                var v = ov.swizzle.zyxvz;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual("((91)3)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(7-4)", "((-28)-7)", "", "");
                var v = ov.swizzle.zyxvw;
                Assert.AreEqual("((-28)-7)", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("6", null, "-2", "-2", "-2");
                var v = ov.swizzle.zyxvv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "(51)", "((7-3)-4)", "(-8-9)", null);
                var v = ov.swizzle.zyy;
                Assert.AreEqual("((7-3)-4)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("(51)", v.z);
            }
            {
                var ov = new gvec5<string>("((-68)-2)", "((-73)3)", "", null, "2");
                var v = ov.swizzle.zyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-73)3)", v.y);
                Assert.AreEqual("((-73)3)", v.z);
                Assert.AreEqual("((-68)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-75)", "(7-7)", "((-4-8)-7)", null);
                var v = ov.swizzle.zyyxx;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-2-5)6)", "9", "1", "1");
                var v = ov.swizzle.zyyxy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-2-5)6)", v.y);
                Assert.AreEqual("((-2-5)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-2-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "2", null, "((70)-1)");
                var v = ov.swizzle.zyyxz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)-6)", null, "(-97)", "((96)4)", "((96)4)");
                var v = ov.swizzle.zyyxw;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-9)-6)", v.w);
                Assert.AreEqual("((96)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-9)", "", "9", "", "7");
                var v = ov.swizzle.zyyxv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(6-4)", null, "-8", "(1-2)", "(6-4)");
                var v = ov.swizzle.zyyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("9", "((7-4)0)", "((7-4)0)", null, "");
                var v = ov.swizzle.zyyyx;
                Assert.AreEqual("((7-4)0)", v.x);
                Assert.AreEqual("((7-4)0)", v.y);
                Assert.AreEqual("((7-4)0)", v.z);
                Assert.AreEqual("((7-4)0)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-85)", "2", "-8", "(78)");
                var v = ov.swizzle.zyyyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-85)", v.y);
                Assert.AreEqual("(-85)", v.z);
                Assert.AreEqual("(-85)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-47)2)", "((-70)4)", "((-70)4)", "(-73)");
                var v = ov.swizzle.zyyyz;
                Assert.AreEqual("((-70)4)", v.x);
                Assert.AreEqual("((-47)2)", v.y);
                Assert.AreEqual("((-47)2)", v.z);
                Assert.AreEqual("((-47)2)", v.w);
                Assert.AreEqual("((-70)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-83)", "(-83)", "", "((51)8)");
                var v = ov.swizzle.zyyyw;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((6-7)1)", "((6-7)1)", "((-65)-2)", "(1-3)", "(1-3)");
                var v = ov.swizzle.zyyyv;
                Assert.AreEqual("((-65)-2)", v.x);
                Assert.AreEqual("((6-7)1)", v.y);
                Assert.AreEqual("((6-7)1)", v.z);
                Assert.AreEqual("((6-7)1)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((44)-7)", null, "(-72)", "(05)");
                var v = ov.swizzle.zyyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((44)-7)", v.y);
                Assert.AreEqual("((44)-7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("3", "", "((-44)4)", "((-44)4)", "((0-9)5)");
                var v = ov.swizzle.zyyzx;
                Assert.AreEqual("((-44)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-44)4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "-5", "(39)", "-8");
                var v = ov.swizzle.zyyzy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-2", "((-2-1)0)", "-2", "-2");
                var v = ov.swizzle.zyyzz;
                Assert.AreEqual("((-2-1)0)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-2-1)0)", v.w);
                Assert.AreEqual("((-2-1)0)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "(72)", "(22)", "((-2-6)9)");
                var v = ov.swizzle.zyyzw;
                Assert.AreEqual("(72)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(72)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-4", "", "(-76)", "");
                var v = ov.swizzle.zyyzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(52)", "-8", "9", "((-27)7)");
                var v = ov.swizzle.zyyw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("((27)6)", "(-65)", "((69)-6)", "(-65)", "((4-1)-7)");
                var v = ov.swizzle.zyywx;
                Assert.AreEqual("((69)-6)", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("((27)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "-1", "-1", "((-2-6)1)", "((46)0)");
                var v = ov.swizzle.zyywy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-2-6)1)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "", "(-35)", "((3-9)8)", "7");
                var v = ov.swizzle.zyywz;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((3-9)8)", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", null, "-7", "(-42)", "((-21)-9)");
                var v = ov.swizzle.zyyww;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("((11)-4)", "(42)", "(42)", "((11)-4)", "8");
                var v = ov.swizzle.zyywv;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("(42)", v.z);
                Assert.AreEqual("((11)-4)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(6-6)", null, "((-56)-4)", "((-56)-4)");
                var v = ov.swizzle.zyyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(6-6)", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual("((-56)-4)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-56)", "", "(-56)", "(-50)");
                var v = ov.swizzle.zyyvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("(-50)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-5-4)", "-6", "((-21)-6)", "((26)7)", null);
                var v = ov.swizzle.zyyvy;
                Assert.AreEqual("((-21)-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-78)1)", "(8-7)", "(-1-5)", "(30)");
                var v = ov.swizzle.zyyvz;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("((-78)1)", v.y);
                Assert.AreEqual("((-78)1)", v.z);
                Assert.AreEqual("(30)", v.w);
                Assert.AreEqual("(8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)9)", "-5", "-5", "((2-6)-5)", "((4-4)9)");
                var v = ov.swizzle.zyyvw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((4-4)9)", v.w);
                Assert.AreEqual("((2-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)-1)", "(-98)", "-2", "(93)", "((-7-3)-1)");
                var v = ov.swizzle.zyyvv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("((-7-3)-1)", v.w);
                Assert.AreEqual("((-7-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-8)", "-9", "(-76)", "((66)-8)", "2");
                var v = ov.swizzle.zyz;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-76)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(-2-3)", "(-2-3)", "", "(6-7)");
                var v = ov.swizzle.zyzx;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-4-4)", "(-31)", "(-31)", "(-4-4)", "0");
                var v = ov.swizzle.zyzxx;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("(-4-4)", v.w);
                Assert.AreEqual("(-4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((60)-2)", "", null, "-2", null);
                var v = ov.swizzle.zyzxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((60)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "", "((2-1)0)", "");
                var v = ov.swizzle.zyzxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-82)", "", "((69)4)", "((04)-9)", "((-5-8)9)");
                var v = ov.swizzle.zyzxw;
                Assert.AreEqual("((69)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((69)4)", v.z);
                Assert.AreEqual("(-82)", v.w);
                Assert.AreEqual("((04)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-4)-4)", "((2-4)-4)", "0", "3", "((41)2)");
                var v = ov.swizzle.zyzxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((2-4)-4)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((2-4)-4)", v.w);
                Assert.AreEqual("((41)2)", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "(5-7)", "5", "(52)");
                var v = ov.swizzle.zyzy;
                Assert.AreEqual("(5-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(96)", "((0-2)1)", "(-66)", "((0-2)1)", "(2-5)");
                var v = ov.swizzle.zyzyx;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("((0-2)1)", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("((0-2)1)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-57)-6)", "((-57)-6)", "(89)", "5");
                var v = ov.swizzle.zyzyy;
                Assert.AreEqual("((-57)-6)", v.x);
                Assert.AreEqual("((-57)-6)", v.y);
                Assert.AreEqual("((-57)-6)", v.z);
                Assert.AreEqual("((-57)-6)", v.w);
                Assert.AreEqual("((-57)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((64)8)", null, "((64)8)", "(7-3)", "((-2-4)-6)");
                var v = ov.swizzle.zyzyz;
                Assert.AreEqual("((64)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((64)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((64)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(-60)", "((-91)-4)", "(-48)");
                var v = ov.swizzle.zyzyw;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-91)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-27)-8)", "(23)", "(23)", "-1");
                var v = ov.swizzle.zyzyv;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("((-27)-8)", v.y);
                Assert.AreEqual("(23)", v.z);
                Assert.AreEqual("((-27)-8)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-6-3)", "((-3-8)-6)", "(-8-3)", "");
                var v = ov.swizzle.zyzz;
                Assert.AreEqual("((-3-8)-6)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("((-3-8)-6)", v.z);
                Assert.AreEqual("((-3-8)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-60)", "((-86)0)", "(7-2)", "(2-7)");
                var v = ov.swizzle.zyzzx;
                Assert.AreEqual("((-86)0)", v.x);
                Assert.AreEqual("(-60)", v.y);
                Assert.AreEqual("((-86)0)", v.z);
                Assert.AreEqual("((-86)0)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-3-5)", null, "-5", "7");
                var v = ov.swizzle.zyzzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", null, "((-93)-2)", "8");
                var v = ov.swizzle.zyzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(56)", null, "(56)", "((-23)-3)");
                var v = ov.swizzle.zyzzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-9)9)", "", "((-9-9)9)", "((2-4)-6)");
                var v = ov.swizzle.zyzzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-9)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((2-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "0", "", "((-5-6)7)", "((0-5)-7)");
                var v = ov.swizzle.zyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-6)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-8)", "-6", "(-55)", "(4-6)", "((40)3)");
                var v = ov.swizzle.zyzwx;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("(4-6)", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(05)", "-4", "((-34)0)", "((-9-2)8)");
                var v = ov.swizzle.zyzwy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-34)0)", v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-4-7)", "-5", null, "-5");
                var v = ov.swizzle.zyzwz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(09)", "-4", null, "(-4-2)", "-4");
                var v = ov.swizzle.zyzww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("(-4-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-1)0)", "7", "(9-8)", "", "((-3-2)7)");
                var v = ov.swizzle.zyzwv;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(9-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-3-2)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(48)", "((-24)7)", "(1-2)", "", "((-24)7)");
                var v = ov.swizzle.zyzv;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("((-24)7)", v.y);
                Assert.AreEqual("(1-2)", v.z);
                Assert.AreEqual("((-24)7)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "((-48)-9)", "", null);
                var v = ov.swizzle.zyzvx;
                Assert.AreEqual("((-48)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-48)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "(7-4)", "6", null, "(7-4)");
                var v = ov.swizzle.zyzvy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(7-4)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(15)", "(15)", "", "((1-4)8)");
                var v = ov.swizzle.zyzvz;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("((1-4)8)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-2)", "", "-6", "((21)2)", "-8");
                var v = ov.swizzle.zyzvw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((21)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(-9-4)", "-8", "(-1-4)");
                var v = ov.swizzle.zyzvv;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "(-4-9)", "((2-7)-4)", "", null);
                var v = ov.swizzle.zyw;
                Assert.AreEqual("((2-7)-4)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((8-2)-3)", "((8-2)-3)", "", null, "(-13)");
                var v = ov.swizzle.zywx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-2)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-2)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "((82)9)", null, "4", null);
                var v = ov.swizzle.zywxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((82)9)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-23)", "((1-6)-4)", "(-5-7)", "((-45)-9)", "((-45)-9)");
                var v = ov.swizzle.zywxy;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("((1-6)-4)", v.y);
                Assert.AreEqual("((-45)-9)", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("((1-6)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "9", "", "6");
                var v = ov.swizzle.zywxz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-5)6)", "((3-5)6)", "((3-5)6)", "2");
                var v = ov.swizzle.zywxw;
                Assert.AreEqual("((3-5)6)", v.x);
                Assert.AreEqual("((3-5)6)", v.y);
                Assert.AreEqual("((3-5)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "8", "((-7-4)-5)", "(-86)", "8");
                var v = ov.swizzle.zywxv;
                Assert.AreEqual("((-7-4)-5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-4)", "-1", "((4-1)5)", "(-9-6)");
                var v = ov.swizzle.zywy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("((4-1)5)", v.z);
                Assert.AreEqual("(-2-4)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "4", "", "(06)", "(3-7)");
                var v = ov.swizzle.zywyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(06)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-4)-4)", "(-93)", "-6", "((87)9)");
                var v = ov.swizzle.zywyy;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("((-9-4)-4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-9-4)-4)", v.w);
                Assert.AreEqual("((-9-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)-3)", "((-7-2)-3)", null, "-5", "(7-4)");
                var v = ov.swizzle.zywyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-2)-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-7-2)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(35)", "((3-3)5)", "((-5-8)2)");
                var v = ov.swizzle.zywyw;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((3-3)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)-2)", "((-8-9)3)", null, "-9", "9");
                var v = ov.swizzle.zywyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-8-9)3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-8-9)3)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "-8", "(2-8)", "((3-9)6)");
                var v = ov.swizzle.zywz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(0-8)", "(-28)", "(08)", "(-28)", "");
                var v = ov.swizzle.zywzx;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((33)7)", "(-85)", "((92)3)", "-7", "(-85)");
                var v = ov.swizzle.zywzy;
                Assert.AreEqual("((92)3)", v.x);
                Assert.AreEqual("(-85)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((92)3)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(11)", "1", "(11)", "((38)-2)");
                var v = ov.swizzle.zywzz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "", "((-2-3)-5)", "((-18)1)");
                var v = ov.swizzle.zywzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-3)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(63)", null, "((-3-5)-3)", "((-3-5)-3)");
                var v = ov.swizzle.zywzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("((-3-5)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-3-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((76)-5)", null, "(58)", "4", "-2");
                var v = ov.swizzle.zyww;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("((42)2)", null, "(77)", "-8", "-9");
                var v = ov.swizzle.zywwx;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((42)2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-6-5)-5)", "(6-1)", "(49)", "3");
                var v = ov.swizzle.zywwy;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("((-6-5)-5)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("(49)", v.w);
                Assert.AreEqual("((-6-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(63)", "(63)", "0", "(-2-2)", "(63)");
                var v = ov.swizzle.zywwz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", null, "(64)", "");
                var v = ov.swizzle.zywww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("(64)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-4)", null, "(-9-9)", "((63)4)");
                var v = ov.swizzle.zywwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((63)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((11)-4)", "-4", "((-34)-3)", "", "-4");
                var v = ov.swizzle.zywv;
                Assert.AreEqual("((-34)-3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(1-1)", "-9", "(72)", "-9", "1");
                var v = ov.swizzle.zywvx;
                Assert.AreEqual("(72)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "((4-8)-5)", "((4-8)-5)", "((-7-5)5)");
                var v = ov.swizzle.zywvy;
                Assert.AreEqual("((4-8)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((4-8)-5)", v.z);
                Assert.AreEqual("((-7-5)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "((4-7)8)", "", null, "-4");
                var v = ov.swizzle.zywvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-7)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(1-2)", null, "5", "(-15)", "");
                var v = ov.swizzle.zywvw;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "((70)1)", "", "(-9-7)", "((-7-7)-2)");
                var v = ov.swizzle.zywvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((70)1)", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("((-7-7)-2)", v.w);
                Assert.AreEqual("((-7-7)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((20)-8)", "4", "((-28)-2)", "5", null);
                var v = ov.swizzle.zyv;
                Assert.AreEqual("((-28)-2)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("", "-8", "((-8-9)7)", "(-90)", "-2");
                var v = ov.swizzle.zyvx;
                Assert.AreEqual("((-8-9)7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((9-5)-9)", "((6-9)-4)", "-4", "9", "(-80)");
                var v = ov.swizzle.zyvxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((6-9)-4)", v.y);
                Assert.AreEqual("(-80)", v.z);
                Assert.AreEqual("((9-5)-9)", v.w);
                Assert.AreEqual("((9-5)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-6)-1)", "-2", "9", "(31)", "9");
                var v = ov.swizzle.zyvxy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((0-6)-1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "((6-4)-6)", "-8", "(-7-9)");
                var v = ov.swizzle.zyvxz;
                Assert.AreEqual("((6-4)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((6-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(67)", "", "8", "", "((-91)-7)");
                var v = ov.swizzle.zyvxw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-91)-7)", v.z);
                Assert.AreEqual("(67)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(0-4)", "((70)-7)", "(-49)", "", "(-49)");
                var v = ov.swizzle.zyvxv;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("((70)-7)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)-1)", "(-82)", null, "((-73)5)", "-7");
                var v = ov.swizzle.zyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-82)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "((8-7)3)", "5", "((-78)8)", null);
                var v = ov.swizzle.zyvyx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((8-7)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-7)3)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-5-6)", "-1", "(-5-6)", "(9-7)");
                var v = ov.swizzle.zyvyy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("(9-7)", v.z);
                Assert.AreEqual("(-5-6)", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-1", "", "-8", "((6-7)9)");
                var v = ov.swizzle.zyvyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((6-7)9)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)-5)", "(2-2)", "((03)-4)", "", "(1-2)");
                var v = ov.swizzle.zyvyw;
                Assert.AreEqual("((03)-4)", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(1-2)", v.z);
                Assert.AreEqual("(2-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "5", "-2", "-7");
                var v = ov.swizzle.zyvyv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((0-6)-4)", null, "((-67)9)", "-5", "((0-6)-4)");
                var v = ov.swizzle.zyvz;
                Assert.AreEqual("((-67)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-6)-4)", v.z);
                Assert.AreEqual("((-67)9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "9", "1", "-3", "1");
                var v = ov.swizzle.zyvzx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "(-4-7)", "((-20)8)", "");
                var v = ov.swizzle.zyvzy;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)-2)", "", "((6-7)-8)", "(-1-7)", "7");
                var v = ov.swizzle.zyvzz;
                Assert.AreEqual("((6-7)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((6-7)-8)", v.w);
                Assert.AreEqual("((6-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((70)-6)", "(4-2)", "((70)-6)", "((02)-3)", "0");
                var v = ov.swizzle.zyvzw;
                Assert.AreEqual("((70)-6)", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((70)-6)", v.w);
                Assert.AreEqual("((02)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "(9-6)", "4", "");
                var v = ov.swizzle.zyvzv;
                Assert.AreEqual("(9-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)-1)", "2", "2", "(9-8)", "2");
                var v = ov.swizzle.zyvw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(9-8)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "-9", null, "(-7-3)", "((-84)0)");
                var v = ov.swizzle.zyvwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-84)0)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "((-13)5)", "4", "(-95)", "");
                var v = ov.swizzle.zyvwy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-13)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("((-13)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", null, "((-5-2)-2)", "");
                var v = ov.swizzle.zyvwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-2)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-7", "8", "", "-9", "((86)8)");
                var v = ov.swizzle.zyvww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((86)8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "7", "-2", "((-68)-1)");
                var v = ov.swizzle.zyvwv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-68)-1)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-68)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-3", "((01)1)", "((-1-8)4)", "-6");
                var v = ov.swizzle.zyvv;
                Assert.AreEqual("((01)1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-3-8)", "(-3-8)", "", "((18)3)");
                var v = ov.swizzle.zyvvx;
                Assert.AreEqual("(-3-8)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("((18)3)", v.z);
                Assert.AreEqual("((18)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-9)", "(-18)", "(-18)", "(02)", null);
                var v = ov.swizzle.zyvvy;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", "(-6-9)", "(5-7)", "((-8-3)2)");
                var v = ov.swizzle.zyvvz;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-3)2)", v.z);
                Assert.AreEqual("((-8-3)2)", v.w);
                Assert.AreEqual("(-6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-93)-1)", "-5", null, "((-93)-1)", "((3-4)-3)");
                var v = ov.swizzle.zyvvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((3-4)-3)", v.z);
                Assert.AreEqual("((3-4)-3)", v.w);
                Assert.AreEqual("((-93)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "0", null, "(-2-6)", "");
                var v = ov.swizzle.zyvvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "(2-8)", null, "", "1");
                var v = ov.swizzle.zz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec5<string>("((44)6)", "((5-7)0)", "((44)6)", "((5-7)0)", "5");
                var v = ov.swizzle.zzx;
                Assert.AreEqual("((44)6)", v.x);
                Assert.AreEqual("((44)6)", v.y);
                Assert.AreEqual("((44)6)", v.z);
            }
            {
                var ov = new gvec5<string>("((03)-6)", "-4", "-4", null, null);
                var v = ov.swizzle.zzxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((03)-6)", v.z);
                Assert.AreEqual("((03)-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((9-5)-9)", "", "((9-5)-9)", "((-21)5)");
                var v = ov.swizzle.zzxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((5-6)-7)", "(6-6)", "(44)", "((-68)-5)", "((-3-9)2)");
                var v = ov.swizzle.zzxxy;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("((5-6)-7)", v.z);
                Assert.AreEqual("((5-6)-7)", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-1", "-7", "", "-1");
                var v = ov.swizzle.zzxxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-20)-2)", "-4", "(04)", null, "9");
                var v = ov.swizzle.zzxxw;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("(04)", v.y);
                Assert.AreEqual("((-20)-2)", v.z);
                Assert.AreEqual("((-20)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-56)-2)", "", "8", "(7-9)");
                var v = ov.swizzle.zzxxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((05)8)", "", "8", "(-22)");
                var v = ov.swizzle.zzxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((05)8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "(5-3)", "", "((06)-8)");
                var v = ov.swizzle.zzxyx;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((57)5)", "((6-3)5)", "8", "-7");
                var v = ov.swizzle.zzxyy;
                Assert.AreEqual("((6-3)5)", v.x);
                Assert.AreEqual("((6-3)5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((57)5)", v.w);
                Assert.AreEqual("((57)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-10)-5)", "-5", "-5", "-9", "(6-1)");
                var v = ov.swizzle.zzxyz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-10)-5)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(0-6)", "-6", "", "");
                var v = ov.swizzle.zzxyw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(0-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "9", "(75)", "(1-8)", "-5");
                var v = ov.swizzle.zzxyv;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(4-7)", "(4-5)", "", "((1-3)0)", "(92)");
                var v = ov.swizzle.zzxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(4-7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-6)6)", "-1", null, "6", null);
                var v = ov.swizzle.zzxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-7-6)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-7-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "", "((92)8)", "((-82)-1)");
                var v = ov.swizzle.zzxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)-4)", "-9", "((0-7)-4)", "((0-7)-4)", null);
                var v = ov.swizzle.zzxzz;
                Assert.AreEqual("((0-7)-4)", v.x);
                Assert.AreEqual("((0-7)-4)", v.y);
                Assert.AreEqual("((0-7)-4)", v.z);
                Assert.AreEqual("((0-7)-4)", v.w);
                Assert.AreEqual("((0-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-75)", "0", null, "(4-8)");
                var v = ov.swizzle.zzxzw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((5-7)4)", null, "((58)-1)", "(-4-8)");
                var v = ov.swizzle.zzxzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)9)", "((1-5)5)", "((0-9)-5)", "4", "(-8-7)");
                var v = ov.swizzle.zzxw;
                Assert.AreEqual("((0-9)-5)", v.x);
                Assert.AreEqual("((0-9)-5)", v.y);
                Assert.AreEqual("((2-6)9)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("((-36)-3)", "(06)", "-4", "((-77)0)", "((-47)8)");
                var v = ov.swizzle.zzxwx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-36)-3)", v.z);
                Assert.AreEqual("((-77)0)", v.w);
                Assert.AreEqual("((-36)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "((10)8)", "(6-2)", "((10)8)", "(5-8)");
                var v = ov.swizzle.zzxwy;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("((10)8)", v.w);
                Assert.AreEqual("((10)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-5)", "4", null, "", "(-3-2)");
                var v = ov.swizzle.zzxwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(41)", "(9-3)", "", null, "(41)");
                var v = ov.swizzle.zzxww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-85)2)", "((13)-6)", "(-6-4)", "6");
                var v = ov.swizzle.zzxwv;
                Assert.AreEqual("((13)-6)", v.x);
                Assert.AreEqual("((13)-6)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(3-9)", "(5-3)", "-5", "((4-5)2)", "(3-9)");
                var v = ov.swizzle.zzxv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(3-9)", v.z);
                Assert.AreEqual("(3-9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-6-9)-9)", null, "((-6-9)-9)", "((-6-9)-9)");
                var v = ov.swizzle.zzxvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-9)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(4-5)", "(35)", "(-4-8)", "8");
                var v = ov.swizzle.zzxvy;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-94)", "", "((0-5)2)", "((0-5)2)", "-2");
                var v = ov.swizzle.zzxvz;
                Assert.AreEqual("((0-5)2)", v.x);
                Assert.AreEqual("((0-5)2)", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((0-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-3)3)", "((28)4)", "", "-6", null);
                var v = ov.swizzle.zzxvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-3)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-3-6)", "-3", "", "(-6-2)");
                var v = ov.swizzle.zzxvv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual("(-6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-9)-9)", "((-55)-9)", "", "(65)", "");
                var v = ov.swizzle.zzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-55)-9)", v.z);
            }
            {
                var ov = new gvec5<string>("-7", "-4", "((34)-7)", "((-4-4)-6)", "(45)");
                var v = ov.swizzle.zzyx;
                Assert.AreEqual("((34)-7)", v.x);
                Assert.AreEqual("((34)-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "1", "1", "((03)-7)", "-4");
                var v = ov.swizzle.zzyxx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((64)6)", "(18)", "(-53)", "((64)6)", "((-9-5)-6)");
                var v = ov.swizzle.zzyxy;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("((64)6)", v.w);
                Assert.AreEqual("(18)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-4)5)", "-7", "-7", "(9-8)", "(31)");
                var v = ov.swizzle.zzyxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((6-4)5)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "-1", "(17)", "(-7-8)");
                var v = ov.swizzle.zzyxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)-9)", "6", "(-53)", null, "((1-9)4)");
                var v = ov.swizzle.zzyxv;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((1-7)-9)", v.w);
                Assert.AreEqual("((1-9)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-36)", "((2-7)9)", "7", "((2-7)9)", "7");
                var v = ov.swizzle.zzyy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((2-7)9)", v.z);
                Assert.AreEqual("((2-7)9)", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "((2-5)8)", "((94)3)", "-2", "");
                var v = ov.swizzle.zzyyx;
                Assert.AreEqual("((94)3)", v.x);
                Assert.AreEqual("((94)3)", v.y);
                Assert.AreEqual("((2-5)8)", v.z);
                Assert.AreEqual("((2-5)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(1-2)", null, "-5", "5", "-5");
                var v = ov.swizzle.zzyyy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(53)", "(00)", "(00)", "((2-2)3)");
                var v = ov.swizzle.zzyyz;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((8-2)-2)", "((65)-7)", "9", "-7");
                var v = ov.swizzle.zzyyw;
                Assert.AreEqual("((65)-7)", v.x);
                Assert.AreEqual("((65)-7)", v.y);
                Assert.AreEqual("((8-2)-2)", v.z);
                Assert.AreEqual("((8-2)-2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((05)2)", "(-42)", "((-52)3)", "-9", "(2-3)");
                var v = ov.swizzle.zzyyv;
                Assert.AreEqual("((-52)3)", v.x);
                Assert.AreEqual("((-52)3)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-2-1)", null, "-7", "-6");
                var v = ov.swizzle.zzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-7-3)-6)", "-4", "(-31)", "", "(-49)");
                var v = ov.swizzle.zzyzx;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("((-7-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)0)", "(93)", "(4-1)", "(1-6)", null);
                var v = ov.swizzle.zzyzy;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(93)", v.v);
            }
            {
                var ov = new gvec5<string>("((58)3)", "((7-4)-5)", "-2", "(4-7)", "6");
                var v = ov.swizzle.zzyzz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((7-4)-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("1", "8", "(-6-4)", "(-6-4)", "(-7-3)");
                var v = ov.swizzle.zzyzw;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)9)", "((-98)-5)", "-9", "(12)", "-8");
                var v = ov.swizzle.zzyzv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-98)-5)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-76)-6)", "((-76)-6)", "(-63)", "");
                var v = ov.swizzle.zzyw;
                Assert.AreEqual("((-76)-6)", v.x);
                Assert.AreEqual("((-76)-6)", v.y);
                Assert.AreEqual("((-76)-6)", v.z);
                Assert.AreEqual("(-63)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "(-95)", "((0-4)-9)", "((-4-9)3)");
                var v = ov.swizzle.zzywx;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((0-4)-9)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "((-32)-7)", "-4", "((-90)8)", "((-90)8)");
                var v = ov.swizzle.zzywy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-32)-7)", v.z);
                Assert.AreEqual("((-90)8)", v.w);
                Assert.AreEqual("((-32)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(5-6)", "8", "(5-6)", "((00)7)");
                var v = ov.swizzle.zzywz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual("(5-6)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((9-7)-5)", "1", "", "((9-7)-5)", "3");
                var v = ov.swizzle.zzyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((9-7)-5)", v.w);
                Assert.AreEqual("((9-7)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-4", "(2-9)", "(2-9)", "((-8-1)7)");
                var v = ov.swizzle.zzywv;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("((-8-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-4)-6)", "(-65)", "(-65)", "((70)-2)", "2");
                var v = ov.swizzle.zzyv;
                Assert.AreEqual("(-65)", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "-1", null, "9", "(55)");
                var v = ov.swizzle.zzyvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "7", "-6", "(-77)", "((-83)-5)");
                var v = ov.swizzle.zzyvy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-83)-5)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "((58)0)", "(-73)", "(-7-5)", "(-73)");
                var v = ov.swizzle.zzyvz;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("((58)0)", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("((-92)-9)", null, "-6", "((2-5)8)", "(70)");
                var v = ov.swizzle.zzyvw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("((2-5)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-1)", "(2-1)", null, "((86)-7)", "((5-7)7)");
                var v = ov.swizzle.zzyvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("((5-7)7)", v.w);
                Assert.AreEqual("((5-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "(51)", "4", "((-96)6)", "(51)");
                var v = ov.swizzle.zzz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
            }
            {
                var ov = new gvec5<string>("", "8", "(5-9)", "8", "-4");
                var v = ov.swizzle.zzzx;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((8-4)8)", "4", "4", "-4", "(-32)");
                var v = ov.swizzle.zzzxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((8-4)8)", v.w);
                Assert.AreEqual("((8-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "3", "((43)8)", "((7-9)-2)", "(-5-3)");
                var v = ov.swizzle.zzzxy;
                Assert.AreEqual("((43)8)", v.x);
                Assert.AreEqual("((43)8)", v.y);
                Assert.AreEqual("((43)8)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", null, "-2", "((99)-5)", "");
                var v = ov.swizzle.zzzxz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(57)", "((-8-4)-6)", "(-38)", null);
                var v = ov.swizzle.zzzxw;
                Assert.AreEqual("((-8-4)-6)", v.x);
                Assert.AreEqual("((-8-4)-6)", v.y);
                Assert.AreEqual("((-8-4)-6)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-38)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-7-9)", "-5", "-3", "((-8-6)-4)");
                var v = ov.swizzle.zzzxv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-8-6)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((13)5)", "(-99)", "4", "3", "(-99)");
                var v = ov.swizzle.zzzy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-99)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-11)", "((-7-3)2)", "((8-7)-5)", "2");
                var v = ov.swizzle.zzzyx;
                Assert.AreEqual("((-7-3)2)", v.x);
                Assert.AreEqual("((-7-3)2)", v.y);
                Assert.AreEqual("((-7-3)2)", v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-4)-5)", null, "(-86)", "(-86)", "-1");
                var v = ov.swizzle.zzzyy;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("(-86)", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "1", "(2-4)", "1");
                var v = ov.swizzle.zzzyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "(-3-7)", "(02)", "7", "((4-3)4)");
                var v = ov.swizzle.zzzyw;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("(-3-7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-5)", "6", "7", "(4-2)", "");
                var v = ov.swizzle.zzzyv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((8-5)-6)", "((23)6)", "((81)-3)", "4");
                var v = ov.swizzle.zzzz;
                Assert.AreEqual("((23)6)", v.x);
                Assert.AreEqual("((23)6)", v.y);
                Assert.AreEqual("((23)6)", v.z);
                Assert.AreEqual("((23)6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "0", "(-42)", "(-38)", "6");
                var v = ov.swizzle.zzzzx;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-9-4)", "8", "((-2-5)3)", "((48)2)");
                var v = ov.swizzle.zzzzy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)5)", "7", "", "(1-8)", "(1-8)");
                var v = ov.swizzle.zzzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-1", "((-66)4)", "-1", "");
                var v = ov.swizzle.zzzzw;
                Assert.AreEqual("((-66)4)", v.x);
                Assert.AreEqual("((-66)4)", v.y);
                Assert.AreEqual("((-66)4)", v.z);
                Assert.AreEqual("((-66)4)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "(0-6)", null, "(-8-1)", "");
                var v = ov.swizzle.zzzzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((46)-4)", "-5", "", "(7-9)", "8");
                var v = ov.swizzle.zzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(7-9)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(-22)", "", "(79)", "1");
                var v = ov.swizzle.zzzwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-18)", "((3-2)-9)", "((2-1)3)", "", "0");
                var v = ov.swizzle.zzzwy;
                Assert.AreEqual("((2-1)3)", v.x);
                Assert.AreEqual("((2-1)3)", v.y);
                Assert.AreEqual("((2-1)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((3-2)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "(-96)", "0", "((-14)-2)", "((-14)-2)");
                var v = ov.swizzle.zzzwz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-14)-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-34)", "((-73)6)", "((24)-4)", null);
                var v = ov.swizzle.zzzww;
                Assert.AreEqual("((-73)6)", v.x);
                Assert.AreEqual("((-73)6)", v.y);
                Assert.AreEqual("((-73)6)", v.z);
                Assert.AreEqual("((24)-4)", v.w);
                Assert.AreEqual("((24)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((74)1)", "-2", "(-1-9)", "", "(-99)");
                var v = ov.swizzle.zzzwv;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-99)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "4", "((6-2)-2)", "(-96)", "((6-2)-2)");
                var v = ov.swizzle.zzzv;
                Assert.AreEqual("((6-2)-2)", v.x);
                Assert.AreEqual("((6-2)-2)", v.y);
                Assert.AreEqual("((6-2)-2)", v.z);
                Assert.AreEqual("((6-2)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((-75)-9)", "-2", "(-7-3)", "((-9-9)3)");
                var v = ov.swizzle.zzzvx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-9-9)3)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "", "4", "4");
                var v = ov.swizzle.zzzvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(1-7)", "((89)7)", "2", "((89)7)");
                var v = ov.swizzle.zzzvz;
                Assert.AreEqual("((89)7)", v.x);
                Assert.AreEqual("((89)7)", v.y);
                Assert.AreEqual("((89)7)", v.z);
                Assert.AreEqual("((89)7)", v.w);
                Assert.AreEqual("((89)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "(35)", "4", "");
                var v = ov.swizzle.zzzvw;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-80)", "-4", "((-81)-7)", "(7-6)", "(1-6)");
                var v = ov.swizzle.zzzvv;
                Assert.AreEqual("((-81)-7)", v.x);
                Assert.AreEqual("((-81)-7)", v.y);
                Assert.AreEqual("((-81)-7)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "", null, "(-3-2)", "((-15)4)");
                var v = ov.swizzle.zzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-3-2)", v.z);
            }
            {
                var ov = new gvec5<string>("(3-6)", "(1-5)", null, "5", "-8");
                var v = ov.swizzle.zzwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(3-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(9-5)", "-6", "(-43)", "-6");
                var v = ov.swizzle.zzwxx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-1-9)", "(68)", "(-1-9)", "(-93)", "(-1-9)");
                var v = ov.swizzle.zzwxy;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "7", "((-8-2)1)", "7");
                var v = ov.swizzle.zzwxz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-8-2)1)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-31)0)", "-4", null, "", "(9-1)");
                var v = ov.swizzle.zzwxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-31)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-52)", "(6-8)", "(-52)", "(-6-6)", "((84)-9)");
                var v = ov.swizzle.zzwxv;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("((84)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-8)7)", "((-3-8)7)", "((-93)1)", "(-8-4)", "-6");
                var v = ov.swizzle.zzwy;
                Assert.AreEqual("((-93)1)", v.x);
                Assert.AreEqual("((-93)1)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("((-3-8)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(52)", "((-2-4)-5)", "((4-7)8)", "(52)", null);
                var v = ov.swizzle.zzwyx;
                Assert.AreEqual("((4-7)8)", v.x);
                Assert.AreEqual("((4-7)8)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("((-2-4)-5)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "", "(09)", "((22)1)");
                var v = ov.swizzle.zzwyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "(-63)", "((43)-8)", "-1", "((4-4)3)");
                var v = ov.swizzle.zzwyz;
                Assert.AreEqual("((43)-8)", v.x);
                Assert.AreEqual("((43)-8)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("((43)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-5)7)", null, null, "-1", null);
                var v = ov.swizzle.zzwyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(1-2)", "((3-7)4)", "((-76)6)", "(1-2)");
                var v = ov.swizzle.zzwyv;
                Assert.AreEqual("((3-7)4)", v.x);
                Assert.AreEqual("((3-7)4)", v.y);
                Assert.AreEqual("((-76)6)", v.z);
                Assert.AreEqual("(1-2)", v.w);
                Assert.AreEqual("(1-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((92)6)", "7", "(-4-7)", "(-4-7)", null);
                var v = ov.swizzle.zzwz;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("(-4-7)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((-4-2)2)", "((9-5)-2)", null, "(25)");
                var v = ov.swizzle.zzwzx;
                Assert.AreEqual("((9-5)-2)", v.x);
                Assert.AreEqual("((9-5)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-5)-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)-9)", "-6", "(0-1)", "", "((5-8)-6)");
                var v = ov.swizzle.zzwzy;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-35)", "((92)5)", "", "((92)5)", "(-35)");
                var v = ov.swizzle.zzwzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((92)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-98)-5)", "", "", "(-40)");
                var v = ov.swizzle.zzwzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((99)-9)", "((99)-9)", "((-2-4)-4)", "(2-6)", null);
                var v = ov.swizzle.zzwzv;
                Assert.AreEqual("((-2-4)-4)", v.x);
                Assert.AreEqual("((-2-4)-4)", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("((-2-4)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", "((56)-1)", "", "", "(68)");
                var v = ov.swizzle.zzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-60)", "6", "((34)-3)", "(3-3)", "3");
                var v = ov.swizzle.zzwwx;
                Assert.AreEqual("((34)-3)", v.x);
                Assert.AreEqual("((34)-3)", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-69)8)", "(-9-9)", null, "");
                var v = ov.swizzle.zzwwy;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-69)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)-6)", "((10)4)", "((10)4)", "((-55)-7)", null);
                var v = ov.swizzle.zzwwz;
                Assert.AreEqual("((10)4)", v.x);
                Assert.AreEqual("((10)4)", v.y);
                Assert.AreEqual("((-55)-7)", v.z);
                Assert.AreEqual("((-55)-7)", v.w);
                Assert.AreEqual("((10)4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(5-4)", "((1-9)0)", "(5-4)", "");
                var v = ov.swizzle.zzwww;
                Assert.AreEqual("((1-9)0)", v.x);
                Assert.AreEqual("((1-9)0)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual("(5-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(60)", "(-1-8)", "-6", "", "(-2-4)");
                var v = ov.swizzle.zzwwv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "", "-3", "((32)-4)");
                var v = ov.swizzle.zzwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((32)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "-5", "(-1-6)", "((-70)9)", "(-96)");
                var v = ov.swizzle.zzwvx;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("((-70)9)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("6", "-2", "(-24)", "((-2-2)4)", "6");
                var v = ov.swizzle.zzwvy;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("((-2-2)4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((1-9)0)", "(-2-6)", "(35)", "((-91)-8)", "(34)");
                var v = ov.swizzle.zzwvz;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("((-91)-8)", v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "", "-8", "(-52)");
                var v = ov.swizzle.zzwvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "((5-7)0)", "((75)-5)", "((0-7)3)");
                var v = ov.swizzle.zzwvv;
                Assert.AreEqual("((5-7)0)", v.x);
                Assert.AreEqual("((5-7)0)", v.y);
                Assert.AreEqual("((75)-5)", v.z);
                Assert.AreEqual("((0-7)3)", v.w);
                Assert.AreEqual("((0-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-33)", "(-76)", "((62)-8)", null, "(-33)");
                var v = ov.swizzle.zzv;
                Assert.AreEqual("((62)-8)", v.x);
                Assert.AreEqual("((62)-8)", v.y);
                Assert.AreEqual("(-33)", v.z);
            }
            {
                var ov = new gvec5<string>("(-5-3)", "((41)5)", "(-5-3)", "-7", "-9");
                var v = ov.swizzle.zzvx;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-5-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-9)-9)", "(-5-8)", "-3", null, "(-1-8)");
                var v = ov.swizzle.zzvxx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("((6-9)-9)", v.w);
                Assert.AreEqual("((6-9)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-4)-1)", "", "((-8-2)-2)", "(-2-5)", "((04)7)");
                var v = ov.swizzle.zzvxy;
                Assert.AreEqual("((-8-2)-2)", v.x);
                Assert.AreEqual("((-8-2)-2)", v.y);
                Assert.AreEqual("((04)7)", v.z);
                Assert.AreEqual("((2-4)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)-1)", null, "(-62)", "(-62)", "7");
                var v = ov.swizzle.zzvxz;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-62)-1)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((51)4)", "((-6-7)1)", null, "9");
                var v = ov.swizzle.zzvxw;
                Assert.AreEqual("((-6-7)1)", v.x);
                Assert.AreEqual("((-6-7)1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-8)4)", "((-6-3)-5)", "-9", "(19)", null);
                var v = ov.swizzle.zzvxv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-8)4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)9)", "((-96)-2)", "(19)", "((-96)-2)", "-2");
                var v = ov.swizzle.zzvy;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-96)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(20)", "", "", "-4");
                var v = ov.swizzle.zzvyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(6-4)", "((0-5)1)", "", "(53)");
                var v = ov.swizzle.zzvyy;
                Assert.AreEqual("((0-5)1)", v.x);
                Assert.AreEqual("((0-5)1)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("(6-4)", v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-5)0)", "((-7-5)4)", "", "2");
                var v = ov.swizzle.zzvyz;
                Assert.AreEqual("((-7-5)4)", v.x);
                Assert.AreEqual("((-7-5)4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-4-5)0)", v.w);
                Assert.AreEqual("((-7-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((05)-1)", "", "-8", "((-87)-1)", "(-2-5)");
                var v = ov.swizzle.zzvyw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-87)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "((-5-5)6)", null, "((-5-5)6)");
                var v = ov.swizzle.zzvyv;
                Assert.AreEqual("((-5-5)6)", v.x);
                Assert.AreEqual("((-5-5)6)", v.y);
                Assert.AreEqual("((-5-5)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-5-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-8)-4)", "4", "-9", "((-54)-8)");
                var v = ov.swizzle.zzvz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-54)-8)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("2", "((-2-5)0)", "((-2-5)0)", "8", "2");
                var v = ov.swizzle.zzvzx;
                Assert.AreEqual("((-2-5)0)", v.x);
                Assert.AreEqual("((-2-5)0)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-2-5)0)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", "-8", "", "-6", "-6");
                var v = ov.swizzle.zzvzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-9", "(-75)", null, "-9");
                var v = ov.swizzle.zzvzz;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-75)", v.w);
                Assert.AreEqual("(-75)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-9", "((9-3)8)", "-9", "((9-3)8)");
                var v = ov.swizzle.zzvzw;
                Assert.AreEqual("((9-3)8)", v.x);
                Assert.AreEqual("((9-3)8)", v.y);
                Assert.AreEqual("((9-3)8)", v.z);
                Assert.AreEqual("((9-3)8)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "(3-6)", "((31)-2)", "(-8-6)");
                var v = ov.swizzle.zzvzv;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((2-1)-5)", "((2-1)-5)", "((2-1)-5)", "4");
                var v = ov.swizzle.zzvw;
                Assert.AreEqual("((2-1)-5)", v.x);
                Assert.AreEqual("((2-1)-5)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((2-1)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(-24)", "((-3-2)-4)", "(-24)", "-9", "-9");
                var v = ov.swizzle.zzvwx;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-24)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "((68)9)", null, "6");
                var v = ov.swizzle.zzvwy;
                Assert.AreEqual("((68)9)", v.x);
                Assert.AreEqual("((68)9)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "(7-7)", "-6", "(-97)", "");
                var v = ov.swizzle.zzvwz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-33)", null, "-7", "((97)9)", "");
                var v = ov.swizzle.zzvww;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((97)9)", v.w);
                Assert.AreEqual("((97)9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((47)-4)", "(3-9)", "", "-1");
                var v = ov.swizzle.zzvwv;
                Assert.AreEqual("(3-9)", v.x);
                Assert.AreEqual("(3-9)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "(97)", "-8", "((-2-1)3)");
                var v = ov.swizzle.zzvv;
                Assert.AreEqual("(97)", v.x);
                Assert.AreEqual("(97)", v.y);
                Assert.AreEqual("((-2-1)3)", v.z);
                Assert.AreEqual("((-2-1)3)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "((-7-6)1)", "", "(-64)", "((45)9)");
                var v = ov.swizzle.zzvvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((45)9)", v.z);
                Assert.AreEqual("((45)9)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-20)-6)", "((9-2)2)", "((-14)1)", "(-8-7)");
                var v = ov.swizzle.zzvvy;
                Assert.AreEqual("((9-2)2)", v.x);
                Assert.AreEqual("((9-2)2)", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("(-8-7)", v.w);
                Assert.AreEqual("((-20)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", "(36)", "(9-2)", "(36)", "-3");
                var v = ov.swizzle.zzvvz;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(9-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-9)-4)", "", "-7", null);
                var v = ov.swizzle.zzvvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-71)", "-3", "((-18)0)", null);
                var v = ov.swizzle.zzvvv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-34)", "((-50)-1)", "", "(-34)", "-3");
                var v = ov.swizzle.zw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-34)", v.y);
            }
            {
                var ov = new gvec5<string>("(8-7)", "(8-7)", "-7", "3", "0");
                var v = ov.swizzle.zwx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(8-7)", v.z);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "-1", "((-80)-5)", "((-59)-5)", "2");
                var v = ov.swizzle.zwxx;
                Assert.AreEqual("((-80)-5)", v.x);
                Assert.AreEqual("((-59)-5)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
            }
            {
                var ov = new gvec5<string>("", null, "(0-9)", "((2-9)-8)", "((2-9)-8)");
                var v = ov.swizzle.zwxxx;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("((2-9)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(02)", "(02)", "");
                var v = ov.swizzle.zwxxy;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("", "-7", "5", null, "5");
                var v = ov.swizzle.zwxxz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)1)", "(42)", "((-42)1)", null, "((79)-7)");
                var v = ov.swizzle.zwxxw;
                Assert.AreEqual("((-42)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-42)1)", v.z);
                Assert.AreEqual("((-42)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "8", "-3", "7", "8");
                var v = ov.swizzle.zwxxv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-61)-3)", "((-9-3)-9)", "-3", "-9", "(-10)");
                var v = ov.swizzle.zwxy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-61)-3)", v.z);
                Assert.AreEqual("((-9-3)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(02)", null, "-7", "6", "6");
                var v = ov.swizzle.zwxyx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec5<string>("(97)", "((-90)-6)", "-4", "((-44)-4)", "((6-2)5)");
                var v = ov.swizzle.zwxyy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-44)-4)", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("((-90)-6)", v.w);
                Assert.AreEqual("((-90)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-1)", "(-5-8)", "(-5-8)", "((2-4)8)", "(-5-8)");
                var v = ov.swizzle.zwxyz;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("((2-4)8)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((18)1)", "(-50)", "(68)", null);
                var v = ov.swizzle.zwxyw;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((18)1)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("((-52)-9)", "((98)-5)", "(1-5)", "9", "");
                var v = ov.swizzle.zwxyv;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-52)-9)", v.z);
                Assert.AreEqual("((98)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(0-5)", "9", "(7-5)");
                var v = ov.swizzle.zwxz;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(0-5)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "((6-7)2)", "((-6-5)-6)", "8", "(-1-5)");
                var v = ov.swizzle.zwxzx;
                Assert.AreEqual("((-6-5)-6)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-6-5)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(59)", "-2", "((-61)-1)", "(0-2)", "(59)");
                var v = ov.swizzle.zwxzy;
                Assert.AreEqual("((-61)-1)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("((-61)-1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(62)", "(62)", "(62)", "(62)", null);
                var v = ov.swizzle.zwxzz;
                Assert.AreEqual("(62)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("(62)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-8)-7)", "(-57)", "", "-2", "(7-5)");
                var v = ov.swizzle.zwxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-8-8)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-8", "(51)", "((54)4)", "(51)");
                var v = ov.swizzle.zwxzv;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("((54)4)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", "(62)", "(-4-9)", "((95)-6)", "");
                var v = ov.swizzle.zwxw;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("((95)-6)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("((95)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-4-1)", "(-52)", "(-2-7)", null, "((4-4)-5)");
                var v = ov.swizzle.zwxwx;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)-2)", "4", "((-8-7)5)", null, "(-70)");
                var v = ov.swizzle.zwxwy;
                Assert.AreEqual("((-8-7)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-81)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((93)6)", "((-52)-7)", "(-5-2)", "(25)", "((-1-4)-7)");
                var v = ov.swizzle.zwxwz;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("(25)", v.y);
                Assert.AreEqual("((93)6)", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "(-39)", "(-6-4)", "(27)");
                var v = ov.swizzle.zwxww;
                Assert.AreEqual("(-39)", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((62)2)", "((-5-9)7)", "((-6-9)6)", "(6-4)", "-4");
                var v = ov.swizzle.zwxwv;
                Assert.AreEqual("((-6-9)6)", v.x);
                Assert.AreEqual("(6-4)", v.y);
                Assert.AreEqual("((62)2)", v.z);
                Assert.AreEqual("(6-4)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(74)", "", "((-1-6)-3)", "6", "(-84)");
                var v = ov.swizzle.zwxv;
                Assert.AreEqual("((-1-6)-3)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("(-84)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-4)-3)", "(-50)", "-7", "(3-2)", "");
                var v = ov.swizzle.zwxvx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((-4-4)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-4-4)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)6)", "5", "-6", "(8-1)", "-6");
                var v = ov.swizzle.zwxvy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual("((-9-1)6)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)9)", "(87)", "(-5-3)", "7", "((9-2)9)");
                var v = ov.swizzle.zwxvz;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((9-2)9)", v.z);
                Assert.AreEqual("((9-2)9)", v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-48)-1)", null, "(7-1)", "((-30)-6)", "(7-1)");
                var v = ov.swizzle.zwxvw;
                Assert.AreEqual("(7-1)", v.x);
                Assert.AreEqual("((-30)-6)", v.y);
                Assert.AreEqual("((-48)-1)", v.z);
                Assert.AreEqual("(7-1)", v.w);
                Assert.AreEqual("((-30)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-5", "(-2-1)", "2");
                var v = ov.swizzle.zwxvv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-2-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-3", "((2-4)9)", "((80)-2)", "3");
                var v = ov.swizzle.zwy;
                Assert.AreEqual("((2-4)9)", v.x);
                Assert.AreEqual("((80)-2)", v.y);
                Assert.AreEqual("-3", v.z);
            }
            {
                var ov = new gvec5<string>("(-54)", "-4", "8", "-4", "-4");
                var v = ov.swizzle.zwyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-54)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "", "(-6-4)", "8", "-7");
                var v = ov.swizzle.zwyxx;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-9-4)", "((6-3)-1)", "((99)7)", "");
                var v = ov.swizzle.zwyxy;
                Assert.AreEqual("((6-3)-1)", v.x);
                Assert.AreEqual("((99)7)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(6-9)", null, "(6-9)", "((2-1)3)");
                var v = ov.swizzle.zwyxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("(6-9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)-3)", "(-3-5)", "-6", "4", "((4-6)-2)");
                var v = ov.swizzle.zwyxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("((-9-5)-3)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "(-8-8)", null, "(-8-8)", "((4-9)6)");
                var v = ov.swizzle.zwyxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("(81)", v.w);
                Assert.AreEqual("((4-9)6)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-89)", "((6-4)-3)", "(-31)", "((04)-1)");
                var v = ov.swizzle.zwyy;
                Assert.AreEqual("((6-4)-3)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("(-89)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((-7-9)7)", "", "-3", "");
                var v = ov.swizzle.zwyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-7-9)7)", v.z);
                Assert.AreEqual("((-7-9)7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(9-1)", "(-73)", "((3-9)7)", "(59)", "4");
                var v = ov.swizzle.zwyyy;
                Assert.AreEqual("((3-9)7)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-9)-8)", "((8-9)-8)", "1", "4", "4");
                var v = ov.swizzle.zwyyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((8-9)-8)", v.z);
                Assert.AreEqual("((8-9)-8)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-4-3)0)", "((5-1)6)", "", "(79)");
                var v = ov.swizzle.zwyyw;
                Assert.AreEqual("((5-1)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-3)0)", v.z);
                Assert.AreEqual("((-4-3)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-84)", "((-1-3)2)", "(-50)", null);
                var v = ov.swizzle.zwyyv;
                Assert.AreEqual("((-1-3)2)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-6)1)", "(19)", "(-2-6)", "-9", "-5");
                var v = ov.swizzle.zwyz;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((-4-4)-2)", "(-1-4)", "", "-5");
                var v = ov.swizzle.zwyzx;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-4)-2)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-53)", "(85)", "(-9-7)", null);
                var v = ov.swizzle.zwyzy;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("(85)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("((-12)3)", "6", "((-12)3)", "(-97)", "-6");
                var v = ov.swizzle.zwyzz;
                Assert.AreEqual("((-12)3)", v.x);
                Assert.AreEqual("(-97)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-12)3)", v.w);
                Assert.AreEqual("((-12)3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", null, "3", "(-2-5)", "(19)");
                var v = ov.swizzle.zwyzw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)8)", "", "", "(1-1)", "");
                var v = ov.swizzle.zwyzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(52)", "(-50)", "3", "-1");
                var v = ov.swizzle.zwyw;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((5-1)-1)", "(-44)", "((-1-7)4)", "(-44)", null);
                var v = ov.swizzle.zwywx;
                Assert.AreEqual("((-1-7)4)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("((5-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)2)", "(19)", "((46)2)", "((-82)3)", "");
                var v = ov.swizzle.zwywy;
                Assert.AreEqual("((46)2)", v.x);
                Assert.AreEqual("((-82)3)", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("((-82)3)", v.w);
                Assert.AreEqual("(19)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-1-7)", "1", "((0-1)3)", "(62)");
                var v = ov.swizzle.zwywz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((0-1)3)", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("((0-1)3)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "((-9-9)6)", "-4", "4", null);
                var v = ov.swizzle.zwyww;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-9-9)6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "(24)", "(24)", "((02)-7)");
                var v = ov.swizzle.zwywv;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(24)", v.w);
                Assert.AreEqual("((02)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-7)-3)", "(-1-8)", "((76)-2)", "((76)-2)", "-4");
                var v = ov.swizzle.zwyv;
                Assert.AreEqual("((76)-2)", v.x);
                Assert.AreEqual("((76)-2)", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("", "9", "(52)", "0", "-3");
                var v = ov.swizzle.zwyvx;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "", "(94)", "(-7-5)");
                var v = ov.swizzle.zwyvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((8-5)3)", "((8-5)3)", "((5-2)3)", "((8-5)3)", "(8-9)");
                var v = ov.swizzle.zwyvz;
                Assert.AreEqual("((5-2)3)", v.x);
                Assert.AreEqual("((8-5)3)", v.y);
                Assert.AreEqual("((8-5)3)", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual("((5-2)3)", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "((-8-9)-9)", null, "((-8-9)-9)");
                var v = ov.swizzle.zwyvw;
                Assert.AreEqual("((-8-9)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-9)-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "((54)9)", "5", "4", "((54)9)");
                var v = ov.swizzle.zwyvv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((54)9)", v.z);
                Assert.AreEqual("((54)9)", v.w);
                Assert.AreEqual("((54)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "-8", "((-7-2)4)", "(-8-1)", "(-8-8)");
                var v = ov.swizzle.zwz;
                Assert.AreEqual("((-7-2)4)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("((-7-2)4)", v.z);
            }
            {
                var ov = new gvec5<string>("((-56)-4)", "((-27)-1)", "9", "(-52)", "-4");
                var v = ov.swizzle.zwzx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-56)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((37)1)", "-9", "(0-2)", "(3-2)", "(3-2)");
                var v = ov.swizzle.zwzxx;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((37)1)", v.w);
                Assert.AreEqual("((37)1)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "-4", "(77)", "((-2-1)7)");
                var v = ov.swizzle.zwzxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", null, "((-86)7)", null, "");
                var v = ov.swizzle.zwzxz;
                Assert.AreEqual("((-86)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-86)7)", v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual("((-86)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-90)", "((6-9)-5)", "((-77)1)", "((6-9)-5)");
                var v = ov.swizzle.zwzxw;
                Assert.AreEqual("((6-9)-5)", v.x);
                Assert.AreEqual("((-77)1)", v.y);
                Assert.AreEqual("((6-9)-5)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-77)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", null, "", "(5-9)", "-4");
                var v = ov.swizzle.zwzxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-9)", "((9-7)5)", "((9-7)5)", "(-43)", "-6");
                var v = ov.swizzle.zwzy;
                Assert.AreEqual("((9-7)5)", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("((9-7)5)", v.z);
                Assert.AreEqual("((9-7)5)", v.w);
            }
            {
                var ov = new gvec5<string>("((0-5)2)", "((0-5)2)", "(-56)", "((-7-8)2)", "(7-6)");
                var v = ov.swizzle.zwzyx;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("((-7-8)2)", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("((0-5)2)", v.w);
                Assert.AreEqual("((0-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "9", "(7-4)", "(-49)");
                var v = ov.swizzle.zwzyy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-77)", "(9-5)", "(9-5)", "((-99)1)");
                var v = ov.swizzle.zwzyz;
                Assert.AreEqual("(9-5)", v.x);
                Assert.AreEqual("(9-5)", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)-3)", "-7", "((17)2)", "((6-4)8)", "(-6-3)");
                var v = ov.swizzle.zwzyw;
                Assert.AreEqual("((17)2)", v.x);
                Assert.AreEqual("((6-4)8)", v.y);
                Assert.AreEqual("((17)2)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((6-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)2)", "((88)9)", "-3", "-3", "(-3-9)");
                var v = ov.swizzle.zwzyv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((88)9)", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(0-2)", "((-7-1)6)", "((-57)2)", "(2-6)");
                var v = ov.swizzle.zwzz;
                Assert.AreEqual("((-7-1)6)", v.x);
                Assert.AreEqual("((-57)2)", v.y);
                Assert.AreEqual("((-7-1)6)", v.z);
                Assert.AreEqual("((-7-1)6)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "", "(68)", "(17)", "(96)");
                var v = ov.swizzle.zwzzx;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("(68)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "((6-7)1)", null, "((6-7)1)");
                var v = ov.swizzle.zwzzy;
                Assert.AreEqual("((6-7)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((6-7)1)", v.z);
                Assert.AreEqual("((6-7)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "((93)8)", "((93)8)", "", "-8");
                var v = ov.swizzle.zwzzz;
                Assert.AreEqual("((93)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((93)8)", v.z);
                Assert.AreEqual("((93)8)", v.w);
                Assert.AreEqual("((93)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "1", "1", "1");
                var v = ov.swizzle.zwzzw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-4)", "4", "3", "(-6-4)", "3");
                var v = ov.swizzle.zwzzv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(0-9)", "9", "((-62)-8)", "((4-5)9)", "(49)");
                var v = ov.swizzle.zwzw;
                Assert.AreEqual("((-62)-8)", v.x);
                Assert.AreEqual("((4-5)9)", v.y);
                Assert.AreEqual("((-62)-8)", v.z);
                Assert.AreEqual("((4-5)9)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "-1", "((-4-9)9)", "(-19)", "3");
                var v = ov.swizzle.zwzwx;
                Assert.AreEqual("((-4-9)9)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("((-4-9)9)", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "(-71)", "-8", "7");
                var v = ov.swizzle.zwzwy;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "((-5-4)1)", "((-42)-5)", "(-67)");
                var v = ov.swizzle.zwzwz;
                Assert.AreEqual("((-5-4)1)", v.x);
                Assert.AreEqual("((-42)-5)", v.y);
                Assert.AreEqual("((-5-4)1)", v.z);
                Assert.AreEqual("((-42)-5)", v.w);
                Assert.AreEqual("((-5-4)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-8-1)-5)", null, "-4", "((-8-1)-5)");
                var v = ov.swizzle.zwzww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-18)-3)", null, "((-96)-4)", "-1");
                var v = ov.swizzle.zwzwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-96)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-96)-4)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-45)", "-7", "-7", "((08)6)", "((4-8)1)");
                var v = ov.swizzle.zwzv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((08)6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((4-8)1)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "", "", "4", "4");
                var v = ov.swizzle.zwzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)4)", "((-23)4)", "-2", "", "8");
                var v = ov.swizzle.zwzvy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-23)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-45)-9)", "8", "(-1-9)", "(67)", null);
                var v = ov.swizzle.zwzvz;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "-1", "((07)-6)", "((-7-2)-8)");
                var v = ov.swizzle.zwzvw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((07)-6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-7-2)-8)", v.w);
                Assert.AreEqual("((07)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "8", "-1", "8", "(5-5)");
                var v = ov.swizzle.zwzvv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("(5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "(-7-1)", "", null, "((90)-9)");
                var v = ov.swizzle.zww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("4", "4", "((07)1)", "(3-8)", "((5-8)0)");
                var v = ov.swizzle.zwwx;
                Assert.AreEqual("((07)1)", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-5-3)8)", "(-9-3)", "(83)", "((-5-3)8)");
                var v = ov.swizzle.zwwxx;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-49)", null, "(-49)", "0");
                var v = ov.swizzle.zwwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((59)-6)", "((-30)6)", "(-12)", "4");
                var v = ov.swizzle.zwwxz;
                Assert.AreEqual("((-30)6)", v.x);
                Assert.AreEqual("(-12)", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-30)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "(-6-8)", null, "((9-5)-1)");
                var v = ov.swizzle.zwwxw;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(76)", null, "((81)-1)", "((-51)-1)", "(76)");
                var v = ov.swizzle.zwwxv;
                Assert.AreEqual("((81)-1)", v.x);
                Assert.AreEqual("((-51)-1)", v.y);
                Assert.AreEqual("((-51)-1)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("(76)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "((-74)1)", "((-84)-9)", null, "0");
                var v = ov.swizzle.zwwy;
                Assert.AreEqual("((-84)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-74)1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-8)-9)", "-4", "((-47)8)", "((-2-1)3)", "-5");
                var v = ov.swizzle.zwwyx;
                Assert.AreEqual("((-47)8)", v.x);
                Assert.AreEqual("((-2-1)3)", v.y);
                Assert.AreEqual("((-2-1)3)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-7-8)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)7)", "4", "4", "(5-8)", "(-86)");
                var v = ov.swizzle.zwwyy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(5-8)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-89)", "(-76)", "-5", "((59)-9)", "((19)6)");
                var v = ov.swizzle.zwwyz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((59)-9)", v.y);
                Assert.AreEqual("((59)-9)", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "(13)", "(13)", "(13)");
                var v = ov.swizzle.zwwyw;
                Assert.AreEqual("(13)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(13)", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "4", "((64)-2)", "(4-8)", null);
                var v = ov.swizzle.zwwyv;
                Assert.AreEqual("((64)-2)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-2-5)-9)", "1", "-4", "((-6-8)3)", "1");
                var v = ov.swizzle.zwwz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-6-8)3)", v.y);
                Assert.AreEqual("((-6-8)3)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-4-9)", null, "-4", "(50)");
                var v = ov.swizzle.zwwzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-7", null, "-7", "((-40)-3)");
                var v = ov.swizzle.zwwzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-6)9)", "((-51)9)", "0", "3");
                var v = ov.swizzle.zwwzz;
                Assert.AreEqual("((-51)9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-51)9)", v.w);
                Assert.AreEqual("((-51)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((46)-6)", "((52)4)", "(54)", "-6");
                var v = ov.swizzle.zwwzw;
                Assert.AreEqual("((52)4)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("((52)4)", v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-3-1)4)", "0", "((-3-1)4)", "(-87)");
                var v = ov.swizzle.zwwzv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-3-1)4)", v.y);
                Assert.AreEqual("((-3-1)4)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec5<string>("(-56)", "", "7", "-6", null);
                var v = ov.swizzle.zwww;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("", "7", "((-88)-7)", "(-84)", "(-84)");
                var v = ov.swizzle.zwwwx;
                Assert.AreEqual("((-88)-7)", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "", null, "3", "");
                var v = ov.swizzle.zwwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(9-6)", null, null, "((89)-2)", "(9-1)");
                var v = ov.swizzle.zwwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((89)-2)", v.y);
                Assert.AreEqual("((89)-2)", v.z);
                Assert.AreEqual("((89)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-88)", "((27)-2)", "((0-9)0)", "(-3-1)");
                var v = ov.swizzle.zwwww;
                Assert.AreEqual("((27)-2)", v.x);
                Assert.AreEqual("((0-9)0)", v.y);
                Assert.AreEqual("((0-9)0)", v.z);
                Assert.AreEqual("((0-9)0)", v.w);
                Assert.AreEqual("((0-9)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-94)0)", "((4-7)-9)", "-8", "(12)", "3");
                var v = ov.swizzle.zwwwv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(12)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", "(9-9)", null, "((3-7)6)", "(9-9)");
                var v = ov.swizzle.zwwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-7)6)", v.y);
                Assert.AreEqual("((3-7)6)", v.z);
                Assert.AreEqual("(9-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-1)3)", null, "-5", "((-1-1)3)", "-5");
                var v = ov.swizzle.zwwvx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-1-1)3)", v.y);
                Assert.AreEqual("((-1-1)3)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-1-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-5-8)", "-8", "4", "4");
                var v = ov.swizzle.zwwvy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-7)", "(-86)", "1", "1");
                var v = ov.swizzle.zwwvz;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-86)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(00)", "((09)1)", "6", "(-4-8)");
                var v = ov.swizzle.zwwvw;
                Assert.AreEqual("((09)1)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "(-44)", "((9-4)3)", "-3");
                var v = ov.swizzle.zwwvv;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("((9-4)3)", v.y);
                Assert.AreEqual("((9-4)3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "0", "-5", "((-8-5)-8)");
                var v = ov.swizzle.zwv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-8-5)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("", "(-3-5)", "((28)-4)", "((28)-4)", "(82)");
                var v = ov.swizzle.zwvx;
                Assert.AreEqual("((28)-4)", v.x);
                Assert.AreEqual("((28)-4)", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(-28)", "", "(-3-5)", "4");
                var v = ov.swizzle.zwvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "-6", "((6-2)0)", "((6-2)0)", null);
                var v = ov.swizzle.zwvxy;
                Assert.AreEqual("((6-2)0)", v.x);
                Assert.AreEqual("((6-2)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((72)-3)", "-8", "((-2-2)2)", "-8");
                var v = ov.swizzle.zwvxz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-2-2)2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-65)", "9", "((-2-3)-1)", "(13)");
                var v = ov.swizzle.zwvxw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-2-3)-1)", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-2-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "(3-8)", null, "3", null);
                var v = ov.swizzle.zwvxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-69)", "((-5-9)-3)", "", "((-5-9)-3)", "((-5-9)-3)");
                var v = ov.swizzle.zwvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-9)-3)", v.y);
                Assert.AreEqual("((-5-9)-3)", v.z);
                Assert.AreEqual("((-5-9)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-2)4)", null, "-5", "((4-2)4)", "((4-2)4)");
                var v = ov.swizzle.zwvyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((4-2)4)", v.y);
                Assert.AreEqual("((4-2)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-2)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)-8)", null, "(-30)", "-8", "((37)-4)");
                var v = ov.swizzle.zwvyy;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((37)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "(65)", "-2", "(65)");
                var v = ov.swizzle.zwvyz;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(65)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(65)", v.v);
            }
            {
                var ov = new gvec5<string>("(32)", "", "(32)", null, "((-4-8)7)");
                var v = ov.swizzle.zwvyw;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-8)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(04)", "", "((8-3)-4)", "-3", "-3");
                var v = ov.swizzle.zwvyv;
                Assert.AreEqual("((8-3)-4)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(90)", "((7-5)9)", null, "((-86)3)");
                var v = ov.swizzle.zwvz;
                Assert.AreEqual("((7-5)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-86)3)", v.z);
                Assert.AreEqual("((7-5)9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-78)", "((-7-5)5)", "0", "9", "((-7-5)5)");
                var v = ov.swizzle.zwvzx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-7-5)5)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-78)", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "((12)-3)", "((68)5)", "-8", "0");
                var v = ov.swizzle.zwvzy;
                Assert.AreEqual("((68)5)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((68)5)", v.w);
                Assert.AreEqual("((12)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)2)", "((-2-9)-1)", "((-2-9)-1)", "((4-9)5)", "((-2-9)-1)");
                var v = ov.swizzle.zwvzz;
                Assert.AreEqual("((-2-9)-1)", v.x);
                Assert.AreEqual("((4-9)5)", v.y);
                Assert.AreEqual("((-2-9)-1)", v.z);
                Assert.AreEqual("((-2-9)-1)", v.w);
                Assert.AreEqual("((-2-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "4", null, null, "(-74)");
                var v = ov.swizzle.zwvzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-50)5)", "-2", "(26)", "((-50)5)", null);
                var v = ov.swizzle.zwvzv;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("((-50)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(26)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(25)", null, null, null, "4");
                var v = ov.swizzle.zwvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", null, "((-46)2)", "9", "");
                var v = ov.swizzle.zwvwx;
                Assert.AreEqual("((-46)2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-85)-3)", "((9-6)5)", "(-28)", "5", "1");
                var v = ov.swizzle.zwvwy;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((9-6)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-6-9)-7)", "((-44)-9)", "5", "");
                var v = ov.swizzle.zwvwz;
                Assert.AreEqual("((-44)-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-44)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", "((4-7)7)", "-1", "((4-7)7)");
                var v = ov.swizzle.zwvww;
                Assert.AreEqual("((4-7)7)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((4-7)7)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(61)", "(61)", "", "-2", "((-6-8)-1)");
                var v = ov.swizzle.zwvwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-6-8)-1)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-6-8)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-4)-6)", null, "(87)", null, "5");
                var v = ov.swizzle.zwvv;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((7-2)-8)", "((29)-6)", "(-25)", "(99)", null);
                var v = ov.swizzle.zwvvx;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((7-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((67)-2)", "((67)-2)", "(30)", "(7-3)");
                var v = ov.swizzle.zwvvy;
                Assert.AreEqual("((67)-2)", v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("((67)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-2-8)", "(98)", "((53)5)", "");
                var v = ov.swizzle.zwvvz;
                Assert.AreEqual("(98)", v.x);
                Assert.AreEqual("((53)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(98)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-8)9)", null, "(5-7)", null, "9");
                var v = ov.swizzle.zwvvw;
                Assert.AreEqual("(5-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-78)3)", "((8-5)9)", "-4", "((-78)3)", "((-78)3)");
                var v = ov.swizzle.zwvvv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-78)3)", v.y);
                Assert.AreEqual("((-78)3)", v.z);
                Assert.AreEqual("((-78)3)", v.w);
                Assert.AreEqual("((-78)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-31)", "(-4-3)", "(-31)", "(-4-3)", "(5-7)");
                var v = ov.swizzle.zv;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("(5-7)", v.y);
            }
            {
                var ov = new gvec5<string>("(-30)", "(-30)", "((0-2)-2)", "(2-6)", "");
                var v = ov.swizzle.zvx;
                Assert.AreEqual("((0-2)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-30)", v.z);
            }
            {
                var ov = new gvec5<string>("-5", null, "", null, null);
                var v = ov.swizzle.zvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((9-5)-8)", "8", "7", "(-3-7)", "(5-9)");
                var v = ov.swizzle.zvxxx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("((9-5)-8)", v.z);
                Assert.AreEqual("((9-5)-8)", v.w);
                Assert.AreEqual("((9-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-21)-3)", "(52)", "0", null, "0");
                var v = ov.swizzle.zvxxy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-21)-3)", v.z);
                Assert.AreEqual("((-21)-3)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-7)", "3", "(-85)", "((52)8)", "((-61)2)");
                var v = ov.swizzle.zvxxz;
                Assert.AreEqual("(-85)", v.x);
                Assert.AreEqual("((-61)2)", v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "-8", "(-92)", "((-57)8)", "(80)");
                var v = ov.swizzle.zvxxw;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("(80)", v.w);
                Assert.AreEqual("((-57)8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((60)6)", "", "((-75)6)", "((60)6)");
                var v = ov.swizzle.zvxxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((60)6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((60)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", null, "", "((-91)-2)");
                var v = ov.swizzle.zvxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-91)-2)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-59)-5)", "6", "((25)-7)", "((-59)-5)", "6");
                var v = ov.swizzle.zvxyx;
                Assert.AreEqual("((25)-7)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-59)-5)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-59)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-55)8)", "(-94)", "(-94)", "(25)", "((5-2)-9)");
                var v = ov.swizzle.zvxyy;
                Assert.AreEqual("(-94)", v.x);
                Assert.AreEqual("((5-2)-9)", v.y);
                Assert.AreEqual("((-55)8)", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("(-94)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "6", "-9", "", "6");
                var v = ov.swizzle.zvxyz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)0)", null, "-4", "(-8-2)", "");
                var v = ov.swizzle.zvxyw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-37)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-2", "2", "4", "(50)");
                var v = ov.swizzle.zvxyv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", null, null, "((96)-8)", "-7");
                var v = ov.swizzle.zvxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((4-7)7)", "-6", "((-9-7)-4)", "(1-6)", "((4-7)7)");
                var v = ov.swizzle.zvxzx;
                Assert.AreEqual("((-9-7)-4)", v.x);
                Assert.AreEqual("((4-7)7)", v.y);
                Assert.AreEqual("((4-7)7)", v.z);
                Assert.AreEqual("((-9-7)-4)", v.w);
                Assert.AreEqual("((4-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "((5-8)8)", "((9-6)-9)", "((9-6)-9)");
                var v = ov.swizzle.zvxzy;
                Assert.AreEqual("((5-8)8)", v.x);
                Assert.AreEqual("((9-6)-9)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((5-8)8)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "", "((83)-4)", "(-65)");
                var v = ov.swizzle.zvxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((0-1)-5)", "((0-1)-5)", "2", "(-3-2)");
                var v = ov.swizzle.zvxzw;
                Assert.AreEqual("((0-1)-5)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((0-1)-5)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)2)", "((-69)2)", "(-8-7)", "(0-8)", "((-69)2)");
                var v = ov.swizzle.zvxzv;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("((-69)2)", v.y);
                Assert.AreEqual("((-69)2)", v.z);
                Assert.AreEqual("(-8-7)", v.w);
                Assert.AreEqual("((-69)2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-6-5)", "((-91)-7)", null, "1");
                var v = ov.swizzle.zvxw;
                Assert.AreEqual("((-91)-7)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "", "9", "9", "((9-2)-6)");
                var v = ov.swizzle.zvxwx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((9-2)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)-6)", "(-9-4)", "((0-2)-6)", "(-9-4)", "-2");
                var v = ov.swizzle.zvxwy;
                Assert.AreEqual("((0-2)-6)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((0-2)-6)", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-75)", null, "((7-1)9)", "-4");
                var v = ov.swizzle.zvxwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((7-1)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", null, "((-58)-6)", "(11)", "-6");
                var v = ov.swizzle.zvxww;
                Assert.AreEqual("((-58)-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-3)", "((56)-6)", "(-9-3)", null, "(-6-6)");
                var v = ov.swizzle.zvxwv;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("(-9-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((21)-5)", "(36)", "(36)", "", "((0-3)-2)");
                var v = ov.swizzle.zvxv;
                Assert.AreEqual("(36)", v.x);
                Assert.AreEqual("((0-3)-2)", v.y);
                Assert.AreEqual("((21)-5)", v.z);
                Assert.AreEqual("((0-3)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-73)2)", "", "3", "((79)6)", "(4-1)");
                var v = ov.swizzle.zvxvx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("((-73)2)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("((-73)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "-6", "5", "((59)4)", "5");
                var v = ov.swizzle.zvxvy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((98)-4)", "(-9-7)", null, "((98)-4)", null);
                var v = ov.swizzle.zvxvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((98)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-5-4)", "((-1-4)-2)", "4", "((71)5)", "((71)5)");
                var v = ov.swizzle.zvxvw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((71)5)", v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual("((71)5)", v.w);
                Assert.AreEqual("((71)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "1", "", "(23)", null);
                var v = ov.swizzle.zvxvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(23)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-52)0)", "-4", "(-14)", "1", "-4");
                var v = ov.swizzle.zvy;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec5<string>("-1", "((90)8)", "((3-2)4)", "((90)8)", "((71)8)");
                var v = ov.swizzle.zvyx;
                Assert.AreEqual("((3-2)4)", v.x);
                Assert.AreEqual("((71)8)", v.y);
                Assert.AreEqual("((90)8)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("6", null, null, "9", "");
                var v = ov.swizzle.zvyxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-46)1)", "7", "(-10)", "1", "-3");
                var v = ov.swizzle.zvyxy;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-46)1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, "((4-3)-6)", "(2-9)", null);
                var v = ov.swizzle.zvyxz;
                Assert.AreEqual("((4-3)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((4-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", "-3", null, "-3", "((-4-6)8)");
                var v = ov.swizzle.zvyxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-6)8)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(1-5)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "(7-2)", "6", "((57)-3)");
                var v = ov.swizzle.zvyxv;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("((57)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((57)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((04)-4)", "((-5-1)5)", "((-5-1)5)", "(45)");
                var v = ov.swizzle.zvyy;
                Assert.AreEqual("((-5-1)5)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("((04)-4)", v.z);
                Assert.AreEqual("((04)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "((1-4)-5)", "((1-4)-5)", "(2-2)", "(92)");
                var v = ov.swizzle.zvyyx;
                Assert.AreEqual("((1-4)-5)", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual("((1-4)-5)", v.z);
                Assert.AreEqual("((1-4)-5)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", "((-3-8)-8)", "(1-6)", "(-80)");
                var v = ov.swizzle.zvyyy;
                Assert.AreEqual("((-3-8)-8)", v.x);
                Assert.AreEqual("(-80)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "((5-5)-9)", "", "");
                var v = ov.swizzle.zvyyz;
                Assert.AreEqual("((5-5)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-5)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-48)-5)", "(0-3)", "((-18)3)", "((-18)3)", "((-18)3)");
                var v = ov.swizzle.zvyyw;
                Assert.AreEqual("((-18)3)", v.x);
                Assert.AreEqual("((-18)3)", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("(0-3)", v.w);
                Assert.AreEqual("((-18)3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "3", "4", "((-2-1)8)", "((-9-9)2)");
                var v = ov.swizzle.zvyyv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-9-9)2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-9-9)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((41)5)", "7", "((-13)9)", "(9-4)", "(-2-5)");
                var v = ov.swizzle.zvyz;
                Assert.AreEqual("((-13)9)", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-13)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((37)1)", "8", "-9", "-8", "((-3-9)-1)");
                var v = ov.swizzle.zvyzx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-3-9)-1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((37)1)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "2", "((-39)-5)", "((-39)-5)");
                var v = ov.swizzle.zvyzy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-39)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-13)", "(5-2)", null, null, "(-32)");
                var v = ov.swizzle.zvyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", "-2", "((2-5)3)", "((32)0)", "((-2-8)8)");
                var v = ov.swizzle.zvyzw;
                Assert.AreEqual("((2-5)3)", v.x);
                Assert.AreEqual("((-2-8)8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((2-5)3)", v.w);
                Assert.AreEqual("((32)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-24)8)", null, null, "(-3-7)");
                var v = ov.swizzle.zvyzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("((-24)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "-1", "-1", "((-89)2)", "(5-4)");
                var v = ov.swizzle.zvyw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-89)2)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "((4-1)-2)", "((-1-2)6)", null, "((4-1)-2)");
                var v = ov.swizzle.zvywx;
                Assert.AreEqual("((-1-2)6)", v.x);
                Assert.AreEqual("((4-1)-2)", v.y);
                Assert.AreEqual("((4-1)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-9)-2)", "(-55)", "-6", "((-3-9)-2)", "3");
                var v = ov.swizzle.zvywy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("((-3-9)-2)", v.w);
                Assert.AreEqual("(-55)", v.v);
            }
            {
                var ov = new gvec5<string>("", "2", "", "9", "9");
                var v = ov.swizzle.zvywz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)-6)", "-9", null, null, null);
                var v = ov.swizzle.zvyww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-40)-3)", "7", "(-93)", "(0-3)");
                var v = ov.swizzle.zvywv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(0-3)", v.y);
                Assert.AreEqual("((-40)-3)", v.z);
                Assert.AreEqual("(-93)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-2-4)", "9", "9", "(-2-4)");
                var v = ov.swizzle.zvyv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("(-2-4)", v.z);
                Assert.AreEqual("(-2-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-51)9)", "(-94)", "((31)9)", "((0-8)3)", null);
                var v = ov.swizzle.zvyvx;
                Assert.AreEqual("((31)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-51)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "-2", "((81)-5)", "-9");
                var v = ov.swizzle.zvyvy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-27)-8)", "(8-1)", "-6", "((-34)7)");
                var v = ov.swizzle.zvyvz;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("((-34)7)", v.y);
                Assert.AreEqual("((-27)-8)", v.z);
                Assert.AreEqual("((-34)7)", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "((65)-1)", "(-5-7)", "(-5-7)");
                var v = ov.swizzle.zvyvw;
                Assert.AreEqual("((65)-1)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "2", "8", "((3-1)0)", null);
                var v = ov.swizzle.zvyvv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((7-4)2)", "((-30)-7)", "((-30)-7)", "(-3-8)", "-7");
                var v = ov.swizzle.zvz;
                Assert.AreEqual("((-30)-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-30)-7)", v.z);
            }
            {
                var ov = new gvec5<string>("(40)", "2", "((84)-3)", null, null);
                var v = ov.swizzle.zvzx;
                Assert.AreEqual("((84)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((84)-3)", v.z);
                Assert.AreEqual("(40)", v.w);
            }
            {
                var ov = new gvec5<string>("(56)", "((77)1)", "((18)-6)", "", null);
                var v = ov.swizzle.zvzxx;
                Assert.AreEqual("((18)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((18)-6)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(5-8)", "-2", "((-45)8)", "");
                var v = ov.swizzle.zvzxy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-3)", "1", "(7-3)", "7");
                var v = ov.swizzle.zvzxz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-35)5)", "0", "-8", "(-3-1)", "-8");
                var v = ov.swizzle.zvzxw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-35)5)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "-9", "(-1-6)", "(-8-1)", "(-8-1)");
                var v = ov.swizzle.zvzxv;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("(-8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-4)", "(-79)", "1", "((1-8)-5)", "((1-8)-5)");
                var v = ov.swizzle.zvzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((1-8)-5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-79)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-8)", null, "(55)", "(-1-8)", "(55)");
                var v = ov.swizzle.zvzyx;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "(4-3)", "((20)3)", "9");
                var v = ov.swizzle.zvzyy;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)-1)", "(7-1)", "(-9-1)", "((-8-2)1)", null);
                var v = ov.swizzle.zvzyz;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("(7-1)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-1)", "3", "(-9-7)", "((5-4)-9)", "-4");
                var v = ov.swizzle.zvzyw;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((5-4)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-7)", null, "((0-1)-5)", "4", "((-6-3)-2)");
                var v = ov.swizzle.zvzyv;
                Assert.AreEqual("((0-1)-5)", v.x);
                Assert.AreEqual("((-6-3)-2)", v.y);
                Assert.AreEqual("((0-1)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-6-3)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", null, "(-7-3)", "0", "(-7-3)");
                var v = ov.swizzle.zvzz;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "(7-6)", "", "9", "((24)5)");
                var v = ov.swizzle.zvzzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((24)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-28)7)", "(-8-3)", "(-4-6)", "((-28)7)");
                var v = ov.swizzle.zvzzy;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((-28)7)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("((-28)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)-6)", "-6", "-6", "((48)-7)", "((48)-7)");
                var v = ov.swizzle.zvzzz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((48)-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(0-7)", "-5", "((-4-9)2)", "-5", "");
                var v = ov.swizzle.zvzzw;
                Assert.AreEqual("((-4-9)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-9)2)", v.z);
                Assert.AreEqual("((-4-9)2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-97)", "((23)-6)", "6", "");
                var v = ov.swizzle.zvzzv;
                Assert.AreEqual("((23)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((23)-6)", v.z);
                Assert.AreEqual("((23)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(0-4)", null, null, "(-94)", "(0-4)");
                var v = ov.swizzle.zvzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-94)", v.w);
            }
            {
                var ov = new gvec5<string>("((22)-3)", "((-99)4)", "((5-7)-4)", "9", "((-99)4)");
                var v = ov.swizzle.zvzwx;
                Assert.AreEqual("((5-7)-4)", v.x);
                Assert.AreEqual("((-99)4)", v.y);
                Assert.AreEqual("((5-7)-4)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((22)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-51)", "((-8-6)-3)", "6", "(-37)", "(-37)");
                var v = ov.swizzle.zvzwy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("((-8-6)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-7", "((52)9)", "((-4-7)-5)", "-7");
                var v = ov.swizzle.zvzwz;
                Assert.AreEqual("((52)9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((52)9)", v.z);
                Assert.AreEqual("((-4-7)-5)", v.w);
                Assert.AreEqual("((52)9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((4-9)6)", "((4-9)6)", "((88)-7)", "");
                var v = ov.swizzle.zvzww;
                Assert.AreEqual("((4-9)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((4-9)6)", v.z);
                Assert.AreEqual("((88)-7)", v.w);
                Assert.AreEqual("((88)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((8-6)-7)", null, "((8-6)-7)", "-4");
                var v = ov.swizzle.zvzwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-6)-7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "-1", "((6-1)8)", "((42)-3)", "(8-2)");
                var v = ov.swizzle.zvzv;
                Assert.AreEqual("((6-1)8)", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("((6-1)8)", v.z);
                Assert.AreEqual("(8-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((3-4)-9)", "", "(-1-7)", "-1", null);
                var v = ov.swizzle.zvzvx;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-4)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-3)", "((52)-7)", "(31)", "((52)-7)", "(3-9)");
                var v = ov.swizzle.zvzvy;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual("(3-9)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("(3-9)", v.w);
                Assert.AreEqual("((52)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "8", "5", null, "-2");
                var v = ov.swizzle.zvzvz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "2", "((0-8)-2)", "(90)", "(90)");
                var v = ov.swizzle.zvzvw;
                Assert.AreEqual("((0-8)-2)", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("((0-8)-2)", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-34)3)", "6", "6", "(52)");
                var v = ov.swizzle.zvzvv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((83)-8)", "((7-8)-7)", "((83)-8)", "(4-6)");
                var v = ov.swizzle.zvw;
                Assert.AreEqual("((7-8)-7)", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual("((83)-8)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(69)", "", "3", "((50)5)");
                var v = ov.swizzle.zvwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((50)5)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "((22)5)", "(1-8)", "((-55)3)", "((-55)3)");
                var v = ov.swizzle.zvwxx;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("((-55)3)", v.y);
                Assert.AreEqual("((-55)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "0", "", "0");
                var v = ov.swizzle.zvwxy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)-2)", "((-5-2)-8)", "(3-3)", "3", "(3-3)");
                var v = ov.swizzle.zvwxz;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((2-1)-2)", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)-6)", "(53)", "7", "((4-9)-6)", "-7");
                var v = ov.swizzle.zvwxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((4-9)-6)", v.z);
                Assert.AreEqual("((4-9)-6)", v.w);
                Assert.AreEqual("((4-9)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)8)", "((-4-3)8)", null, "-9", "(-9-9)");
                var v = ov.swizzle.zvwxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-4-3)8)", v.w);
                Assert.AreEqual("(-9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((7-1)-6)", "-7", "((-4-7)-9)", null);
                var v = ov.swizzle.zvwy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-7)-9)", v.z);
                Assert.AreEqual("((7-1)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(5-9)", "((-43)1)", "((8-4)-8)", null, "8");
                var v = ov.swizzle.zvwyx;
                Assert.AreEqual("((8-4)-8)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-43)1)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-2)", "((-9-1)8)", null, "-1", "(0-2)");
                var v = ov.swizzle.zvwyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-9-1)8)", v.w);
                Assert.AreEqual("((-9-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(2-9)", "-3", "-3", "(-9-3)");
                var v = ov.swizzle.zvwyz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)2)", "1", "", "(83)", "(83)");
                var v = ov.swizzle.zvwyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-7)-2)", "(-9-3)", "((-1-7)-2)", "((7-5)-6)", "");
                var v = ov.swizzle.zvwyv;
                Assert.AreEqual("((-1-7)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-5)-6)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-49)", "(-49)", "(-8-5)", "(-49)");
                var v = ov.swizzle.zvwz;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("(-49)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-7)6)", "0", "((2-1)-9)", "((-4-1)3)", null);
                var v = ov.swizzle.zvwzx;
                Assert.AreEqual("((2-1)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-1)3)", v.z);
                Assert.AreEqual("((2-1)-9)", v.w);
                Assert.AreEqual("((-4-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)0)", "(-22)", "-5", null, "(1-2)");
                var v = ov.swizzle.zvwzy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec5<string>("(-24)", "(-8-2)", "-1", "((20)-8)", "((20)-8)");
                var v = ov.swizzle.zvwzz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((20)-8)", v.y);
                Assert.AreEqual("((20)-8)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(8-9)", "2", "(-8-1)", "((9-4)-3)", "2");
                var v = ov.swizzle.zvwzw;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((9-4)-3)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("((9-4)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)7)", "-2", "(-8-1)", "-2", "((7-8)9)");
                var v = ov.swizzle.zvwzv;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("((7-8)9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("((7-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "(-41)", "-8", "((-34)2)");
                var v = ov.swizzle.zvww;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("((-34)2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(86)", "-5", "-5", "-7", "(4-9)");
                var v = ov.swizzle.zvwwx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(4-9)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(51)", "", "-6", "((-5-5)-6)");
                var v = ov.swizzle.zvwwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-5)-6)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-2)", "(18)", null, "7", "((-42)9)");
                var v = ov.swizzle.zvwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-42)9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(2-4)", null, null, null, "");
                var v = ov.swizzle.zvwww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-55)", null, null);
                var v = ov.swizzle.zvwwv;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(96)", "8", "((2-7)-1)", "((2-7)-1)", "(96)");
                var v = ov.swizzle.zvwv;
                Assert.AreEqual("((2-7)-1)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("((2-7)-1)", v.z);
                Assert.AreEqual("(96)", v.w);
            }
            {
                var ov = new gvec5<string>("(-95)", "-8", "((-3-2)8)", "(-95)", "8");
                var v = ov.swizzle.zvwvx;
                Assert.AreEqual("((-3-2)8)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-95)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-17)", "((-2-5)0)", "(5-3)", "(-17)");
                var v = ov.swizzle.zvwvy;
                Assert.AreEqual("((-2-5)0)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)5)", "-9", "-9", "1", "1");
                var v = ov.swizzle.zvwvz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "((-5-1)5)", "((-5-1)5)", "-6", "(-95)");
                var v = ov.swizzle.zvwvw;
                Assert.AreEqual("((-5-1)5)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "((90)3)", "((90)3)", "((-8-9)6)", "((5-2)1)");
                var v = ov.swizzle.zvwvv;
                Assert.AreEqual("((90)3)", v.x);
                Assert.AreEqual("((5-2)1)", v.y);
                Assert.AreEqual("((-8-9)6)", v.z);
                Assert.AreEqual("((5-2)1)", v.w);
                Assert.AreEqual("((5-2)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-9)", "(9-1)", "((-7-3)5)", "((6-5)-2)", "(9-1)");
                var v = ov.swizzle.zvv;
                Assert.AreEqual("((-7-3)5)", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("(9-1)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "1", "-2", "((-9-9)-8)", "(-7-8)");
                var v = ov.swizzle.zvvx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("4", "(-9-9)", "(-60)", "(-60)", "(-60)");
                var v = ov.swizzle.zvvxx;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual("(-60)", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "6", "(-9-4)", "-9");
                var v = ov.swizzle.zvvxy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((8-7)1)", "(-2-3)", null, "(7-1)");
                var v = ov.swizzle.zvvxz;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(7-1)", v.y);
                Assert.AreEqual("(7-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(21)", "-2", "(-4-7)", "((92)9)");
                var v = ov.swizzle.zvvxw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((92)9)", v.y);
                Assert.AreEqual("((92)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((36)0)", "(8-9)", "((66)-3)", "(-17)", "-3");
                var v = ov.swizzle.zvvxv;
                Assert.AreEqual("((66)-3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((36)0)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(3-3)", "", "4", "");
                var v = ov.swizzle.zvvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(3-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-9)-1)", null, "((6-9)-1)", "((2-4)4)", "((-39)-3)");
                var v = ov.swizzle.zvvyx;
                Assert.AreEqual("((6-9)-1)", v.x);
                Assert.AreEqual("((-39)-3)", v.y);
                Assert.AreEqual("((-39)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(55)", "-3", "4", "4", "-6");
                var v = ov.swizzle.zvvyy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((9-9)9)", "(78)", "-6", "(78)");
                var v = ov.swizzle.zvvyz;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual("((9-9)9)", v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "1", "((1-4)4)", "((0-6)3)", "(1-5)");
                var v = ov.swizzle.zvvyw;
                Assert.AreEqual("((1-4)4)", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((0-6)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-53)0)", "(36)", "((09)-2)", null, "");
                var v = ov.swizzle.zvvyv;
                Assert.AreEqual("((09)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-7-9)9)", "(73)", "", "((-7-9)9)");
                var v = ov.swizzle.zvvz;
                Assert.AreEqual("(73)", v.x);
                Assert.AreEqual("((-7-9)9)", v.y);
                Assert.AreEqual("((-7-9)9)", v.z);
                Assert.AreEqual("(73)", v.w);
            }
            {
                var ov = new gvec5<string>("((17)-4)", "((80)-5)", "((9-5)-7)", "(67)", "((80)-5)");
                var v = ov.swizzle.zvvzx;
                Assert.AreEqual("((9-5)-7)", v.x);
                Assert.AreEqual("((80)-5)", v.y);
                Assert.AreEqual("((80)-5)", v.z);
                Assert.AreEqual("((9-5)-7)", v.w);
                Assert.AreEqual("((17)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "-8", "(3-4)", "((8-5)7)");
                var v = ov.swizzle.zvvzy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((8-5)7)", v.y);
                Assert.AreEqual("((8-5)7)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)1)", "((02)-2)", "(75)", "(8-9)", null);
                var v = ov.swizzle.zvvzz;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual("(75)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)-7)", "-6", "((41)-9)", "((50)-7)", "(98)");
                var v = ov.swizzle.zvvzw;
                Assert.AreEqual("((41)-9)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("((41)-9)", v.w);
                Assert.AreEqual("((50)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(45)", "((65)-3)", "(45)", null, "(3-6)");
                var v = ov.swizzle.zvvzv;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((26)-6)", "1", "6", null);
                var v = ov.swizzle.zvvw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("(60)", "(60)", null, null, "-6");
                var v = ov.swizzle.zvvwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "((2-6)-3)", "-4", "-4", "");
                var v = ov.swizzle.zvvwy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((2-6)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "5", "((04)5)", "(-9-9)", "6");
                var v = ov.swizzle.zvvwz;
                Assert.AreEqual("((04)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((04)5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-3-9)", "(65)", "2", "(65)");
                var v = ov.swizzle.zvvww;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("(65)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(54)", null, "((-70)7)", "(08)");
                var v = ov.swizzle.zvvwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("((-70)7)", v.w);
                Assert.AreEqual("(08)", v.v);
            }
            {
                var ov = new gvec5<string>("((-83)-6)", "(8-6)", "2", "((-7-5)3)", "((-7-5)3)");
                var v = ov.swizzle.zvvv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-7-5)3)", v.y);
                Assert.AreEqual("((-7-5)3)", v.z);
                Assert.AreEqual("((-7-5)3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-34)6)", "-6", null, "((-34)6)", "");
                var v = ov.swizzle.zvvvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-34)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", "(9-1)", "((8-6)8)", "((-70)7)");
                var v = ov.swizzle.zvvvy;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("((-70)7)", v.y);
                Assert.AreEqual("((-70)7)", v.z);
                Assert.AreEqual("((-70)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "6", "(95)", "((4-9)-6)");
                var v = ov.swizzle.zvvvz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((4-9)-6)", v.y);
                Assert.AreEqual("((4-9)-6)", v.z);
                Assert.AreEqual("((4-9)-6)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "7", "(6-3)", "((9-9)1)");
                var v = ov.swizzle.zvvvw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((9-9)1)", v.y);
                Assert.AreEqual("((9-9)1)", v.z);
                Assert.AreEqual("((9-9)1)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-1)4)", "((6-1)4)", null, "((6-1)4)", "((6-1)4)");
                var v = ov.swizzle.zvvvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((6-1)4)", v.y);
                Assert.AreEqual("((6-1)4)", v.z);
                Assert.AreEqual("((6-1)4)", v.w);
                Assert.AreEqual("((6-1)4)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "(-5-7)", null, "(-5-7)");
                var v = ov.swizzle.wx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
            }
            {
                var ov = new gvec5<string>("((0-8)-8)", "((00)0)", "((8-7)-2)", "((00)0)", "(77)");
                var v = ov.swizzle.wxx;
                Assert.AreEqual("((00)0)", v.x);
                Assert.AreEqual("((0-8)-8)", v.y);
                Assert.AreEqual("((0-8)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("((0-6)8)", "(5-6)", null, "-7", "-7");
                var v = ov.swizzle.wxxx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((0-6)8)", v.y);
                Assert.AreEqual("((0-6)8)", v.z);
                Assert.AreEqual("((0-6)8)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "", "", "-8", "1");
                var v = ov.swizzle.wxxxx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", null, "((-1-9)-8)", null);
                var v = ov.swizzle.wxxxy;
                Assert.AreEqual("((-1-9)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(22)", "5", null, "5");
                var v = ov.swizzle.wxxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((0-8)4)", "-6", "((-45)-4)", "3", "((0-8)4)");
                var v = ov.swizzle.wxxxw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((0-8)4)", v.y);
                Assert.AreEqual("((0-8)4)", v.z);
                Assert.AreEqual("((0-8)4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-5-7)", "((6-8)3)", "((6-8)3)", "((-89)8)");
                var v = ov.swizzle.wxxxv;
                Assert.AreEqual("((6-8)3)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-89)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "5", "(15)", "(-3-4)", "((10)5)");
                var v = ov.swizzle.wxxy;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(-56)", "(-18)", null);
                var v = ov.swizzle.wxxyx;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(39)", "((83)4)", "-1", "((9-5)-4)", "((9-5)-4)");
                var v = ov.swizzle.wxxyy;
                Assert.AreEqual("((9-5)-4)", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("((83)4)", v.w);
                Assert.AreEqual("((83)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((56)5)", "(-76)", "((3-1)1)", "", "(5-2)");
                var v = ov.swizzle.wxxyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((56)5)", v.y);
                Assert.AreEqual("((56)5)", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual("((3-1)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-34)", null, null, "4");
                var v = ov.swizzle.wxxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-34)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-37)", "((-72)7)", "((-15)5)", "");
                var v = ov.swizzle.wxxyv;
                Assert.AreEqual("((-15)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((-96)-7)", "5", "(-7-5)", "((-39)4)");
                var v = ov.swizzle.wxxz;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((-94)5)", "((39)0)", "(-4-6)", null, "(-4-6)");
                var v = ov.swizzle.wxxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-94)5)", v.y);
                Assert.AreEqual("((-94)5)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((-94)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-53)", "(-74)", "(-74)");
                var v = ov.swizzle.wxxzy;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-53)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-3)", "", "7", "", "-2");
                var v = ov.swizzle.wxxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-9)-3)", v.y);
                Assert.AreEqual("((-7-9)-3)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(0-2)", "9", "((3-8)-1)", "", "9");
                var v = ov.swizzle.wxxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((3-8)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", "-9", "-3", "(25)", "-3");
                var v = ov.swizzle.wxxzv;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual("(-86)", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-54)3)", "((6-6)-1)", "", "(-7-5)", "-3");
                var v = ov.swizzle.wxxw;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("((-54)3)", v.y);
                Assert.AreEqual("((-54)3)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(-62)", "(3-5)", "", "((-5-5)-6)");
                var v = ov.swizzle.wxxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(27)", "", "(27)", "(27)", "(58)");
                var v = ov.swizzle.wxxwy;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "(7-5)", "", "((94)-3)");
                var v = ov.swizzle.wxxwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(63)", "(63)", "(-10)", "0", "(-10)");
                var v = ov.swizzle.wxxww;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(63)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((5-3)9)", "(-50)", "(23)", "-4", "");
                var v = ov.swizzle.wxxwv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((5-3)9)", v.y);
                Assert.AreEqual("((5-3)9)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "((69)-7)", null, "((69)-7)", "(-61)");
                var v = ov.swizzle.wxxv;
                Assert.AreEqual("((69)-7)", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("(-61)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-8)", "((7-7)-9)", "(-1-1)", "(7-8)", "9");
                var v = ov.swizzle.wxxvx;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((1-7)-1)", "((1-7)-1)", "((-9-7)1)", "-8");
                var v = ov.swizzle.wxxvy;
                Assert.AreEqual("((-9-7)1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((1-7)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-3-9)", null, null, "-3");
                var v = ov.swizzle.wxxvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "((-4-5)8)", "", "(6-6)");
                var v = ov.swizzle.wxxvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(6-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-19)", "((-85)5)", "", "((-85)5)", "(8-7)");
                var v = ov.swizzle.wxxvv;
                Assert.AreEqual("((-85)5)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("(-19)", v.z);
                Assert.AreEqual("(8-7)", v.w);
                Assert.AreEqual("(8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "-7", "0", "((-6-1)0)", "9");
                var v = ov.swizzle.wxy;
                Assert.AreEqual("((-6-1)0)", v.x);
                Assert.AreEqual("(-79)", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>("((43)8)", "(-17)", "-3", "(9-8)", "-8");
                var v = ov.swizzle.wxyx;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("((43)8)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("((43)8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(13)", "((-59)1)", "((-59)1)", "(2-6)");
                var v = ov.swizzle.wxyxx;
                Assert.AreEqual("((-59)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-9-3)", "(73)", "", "-2");
                var v = ov.swizzle.wxyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-9-3)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-9)", "-3", "", "", "-3");
                var v = ov.swizzle.wxyxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "(0-5)", "(0-5)", "(82)");
                var v = ov.swizzle.wxyxw;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-6)-7)", "(1-4)", "((13)0)", "(-2-2)", "");
                var v = ov.swizzle.wxyxv;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("((4-6)-7)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("((4-6)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-2-8)", "(-5-1)", "(-23)", null);
                var v = ov.swizzle.wxyy;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("(-2-8)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "((-6-9)-4)", "((16)-2)", "(04)", null);
                var v = ov.swizzle.wxyyx;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-6-9)-4)", v.z);
                Assert.AreEqual("((-6-9)-4)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-1)6)", null, "-8", "", null);
                var v = ov.swizzle.wxyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-1)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "-3", "", "((-43)9)", "((-92)-8)");
                var v = ov.swizzle.wxyyz;
                Assert.AreEqual("((-43)9)", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-7)-2)", "((-7-7)-2)", "((-64)8)", "-5", "(44)");
                var v = ov.swizzle.wxyyw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-7-7)-2)", v.y);
                Assert.AreEqual("((-7-7)-2)", v.z);
                Assert.AreEqual("((-7-7)-2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(7-9)", "-2", "8", "((63)-7)");
                var v = ov.swizzle.wxyyv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(7-9)", v.z);
                Assert.AreEqual("(7-9)", v.w);
                Assert.AreEqual("((63)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-30)2)", "((43)-8)", "2", null);
                var v = ov.swizzle.wxyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-30)2)", v.z);
                Assert.AreEqual("((43)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "1", null, "(-86)", "1");
                var v = ov.swizzle.wxyzx;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-21)-3)", "9", "8", "");
                var v = ov.swizzle.wxyzy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-21)-3)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-21)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)-3)", "((57)-1)", "", "((57)-1)", "((6-6)-3)");
                var v = ov.swizzle.wxyzz;
                Assert.AreEqual("((57)-1)", v.x);
                Assert.AreEqual("((6-6)-3)", v.y);
                Assert.AreEqual("((57)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((86)-3)", "-7", "", "(-66)");
                var v = ov.swizzle.wxyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((86)-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((0-7)9)", "((60)1)", null, "(73)");
                var v = ov.swizzle.wxyzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-7)9)", v.z);
                Assert.AreEqual("((60)1)", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec5<string>("((45)2)", "(6-2)", "(6-2)", "7", "((0-4)-3)");
                var v = ov.swizzle.wxyw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((45)2)", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "(-5-7)", "(-94)", "(4-9)");
                var v = ov.swizzle.wxywx;
                Assert.AreEqual("(-94)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((17)-4)", "(48)", "((17)-4)", "-2");
                var v = ov.swizzle.wxywy;
                Assert.AreEqual("((17)-4)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((17)-4)", v.z);
                Assert.AreEqual("((17)-4)", v.w);
                Assert.AreEqual("((17)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(64)", "(-56)", "((-14)0)", "-8");
                var v = ov.swizzle.wxywz;
                Assert.AreEqual("((-14)0)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("((-14)0)", v.w);
                Assert.AreEqual("(-56)", v.v);
            }
            {
                var ov = new gvec5<string>("(-70)", null, "(-70)", "", "(-83)");
                var v = ov.swizzle.wxyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-70)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((2-7)3)", "1", "", "1", "(42)");
                var v = ov.swizzle.wxywv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((2-7)3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(42)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-8)", "5", "(-86)", "3", "(6-8)");
                var v = ov.swizzle.wxyv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(6-8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(6-8)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "(-15)", "9", "((89)-2)", "");
                var v = ov.swizzle.wxyvx;
                Assert.AreEqual("((89)-2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "((-9-6)6)", null, "(4-1)");
                var v = ov.swizzle.wxyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "((-6-4)-4)", "(25)", "4");
                var v = ov.swizzle.wxyvz;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-6-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(88)", "((-1-4)7)", "(88)", "((4-6)7)", "((-1-4)7)");
                var v = ov.swizzle.wxyvw;
                Assert.AreEqual("((4-6)7)", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("((-1-4)7)", v.z);
                Assert.AreEqual("((-1-4)7)", v.w);
                Assert.AreEqual("((4-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((71)2)", "(-83)", "", "-8", "(-1-3)");
                var v = ov.swizzle.wxyvv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((71)2)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)4)", "-9", "(-9-6)", "((-8-3)1)", "((-8-3)1)");
                var v = ov.swizzle.wxz;
                Assert.AreEqual("((-8-3)1)", v.x);
                Assert.AreEqual("((-26)4)", v.y);
                Assert.AreEqual("(-9-6)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(24)", null, "(54)", "7");
                var v = ov.swizzle.wxzx;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((84)8)", "(7-2)", "(-94)", "((20)1)", "((20)1)");
                var v = ov.swizzle.wxzxx;
                Assert.AreEqual("((20)1)", v.x);
                Assert.AreEqual("((84)8)", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("((84)8)", v.w);
                Assert.AreEqual("((84)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-35)6)", null, "(16)", "(-2-1)", "((2-3)2)");
                var v = ov.swizzle.wxzxy;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual("((-35)6)", v.y);
                Assert.AreEqual("(16)", v.z);
                Assert.AreEqual("((-35)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-93)", "8", "((-1-8)8)", "2", null);
                var v = ov.swizzle.wxzxz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("((-1-8)8)", v.z);
                Assert.AreEqual("(-93)", v.w);
                Assert.AreEqual("((-1-8)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-56)-3)", "", "8", "8", "8");
                var v = ov.swizzle.wxzxw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-56)-3)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-56)-3)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "((-92)7)", "0", "-5");
                var v = ov.swizzle.wxzxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-92)7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((3-2)-8)", "(-8-6)", "(-8-6)");
                var v = ov.swizzle.wxzy;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((3-2)-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(39)", "(-27)", "2", "-2", "(3-3)");
                var v = ov.swizzle.wxzyx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-4-2)-3)", "", "(-4-3)");
                var v = ov.swizzle.wxzyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-2)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "((3-2)-4)", "1", null, "((-3-8)0)");
                var v = ov.swizzle.wxzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((3-2)-4)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "2", "-8", "(-3-2)", "2");
                var v = ov.swizzle.wxzyw;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(0-1)", "(-4-8)", "4", "0");
                var v = ov.swizzle.wxzyv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((68)-7)", "2", "((68)-7)", "((1-2)-6)", null);
                var v = ov.swizzle.wxzz;
                Assert.AreEqual("((1-2)-6)", v.x);
                Assert.AreEqual("((68)-7)", v.y);
                Assert.AreEqual("((68)-7)", v.z);
                Assert.AreEqual("((68)-7)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-6", "(5-4)", "8", "(3-8)");
                var v = ov.swizzle.wxzzx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "(5-1)", "(4-2)", null);
                var v = ov.swizzle.wxzzy;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-3)", "((0-9)3)", "(2-1)", null);
                var v = ov.swizzle.wxzzz;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-9)3)", v.z);
                Assert.AreEqual("((0-9)3)", v.w);
                Assert.AreEqual("((0-9)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-11)", "-8", "", "0", "(16)");
                var v = ov.swizzle.wxzzw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "((-2-3)-7)", "((-75)4)", "((-75)4)", "9");
                var v = ov.swizzle.wxzzv;
                Assert.AreEqual("((-75)4)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("((-75)4)", v.z);
                Assert.AreEqual("((-75)4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((3-9)6)", "7", "1", "-1", "7");
                var v = ov.swizzle.wxzw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((3-9)6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-7-7)", "(-63)", "4", "4");
                var v = ov.swizzle.wxzwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "0", "", "-1", "-3");
                var v = ov.swizzle.wxzwy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(74)", "(4-6)", "((7-5)-2)", "", "((49)4)");
                var v = ov.swizzle.wxzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("((7-5)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((7-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((37)-9)", "2", null, "(-54)", "");
                var v = ov.swizzle.wxzww;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("((37)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-5)", "(39)", "((9-3)5)", "(7-5)", "(41)");
                var v = ov.swizzle.wxzwv;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("((9-3)5)", v.z);
                Assert.AreEqual("(7-5)", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "(6-2)", "(3-6)", "-3", "((-19)-8)");
                var v = ov.swizzle.wxzv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("((-19)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((45)-7)", "(-9-6)", "(-9-6)", "(-6-8)", "(-6-8)");
                var v = ov.swizzle.wxzvx;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("((45)-7)", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("((45)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "8", "", "((84)8)", "-1");
                var v = ov.swizzle.wxzvy;
                Assert.AreEqual("((84)8)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "((-11)4)", "((-25)-7)", "", "((-25)-7)");
                var v = ov.swizzle.wxzvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("((-25)-7)", v.z);
                Assert.AreEqual("((-25)-7)", v.w);
                Assert.AreEqual("((-25)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "(-1-5)", "(-1-5)", "(83)", "((7-2)7)");
                var v = ov.swizzle.wxzvw;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("(-1-5)", v.y);
                Assert.AreEqual("(-1-5)", v.z);
                Assert.AreEqual("((7-2)7)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-1-9)-1)", "(2-9)", "(2-9)", "(00)");
                var v = ov.swizzle.wxzvv;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(2-9)", v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)-4)", "(49)", "(-5-6)", "((1-5)-4)", "-1");
                var v = ov.swizzle.wxw;
                Assert.AreEqual("((1-5)-4)", v.x);
                Assert.AreEqual("((1-5)-4)", v.y);
                Assert.AreEqual("((1-5)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("(29)", "(29)", "((-65)8)", "((7-9)9)", "(29)");
                var v = ov.swizzle.wxwx;
                Assert.AreEqual("((7-9)9)", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("((7-9)9)", v.z);
                Assert.AreEqual("(29)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-1-4)1)", "4", "4", "((05)4)");
                var v = ov.swizzle.wxwxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("9", "6", "((7-1)6)", "(9-1)", "((7-1)6)");
                var v = ov.swizzle.wxwxy;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((05)7)", null, "9", "((-73)-5)");
                var v = ov.swizzle.wxwxz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-9-4)", "(-9-4)", "-6", "(04)");
                var v = ov.swizzle.wxwxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-6-7)", "((-47)3)", "8", "((-8-3)5)");
                var v = ov.swizzle.wxwxv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-8-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-3)4)", "", "(3-3)", null, "(3-3)");
                var v = ov.swizzle.wxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-6-3)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(-24)", "", "-2");
                var v = ov.swizzle.wxwyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)6)", "-7", "((-49)4)", "-7", "((76)6)");
                var v = ov.swizzle.wxwyy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((6-6)6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "5", null, "", "5");
                var v = ov.swizzle.wxwyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "((-39)0)", "-2", "(-1-4)");
                var v = ov.swizzle.wxwyw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "(-46)", "", "(8-7)", "(64)");
                var v = ov.swizzle.wxwyv;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("(-46)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("(-60)", "", null, "-6", "((-7-7)3)");
                var v = ov.swizzle.wxwz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-60)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "3", "((1-1)9)", "3", null);
                var v = ov.swizzle.wxwzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((1-1)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)-4)", "", "8", "", "(3-5)");
                var v = ov.swizzle.wxwzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-84)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", "(-4-8)", "(-65)", "(-99)", "-7");
                var v = ov.swizzle.wxwzz;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("(-65)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)-7)", null, "((-8-1)-7)", "6", null);
                var v = ov.swizzle.wxwzw;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-8-1)-7)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-8-1)-7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(55)", "(60)", "((5-2)-8)", "((1-2)4)");
                var v = ov.swizzle.wxwzv;
                Assert.AreEqual("((5-2)-8)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((5-2)-8)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("((1-2)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((69)8)", "((69)8)", null, "1", "1");
                var v = ov.swizzle.wxww;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((69)8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "(-1-1)", "-3", "(-1-1)", null);
                var v = ov.swizzle.wxwwx;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-64)-5)", "(9-7)", "-7", "(9-7)");
                var v = ov.swizzle.wxwwy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-64)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "6", "((7-3)0)", "((7-3)0)", "(45)");
                var v = ov.swizzle.wxwwz;
                Assert.AreEqual("((7-3)0)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((7-3)0)", v.z);
                Assert.AreEqual("((7-3)0)", v.w);
                Assert.AreEqual("((7-3)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)-9)", "9", "(8-4)", "(8-4)", "(8-4)");
                var v = ov.swizzle.wxwww;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("((3-4)-9)", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-4)", "(-28)", "2", null, "2");
                var v = ov.swizzle.wxwwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "((09)-1)", "9", "(-30)", null);
                var v = ov.swizzle.wxwv;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-25)", "(47)", "9", "-7", "((7-7)8)");
                var v = ov.swizzle.wxwvx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((7-7)8)", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "-9", "-9", "", "");
                var v = ov.swizzle.wxwvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", null, "((-53)5)", "(-9-4)", "((5-7)-1)");
                var v = ov.swizzle.wxwvz;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("((5-7)-1)", v.w);
                Assert.AreEqual("((-53)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-4", "-9", "((-8-1)0)");
                var v = ov.swizzle.wxwvw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-8-1)0)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((37)-5)", "-9", "(6-6)", "7");
                var v = ov.swizzle.wxwvv;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)-8)", "((-5-7)4)", "6", "", "6");
                var v = ov.swizzle.wxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-47)-8)", v.y);
                Assert.AreEqual("6", v.z);
            }
            {
                var ov = new gvec5<string>("", "5", null, "((-72)6)", "5");
                var v = ov.swizzle.wxvx;
                Assert.AreEqual("((-72)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((06)-5)", "((0-6)4)", "(93)", "0", "2");
                var v = ov.swizzle.wxvxx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((06)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((06)-5)", v.w);
                Assert.AreEqual("((06)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-9)3)", "((0-9)3)", "(9-7)", "-3", "((-9-1)-2)");
                var v = ov.swizzle.wxvxy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((0-9)3)", v.y);
                Assert.AreEqual("((-9-1)-2)", v.z);
                Assert.AreEqual("((0-9)3)", v.w);
                Assert.AreEqual("((0-9)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-53)-5)", "(-5-7)", "(-5-7)", "-7", "(-5-7)");
                var v = ov.swizzle.wxvxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-53)-5)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("((-53)-5)", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-18)", "(49)", "((5-7)6)", "4", null);
                var v = ov.swizzle.wxvxw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "1", "((-38)-3)", "((-40)8)", "-3");
                var v = ov.swizzle.wxvxv;
                Assert.AreEqual("((-40)8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(2-9)", "((4-3)-5)", "(97)", "-5", null);
                var v = ov.swizzle.wxvy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((4-3)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "3", "", "((50)-8)", null);
                var v = ov.swizzle.wxvyx;
                Assert.AreEqual("((50)-8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-8", "((21)-4)", "-8", "(3-4)");
                var v = ov.swizzle.wxvyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(3-4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((68)-9)", "-7", "(5-8)", "9", "((8-7)0)");
                var v = ov.swizzle.wxvyz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((68)-9)", v.y);
                Assert.AreEqual("((8-7)0)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-3)-6)", "-4", "9", "-4", "8");
                var v = ov.swizzle.wxvyw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-5-3)-6)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-38)", "3", "", "3");
                var v = ov.swizzle.wxvyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-38)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-3)0)", "2", "(48)", "", "(-8-2)");
                var v = ov.swizzle.wxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-3)0)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(48)", v.w);
            }
            {
                var ov = new gvec5<string>("((-42)6)", "((-42)6)", "-8", "((-7-9)6)", null);
                var v = ov.swizzle.wxvzx;
                Assert.AreEqual("((-7-9)6)", v.x);
                Assert.AreEqual("((-42)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-42)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-82)", "", "8", "((3-2)-8)", "(-82)");
                var v = ov.swizzle.wxvzy;
                Assert.AreEqual("((3-2)-8)", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-3-5)-1)", "(3-8)", "(3-8)", "4");
                var v = ov.swizzle.wxvzz;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(1-9)", "-9", "-5", "(-2-8)");
                var v = ov.swizzle.wxvzw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-1-4)-6)", "((41)-2)", "-3", "((-1-4)-6)");
                var v = ov.swizzle.wxvzv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-1-4)-6)", v.z);
                Assert.AreEqual("((41)-2)", v.w);
                Assert.AreEqual("((-1-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "((-26)0)", "(-2-6)", "((-8-3)-3)");
                var v = ov.swizzle.wxvw;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-8-3)-3)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "(3-8)", "-9", "((0-5)2)");
                var v = ov.swizzle.wxvwx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-5)2)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-6)6)", "((-7-6)6)", "(55)", "5", null);
                var v = ov.swizzle.wxvwy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-7-6)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-7-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-24)", "-3", null, "(47)");
                var v = ov.swizzle.wxvwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((9-5)-2)", "-1", "((9-5)-2)", "-1", "(13)");
                var v = ov.swizzle.wxvww;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((9-5)-2)", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-70)4)", "(-10)", "-3", "(-9-1)", "2");
                var v = ov.swizzle.wxvwv;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("((-70)4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)1)", "", "-1", "", "0");
                var v = ov.swizzle.wxvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-4)1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("", "(0-5)", "((5-5)-9)", "((5-5)-9)", "((-5-2)1)");
                var v = ov.swizzle.wxvvx;
                Assert.AreEqual("((5-5)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-2)1)", v.z);
                Assert.AreEqual("((-5-2)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(1-4)", "-9", "(9-5)", "4", "4");
                var v = ov.swizzle.wxvvy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-7)8)", "6", "-2", "-4", "((-9-7)8)");
                var v = ov.swizzle.wxvvz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-9-7)8)", v.y);
                Assert.AreEqual("((-9-7)8)", v.z);
                Assert.AreEqual("((-9-7)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "((08)-8)", "(-5-6)", "3");
                var v = ov.swizzle.wxvvw;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-11)", "-2", "((98)-5)", "4");
                var v = ov.swizzle.wxvvv;
                Assert.AreEqual("((98)-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "5", "-8", "2");
                var v = ov.swizzle.wy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
            }
            {
                var ov = new gvec5<string>("((66)-8)", "(-48)", "-9", "(-26)", "((02)7)");
                var v = ov.swizzle.wyx;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("((66)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("(4-1)", "(-29)", "3", "(-29)", "(-38)");
                var v = ov.swizzle.wyxx;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(4-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "(-48)", "(9-1)", "(-64)", "((00)-7)");
                var v = ov.swizzle.wyxxx;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-25)-6)", "((-15)-8)", null, null, null);
                var v = ov.swizzle.wyxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-15)-8)", v.y);
                Assert.AreEqual("((-25)-6)", v.z);
                Assert.AreEqual("((-25)-6)", v.w);
                Assert.AreEqual("((-15)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-65)-7)", "((-65)-7)", "9", "(-5-9)", "((-65)-7)");
                var v = ov.swizzle.wyxxz;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("((-65)-7)", v.y);
                Assert.AreEqual("((-65)-7)", v.z);
                Assert.AreEqual("((-65)-7)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(73)", "(79)", "2", "((9-8)3)", "(73)");
                var v = ov.swizzle.wyxxw;
                Assert.AreEqual("((9-8)3)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("((9-8)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((27)2)", "(1-1)", "((0-7)6)", "((27)7)", "((27)2)");
                var v = ov.swizzle.wyxxv;
                Assert.AreEqual("((27)7)", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("((27)2)", v.z);
                Assert.AreEqual("((27)2)", v.w);
                Assert.AreEqual("((27)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)6)", "", "0", "0", "((49)-7)");
                var v = ov.swizzle.wyxy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-1)6)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(6-5)", "5", "((20)-8)", "(28)", null);
                var v = ov.swizzle.wyxyx;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((28)-6)", "((28)-6)", "(-2-2)", "8", "((28)-6)");
                var v = ov.swizzle.wyxyy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((28)-6)", v.y);
                Assert.AreEqual("((28)-6)", v.z);
                Assert.AreEqual("((28)-6)", v.w);
                Assert.AreEqual("((28)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-7-4)", "-9", "-7");
                var v = ov.swizzle.wyxyz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-43)", "(4-8)", "(4-8)", null, "(-43)");
                var v = ov.swizzle.wyxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "((51)-7)", "7", null, "((-47)2)");
                var v = ov.swizzle.wyxyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((51)-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((51)-7)", v.w);
                Assert.AreEqual("((-47)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(10)", "((-4-7)4)", "(10)", "");
                var v = ov.swizzle.wyxz;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-4-7)4)", v.w);
            }
            {
                var ov = new gvec5<string>("(41)", "4", "((51)-9)", "-3", "(41)");
                var v = ov.swizzle.wyxzx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual("((51)-9)", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("(41)", null, null, "(41)", "");
                var v = ov.swizzle.wyxzy;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "-6", "", null);
                var v = ov.swizzle.wyxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(96)", "(96)", "-7", "(96)", "(24)");
                var v = ov.swizzle.wyxzw;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-1-6)", null, "5", "");
                var v = ov.swizzle.wyxzv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(8-9)", "(-5-1)", "((6-6)-9)", "2", "(8-9)");
                var v = ov.swizzle.wyxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("(8-9)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((0-4)7)", null, "-4", "((-51)2)");
                var v = ov.swizzle.wyxwx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((0-4)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "4", "((70)1)", "1", null);
                var v = ov.swizzle.wyxwy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "((-3-5)2)", "-8", "(76)");
                var v = ov.swizzle.wyxwz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-3-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-51)-2)", null, "((-2-1)7)", "-5", "-5");
                var v = ov.swizzle.wyxww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-51)-2)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "-7", "((9-8)1)", null, "(-1-2)");
                var v = ov.swizzle.wyxwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-1-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((4-1)3)", "((-53)2)", "", "((-24)6)");
                var v = ov.swizzle.wyxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-1)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-24)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-89)", "(98)", "((7-1)-9)", "-7", "(3-7)");
                var v = ov.swizzle.wyxvx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-5-9)-5)", "-8", "((-7-3)6)", "((82)3)");
                var v = ov.swizzle.wyxvy;
                Assert.AreEqual("((-7-3)6)", v.x);
                Assert.AreEqual("((-5-9)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((82)3)", v.w);
                Assert.AreEqual("((-5-9)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", null, "(0-4)", "((-7-2)-2)", "2");
                var v = ov.swizzle.wyxvz;
                Assert.AreEqual("((-7-2)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(0-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((1-5)-4)", "((1-5)-4)", "-1", "((27)3)");
                var v = ov.swizzle.wyxvw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((1-5)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((27)3)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-1)-9)", "-9", "-3", "-8", null);
                var v = ov.swizzle.wyxvv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-2-1)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "(7-6)", "((9-5)6)", "6", "((70)9)");
                var v = ov.swizzle.wyy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("(7-6)", v.z);
            }
            {
                var ov = new gvec5<string>("((98)-4)", "", "((98)-4)", "1", "1");
                var v = ov.swizzle.wyyx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((98)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-77)3)", "(37)", "-8", "(6-5)", "((1-8)-4)");
                var v = ov.swizzle.wyyxx;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((-77)3)", v.w);
                Assert.AreEqual("((-77)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "-2", "(24)", "-5", "((-85)2)");
                var v = ov.swizzle.wyyxy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-49)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((70)-7)", "((3-3)5)", "0", "((3-3)5)", null);
                var v = ov.swizzle.wyyxz;
                Assert.AreEqual("((3-3)5)", v.x);
                Assert.AreEqual("((3-3)5)", v.y);
                Assert.AreEqual("((3-3)5)", v.z);
                Assert.AreEqual("((70)-7)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "8", "((94)9)", "((94)9)", "((98)-5)");
                var v = ov.swizzle.wyyxw;
                Assert.AreEqual("((94)9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("((94)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-7)-8)", "(-5-7)", "(92)", "((-9-7)-8)", "((-4-7)-8)");
                var v = ov.swizzle.wyyxv;
                Assert.AreEqual("((-9-7)-8)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("((-9-7)-8)", v.w);
                Assert.AreEqual("((-4-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "4", "-9", "(-72)", "4");
                var v = ov.swizzle.wyyy;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-52)2)", "", "(61)", "((-9-2)-3)");
                var v = ov.swizzle.wyyyx;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual("((-52)2)", v.y);
                Assert.AreEqual("((-52)2)", v.z);
                Assert.AreEqual("((-52)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((78)1)", "((78)1)", "(-9-9)", "9");
                var v = ov.swizzle.wyyyy;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("((78)1)", v.y);
                Assert.AreEqual("((78)1)", v.z);
                Assert.AreEqual("((78)1)", v.w);
                Assert.AreEqual("((78)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "5", "5", "(9-2)");
                var v = ov.swizzle.wyyyz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "(2-7)", null, "((-3-4)4)");
                var v = ov.swizzle.wyyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-41)", "((32)-5)", "((04)-3)", "(69)", "-4");
                var v = ov.swizzle.wyyyv;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("((32)-5)", v.y);
                Assert.AreEqual("((32)-5)", v.z);
                Assert.AreEqual("((32)-5)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", "2", "2", "2", "3");
                var v = ov.swizzle.wyyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("(47)", "8", "(-2-8)", null, null);
                var v = ov.swizzle.wyyzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("(-65)", "(-65)", "-5", "-4", "6");
                var v = ov.swizzle.wyyzy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-65)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-4)", "((39)-9)", "((73)-3)", "(-92)", "6");
                var v = ov.swizzle.wyyzz;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((39)-9)", v.y);
                Assert.AreEqual("((39)-9)", v.z);
                Assert.AreEqual("((73)-3)", v.w);
                Assert.AreEqual("((73)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)-4)", "-3", "((8-8)-6)", "-3", null);
                var v = ov.swizzle.wyyzw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((8-8)-6)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "-6", "((59)1)", "((59)1)", "((59)1)");
                var v = ov.swizzle.wyyzv;
                Assert.AreEqual("((59)1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((59)1)", v.w);
                Assert.AreEqual("((59)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)3)", "(-4-4)", "", "", "(-99)");
                var v = ov.swizzle.wyyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((83)9)", "((6-6)2)", "(-97)", "(-2-5)", "(6-7)");
                var v = ov.swizzle.wyywx;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("((6-6)2)", v.y);
                Assert.AreEqual("((6-6)2)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("((83)9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-4", "((33)4)", "9", "0");
                var v = ov.swizzle.wyywy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-98)6)", "4", "(68)", "((-98)6)", "(68)");
                var v = ov.swizzle.wyywz;
                Assert.AreEqual("((-98)6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-98)6)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "((-29)5)", "2", "((6-5)4)");
                var v = ov.swizzle.wyyww;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((31)3)", "(55)", "-4", "-2", "-2");
                var v = ov.swizzle.wyywv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-67)2)", "(-29)", "((-67)2)", "((-67)2)", "-1");
                var v = ov.swizzle.wyyv;
                Assert.AreEqual("((-67)2)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("2", "2", "(-99)", "((55)-9)", "4");
                var v = ov.swizzle.wyyvx;
                Assert.AreEqual("((55)-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)1)", "", "(75)", "8", "(-1-7)");
                var v = ov.swizzle.wyyvy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-1-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((08)1)", "((1-2)-4)", "-7", "(-6-1)", "-7");
                var v = ov.swizzle.wyyvz;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("((1-2)-4)", v.y);
                Assert.AreEqual("((1-2)-4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "((-7-7)-3)", "6", "(6-6)", "(6-6)");
                var v = ov.swizzle.wyyvw;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("((-7-7)-3)", v.y);
                Assert.AreEqual("((-7-7)-3)", v.z);
                Assert.AreEqual("(6-6)", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-70)6)", "-4", "(-5-7)", "-4", null);
                var v = ov.swizzle.wyyvv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", "", "((00)-1)", "(-70)", "(-54)");
                var v = ov.swizzle.wyz;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((00)-1)", v.z);
            }
            {
                var ov = new gvec5<string>("", "0", "", "((8-1)3)", "0");
                var v = ov.swizzle.wyzx;
                Assert.AreEqual("((8-1)3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-43)3)", "(-27)", null, "((58)3)", "((58)3)");
                var v = ov.swizzle.wyzxx;
                Assert.AreEqual("((58)3)", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-43)3)", v.w);
                Assert.AreEqual("((-43)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-3)", "", "(-7-3)", "((6-7)7)", "(73)");
                var v = ov.swizzle.wyzxy;
                Assert.AreEqual("((6-7)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-9)", "-3", "(6-9)", "(6-9)", "((8-2)3)");
                var v = ov.swizzle.wyzxz;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(6-9)", v.z);
                Assert.AreEqual("(6-9)", v.w);
                Assert.AreEqual("(6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-5", "((20)-4)", "-4", "");
                var v = ov.swizzle.wyzxw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((20)-4)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-2", "(7-5)", "9", "9");
                var v = ov.swizzle.wyzxv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(7-5)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((9-3)6)", "", "(-1-9)", "((9-3)6)", "(-18)");
                var v = ov.swizzle.wyzy;
                Assert.AreEqual("((9-3)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(8-1)", "", "((45)4)", "((5-3)2)", "((-7-6)-6)");
                var v = ov.swizzle.wyzyx;
                Assert.AreEqual("((5-3)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((45)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "", "(1-9)", "(1-9)");
                var v = ov.swizzle.wyzyy;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((90)0)", "-6", null, "(-3-8)");
                var v = ov.swizzle.wyzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((90)0)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((90)0)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-71)1)", "-2", "((-71)1)", "7", "(58)");
                var v = ov.swizzle.wyzyw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-71)1)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-98)", "(-8-2)", null, "(-8-2)");
                var v = ov.swizzle.wyzyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(-98)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "(97)", "((07)7)", "7");
                var v = ov.swizzle.wyzz;
                Assert.AreEqual("((07)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("(97)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((-6-1)-6)", "(-27)", "(-1-4)", "-5");
                var v = ov.swizzle.wyzzx;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual("((-6-1)-6)", v.y);
                Assert.AreEqual("(-27)", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "((-3-3)6)", "((-3-3)6)", "((7-2)-2)", "((7-2)-2)");
                var v = ov.swizzle.wyzzy;
                Assert.AreEqual("((7-2)-2)", v.x);
                Assert.AreEqual("((-3-3)6)", v.y);
                Assert.AreEqual("((-3-3)6)", v.z);
                Assert.AreEqual("((-3-3)6)", v.w);
                Assert.AreEqual("((-3-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-2-2)6)", "", "", "0");
                var v = ov.swizzle.wyzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-2)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)-2)", "9", "(3-6)", "", "(3-6)");
                var v = ov.swizzle.wyzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "-6", "-1", "", "-6");
                var v = ov.swizzle.wyzzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-35)4)", "((78)0)", "((-35)4)", "((-35)4)");
                var v = ov.swizzle.wyzw;
                Assert.AreEqual("((-35)4)", v.x);
                Assert.AreEqual("((-35)4)", v.y);
                Assert.AreEqual("((78)0)", v.z);
                Assert.AreEqual("((-35)4)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-7-6)", "-4", null, "-4");
                var v = ov.swizzle.wyzwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "(39)", "(8-7)", "0", "(8-7)");
                var v = ov.swizzle.wyzwy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(33)", "6", "6", "((-4-6)-6)");
                var v = ov.swizzle.wyzwz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(33)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-99)-7)", "(0-6)", "", "(87)", "((-51)-9)");
                var v = ov.swizzle.wyzww;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("(87)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(7-8)", "((-17)-6)", "", "((-8-3)-6)");
                var v = ov.swizzle.wyzwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("((-17)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-3)-1)", "((-2-4)-8)", "-6", null, "((-2-3)-1)");
                var v = ov.swizzle.wyzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-2-4)-8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-2-3)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((5-2)1)", "((-7-2)-4)", "-7", "((5-2)1)", "((5-2)1)");
                var v = ov.swizzle.wyzvx;
                Assert.AreEqual("((5-2)1)", v.x);
                Assert.AreEqual("((-7-2)-4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((5-2)1)", v.w);
                Assert.AreEqual("((5-2)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-6)-9)", "(56)", "(56)", "(9-7)", "5");
                var v = ov.swizzle.wyzvy;
                Assert.AreEqual("(9-7)", v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-8-5)", "(08)", "((-36)-8)");
                var v = ov.swizzle.wyzvz;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("((-36)-8)", v.w);
                Assert.AreEqual("(-8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "((-3-1)-5)", "-2", "(7-8)");
                var v = ov.swizzle.wyzvw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-1)-5)", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "-3", "(99)", "((4-1)2)");
                var v = ov.swizzle.wyzvv;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((4-1)2)", v.w);
                Assert.AreEqual("((4-1)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)6)", "((-83)-7)", "(9-3)", "((70)5)", "((70)5)");
                var v = ov.swizzle.wyw;
                Assert.AreEqual("((70)5)", v.x);
                Assert.AreEqual("((-83)-7)", v.y);
                Assert.AreEqual("((70)5)", v.z);
            }
            {
                var ov = new gvec5<string>("(-93)", "", "3", "7", "");
                var v = ov.swizzle.wywx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-93)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((-80)-4)", "-9", "-9", "((-90)2)");
                var v = ov.swizzle.wywxx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-80)-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-31)5)", "3", "(-80)", "6");
                var v = ov.swizzle.wywxy;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("((-31)5)", v.y);
                Assert.AreEqual("(-80)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-31)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-7)8)", "((-21)-7)", null, "(21)", "((9-7)8)");
                var v = ov.swizzle.wywxz;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("((-21)-7)", v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("((9-7)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(30)", "-5", "((02)-2)", "1", "((-22)6)");
                var v = ov.swizzle.wywxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(30)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-48)2)", "(6-4)", "(37)", "((6-5)5)");
                var v = ov.swizzle.wywxv;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("((-48)2)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((6-5)5)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((46)-2)", "((51)5)", "(80)", "(0-8)");
                var v = ov.swizzle.wywy;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("((46)-2)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("((46)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "4", "(7-4)", "(87)", "4");
                var v = ov.swizzle.wywyx;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", null, "((-93)3)", "((-98)1)", "((9-1)1)");
                var v = ov.swizzle.wywyy;
                Assert.AreEqual("((-98)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-98)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "-2", "((6-2)-4)", "(-74)");
                var v = ov.swizzle.wywyz;
                Assert.AreEqual("((6-2)-4)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((6-2)-4)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)-9)", "((5-1)-9)", "1", "0", "(45)");
                var v = ov.swizzle.wywyw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((5-1)-9)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((5-1)-9)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((0-1)3)", null, "(-35)", "(-13)");
                var v = ov.swizzle.wywyv;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("((0-1)3)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("((0-1)3)", v.w);
                Assert.AreEqual("(-13)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "0", null, "-6", null);
                var v = ov.swizzle.wywz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-34)", "((8-6)1)", "((4-9)2)", "((8-6)1)", "-9");
                var v = ov.swizzle.wywzx;
                Assert.AreEqual("((8-6)1)", v.x);
                Assert.AreEqual("((8-6)1)", v.y);
                Assert.AreEqual("((8-6)1)", v.z);
                Assert.AreEqual("((4-9)2)", v.w);
                Assert.AreEqual("(-34)", v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", "", null, "(41)", "(14)");
                var v = ov.swizzle.wywzy;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-5)3)", "((2-5)3)", "-5", "((-1-3)-5)");
                var v = ov.swizzle.wywzz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((2-5)3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((2-5)3)", v.w);
                Assert.AreEqual("((2-5)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "2", "(3-5)", "(3-5)", "(3-5)");
                var v = ov.swizzle.wywzw;
                Assert.AreEqual("(3-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("(3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "(-7-2)", "-9", "", "((-2-9)1)");
                var v = ov.swizzle.wywzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-7-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-2-9)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "((-7-7)2)", "2", "(1-7)", "(01)");
                var v = ov.swizzle.wyww;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("((-7-7)2)", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("(1-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "((67)8)", "", "-5", "0");
                var v = ov.swizzle.wywwx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((67)8)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "(92)", "2", "((-8-5)2)");
                var v = ov.swizzle.wywwy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-21)", "(-97)", null, "(-21)");
                var v = ov.swizzle.wywwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(62)", "(87)", "5", "((-88)-3)");
                var v = ov.swizzle.wywww;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "(-55)", "((-16)7)", "-4");
                var v = ov.swizzle.wywwv;
                Assert.AreEqual("((-16)7)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-16)7)", v.z);
                Assert.AreEqual("((-16)7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-2", "((-71)-7)", "((7-9)9)", "(5-3)");
                var v = ov.swizzle.wywv;
                Assert.AreEqual("((7-9)9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((7-9)9)", v.z);
                Assert.AreEqual("(5-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(00)", "((-1-5)3)", "(-1-2)", "((-19)6)", "(-97)");
                var v = ov.swizzle.wywvx;
                Assert.AreEqual("((-19)6)", v.x);
                Assert.AreEqual("((-1-5)3)", v.y);
                Assert.AreEqual("((-19)6)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-8)", "-2", "(4-8)", "", "((-45)-3)");
                var v = ov.swizzle.wywvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-45)-3)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "(7-2)", "(-1-4)", "((5-6)-9)", "(-1-4)");
                var v = ov.swizzle.wywvz;
                Assert.AreEqual("((5-6)-9)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("((5-6)-9)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(4-1)", "(72)", "-2", "(4-1)");
                var v = ov.swizzle.wywvw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((68)9)", "(-67)", "(7-6)", null, "(-71)");
                var v = ov.swizzle.wywvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-9)4)", "(07)", "", "-5", "(-8-4)");
                var v = ov.swizzle.wyv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
            }
            {
                var ov = new gvec5<string>("((5-1)9)", "", "((-37)-7)", "((-37)-7)", "");
                var v = ov.swizzle.wyvx;
                Assert.AreEqual("((-37)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-1)9)", v.w);
            }
            {
                var ov = new gvec5<string>("(43)", "(43)", "((-9-7)5)", "1", "4");
                var v = ov.swizzle.wyvxx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((25)-6)", "(-1-8)", "(04)", "(04)");
                var v = ov.swizzle.wyvxy;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("((25)-6)", v.y);
                Assert.AreEqual("(04)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((25)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-1)", "((-7-4)7)", "(-64)", "((-98)-5)", "(4-9)");
                var v = ov.swizzle.wyvxz;
                Assert.AreEqual("((-98)-5)", v.x);
                Assert.AreEqual("((-7-4)7)", v.y);
                Assert.AreEqual("(4-9)", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-4-6)", "((-1-4)2)", "7", "(-6-8)");
                var v = ov.swizzle.wyvxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "-3", "((2-2)-3)", "((36)5)");
                var v = ov.swizzle.wyvxv;
                Assert.AreEqual("((2-2)-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((36)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((36)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((63)-1)", null, "(1-8)", "0");
                var v = ov.swizzle.wyvy;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("((63)-1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((63)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-4-1)3)", "-8", "(-87)", "-6");
                var v = ov.swizzle.wyvyx;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("((-4-1)3)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-4-1)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((0-5)-5)", null, "-8", "3", null);
                var v = ov.swizzle.wyvyy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "(-2-9)", "-7", null, "9");
                var v = ov.swizzle.wyvyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((7-3)-9)", "-1", "(-2-1)", "((-3-3)0)", "8");
                var v = ov.swizzle.wyvyw;
                Assert.AreEqual("((-3-3)0)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-3-3)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((83)5)", "-8", "(-2-7)", "(-8-1)", "7");
                var v = ov.swizzle.wyvyv;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", null, "((93)-1)", "(-6-9)");
                var v = ov.swizzle.wyvz;
                Assert.AreEqual("((93)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-6-9)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-9", "-8", "1", "", "((-46)9)");
                var v = ov.swizzle.wyvzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-46)9)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((5-7)-7)", "7", "(-8-4)", null);
                var v = ov.swizzle.wyvzy;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("((5-7)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((5-7)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "", null, null, "(38)");
                var v = ov.swizzle.wyvzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-8)", "((1-6)-8)", "-3", "(-5-3)", "(-5-3)");
                var v = ov.swizzle.wyvzw;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("((1-6)-8)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((40)7)", "(-68)", null, "((-38)1)");
                var v = ov.swizzle.wyvzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((40)7)", v.y);
                Assert.AreEqual("((-38)1)", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("((-38)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((48)4)", "(72)", "", "(72)");
                var v = ov.swizzle.wyvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((48)4)", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-6)", null, "((08)-6)", "((3-4)-7)", "((-3-6)-2)");
                var v = ov.swizzle.wyvwx;
                Assert.AreEqual("((3-4)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-6)-2)", v.z);
                Assert.AreEqual("((3-4)-7)", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "((68)8)", "5", "((38)5)", "-5");
                var v = ov.swizzle.wyvwy;
                Assert.AreEqual("((38)5)", v.x);
                Assert.AreEqual("((68)8)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((38)5)", v.w);
                Assert.AreEqual("((68)8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((3-7)1)", "1", "((-71)-4)");
                var v = ov.swizzle.wyvwz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-71)-4)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((3-7)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((31)8)", "((-75)-7)", null, "((31)8)");
                var v = ov.swizzle.wyvww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((31)8)", v.y);
                Assert.AreEqual("((31)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-68)-9)", "-4", "(4-6)", null);
                var v = ov.swizzle.wyvwv;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("((-68)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(54)", "-3", null, "(48)", "((-6-9)3)");
                var v = ov.swizzle.wyvv;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-6-9)3)", v.z);
                Assert.AreEqual("((-6-9)3)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "-9", "", "((37)7)", "3");
                var v = ov.swizzle.wyvvx;
                Assert.AreEqual("((37)7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-31)2)", "3", "((0-1)1)", "(10)", null);
                var v = ov.swizzle.wyvvy;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-4-3)", null, "((4-9)-5)", "-5");
                var v = ov.swizzle.wyvvz;
                Assert.AreEqual("((4-9)-5)", v.x);
                Assert.AreEqual("(-4-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-4", null, "((-15)-3)");
                var v = ov.swizzle.wyvvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-15)-3)", v.z);
                Assert.AreEqual("((-15)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((18)-8)", "((-91)-9)", "9", "9", "(4-8)");
                var v = ov.swizzle.wyvvv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-91)-9)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "(-28)", "(-20)", "-7", "(-20)");
                var v = ov.swizzle.wz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-20)", v.y);
            }
            {
                var ov = new gvec5<string>("-1", "((03)7)", "7", "(-7-1)", "(-29)");
                var v = ov.swizzle.wzx;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(-7-9)", "-8", "((-44)9)", "-8");
                var v = ov.swizzle.wzxx;
                Assert.AreEqual("((-44)9)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((2-8)5)", "(16)", "((15)-3)", "(16)", "(06)");
                var v = ov.swizzle.wzxxx;
                Assert.AreEqual("(16)", v.x);
                Assert.AreEqual("((15)-3)", v.y);
                Assert.AreEqual("((2-8)5)", v.z);
                Assert.AreEqual("((2-8)5)", v.w);
                Assert.AreEqual("((2-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "-8", "((-8-2)-7)", "((-8-5)1)", "");
                var v = ov.swizzle.wzxxy;
                Assert.AreEqual("((-8-5)1)", v.x);
                Assert.AreEqual("((-8-2)-7)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((23)-9)", "6", "((9-1)2)", "(7-7)", "-6");
                var v = ov.swizzle.wzxxz;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("((9-1)2)", v.y);
                Assert.AreEqual("((23)-9)", v.z);
                Assert.AreEqual("((23)-9)", v.w);
                Assert.AreEqual("((9-1)2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "(-1-1)", "(-14)", "((-2-1)-5)");
                var v = ov.swizzle.wzxxw;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("((96)9)", "((96)9)", "-2", "(-95)", "(38)");
                var v = ov.swizzle.wzxxv;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((96)9)", v.z);
                Assert.AreEqual("((96)9)", v.w);
                Assert.AreEqual("(38)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)0)", "", "-8", "(27)", "((-1-9)-9)");
                var v = ov.swizzle.wzxy;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((2-3)0)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-9-7)-4)", "((-9-7)-4)", "(08)", "8", "((-92)-8)");
                var v = ov.swizzle.wzxyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("((-9-7)-4)", v.z);
                Assert.AreEqual("((-9-7)-4)", v.w);
                Assert.AreEqual("((-9-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)0)", "(-55)", "((0-2)0)", "", "(7-8)");
                var v = ov.swizzle.wzxyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-2)0)", v.y);
                Assert.AreEqual("((0-2)0)", v.z);
                Assert.AreEqual("(-55)", v.w);
                Assert.AreEqual("(-55)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-2)", "((80)5)", "-1", "(-9-6)", "-8");
                var v = ov.swizzle.wzxyz;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("((80)5)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-5-1)8)", "-2", "", "((-5-1)8)");
                var v = ov.swizzle.wzxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-5-1)8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-1)", "4", "(-4-1)", "2", "((-63)0)");
                var v = ov.swizzle.wzxyv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-63)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-4)", "4", "((4-4)3)", "(-7-4)", "3");
                var v = ov.swizzle.wzxz;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual("((4-4)3)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("((4-4)3)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(9-2)", null, "((-36)-9)", "((-9-5)6)");
                var v = ov.swizzle.wzxzx;
                Assert.AreEqual("((-36)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(7-1)", "6", "(-90)", "(7-1)", "");
                var v = ov.swizzle.wzxzy;
                Assert.AreEqual("(7-1)", v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("(7-1)", v.z);
                Assert.AreEqual("(-90)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-5)-8)", "6", "((6-6)4)", "(44)", "-5");
                var v = ov.swizzle.wzxzz;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("((6-6)4)", v.y);
                Assert.AreEqual("((-2-5)-8)", v.z);
                Assert.AreEqual("((6-6)4)", v.w);
                Assert.AreEqual("((6-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((65)-7)", "(41)", "2", null, "");
                var v = ov.swizzle.wzxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((65)-7)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "((-6-5)-1)", "3", "(-5-7)");
                var v = ov.swizzle.wzxzv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-6-5)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-5)-1)", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-24)9)", "6", "-2", "(-10)", "((-24)9)");
                var v = ov.swizzle.wzxw;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-24)9)", v.z);
                Assert.AreEqual("(-10)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-4)", "3", "3", "((02)1)", "(-1-7)");
                var v = ov.swizzle.wzxwx;
                Assert.AreEqual("((02)1)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("((02)1)", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-55)-9)", "", "((-82)5)", "9", "4");
                var v = ov.swizzle.wzxwy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-82)5)", v.y);
                Assert.AreEqual("((-55)-9)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(5-7)", "6", "(44)", "(-5-2)", "((00)3)");
                var v = ov.swizzle.wzxwz;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-89)9)", "((-89)9)", "-4", null);
                var v = ov.swizzle.wzxww;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-89)9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-6)1)", "(8-5)", null, "((0-4)0)", "-7");
                var v = ov.swizzle.wzxwv;
                Assert.AreEqual("((0-4)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-6-6)1)", v.z);
                Assert.AreEqual("((0-4)0)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(2-6)", "(98)", "((-5-6)3)", "(2-6)");
                var v = ov.swizzle.wzxv;
                Assert.AreEqual("((-5-6)3)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(2-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-3)6)", "(-84)", "(70)", "(70)", null);
                var v = ov.swizzle.wzxvx;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("(70)", v.y);
                Assert.AreEqual("((8-3)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((8-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-6-4)", "9", "5", "(-6-4)");
                var v = ov.swizzle.wzxvy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(35)", "((-36)-4)", "((2-9)-8)", "", null);
                var v = ov.swizzle.wzxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((2-9)-8)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((2-9)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-13)7)", null, "", null, "");
                var v = ov.swizzle.wzxvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-13)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "-9", "(-1-1)", "6", "((-96)6)");
                var v = ov.swizzle.wzxvv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-96)6)", v.w);
                Assert.AreEqual("((-96)6)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-71)9)", "((-92)4)", "((-71)9)", "4");
                var v = ov.swizzle.wzy;
                Assert.AreEqual("((-71)9)", v.x);
                Assert.AreEqual("((-92)4)", v.y);
                Assert.AreEqual("((-71)9)", v.z);
            }
            {
                var ov = new gvec5<string>("((93)8)", "3", "(48)", "((-96)1)", "((29)4)");
                var v = ov.swizzle.wzyx;
                Assert.AreEqual("((-96)1)", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((93)8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-20)", "(-20)", "((-82)7)", "-1", "-1");
                var v = ov.swizzle.wzyxx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-82)7)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("(-20)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((73)-1)", "((73)-1)", null, "-9");
                var v = ov.swizzle.wzyxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((73)-1)", v.y);
                Assert.AreEqual("((73)-1)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((73)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "((-70)1)", "(64)", "(8-9)", "((-70)1)");
                var v = ov.swizzle.wzyxz;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("((-70)1)", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)4)", "-7", "((16)4)", "((-4-8)-7)", "");
                var v = ov.swizzle.wzyxw;
                Assert.AreEqual("((-4-8)-7)", v.x);
                Assert.AreEqual("((16)4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((16)4)", v.w);
                Assert.AreEqual("((-4-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-6)", "0", "0", "(1-6)", "(1-6)");
                var v = ov.swizzle.wzyxv;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)0)", null, "(-8-4)", "(-8-4)", "-6");
                var v = ov.swizzle.wzyy;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("(-8-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(4-3)", "(56)", "(37)", "((06)2)", "4");
                var v = ov.swizzle.wzyyx;
                Assert.AreEqual("((06)2)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(4-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "3", "(-1-3)", null, "((-85)-1)");
                var v = ov.swizzle.wzyyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(7-9)", "", null, "((-98)3)", "-6");
                var v = ov.swizzle.wzyyz;
                Assert.AreEqual("((-98)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((46)-6)", "(-43)", "((46)-6)", "-3", "1");
                var v = ov.swizzle.wzyyw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((46)-6)", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("(-43)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(95)", null, "-5", "-5");
                var v = ov.swizzle.wzyyv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(95)", v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-2)", "((65)-6)", "", "(26)", "(-2-2)");
                var v = ov.swizzle.wzyz;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((65)-6)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((51)4)", "((80)3)", "4", "(-99)", "3");
                var v = ov.swizzle.wzyzx;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((80)3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((51)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-8)-7)", "(-8-5)", "-4", "(15)", "8");
                var v = ov.swizzle.wzyzy;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "9", "9", "(-8-6)", "(-2-6)");
                var v = ov.swizzle.wzyzz;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-8)", "0", null, "(0-2)", "((82)-8)");
                var v = ov.swizzle.wzyzw;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((3-5)-5)", "(2-1)", "(2-1)", null);
                var v = ov.swizzle.wzyzv;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("((3-5)-5)", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", "", "(-50)", "((-5-4)-8)", null);
                var v = ov.swizzle.wzyw;
                Assert.AreEqual("((-5-4)-8)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-4)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "", "(-2-3)", "(66)", "");
                var v = ov.swizzle.wzywx;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)5)", "((-69)5)", null, "(-56)", "((-90)0)");
                var v = ov.swizzle.wzywy;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-69)5)", v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("((-69)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "((45)-1)", "", "2", "3");
                var v = ov.swizzle.wzywz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((45)-1)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(60)", "((23)0)", "(1-1)", "4");
                var v = ov.swizzle.wzyww;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((23)0)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)7)", "-4", "(8-5)", "", "(-85)");
                var v = ov.swizzle.wzywv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "-6", "-2", "(-75)", "((-24)6)");
                var v = ov.swizzle.wzyv;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-24)6)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "", "((1-2)8)", "", "((0-7)4)");
                var v = ov.swizzle.wzyvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-2)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((0-7)4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-5-7)", "((-67)2)", "(-5-7)", "0");
                var v = ov.swizzle.wzyvy;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("((-67)2)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-86)7)", "-3", null, "(45)", "");
                var v = ov.swizzle.wzyvz;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-14)6)", "((-2-1)-2)", "(-61)", null, "((-2-1)-2)");
                var v = ov.swizzle.wzyvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("((-2-1)-2)", v.z);
                Assert.AreEqual("((-2-1)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((61)-4)", null, "(-1-1)", "-4", "((3-2)5)");
                var v = ov.swizzle.wzyvv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-2)5)", v.w);
                Assert.AreEqual("((3-2)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "1", "2", "((87)8)");
                var v = ov.swizzle.wzz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec5<string>("((36)2)", "6", "6", "(01)", "-3");
                var v = ov.swizzle.wzzx;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((36)2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-12)8)", "(2-4)", "", "5", "(8-6)");
                var v = ov.swizzle.wzzxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-12)8)", v.w);
                Assert.AreEqual("((-12)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(93)", "0", "(-3-2)", "(43)", "0");
                var v = ov.swizzle.wzzxy;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(93)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-47)", "", "1", "-6", "(-47)");
                var v = ov.swizzle.wzzxz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-4-6)-1)", "-6", "-6", "((04)6)");
                var v = ov.swizzle.wzzxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-25)", "-2", "0", "(-25)");
                var v = ov.swizzle.wzzxv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)2)", "-1", "-3", "-1", "4");
                var v = ov.swizzle.wzzy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("7", "(-2-4)", "7", "-7", null);
                var v = ov.swizzle.wzzyx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "((74)-4)", "((74)-4)", "5");
                var v = ov.swizzle.wzzyy;
                Assert.AreEqual("((74)-4)", v.x);
                Assert.AreEqual("((74)-4)", v.y);
                Assert.AreEqual("((74)-4)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "", "-8", "((17)-7)", "(-15)");
                var v = ov.swizzle.wzzyz;
                Assert.AreEqual("((17)-7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-8-5)9)", "((82)4)", "", "(43)");
                var v = ov.swizzle.wzzyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((82)4)", v.y);
                Assert.AreEqual("((82)4)", v.z);
                Assert.AreEqual("((-8-5)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "((05)1)", "(9-9)", "(9-9)");
                var v = ov.swizzle.wzzyv;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("((05)1)", v.y);
                Assert.AreEqual("((05)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)-9)", "5", "", "((02)-9)", "((9-1)-3)");
                var v = ov.swizzle.wzzz;
                Assert.AreEqual("((02)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-68)-9)", "", "-3", "-7", "((17)-5)");
                var v = ov.swizzle.wzzzx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-68)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "((5-5)1)", "((-8-3)1)", "(84)", "9");
                var v = ov.swizzle.wzzzy;
                Assert.AreEqual("(84)", v.x);
                Assert.AreEqual("((-8-3)1)", v.y);
                Assert.AreEqual("((-8-3)1)", v.z);
                Assert.AreEqual("((-8-3)1)", v.w);
                Assert.AreEqual("((5-5)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((22)2)", "((30)8)", "((32)-9)", null, "(-53)");
                var v = ov.swizzle.wzzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((32)-9)", v.y);
                Assert.AreEqual("((32)-9)", v.z);
                Assert.AreEqual("((32)-9)", v.w);
                Assert.AreEqual("((32)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "", "(2-7)", "(-25)", "(2-7)");
                var v = ov.swizzle.wzzzw;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>("(61)", "(20)", "(20)", "((-7-7)9)", "5");
                var v = ov.swizzle.wzzzv;
                Assert.AreEqual("((-7-7)9)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "(-83)", "(-9-3)", "(-9-3)", "(-9-3)");
                var v = ov.swizzle.wzzw;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("(-9-3)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-47)", "-2", "-2", "-2", "(-5-8)");
                var v = ov.swizzle.wzzwx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-47)", v.v);
            }
            {
                var ov = new gvec5<string>("(-23)", "", "1", "(-23)", "(-4-5)");
                var v = ov.swizzle.wzzwy;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-5)-2)", null, null, "((-8-5)-2)", "");
                var v = ov.swizzle.wzzwz;
                Assert.AreEqual("((-8-5)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-5)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((98)2)", "", "-1", "-1", "((52)-8)");
                var v = ov.swizzle.wzzww;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(9-6)", "1", "1", "9");
                var v = ov.swizzle.wzzwv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((68)-6)", "", "(59)", "(4-8)");
                var v = ov.swizzle.wzzv;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-8)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "5", "5", "(-1-1)", "(-1-1)");
                var v = ov.swizzle.wzzvx;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-41)", "", "((35)-4)", "-3");
                var v = ov.swizzle.wzzvy;
                Assert.AreEqual("((35)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-41)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "3", null, "4", "((34)3)");
                var v = ov.swizzle.wzzvz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((34)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "-6", null, "(0-5)", "0");
                var v = ov.swizzle.wzzvw;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((86)-6)", "(9-5)", null, "(3-4)", "9");
                var v = ov.swizzle.wzzvv;
                Assert.AreEqual("(3-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((1-2)-9)", "((1-2)-9)", "((3-2)-2)", "(-1-1)", "(-1-1)");
                var v = ov.swizzle.wzw;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("((3-2)-2)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
            }
            {
                var ov = new gvec5<string>("(24)", "(89)", "2", "((33)-9)", "2");
                var v = ov.swizzle.wzwx;
                Assert.AreEqual("((33)-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((33)-9)", v.z);
                Assert.AreEqual("(24)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-5)", null, "1", "2", "(-43)");
                var v = ov.swizzle.wzwxx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-8-5)", v.w);
                Assert.AreEqual("(-8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(8-4)", "((-69)6)", "((-3-2)4)");
                var v = ov.swizzle.wzwxy;
                Assert.AreEqual("((-69)6)", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("((-69)6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((44)8)", "-7", "(-11)", "3", "");
                var v = ov.swizzle.wzwxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((44)8)", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(5-5)", "((-7-5)-7)", "((-5-6)4)", "(-1-8)");
                var v = ov.swizzle.wzwxw;
                Assert.AreEqual("((-5-6)4)", v.x);
                Assert.AreEqual("((-7-5)-7)", v.y);
                Assert.AreEqual("((-5-6)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-5-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((80)8)", null, null, "(-46)", "-3");
                var v = ov.swizzle.wzwxv;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-46)", v.z);
                Assert.AreEqual("((80)8)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-2)0)", "5", "", "((6-2)0)");
                var v = ov.swizzle.wzwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-2)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((69)4)", "((7-4)1)", "(-74)", "((-60)6)", "(8-4)");
                var v = ov.swizzle.wzwyx;
                Assert.AreEqual("((-60)6)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("((-60)6)", v.z);
                Assert.AreEqual("((7-4)1)", v.w);
                Assert.AreEqual("((69)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-86)-5)", null, "((51)-8)", "((51)-8)", "(-73)");
                var v = ov.swizzle.wzwyy;
                Assert.AreEqual("((51)-8)", v.x);
                Assert.AreEqual("((51)-8)", v.y);
                Assert.AreEqual("((51)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "((81)6)", null, "(08)");
                var v = ov.swizzle.wzwyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((81)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((81)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(9-1)", "-2", "1", "");
                var v = ov.swizzle.wzwyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(4-7)", "(7-8)", "((46)-4)", null, "((9-7)-1)");
                var v = ov.swizzle.wzwyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((46)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("((9-7)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "-5", "", "", "((-77)-6)");
                var v = ov.swizzle.wzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("9", "((-86)-6)", "((-34)9)", "((2-1)3)", null);
                var v = ov.swizzle.wzwzx;
                Assert.AreEqual("((2-1)3)", v.x);
                Assert.AreEqual("((-34)9)", v.y);
                Assert.AreEqual("((2-1)3)", v.z);
                Assert.AreEqual("((-34)9)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((4-1)-4)", "", "(-9-6)", "((8-7)-4)");
                var v = ov.swizzle.wzwzy;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((4-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-75)5)", "1", "((-75)5)", "((-75)5)");
                var v = ov.swizzle.wzwzz;
                Assert.AreEqual("((-75)5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-75)5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-2", "((-3-9)-5)", "(-7-4)");
                var v = ov.swizzle.wzwzw;
                Assert.AreEqual("((-3-9)-5)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-9)-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-3-9)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-8-5)", "(-8-5)", "((-21)2)", "-7");
                var v = ov.swizzle.wzwzv;
                Assert.AreEqual("((-21)2)", v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("((-21)2)", v.z);
                Assert.AreEqual("(-8-5)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "3", "", "((-74)-3)", "(-84)");
                var v = ov.swizzle.wzww;
                Assert.AreEqual("((-74)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-74)-3)", v.z);
                Assert.AreEqual("((-74)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "", "((47)6)", "(23)", null);
                var v = ov.swizzle.wzwwx;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("((47)6)", v.y);
                Assert.AreEqual("(23)", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "(-3-3)", "((-1-5)0)", "((5-1)4)");
                var v = ov.swizzle.wzwwy;
                Assert.AreEqual("((-1-5)0)", v.x);
                Assert.AreEqual("(-3-3)", v.y);
                Assert.AreEqual("((-1-5)0)", v.z);
                Assert.AreEqual("((-1-5)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-76)4)", "7", null, "((-76)4)", "(6-7)");
                var v = ov.swizzle.wzwwz;
                Assert.AreEqual("((-76)4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-76)4)", v.z);
                Assert.AreEqual("((-76)4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-18)5)", "(-28)", "1", "(-28)", "((-43)-7)");
                var v = ov.swizzle.wzwww;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", "", "1", null, "((-55)-4)");
                var v = ov.swizzle.wzwwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-55)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)5)", "(-5-2)", "1", null, "((-5-9)3)");
                var v = ov.swizzle.wzwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-5-9)3)", v.w);
            }
            {
                var ov = new gvec5<string>("((19)-6)", "(8-2)", "((26)-9)", "((19)-6)", "");
                var v = ov.swizzle.wzwvx;
                Assert.AreEqual("((19)-6)", v.x);
                Assert.AreEqual("((26)-9)", v.y);
                Assert.AreEqual("((19)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((19)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "6", null, "(-2-1)", "((-57)-6)");
                var v = ov.swizzle.wzwvy;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("((-57)-6)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "((25)3)", null, "(9-9)", "(-6-6)");
                var v = ov.swizzle.wzwvz;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "((-9-6)5)", "((8-8)8)", null, "(-4-6)");
                var v = ov.swizzle.wzwvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-8)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "-2", "-7", "(-2-3)", "(-91)");
                var v = ov.swizzle.wzwvv;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "4", "((1-5)7)", "0", "((-72)-4)");
                var v = ov.swizzle.wzv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((1-5)7)", v.y);
                Assert.AreEqual("((-72)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("-9", "((-9-2)-6)", "-7", "7", "-7");
                var v = ov.swizzle.wzvx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("0", "9", "(7-1)", "((-9-1)-7)", "(9-6)");
                var v = ov.swizzle.wzvxx;
                Assert.AreEqual("((-9-1)-7)", v.x);
                Assert.AreEqual("(7-1)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((71)2)", "-5", "(-99)", "((-6-7)7)", "(-99)");
                var v = ov.swizzle.wzvxy;
                Assert.AreEqual("((-6-7)7)", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual("((71)2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(00)", "((36)-8)", "((1-8)-2)", "((36)-8)");
                var v = ov.swizzle.wzvxz;
                Assert.AreEqual("((1-8)-2)", v.x);
                Assert.AreEqual("((36)-8)", v.y);
                Assert.AreEqual("((36)-8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((36)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-3)5)", null, null, "-5");
                var v = ov.swizzle.wzvxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((52)-5)", "((52)-5)", "-7", "((0-5)-3)", "0");
                var v = ov.swizzle.wzvxv;
                Assert.AreEqual("((0-5)-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((52)-5)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((-78)-4)", "", "(-61)");
                var v = ov.swizzle.wzvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-78)-4)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-20)", "((-81)-4)", "((-81)-4)", "(24)");
                var v = ov.swizzle.wzvyx;
                Assert.AreEqual("((-81)-4)", v.x);
                Assert.AreEqual("((-81)-4)", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", "(90)", "((56)6)", null);
                var v = ov.swizzle.wzvyy;
                Assert.AreEqual("((56)6)", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((37)3)", "(-5-8)", "(-63)", "", "((-10)0)");
                var v = ov.swizzle.wzvyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("((-10)0)", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("(36)", "(36)", "(-20)", "-1", "-8");
                var v = ov.swizzle.wzvyw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((41)0)", null, "((-74)-3)", "(66)");
                var v = ov.swizzle.wzvyv;
                Assert.AreEqual("((-74)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("((41)0)", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "(71)", "(-8-7)", "", "(-7-5)");
                var v = ov.swizzle.wzvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("(-8-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((-38)-2)", "0", "(-64)", null, "((-93)5)");
                var v = ov.swizzle.wzvzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-64)", v.y);
                Assert.AreEqual("((-93)5)", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual("((-38)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-9)", "-7", "(-5-6)", null, "((-54)-7)");
                var v = ov.swizzle.wzvzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("((-54)-7)", v.z);
                Assert.AreEqual("(-5-6)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-87)", "((-59)9)", "((-96)-6)", "(-6-9)", "-9");
                var v = ov.swizzle.wzvzz;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("((-96)-6)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-96)-6)", v.w);
                Assert.AreEqual("((-96)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-7)0)", "(-26)", "(-4-8)", "(5-2)", "(5-2)");
                var v = ov.swizzle.wzvzw;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-6)", "((97)-6)", null, null, null);
                var v = ov.swizzle.wzvzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((00)7)", "-4", "", null, "(35)");
                var v = ov.swizzle.wzvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "0", "0", "0", "((49)8)");
                var v = ov.swizzle.wzvwx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((49)8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-1-7)", "7", "-5", null);
                var v = ov.swizzle.wzvwy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)-9)", "5", "((0-2)-9)", "-2", null);
                var v = ov.swizzle.wzvwz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((0-2)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((0-2)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-8)", null, "2", "-1", "(4-8)");
                var v = ov.swizzle.wzvww;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "1", "((7-7)-2)", "1");
                var v = ov.swizzle.wzvwv;
                Assert.AreEqual("((7-7)-2)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((7-7)-2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((1-4)-6)", "((4-6)4)", "", "-7");
                var v = ov.swizzle.wzvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-6)4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("((27)9)", "(51)", "-8", "(-55)", "((5-5)-6)");
                var v = ov.swizzle.wzvvx;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((5-5)-6)", v.z);
                Assert.AreEqual("((5-5)-6)", v.w);
                Assert.AreEqual("((27)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "2", "", null, "(00)");
                var v = ov.swizzle.wzvvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(00)", v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-1-4)2)", "5", "((-1-4)2)", null);
                var v = ov.swizzle.wzvvz;
                Assert.AreEqual("((-1-4)2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((1-5)-5)", "((1-5)-5)", null, "");
                var v = ov.swizzle.wzvvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((1-5)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "2", "((35)-6)", "0", "(-3-5)");
                var v = ov.swizzle.wzvvv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((35)-6)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-43)1)", null, "(-56)", "((-38)-7)", "");
                var v = ov.swizzle.ww;
                Assert.AreEqual("((-38)-7)", v.x);
                Assert.AreEqual("((-38)-7)", v.y);
            }
            {
                var ov = new gvec5<string>("((1-2)-6)", "((-6-2)1)", "0", "(-98)", "((-62)-1)");
                var v = ov.swizzle.wwx;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("((1-2)-6)", v.z);
            }
            {
                var ov = new gvec5<string>("(17)", "(-4-9)", null, "-8", "(80)");
                var v = ov.swizzle.wwxx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(17)", v.w);
            }
            {
                var ov = new gvec5<string>("((0-6)-9)", "", "0", "(-3-9)", "3");
                var v = ov.swizzle.wwxxx;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("((0-6)-9)", v.z);
                Assert.AreEqual("((0-6)-9)", v.w);
                Assert.AreEqual("((0-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(1-3)", "(0-7)", "9");
                var v = ov.swizzle.wwxxy;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-8-7)-5)", "(-74)", "(-3-7)", "((-32)-9)");
                var v = ov.swizzle.wwxxz;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-13)", "((-4-8)5)", "(3-1)", "(-13)");
                var v = ov.swizzle.wwxxw;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", "((-57)-7)", "-5", "(78)", "1");
                var v = ov.swizzle.wwxxv;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(73)", "((5-6)2)", "-5", "-5", "-5");
                var v = ov.swizzle.wwxy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("((5-6)2)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(-52)", "", "", "((5-6)-5)");
                var v = ov.swizzle.wwxyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-34)", "(-83)", "((-28)-7)", "(-34)", "(-34)");
                var v = ov.swizzle.wwxyy;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec5<string>("(-72)", "(-72)", "6", "(-72)", "-5");
                var v = ov.swizzle.wwxyz;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("(-72)", v.y);
                Assert.AreEqual("(-72)", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((1-6)-8)", null, "((2-8)8)", null, "9");
                var v = ov.swizzle.wwxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((1-6)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-57)6)", "(-13)", "((-73)-1)", null, "-6");
                var v = ov.swizzle.wwxyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-57)6)", v.z);
                Assert.AreEqual("(-13)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-3)2)", "", "((2-3)2)", "");
                var v = ov.swizzle.wwxz;
                Assert.AreEqual("((2-3)2)", v.x);
                Assert.AreEqual("((2-3)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(97)", "-4", "4", null);
                var v = ov.swizzle.wwxzx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(5-9)", "7", "-5", "((0-9)-9)", "7");
                var v = ov.swizzle.wwxzy;
                Assert.AreEqual("((0-9)-9)", v.x);
                Assert.AreEqual("((0-9)-9)", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "((51)-1)", "((39)-9)", "-3", "-8");
                var v = ov.swizzle.wwxzz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("((39)-9)", v.w);
                Assert.AreEqual("((39)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "7", null, "((52)7)");
                var v = ov.swizzle.wwxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-16)-1)", "(5-1)", "(5-1)", null);
                var v = ov.swizzle.wwxzv;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(8-4)", "", null, null);
                var v = ov.swizzle.wwxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "(81)", "3", "(-69)", null);
                var v = ov.swizzle.wwxwx;
                Assert.AreEqual("(-69)", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "", "((-4-4)-4)", "((-4-4)-4)", "((32)8)");
                var v = ov.swizzle.wwxwy;
                Assert.AreEqual("((-4-4)-4)", v.x);
                Assert.AreEqual("((-4-4)-4)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("((-4-4)-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(93)", "9", "(0-2)", "-4", null);
                var v = ov.swizzle.wwxwz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-46)", "(-46)", "((5-3)7)", null);
                var v = ov.swizzle.wwxww;
                Assert.AreEqual("((5-3)7)", v.x);
                Assert.AreEqual("((5-3)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((5-3)7)", v.w);
                Assert.AreEqual("((5-3)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)3)", "((0-9)8)", "(-2-7)", "(82)", "((11)-4)");
                var v = ov.swizzle.wwxwv;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("((-66)3)", v.z);
                Assert.AreEqual("(82)", v.w);
                Assert.AreEqual("((11)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "((-43)-9)", "(-88)", "2", null);
                var v = ov.swizzle.wwxv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-88)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "3", "-8", "((6-9)5)", "(-54)");
                var v = ov.swizzle.wwxvx;
                Assert.AreEqual("((6-9)5)", v.x);
                Assert.AreEqual("((6-9)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)5)", "((-81)5)", "((-8-6)2)", "((9-8)9)", "((-81)5)");
                var v = ov.swizzle.wwxvy;
                Assert.AreEqual("((9-8)9)", v.x);
                Assert.AreEqual("((9-8)9)", v.y);
                Assert.AreEqual("((-81)5)", v.z);
                Assert.AreEqual("((-81)5)", v.w);
                Assert.AreEqual("((-81)5)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-77)9)", "((-42)-2)", "", "(-46)");
                var v = ov.swizzle.wwxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("((-42)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-5", "8", "((25)-5)", "8");
                var v = ov.swizzle.wwxvw;
                Assert.AreEqual("((25)-5)", v.x);
                Assert.AreEqual("((25)-5)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((25)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "((1-4)0)", "(4-4)", "(-27)");
                var v = ov.swizzle.wwxvv;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("(-27)", v.v);
            }
            {
                var ov = new gvec5<string>("((-53)-8)", "((-53)-8)", "6", null, "((1-3)-5)");
                var v = ov.swizzle.wwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-53)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("(34)", "(9-6)", "1", "1", "1");
                var v = ov.swizzle.wwyx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("(34)", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-5)4)", "((4-9)-4)", "(-9-3)", "((4-9)-4)", "(5-3)");
                var v = ov.swizzle.wwyxx;
                Assert.AreEqual("((4-9)-4)", v.x);
                Assert.AreEqual("((4-9)-4)", v.y);
                Assert.AreEqual("((4-9)-4)", v.z);
                Assert.AreEqual("((-1-5)4)", v.w);
                Assert.AreEqual("((-1-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", "(93)", "", "", "5");
                var v = ov.swizzle.wwyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("(93)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((-63)6)", "((-63)6)", "(1-8)");
                var v = ov.swizzle.wwyxz;
                Assert.AreEqual("((-63)6)", v.x);
                Assert.AreEqual("((-63)6)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-63)6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(0-4)", "((-77)7)", "((-77)7)", "(84)");
                var v = ov.swizzle.wwyxw;
                Assert.AreEqual("((-77)7)", v.x);
                Assert.AreEqual("((-77)7)", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-77)7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-2-7)-1)", "8", "-5", "((-2-7)-1)");
                var v = ov.swizzle.wwyxv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-2-7)-1)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-2-7)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((4-2)7)", "3", "-6", "(4-3)");
                var v = ov.swizzle.wwyy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((4-2)7)", v.z);
                Assert.AreEqual("((4-2)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-60)", "4", "((9-6)1)", null, "-5");
                var v = ov.swizzle.wwyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "9", "", "(93)", "");
                var v = ov.swizzle.wwyyy;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "(86)", "-7", "", "(86)");
                var v = ov.swizzle.wwyyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(4-9)", "", "6", "");
                var v = ov.swizzle.wwyyw;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(4-9)", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(57)", null, "(57)", "(57)", "((50)-1)");
                var v = ov.swizzle.wwyyv;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("(57)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((50)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-2)-3)", "((7-2)-3)", "7", "(-5-3)", "((7-2)-3)");
                var v = ov.swizzle.wwyz;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("((7-2)-3)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(33)", "", null, "((-43)-4)");
                var v = ov.swizzle.wwyzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(33)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-40)6)", "(37)", "((2-6)8)", "(-5-9)", "7");
                var v = ov.swizzle.wwyzy;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("(-5-9)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((2-6)8)", v.w);
                Assert.AreEqual("(37)", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, null, "(2-5)", "");
                var v = ov.swizzle.wwyzz;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)5)", "((34)-7)", null, null, "((1-6)-3)");
                var v = ov.swizzle.wwyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((34)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "(73)", "(53)", "((-5-9)3)", "(-63)");
                var v = ov.swizzle.wwyzv;
                Assert.AreEqual("((-5-9)3)", v.x);
                Assert.AreEqual("((-5-9)3)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-5)6)", "-7", "6", "((-1-5)6)", null);
                var v = ov.swizzle.wwyw;
                Assert.AreEqual("((-1-5)6)", v.x);
                Assert.AreEqual("((-1-5)6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-1-5)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(62)", "(62)", "(3-3)", "(3-3)", null);
                var v = ov.swizzle.wwywx;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec5<string>("((10)-3)", null, "7", "6", "((-7-2)-3)");
                var v = ov.swizzle.wwywy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", "((5-2)5)", "(14)", "((89)2)", "-5");
                var v = ov.swizzle.wwywz;
                Assert.AreEqual("((89)2)", v.x);
                Assert.AreEqual("((89)2)", v.y);
                Assert.AreEqual("((5-2)5)", v.z);
                Assert.AreEqual("((89)2)", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((25)-4)", "6", "6", "6");
                var v = ov.swizzle.wwyww;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((25)-4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((4-7)-9)", "", "((7-4)2)", "((4-7)-9)");
                var v = ov.swizzle.wwywv;
                Assert.AreEqual("((7-4)2)", v.x);
                Assert.AreEqual("((7-4)2)", v.y);
                Assert.AreEqual("((4-7)-9)", v.z);
                Assert.AreEqual("((7-4)2)", v.w);
                Assert.AreEqual("((4-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "-8", "(-8-8)", "4", "((7-2)0)");
                var v = ov.swizzle.wwyv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((7-2)0)", v.w);
            }
            {
                var ov = new gvec5<string>("(6-3)", null, "((-87)7)", "((-36)-4)", "((0-5)9)");
                var v = ov.swizzle.wwyvx;
                Assert.AreEqual("((-36)-4)", v.x);
                Assert.AreEqual("((-36)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((0-5)9)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-59)", "-3", "(-59)", "-3", "-1");
                var v = ov.swizzle.wwyvy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-80)1)", "(-6-1)", "5", "-1");
                var v = ov.swizzle.wwyvz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-80)1)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-6)-5)", "((-7-9)6)", "(51)", "(-2-9)", "(-2-9)");
                var v = ov.swizzle.wwyvw;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((-7-9)6)", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((8-9)3)", "((-91)3)", "(-74)", "(-74)");
                var v = ov.swizzle.wwyvv;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("((8-9)3)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)6)", "7", "((-5-7)-4)", "(-76)", "((-5-7)-4)");
                var v = ov.swizzle.wwz;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("(-76)", v.y);
                Assert.AreEqual("((-5-7)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("", "((22)1)", "((22)1)", "(-73)", "1");
                var v = ov.swizzle.wwzx;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("((22)1)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((0-9)1)", "(-1-3)", "0", "0", "-3");
                var v = ov.swizzle.wwzxx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((0-9)1)", v.w);
                Assert.AreEqual("((0-9)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-74)", "((64)8)", null, "", "4");
                var v = ov.swizzle.wwzxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("((64)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-8)", "-4", "((-5-5)7)", "(-34)", null);
                var v = ov.swizzle.wwzxz;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("((-5-5)7)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("((-5-5)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-1-2)", "", "((98)-7)", "(-5-2)");
                var v = ov.swizzle.wwzxw;
                Assert.AreEqual("((98)-7)", v.x);
                Assert.AreEqual("((98)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((98)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "-8", "3", "((-1-7)-9)");
                var v = ov.swizzle.wwzxv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-1-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(9-9)", "", "-2", "");
                var v = ov.swizzle.wwzy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-27)3)", "(82)", "", "(82)", "-2");
                var v = ov.swizzle.wwzyx;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(82)", v.w);
                Assert.AreEqual("((-27)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-38)", "(81)", "4", "", "3");
                var v = ov.swizzle.wwzyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(81)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-7-9)", "((7-9)2)", "((7-9)2)", "(-3-5)");
                var v = ov.swizzle.wwzyz;
                Assert.AreEqual("((7-9)2)", v.x);
                Assert.AreEqual("((7-9)2)", v.y);
                Assert.AreEqual("((7-9)2)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("((7-9)2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "6", "6", "((5-4)3)", "((19)2)");
                var v = ov.swizzle.wwzyw;
                Assert.AreEqual("((5-4)3)", v.x);
                Assert.AreEqual("((5-4)3)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((5-4)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((21)8)", "-4", "((21)8)", "((8-3)-4)", "((21)8)");
                var v = ov.swizzle.wwzyv;
                Assert.AreEqual("((8-3)-4)", v.x);
                Assert.AreEqual("((8-3)-4)", v.y);
                Assert.AreEqual("((21)8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((21)8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(53)", "(53)", "7", "((52)-2)");
                var v = ov.swizzle.wwzz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("(53)", v.w);
            }
            {
                var ov = new gvec5<string>("((-3-7)9)", "((-3-7)9)", "-2", "((-40)8)", "-9");
                var v = ov.swizzle.wwzzx;
                Assert.AreEqual("((-40)8)", v.x);
                Assert.AreEqual("((-40)8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-3-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-61)-6)", "(39)", "((79)-8)", "");
                var v = ov.swizzle.wwzzy;
                Assert.AreEqual("((79)-8)", v.x);
                Assert.AreEqual("((79)-8)", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("((-61)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-36)6)", "9", "(-50)", "((1-9)2)", "9");
                var v = ov.swizzle.wwzzz;
                Assert.AreEqual("((1-9)2)", v.x);
                Assert.AreEqual("((1-9)2)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(-50)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(47)", "", "(47)", "3");
                var v = ov.swizzle.wwzzw;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)-1)", "((6-5)1)", "((50)-7)", "((02)-1)", "");
                var v = ov.swizzle.wwzzv;
                Assert.AreEqual("((02)-1)", v.x);
                Assert.AreEqual("((02)-1)", v.y);
                Assert.AreEqual("((50)-7)", v.z);
                Assert.AreEqual("((50)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-3)-5)", "8", "((4-3)-5)", "(6-2)", "(6-2)");
                var v = ov.swizzle.wwzw;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("((4-3)-5)", v.z);
                Assert.AreEqual("(6-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-34)2)", "((0-9)-1)", "(72)", "((-34)2)", "-4");
                var v = ov.swizzle.wwzwx;
                Assert.AreEqual("((-34)2)", v.x);
                Assert.AreEqual("((-34)2)", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("((-34)2)", v.w);
                Assert.AreEqual("((-34)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-5)-7)", "-6", "(-78)", "((-60)-3)", "(69)");
                var v = ov.swizzle.wwzwy;
                Assert.AreEqual("((-60)-3)", v.x);
                Assert.AreEqual("((-60)-3)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("((-60)-3)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-98)-6)", "(8-4)", "(0-1)", "0");
                var v = ov.swizzle.wwzwz;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "-5", "((83)-1)", "", "7");
                var v = ov.swizzle.wwzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((83)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-19)-1)", "((-88)8)", "-5", "(-57)", "(-8-3)");
                var v = ov.swizzle.wwzwv;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)-6)", "(-23)", null, "-8", "((-86)0)");
                var v = ov.swizzle.wwzv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-86)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((7-9)3)", "(17)", "(-56)", "((7-9)3)", "(1-3)");
                var v = ov.swizzle.wwzvx;
                Assert.AreEqual("((7-9)3)", v.x);
                Assert.AreEqual("((7-9)3)", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("((7-9)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((5-3)8)", "(59)", "(59)", null);
                var v = ov.swizzle.wwzvy;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-3)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-80)", "((08)8)", null, "(-80)");
                var v = ov.swizzle.wwzvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((08)8)", v.z);
                Assert.AreEqual("(-80)", v.w);
                Assert.AreEqual("((08)8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "(-80)", "8", "-8");
                var v = ov.swizzle.wwzvw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-80)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-70)-1)", "-7", "(6-2)", null, "((26)8)");
                var v = ov.swizzle.wwzvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("((26)8)", v.w);
                Assert.AreEqual("((26)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((29)6)", "-8", "-2", "");
                var v = ov.swizzle.www;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
            }
            {
                var ov = new gvec5<string>("((-6-5)9)", "(7-9)", "-8", null, "((-6-5)9)");
                var v = ov.swizzle.wwwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-5)9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "-9", "-5", "((35)0)", "(-32)");
                var v = ov.swizzle.wwwxx;
                Assert.AreEqual("((35)0)", v.x);
                Assert.AreEqual("((35)0)", v.y);
                Assert.AreEqual("((35)0)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-80)0)", "(8-9)", "(-53)", "(-53)");
                var v = ov.swizzle.wwwxy;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-80)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)1)", "(75)", "", "-3", "((48)1)");
                var v = ov.swizzle.wwwxz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((48)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-5)-7)", "-7", null, "-8");
                var v = ov.swizzle.wwwxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "(-6-5)", "7", "((-5-4)-4)");
                var v = ov.swizzle.wwwxv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(40)", "(04)", "", "((-1-8)1)");
                var v = ov.swizzle.wwwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(40)", v.w);
            }
            {
                var ov = new gvec5<string>("((-32)-4)", "(-5-5)", "", "8", "(-1-6)");
                var v = ov.swizzle.wwwyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-5-5)", v.w);
                Assert.AreEqual("((-32)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-29)-4)", "((-29)-4)", "((-7-2)4)", "(5-4)", "((-7-2)4)");
                var v = ov.swizzle.wwwyy;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("((-29)-4)", v.w);
                Assert.AreEqual("((-29)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(61)", "((-42)2)", "((61)-3)", null);
                var v = ov.swizzle.wwwyz;
                Assert.AreEqual("((61)-3)", v.x);
                Assert.AreEqual("((61)-3)", v.y);
                Assert.AreEqual("((61)-3)", v.z);
                Assert.AreEqual("(61)", v.w);
                Assert.AreEqual("((-42)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-8)", "((8-6)7)", "", "((-95)-8)", "3");
                var v = ov.swizzle.wwwyw;
                Assert.AreEqual("((-95)-8)", v.x);
                Assert.AreEqual("((-95)-8)", v.y);
                Assert.AreEqual("((-95)-8)", v.z);
                Assert.AreEqual("((8-6)7)", v.w);
                Assert.AreEqual("((-95)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(3-6)", "(-9-1)", "", "-4");
                var v = ov.swizzle.wwwyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-9)-4)", "-6", null, "((-6-9)-4)", null);
                var v = ov.swizzle.wwwz;
                Assert.AreEqual("((-6-9)-4)", v.x);
                Assert.AreEqual("((-6-9)-4)", v.y);
                Assert.AreEqual("((-6-9)-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-3-6)", "(4-9)", null, "(-3-6)", "((4-8)7)");
                var v = ov.swizzle.wwwzx;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-9)", "(2-9)", "(2-9)", "(81)", null);
                var v = ov.swizzle.wwwzy;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("(2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "3", "(32)", "-5", "(32)");
                var v = ov.swizzle.wwwzz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(32)", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)-9)", "", "(-16)", "((-9-4)-9)", "((-9-4)-9)");
                var v = ov.swizzle.wwwzw;
                Assert.AreEqual("((-9-4)-9)", v.x);
                Assert.AreEqual("((-9-4)-9)", v.y);
                Assert.AreEqual("((-9-4)-9)", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("((-9-4)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "(-65)", "((1-7)6)", "8");
                var v = ov.swizzle.wwwzv;
                Assert.AreEqual("((1-7)6)", v.x);
                Assert.AreEqual("((1-7)6)", v.y);
                Assert.AreEqual("((1-7)6)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((78)-4)", "(-4-8)", null, "8", null);
                var v = ov.swizzle.wwww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-5)-8)", "", "((-42)-6)", null, "");
                var v = ov.swizzle.wwwwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-6-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-97)", null, "((2-5)8)", "((2-5)8)");
                var v = ov.swizzle.wwwwy;
                Assert.AreEqual("((2-5)8)", v.x);
                Assert.AreEqual("((2-5)8)", v.y);
                Assert.AreEqual("((2-5)8)", v.z);
                Assert.AreEqual("((2-5)8)", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-2)", "9", "((-6-5)6)", "(-5-6)", "((-6-5)6)");
                var v = ov.swizzle.wwwwz;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("(-5-6)", v.w);
                Assert.AreEqual("((-6-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "(30)", "(-74)", "(-5-5)");
                var v = ov.swizzle.wwwww;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>("((-97)8)", "(-6-7)", "-5", "", "(-6-7)");
                var v = ov.swizzle.wwwwv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-1)", "((-18)-7)", "2", "(67)");
                var v = ov.swizzle.wwwv;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-6)", null, "((-4-1)-6)", "((43)4)", "((43)4)");
                var v = ov.swizzle.wwwvx;
                Assert.AreEqual("((43)4)", v.x);
                Assert.AreEqual("((43)4)", v.y);
                Assert.AreEqual("((43)4)", v.z);
                Assert.AreEqual("((43)4)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "(-63)", "", "((-86)-4)", "(-20)");
                var v = ov.swizzle.wwwvy;
                Assert.AreEqual("((-86)-4)", v.x);
                Assert.AreEqual("((-86)-4)", v.y);
                Assert.AreEqual("((-86)-4)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)8)", "(6-6)", "((46)8)", "8", "");
                var v = ov.swizzle.wwwvz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((46)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((4-1)5)", "(-1-3)", null, "(-23)");
                var v = ov.swizzle.wwwvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "((-14)3)", "(-18)", "(7-8)");
                var v = ov.swizzle.wwwvv;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-83)-8)", "((-65)-6)", "-4", "(-65)");
                var v = ov.swizzle.wwv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-65)", v.z);
            }
            {
                var ov = new gvec5<string>("((3-7)-3)", "(94)", "", null, "(94)");
                var v = ov.swizzle.wwvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("((3-7)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(23)", "1", "((22)8)", "-7");
                var v = ov.swizzle.wwvxx;
                Assert.AreEqual("((22)8)", v.x);
                Assert.AreEqual("((22)8)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((-21)-3)", "((4-9)-4)", null);
                var v = ov.swizzle.wwvxy;
                Assert.AreEqual("((4-9)-4)", v.x);
                Assert.AreEqual("((4-9)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "((8-2)5)", "3", "", "(-41)");
                var v = ov.swizzle.wwvxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(53)", "(-17)", "-2", "((-32)4)");
                var v = ov.swizzle.wwvxw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-32)4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "3", "", "", "3");
                var v = ov.swizzle.wwvxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "-6", "-6", "");
                var v = ov.swizzle.wwvy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "-5", "((-68)2)", "-5", "-5");
                var v = ov.swizzle.wwvyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-5)", "((-3-7)-6)", "((-69)-1)", "-9");
                var v = ov.swizzle.wwvyy;
                Assert.AreEqual("((-69)-1)", v.x);
                Assert.AreEqual("((-69)-1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-83)", "(-83)", "-8", "");
                var v = ov.swizzle.wwvyz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "", "8", "((56)-7)", "((56)-7)");
                var v = ov.swizzle.wwvyw;
                Assert.AreEqual("((56)-7)", v.x);
                Assert.AreEqual("((56)-7)", v.y);
                Assert.AreEqual("((56)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((56)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)0)", "(-6-9)", "(0-8)", "(-6-9)", "-6");
                var v = ov.swizzle.wwvyv;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-6-9)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "((-92)-5)", "(6-8)", "(-91)", null);
                var v = ov.swizzle.wwvz;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(6-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((-86)-6)", "-6", "9", "3", "");
                var v = ov.swizzle.wwvzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-86)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-4-7)", "((2-8)-8)", "((26)4)", "(-4-7)");
                var v = ov.swizzle.wwvzy;
                Assert.AreEqual("((26)4)", v.x);
                Assert.AreEqual("((26)4)", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("((2-8)-8)", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((32)9)", "(-3-5)", "((-82)-6)", "(-3-4)", "((-82)-6)");
                var v = ov.swizzle.wwvzz;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("((-82)-6)", v.z);
                Assert.AreEqual("((-82)-6)", v.w);
                Assert.AreEqual("((-82)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-4-6)6)", "((68)7)", "7", "(-24)");
                var v = ov.swizzle.wwvzw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-24)", v.z);
                Assert.AreEqual("((68)7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-1-9)-7)", "(23)", "3", "((4-9)7)");
                var v = ov.swizzle.wwvzv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((4-9)7)", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("((4-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "7", "2", "7");
                var v = ov.swizzle.wwvw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("", "-6", "8", "((-9-8)-2)", null);
                var v = ov.swizzle.wwvwx;
                Assert.AreEqual("((-9-8)-2)", v.x);
                Assert.AreEqual("((-9-8)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-8)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-3-1)-7)", null, "-1", "((-3-1)-7)");
                var v = ov.swizzle.wwvwy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-3-1)-7)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-3-1)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(6-5)", "(2-4)", "((-8-9)-5)", "((-8-9)-5)");
                var v = ov.swizzle.wwvwz;
                Assert.AreEqual("((-8-9)-5)", v.x);
                Assert.AreEqual("((-8-9)-5)", v.y);
                Assert.AreEqual("((-8-9)-5)", v.z);
                Assert.AreEqual("((-8-9)-5)", v.w);
                Assert.AreEqual("(2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((20)0)", "0", "((-3-4)-8)", "(4-9)", "((20)0)");
                var v = ov.swizzle.wwvww;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual("(4-9)", v.y);
                Assert.AreEqual("((20)0)", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("(4-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-24)3)", "4", "(29)", "((96)8)", "(-56)");
                var v = ov.swizzle.wwvwv;
                Assert.AreEqual("((96)8)", v.x);
                Assert.AreEqual("((96)8)", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("((96)8)", v.w);
                Assert.AreEqual("(-56)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((15)7)", "8", "((9-1)-9)", "((15)7)");
                var v = ov.swizzle.wwvv;
                Assert.AreEqual("((9-1)-9)", v.x);
                Assert.AreEqual("((9-1)-9)", v.y);
                Assert.AreEqual("((15)7)", v.z);
                Assert.AreEqual("((15)7)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(3-2)", "((-27)-7)", "", "((64)6)");
                var v = ov.swizzle.wwvvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((64)6)", v.z);
                Assert.AreEqual("((64)6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-89)", "((-1-4)4)", "9", "((30)1)", "(-31)");
                var v = ov.swizzle.wwvvy;
                Assert.AreEqual("((30)1)", v.x);
                Assert.AreEqual("((30)1)", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("((-1-4)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-8)", "(-5-8)", "(-5-8)", "2", "2");
                var v = ov.swizzle.wwvvz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-7)-8)", null, "(90)", "", "-9");
                var v = ov.swizzle.wwvvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-19)", "((17)6)", "", "(87)", "3");
                var v = ov.swizzle.wwvvv;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "((13)-4)", "7", "(10)");
                var v = ov.swizzle.wv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(10)", v.y);
            }
            {
                var ov = new gvec5<string>("-9", "(3-2)", "-9", "((-35)2)", "-9");
                var v = ov.swizzle.wvx;
                Assert.AreEqual("((-35)2)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec5<string>("1", "((-9-4)4)", "7", "7", "((-7-5)-3)");
                var v = ov.swizzle.wvxx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-7-5)-3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-58)", "8", "8", null);
                var v = ov.swizzle.wvxxx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-51)", "(-1-5)", "-6", "8");
                var v = ov.swizzle.wvxxy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "4", "((-35)-5)", "((-35)-5)", "1");
                var v = ov.swizzle.wvxxz;
                Assert.AreEqual("((-35)-5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("((-35)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(9-8)", "", "((-3-5)-3)", "((-3-5)-3)");
                var v = ov.swizzle.wvxxw;
                Assert.AreEqual("((-3-5)-3)", v.x);
                Assert.AreEqual("((-3-5)-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-3-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "", "-4", "-7", "((-38)2)");
                var v = ov.swizzle.wvxxv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-38)2)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((-38)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)-9)", "((-1-4)-9)", "9", "1", null);
                var v = ov.swizzle.wvxy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-1-4)-9)", v.z);
                Assert.AreEqual("((-1-4)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-30)", null, null, "-2");
                var v = ov.swizzle.wvxyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-30)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-6-8)", "(-6-8)", "-1", "1");
                var v = ov.swizzle.wvxyy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)-3)", "3", "(-7-4)", "8", "0");
                var v = ov.swizzle.wvxyz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-47)-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "-9", "(8-3)", "-9", "");
                var v = ov.swizzle.wvxyw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "7", "7", "(-9-4)");
                var v = ov.swizzle.wvxyv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "((-98)0)", "((-52)-5)", "((4-5)-7)", "(-2-7)");
                var v = ov.swizzle.wvxz;
                Assert.AreEqual("((4-5)-7)", v.x);
                Assert.AreEqual("(-2-7)", v.y);
                Assert.AreEqual("(-2-7)", v.z);
                Assert.AreEqual("((-52)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "9", "((-7-6)-4)", "2", "");
                var v = ov.swizzle.wvxzx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-7-6)-4)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "-6", "", "-6", "(6-2)");
                var v = ov.swizzle.wvxzy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(42)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "(-77)", "", "((-7-4)-8)", "7");
                var v = ov.swizzle.wvxzz;
                Assert.AreEqual("((-7-4)-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)3)", "(-92)", "(-92)", "2", null);
                var v = ov.swizzle.wvxzw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-4)3)", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((92)-6)", "-5", "((5-5)-5)", "((92)-6)", "4");
                var v = ov.swizzle.wvxzv;
                Assert.AreEqual("((92)-6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((92)-6)", v.z);
                Assert.AreEqual("((5-5)-5)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "-4", null, "(-8-2)", "-5");
                var v = ov.swizzle.wvxw;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-1-5)", "(0-1)", "(-1-5)", "(-1-5)");
                var v = ov.swizzle.wvxwx;
                Assert.AreEqual("(-1-5)", v.x);
                Assert.AreEqual("(-1-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-1-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-50)", "(-17)", "(-17)", "4");
                var v = ov.swizzle.wvxwy;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-53)6)", "((-92)6)", "(-28)", "(8-8)");
                var v = ov.swizzle.wvxwz;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(8-8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("((-92)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((43)-1)", "-4", "", "(-58)", "((7-4)9)");
                var v = ov.swizzle.wvxww;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((7-4)9)", v.y);
                Assert.AreEqual("((43)-1)", v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("(-58)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(0-9)", "((4-8)3)", "-6", "((4-8)3)");
                var v = ov.swizzle.wvxwv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((4-8)3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((4-8)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-8-3)-9)", "-9", "-9", "(17)");
                var v = ov.swizzle.wvxv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(17)", v.w);
            }
            {
                var ov = new gvec5<string>("", "-9", "-2", "-2", null);
                var v = ov.swizzle.wvxvx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((70)8)", "((70)8)", "(92)", "0", "((-6-9)7)");
                var v = ov.swizzle.wvxvy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-6-9)7)", v.y);
                Assert.AreEqual("((70)8)", v.z);
                Assert.AreEqual("((-6-9)7)", v.w);
                Assert.AreEqual("((70)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((62)3)", "-7", "(2-2)", "", "((09)-6)");
                var v = ov.swizzle.wvxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((09)-6)", v.y);
                Assert.AreEqual("((62)3)", v.z);
                Assert.AreEqual("((09)-6)", v.w);
                Assert.AreEqual("(2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)-7)", "", "5", "((01)1)", "2");
                var v = ov.swizzle.wvxvw;
                Assert.AreEqual("((01)1)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-62)-7)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((01)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((78)2)", "(9-5)", "8", "((93)0)");
                var v = ov.swizzle.wvxvv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((93)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((93)0)", v.w);
                Assert.AreEqual("((93)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-90)8)", null, "(5-3)", "((-90)8)", "((-63)1)");
                var v = ov.swizzle.wvy;
                Assert.AreEqual("((-90)8)", v.x);
                Assert.AreEqual("((-63)1)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>(null, "-6", "((4-1)3)", "(13)", "((-69)1)");
                var v = ov.swizzle.wvyx;
                Assert.AreEqual("(13)", v.x);
                Assert.AreEqual("((-69)1)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("7", "7", "((2-3)-4)", "((2-8)-8)", "");
                var v = ov.swizzle.wvyxx;
                Assert.AreEqual("((2-8)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-40)", null, "", "((8-1)-1)");
                var v = ov.swizzle.wvyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-1)-1)", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-40)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((72)-7)", "(-6-7)", "", "(-6-7)");
                var v = ov.swizzle.wvyxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("((72)-7)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "1", "((-3-5)5)", "1", "(21)");
                var v = ov.swizzle.wvyxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((-73)-3)", "6", "(-4-1)");
                var v = ov.swizzle.wvyxv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-4-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "((-1-7)-5)", "(1-9)", null);
                var v = ov.swizzle.wvyy;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-1)9)", "-9", "((14)7)", "(-24)", "(-24)");
                var v = ov.swizzle.wvyyx;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-7-1)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "((2-9)0)", "1", "(9-4)");
                var v = ov.swizzle.wvyyy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "(68)", "-4", "(28)", "(68)");
                var v = ov.swizzle.wvyyz;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("(68)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-6-3)", "((11)-9)", "(1-8)", "(6-6)");
                var v = ov.swizzle.wvyyw;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("(6-6)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(1-8)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-9-3)", "(-6-8)", "", "((-92)2)");
                var v = ov.swizzle.wvyyv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-92)2)", v.y);
                Assert.AreEqual("(-9-3)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual("((-92)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(30)", null, null, "(-9-8)", "((20)-8)");
                var v = ov.swizzle.wvyz;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("((20)-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-4", null, "-4", "-4", "-7");
                var v = ov.swizzle.wvyzx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(49)", null, "", "(49)", "(16)");
                var v = ov.swizzle.wvyzy;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(16)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((81)4)", null, "(-56)", "((-7-9)-2)", "((-15)9)");
                var v = ov.swizzle.wvyzz;
                Assert.AreEqual("((-7-9)-2)", v.x);
                Assert.AreEqual("((-15)9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("(-56)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-18)8)", "2", null, null);
                var v = ov.swizzle.wvyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-18)8)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "7", "5", "((-3-1)-1)", "(-2-2)");
                var v = ov.swizzle.wvyzv;
                Assert.AreEqual("((-3-1)-1)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-7-3)4)", "4", "8", "((-7-3)4)");
                var v = ov.swizzle.wvyw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-7-3)4)", v.y);
                Assert.AreEqual("((-7-3)4)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(-1-5)", "(6-2)", "-1");
                var v = ov.swizzle.wvywx;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)4)", "0", "3", "((81)7)", "(-89)");
                var v = ov.swizzle.wvywy;
                Assert.AreEqual("((81)7)", v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((81)7)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((2-8)-5)", "-1", "(-10)", "0", "((-86)-3)");
                var v = ov.swizzle.wvywz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-86)-3)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-10)", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", "((-1-2)-8)", "3", "(35)", "((-1-2)-8)");
                var v = ov.swizzle.wvyww;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("((-1-2)-8)", v.y);
                Assert.AreEqual("((-1-2)-8)", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-1)8)", "", "", "((7-7)3)", "");
                var v = ov.swizzle.wvywv;
                Assert.AreEqual("((7-7)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-7)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-68)", "(-50)", null, "2");
                var v = ov.swizzle.wvyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "", "((3-9)-1)", "(81)", "");
                var v = ov.swizzle.wvyvx;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", "1", null, "((0-2)-4)", null);
                var v = ov.swizzle.wvyvy;
                Assert.AreEqual("((0-2)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-2", "(-8-5)", "(48)", "((84)-8)");
                var v = ov.swizzle.wvyvz;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("((84)-8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((84)-8)", v.w);
                Assert.AreEqual("(-8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(59)", "((-78)-3)", "-5", null);
                var v = ov.swizzle.wvyvw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)-6)", "", "2", null, "((-26)-7)");
                var v = ov.swizzle.wvyvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-26)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-26)-7)", v.w);
                Assert.AreEqual("((-26)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)5)", "", "(43)", "((0-4)5)", "(09)");
                var v = ov.swizzle.wvz;
                Assert.AreEqual("((0-4)5)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("(43)", v.z);
            }
            {
                var ov = new gvec5<string>("((0-6)8)", "((0-6)8)", "((12)-9)", "(69)", null);
                var v = ov.swizzle.wvzx;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((12)-9)", v.z);
                Assert.AreEqual("((0-6)8)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", null, "((-39)1)", "((-5-3)6)", "-4");
                var v = ov.swizzle.wvzxx;
                Assert.AreEqual("((-5-3)6)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-39)1)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-44)", "(-44)", "((41)0)", "((8-6)7)");
                var v = ov.swizzle.wvzxy;
                Assert.AreEqual("((41)0)", v.x);
                Assert.AreEqual("((8-6)7)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(06)", "", "((6-7)6)", "((0-7)-1)");
                var v = ov.swizzle.wvzxz;
                Assert.AreEqual("((6-7)6)", v.x);
                Assert.AreEqual("((0-7)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-27)-3)", "((-23)-2)", "((-23)-2)", "((-27)-3)", "2");
                var v = ov.swizzle.wvzxw;
                Assert.AreEqual("((-27)-3)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-23)-2)", v.z);
                Assert.AreEqual("((-27)-3)", v.w);
                Assert.AreEqual("((-27)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-31)4)", "(-53)", "(-53)", "((6-8)-4)", "1");
                var v = ov.swizzle.wvzxv;
                Assert.AreEqual("((6-8)-4)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("((-31)4)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(7-9)", "(45)", "-4", "", "7");
                var v = ov.swizzle.wvzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(45)", v.w);
            }
            {
                var ov = new gvec5<string>("(-29)", "", "5", "((44)2)", "(2-6)");
                var v = ov.swizzle.wvzyx;
                Assert.AreEqual("((44)2)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-8)", null, "((-11)9)", "-4", "((-11)9)");
                var v = ov.swizzle.wvzyy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-11)9)", v.y);
                Assert.AreEqual("((-11)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)-3)", "(9-8)", "(0-3)", "(9-8)", "-1");
                var v = ov.swizzle.wvzyz;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "1", "(72)", "(-16)", "((-7-8)-3)");
                var v = ov.swizzle.wvzyw;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("((-7-8)-3)", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec5<string>("((45)-1)", "(90)", "6", "(3-3)", "((4-2)-3)");
                var v = ov.swizzle.wvzyv;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("((4-2)-3)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("((4-2)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(6-8)", "", "9", "(-1-3)");
                var v = ov.swizzle.wvzz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-94)3)", "(8-4)", "(8-4)", "(8-4)", "-7");
                var v = ov.swizzle.wvzzx;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("((-94)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-6)", "((-48)-5)", null, "9", "9");
                var v = ov.swizzle.wvzzy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-48)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "8", null, "(31)");
                var v = ov.swizzle.wvzzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-54)", "((-64)-7)", "((51)6)", "(-54)");
                var v = ov.swizzle.wvzzw;
                Assert.AreEqual("((51)6)", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("((-64)-7)", v.z);
                Assert.AreEqual("((-64)-7)", v.w);
                Assert.AreEqual("((51)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "(-5-9)", null, "(9-1)", "((89)-6)");
                var v = ov.swizzle.wvzzv;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("((89)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((89)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-33)", "((28)0)", "0", "((28)0)", "((-98)-1)");
                var v = ov.swizzle.wvzw;
                Assert.AreEqual("((28)0)", v.x);
                Assert.AreEqual("((-98)-1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((28)0)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-69)", "(0-7)", "(-24)", "((-9-3)-6)");
                var v = ov.swizzle.wvzwx;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("((-9-3)-6)", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("(-24)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "9", "-1", "((-57)2)", "(-9-2)");
                var v = ov.swizzle.wvzwy;
                Assert.AreEqual("((-57)2)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-57)2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "", "(-16)", "-9", "");
                var v = ov.swizzle.wvzwz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(74)", "((-1-3)-5)", "((-1-3)-5)", "((-2-6)-9)");
                var v = ov.swizzle.wvzww;
                Assert.AreEqual("((-1-3)-5)", v.x);
                Assert.AreEqual("((-2-6)-9)", v.y);
                Assert.AreEqual("((-1-3)-5)", v.z);
                Assert.AreEqual("((-1-3)-5)", v.w);
                Assert.AreEqual("((-1-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "((5-9)5)", "((-91)9)", "-8", "0");
                var v = ov.swizzle.wvzwv;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-91)9)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-20)-6)", "9", "7", "(74)", null);
                var v = ov.swizzle.wvzv;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(6-3)", "(0-1)", "((68)9)", "((-7-5)1)", "((80)2)");
                var v = ov.swizzle.wvzvx;
                Assert.AreEqual("((-7-5)1)", v.x);
                Assert.AreEqual("((80)2)", v.y);
                Assert.AreEqual("((68)9)", v.z);
                Assert.AreEqual("((80)2)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(55)", "-5", "-5", "(23)", "(6-3)");
                var v = ov.swizzle.wvzvy;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-62)", "(5-1)", "(5-1)");
                var v = ov.swizzle.wvzvz;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-1)-8)", "((-4-1)-8)", "2", "(7-8)", null);
                var v = ov.swizzle.wvzvw;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-67)", "(9-4)", null, "-8");
                var v = ov.swizzle.wvzvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "7", "7", "3", "((-9-6)-9)");
                var v = ov.swizzle.wvw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-9-6)-9)", v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("((-24)-1)", null, "(-9-6)", "((-20)2)", null);
                var v = ov.swizzle.wvwx;
                Assert.AreEqual("((-20)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-20)2)", v.z);
                Assert.AreEqual("((-24)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-2-9)-6)", "-9", "8", "8", "8");
                var v = ov.swizzle.wvwxx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-2-9)-6)", v.w);
                Assert.AreEqual("((-2-9)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)-4)", "-7", "-7", "(41)", "-7");
                var v = ov.swizzle.wvwxy;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual("((-8-2)-4)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-68)", "(-68)", "-5", null, "((22)-7)");
                var v = ov.swizzle.wvwxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((22)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-1)", "((60)8)", "(-4-1)", "((-10)6)", "(5-5)");
                var v = ov.swizzle.wvwxw;
                Assert.AreEqual("((-10)6)", v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("((-10)6)", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("((-10)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((84)-9)", "((-42)7)", "-1", "-7");
                var v = ov.swizzle.wvwxv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-2-2)", "2", "(2-2)");
                var v = ov.swizzle.wvwy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "6", "(3-8)", "((-18)0)", "");
                var v = ov.swizzle.wvwyx;
                Assert.AreEqual("((-18)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-18)0)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", null, "5", "((-4-2)4)", "(-45)");
                var v = ov.swizzle.wvwyy;
                Assert.AreEqual("((-4-2)4)", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("((-4-2)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-1)", "9", null, "9", null);
                var v = ov.swizzle.wvwyz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-9)", null, "-3", "((3-6)-1)", "-9");
                var v = ov.swizzle.wvwyw;
                Assert.AreEqual("((3-6)-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((3-6)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-6)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((24)-3)", "(50)", "((-97)-4)", "-9", "(-7-1)");
                var v = ov.swizzle.wvwyv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(50)", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((0-7)6)", "-5", "((0-7)6)", "");
                var v = ov.swizzle.wvwz;
                Assert.AreEqual("((0-7)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((0-7)6)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((78)-4)", "-2", "((78)-4)", "", "(-77)");
                var v = ov.swizzle.wvwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-77)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((78)-4)", v.w);
                Assert.AreEqual("((78)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((72)5)", "-8", "(-17)", "", "7");
                var v = ov.swizzle.wvwzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", null, "(29)", "(99)", "(99)");
                var v = ov.swizzle.wvwzz;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("(29)", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)-1)", "((-4-5)-6)", "(-74)", "(-3-2)", "((-4-3)-1)");
                var v = ov.swizzle.wvwzw;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("((-4-3)-1)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-8-3)", "", "", "(-8-3)");
                var v = ov.swizzle.wvwzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "(-16)", null, "((-5-9)8)", "2");
                var v = ov.swizzle.wvww;
                Assert.AreEqual("((-5-9)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-5-9)8)", v.z);
                Assert.AreEqual("((-5-9)8)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(7-6)", "-6", "(7-6)", "");
                var v = ov.swizzle.wvwwx;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-6)", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(65)", "(24)", "", "((-3-5)2)", "9");
                var v = ov.swizzle.wvwwy;
                Assert.AreEqual("((-3-5)2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-3-5)2)", v.z);
                Assert.AreEqual("((-3-5)2)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "((-7-9)3)", "(-7-4)", "((0-9)6)", "(-7-4)");
                var v = ov.swizzle.wvwwz;
                Assert.AreEqual("((0-9)6)", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("((0-9)6)", v.z);
                Assert.AreEqual("((0-9)6)", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-6)2)", "(2-1)", "9", "8", "((-2-6)2)");
                var v = ov.swizzle.wvwww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-2-6)2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((26)9)", "(-13)", "(-1-4)", null, "(44)");
                var v = ov.swizzle.wvwwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(2-6)", "((24)-6)", "-3", "(-66)");
                var v = ov.swizzle.wvwv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-66)", v.w);
            }
            {
                var ov = new gvec5<string>("((-8-5)-2)", "4", null, "(-2-5)", "1");
                var v = ov.swizzle.wvwvx;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-8-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(86)", null, "-6", "(6-2)", "(6-2)");
                var v = ov.swizzle.wvwvy;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(8-6)", "", "", "((-19)8)");
                var v = ov.swizzle.wvwvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-19)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-19)8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-18)6)", "-8", "2", "(-26)", "(-3-8)");
                var v = ov.swizzle.wvwvw;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("(-3-8)", v.w);
                Assert.AreEqual("(-26)", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)8)", "(-94)", "(-1-3)", "((-47)8)", "4");
                var v = ov.swizzle.wvwvv;
                Assert.AreEqual("((-47)8)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-47)8)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((66)4)", "((-17)-3)", "3", "(-9-8)", null);
                var v = ov.swizzle.wvv;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("((-49)-8)", "((6-6)-4)", null, "-5", "((-49)-8)");
                var v = ov.swizzle.wvvx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-49)-8)", v.y);
                Assert.AreEqual("((-49)-8)", v.z);
                Assert.AreEqual("((-49)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "0", "((75)3)", "((-8-2)3)", "(2-2)");
                var v = ov.swizzle.wvvxx;
                Assert.AreEqual("((-8-2)3)", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-1)", "(-7-9)", "(-1-1)", "-4", "8");
                var v = ov.swizzle.wvvxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-1-7)", null, null, null);
                var v = ov.swizzle.wvvxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-8-6)-1)", "6", "", "((-67)1)");
                var v = ov.swizzle.wvvxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-67)1)", v.y);
                Assert.AreEqual("((-67)1)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(8-2)", "0", "((2-5)-8)", "(-9-5)", "((2-1)-4)");
                var v = ov.swizzle.wvvxv;
                Assert.AreEqual("(-9-5)", v.x);
                Assert.AreEqual("((2-1)-4)", v.y);
                Assert.AreEqual("((2-1)-4)", v.z);
                Assert.AreEqual("(8-2)", v.w);
                Assert.AreEqual("((2-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((1-5)-4)", "-6", "(-5-9)", "(05)");
                var v = ov.swizzle.wvvy;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual("((1-5)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", null, "((-89)4)", "-1", "((-89)4)");
                var v = ov.swizzle.wvvyx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-89)4)", v.y);
                Assert.AreEqual("((-89)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(6-5)", "(65)", "(6-5)", "9");
                var v = ov.swizzle.wvvyy;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(6-5)", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "(2-2)", "-2", "((1-4)7)");
                var v = ov.swizzle.wvvyz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((1-4)7)", v.y);
                Assert.AreEqual("((1-4)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(8-6)", "-4", "((65)1)");
                var v = ov.swizzle.wvvyw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((65)1)", v.y);
                Assert.AreEqual("((65)1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(50)", "-3", "-5", "(50)");
                var v = ov.swizzle.wvvyv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("(50)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-8)-1)", "(-4-5)", "7", "((7-4)2)", "(-4-5)");
                var v = ov.swizzle.wvvz;
                Assert.AreEqual("((7-4)2)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-2)-9)", "((-4-2)-9)", null, "(5-9)", "1");
                var v = ov.swizzle.wvvzx;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-4-2)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((06)-4)", null, "6", "(-55)", "((06)-4)");
                var v = ov.swizzle.wvvzy;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("((06)-4)", v.y);
                Assert.AreEqual("((06)-4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-90)", "(-90)", "(-90)", "(1-4)", "(1-4)");
                var v = ov.swizzle.wvvzz;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("(-90)", v.w);
                Assert.AreEqual("(-90)", v.v);
            }
            {
                var ov = new gvec5<string>("(14)", "((5-6)5)", "((5-6)5)", "(03)", null);
                var v = ov.swizzle.wvvzw;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((5-6)5)", v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(15)", "(15)", "-9", "((-2-5)1)");
                var v = ov.swizzle.wvvzv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-2-5)1)", v.y);
                Assert.AreEqual("((-2-5)1)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("((-2-5)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-5)", "((5-8)2)", "((5-8)2)", "(-3-3)", null);
                var v = ov.swizzle.wvvw;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-3-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-3-8)3)", null, "7", "2", "((21)2)");
                var v = ov.swizzle.wvvwx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((21)2)", v.y);
                Assert.AreEqual("((21)2)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-3-8)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "(-7-9)", "8", "((31)2)");
                var v = ov.swizzle.wvvwy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((31)2)", v.y);
                Assert.AreEqual("((31)2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((56)0)", "((0-9)8)", "((0-9)8)", "(-2-8)", "(94)");
                var v = ov.swizzle.wvvwz;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("((0-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((54)-4)", "(-9-2)", "(-9-2)", "(39)", "((58)-1)");
                var v = ov.swizzle.wvvww;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual("((58)-1)", v.y);
                Assert.AreEqual("((58)-1)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-8)-4)", "-9", "-6", "((5-8)-4)", "(-7-1)");
                var v = ov.swizzle.wvvwv;
                Assert.AreEqual("((5-8)-4)", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("(-7-1)", v.z);
                Assert.AreEqual("((5-8)-4)", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-49)-7)", "(7-5)", "(7-5)", "");
                var v = ov.swizzle.wvvv;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((4-1)3)", "-5", "-5", null, "");
                var v = ov.swizzle.wvvvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((4-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-93)", null, null, "(-93)", "((-42)0)");
                var v = ov.swizzle.wvvvy;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("((-42)0)", v.y);
                Assert.AreEqual("((-42)0)", v.z);
                Assert.AreEqual("((-42)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "(13)", "-8", "(13)", "((73)1)");
                var v = ov.swizzle.wvvvz;
                Assert.AreEqual("(13)", v.x);
                Assert.AreEqual("((73)1)", v.y);
                Assert.AreEqual("((73)1)", v.z);
                Assert.AreEqual("((73)1)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-5)", "5", "(-4-5)", "(09)", "(-91)");
                var v = ov.swizzle.wvvvw;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)3)", "7", "-6", "(9-7)", "(-93)");
                var v = ov.swizzle.wvvvv;
                Assert.AreEqual("(9-7)", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-93)", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-9)4)", "3", "", "(-4-2)", "(7-6)");
                var v = ov.swizzle.vx;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("((-3-9)4)", v.y);
            }
            {
                var ov = new gvec5<string>("(11)", "", "2", "2", "(-6-4)");
                var v = ov.swizzle.vxx;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("(11)", v.z);
            }
            {
                var ov = new gvec5<string>("(25)", null, "(79)", "(25)", "5");
                var v = ov.swizzle.vxxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(25)", v.y);
                Assert.AreEqual("(25)", v.z);
                Assert.AreEqual("(25)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "(-8-5)", "(-8-5)", "((-7-1)7)", "9");
                var v = ov.swizzle.vxxxx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("(-3-4)", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-99)", "((0-2)1)", "((-9-8)-1)", "((0-2)1)", "8");
                var v = ov.swizzle.vxxxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual("(-99)", v.w);
                Assert.AreEqual("((0-2)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)7)", "(-98)", "((1-6)9)", "-3", "((1-6)9)");
                var v = ov.swizzle.vxxxz;
                Assert.AreEqual("((1-6)9)", v.x);
                Assert.AreEqual("((03)7)", v.y);
                Assert.AreEqual("((03)7)", v.z);
                Assert.AreEqual("((03)7)", v.w);
                Assert.AreEqual("((1-6)9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-9-4)7)", "1", null, "(5-6)");
                var v = ov.swizzle.vxxxw;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "(87)", "((08)-4)", "", "(-11)");
                var v = ov.swizzle.vxxxv;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-9)7)", "((95)6)", "((-2-2)-6)", "(-27)", "(-1-7)");
                var v = ov.swizzle.vxxy;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("((1-9)7)", v.y);
                Assert.AreEqual("((1-9)7)", v.z);
                Assert.AreEqual("((95)6)", v.w);
            }
            {
                var ov = new gvec5<string>("((03)2)", "(1-3)", "-6", "(1-3)", "((-1-7)8)");
                var v = ov.swizzle.vxxyx;
                Assert.AreEqual("((-1-7)8)", v.x);
                Assert.AreEqual("((03)2)", v.y);
                Assert.AreEqual("((03)2)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("((03)2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "3", "3", null);
                var v = ov.swizzle.vxxyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "-3", "((-65)-1)", "0");
                var v = ov.swizzle.vxxyz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-2)", "7", "(-5-2)", "1", "((-4-8)-3)");
                var v = ov.swizzle.vxxyw;
                Assert.AreEqual("((-4-8)-3)", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-8-1)", "(-8-1)", "(-8-1)", "((-9-9)-1)");
                var v = ov.swizzle.vxxyv;
                Assert.AreEqual("((-9-9)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("((-9-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(-8-8)", "((-14)9)", null, "((-38)3)");
                var v = ov.swizzle.vxxz;
                Assert.AreEqual("((-38)3)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-14)9)", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(36)", "((82)1)", "0");
                var v = ov.swizzle.vxxzx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-4-5)2)", "((44)-7)", "(-71)", "((44)-7)", null);
                var v = ov.swizzle.vxxzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-5)2)", v.y);
                Assert.AreEqual("((-4-5)2)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("((44)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((41)8)", "4", "-6", "4", null);
                var v = ov.swizzle.vxxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((41)8)", v.y);
                Assert.AreEqual("((41)8)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)4)", null, "-2", "-2", "");
                var v = ov.swizzle.vxxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-1)4)", v.y);
                Assert.AreEqual("((4-1)4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "-7", "5", "");
                var v = ov.swizzle.vxxzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "-2", null, "(44)");
                var v = ov.swizzle.vxxw;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-2", "(70)", "8", "((-96)7)", "(70)");
                var v = ov.swizzle.vxxwx;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-96)7)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-1", "-1", null, "(29)");
                var v = ov.swizzle.vxxwy;
                Assert.AreEqual("(29)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "((-68)3)", "((02)1)", "(-36)");
                var v = ov.swizzle.vxxwz;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((02)1)", v.w);
                Assert.AreEqual("((-68)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((31)8)", "(-3-1)", "(-13)", "((-2-8)0)", null);
                var v = ov.swizzle.vxxww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((31)8)", v.y);
                Assert.AreEqual("((31)8)", v.z);
                Assert.AreEqual("((-2-8)0)", v.w);
                Assert.AreEqual("((-2-8)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-5)-3)", "(4-7)", "-9", "(15)", "(59)");
                var v = ov.swizzle.vxxwv;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("((8-5)-3)", v.y);
                Assert.AreEqual("((8-5)-3)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("((-89)3)", "6", "((40)-7)", "1", null);
                var v = ov.swizzle.vxxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-89)3)", v.y);
                Assert.AreEqual("((-89)3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "((1-9)-3)", "((-85)5)", "2", "(3-3)");
                var v = ov.swizzle.vxxvx;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(25)", "", "((16)-4)", "((67)8)");
                var v = ov.swizzle.vxxvy;
                Assert.AreEqual("((67)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((67)8)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("((-13)6)", "((-74)-6)", "(16)", "((-74)-6)", "-5");
                var v = ov.swizzle.vxxvz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-13)6)", v.y);
                Assert.AreEqual("((-13)6)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(16)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "0", "(-2-5)", "((-28)8)", "((06)4)");
                var v = ov.swizzle.vxxvw;
                Assert.AreEqual("((06)4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((06)4)", v.w);
                Assert.AreEqual("((-28)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "3", "-4", "(9-1)", "-3");
                var v = ov.swizzle.vxxvv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-66)", null, "-6", "((21)-5)", "((-3-6)4)");
                var v = ov.swizzle.vxy;
                Assert.AreEqual("((-3-6)4)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>(null, "", "((-8-8)-1)", "(33)", "(33)");
                var v = ov.swizzle.vxyx;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-86)-6)", "(-26)", "(-35)", "5", "6");
                var v = ov.swizzle.vxyxx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-86)-6)", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("((-86)-6)", v.w);
                Assert.AreEqual("((-86)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "(-2-7)", "-9", "((48)8)");
                var v = ov.swizzle.vxyxy;
                Assert.AreEqual("((48)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "", "((-4-5)5)", "(-35)", "(2-2)");
                var v = ov.swizzle.vxyxz;
                Assert.AreEqual("(2-2)", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(2-2)", v.w);
                Assert.AreEqual("((-4-5)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)8)", "3", null, null, "(59)");
                var v = ov.swizzle.vxyxw;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("((-5-8)8)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-5-8)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(6-3)", "((-5-7)1)", "0", "((-95)-3)", "((-5-7)1)");
                var v = ov.swizzle.vxyxv;
                Assert.AreEqual("((-5-7)1)", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("((-5-7)1)", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("((-5-7)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", "((-7-3)-1)", "((0-9)-9)", "(1-5)", "2");
                var v = ov.swizzle.vxyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("((-7-3)-1)", v.z);
                Assert.AreEqual("((-7-3)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((1-2)9)", "", null, "-5", "(96)");
                var v = ov.swizzle.vxyyx;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("((1-2)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-2)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-16)-7)", "", "((-4-4)0)", "((3-3)2)", "-8");
                var v = ov.swizzle.vxyyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-16)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "(94)", "((14)-7)", null, "(-40)");
                var v = ov.swizzle.vxyyz;
                Assert.AreEqual("(-40)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("((14)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "((80)2)", "((85)-6)");
                var v = ov.swizzle.vxyyw;
                Assert.AreEqual("((85)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((80)2)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(66)", null, "(-79)", "((-37)-8)");
                var v = ov.swizzle.vxyyv;
                Assert.AreEqual("((-37)-8)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("((-37)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "4", "-5", "", "4");
                var v = ov.swizzle.vxyz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((58)-4)", null, "4", "(-15)", "-1");
                var v = ov.swizzle.vxyzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((58)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((58)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-36)", "8", "8", "8");
                var v = ov.swizzle.vxyzy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec5<string>("((-53)3)", "((2-6)4)", "", "-4", "((-53)3)");
                var v = ov.swizzle.vxyzz;
                Assert.AreEqual("((-53)3)", v.x);
                Assert.AreEqual("((-53)3)", v.y);
                Assert.AreEqual("((2-6)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "", "((5-3)-9)", "((7-6)6)", "0");
                var v = ov.swizzle.vxyzw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-3)-9)", v.w);
                Assert.AreEqual("((7-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-5-4)9)", "(1-6)", null, "");
                var v = ov.swizzle.vxyzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-5-4)9)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-3-7)-9)", "9", "-2", "(-27)");
                var v = ov.swizzle.vxyw;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-3-7)-9)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("(3-6)", "1", "((-28)2)", "(-1-2)", "((-28)2)");
                var v = ov.swizzle.vxywx;
                Assert.AreEqual("((-28)2)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "(1-4)", "(-9-4)", "(-4-9)", "((-2-8)-9)");
                var v = ov.swizzle.vxywy;
                Assert.AreEqual("((-2-8)-9)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual("(1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-1", "-1", "-3", "((09)-5)");
                var v = ov.swizzle.vxywz;
                Assert.AreEqual("((09)-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)-1)", "((-66)-1)", "(66)", "(53)", "-5");
                var v = ov.swizzle.vxyww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-66)-1)", v.y);
                Assert.AreEqual("((-66)-1)", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("((78)9)", "((78)9)", null, "7", "(-12)");
                var v = ov.swizzle.vxywv;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("((78)9)", v.y);
                Assert.AreEqual("((78)9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-12)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(5-6)", "((7-7)-1)", "3", "(6-3)");
                var v = ov.swizzle.vxyv;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual("(6-3)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((60)-6)", null, "(84)", "(84)");
                var v = ov.swizzle.vxyvx;
                Assert.AreEqual("(84)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((60)-6)", v.z);
                Assert.AreEqual("(84)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-19)-3)", "((-9-2)3)", "((-19)-3)", "-6");
                var v = ov.swizzle.vxyvy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-19)-3)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-19)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(1-6)", "(50)", "", "");
                var v = ov.swizzle.vxyvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-2)0)", "(0-5)", "(6-3)", "(0-5)", "(0-5)");
                var v = ov.swizzle.vxyvw;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("((-6-2)0)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(49)", "8", "(-79)", "(49)", "1");
                var v = ov.swizzle.vxyvv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", "((87)7)", "5", "-1", "(5-6)");
                var v = ov.swizzle.vxz;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("5", "((-5-6)5)", "((-5-6)5)", "(6-9)", "((14)2)");
                var v = ov.swizzle.vxzx;
                Assert.AreEqual("((14)2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-5-6)5)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((-40)5)", "4", "-9", "(-9-9)", "((-40)5)");
                var v = ov.swizzle.vxzxx;
                Assert.AreEqual("((-40)5)", v.x);
                Assert.AreEqual("((-40)5)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-40)5)", v.w);
                Assert.AreEqual("((-40)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "((11)6)", null, "(-2-3)");
                var v = ov.swizzle.vxzxy;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((11)6)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((-7-4)4)", "(-9-1)", "-8");
                var v = ov.swizzle.vxzxz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-7-4)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-7-4)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)8)", "(-55)", "((46)8)", "(-15)", "((-25)-8)");
                var v = ov.swizzle.vxzxw;
                Assert.AreEqual("((-25)-8)", v.x);
                Assert.AreEqual("((46)8)", v.y);
                Assert.AreEqual("((46)8)", v.z);
                Assert.AreEqual("((46)8)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(4-1)", "(06)", "((83)-1)", "((-27)6)");
                var v = ov.swizzle.vxzxv;
                Assert.AreEqual("((-27)6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(06)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-27)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "((8-5)-5)", "((-9-6)-2)", "((8-5)-5)", "-9");
                var v = ov.swizzle.vxzy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("((-9-6)-2)", v.z);
                Assert.AreEqual("((8-5)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-1)-9)", "((-6-1)-9)", "", "((2-8)-8)", "((2-8)-8)");
                var v = ov.swizzle.vxzyx;
                Assert.AreEqual("((2-8)-8)", v.x);
                Assert.AreEqual("((-6-1)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-1)-9)", v.w);
                Assert.AreEqual("((-6-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-5)-4)", "((90)-2)", "((-70)1)", "((0-5)-4)", null);
                var v = ov.swizzle.vxzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-5)-4)", v.y);
                Assert.AreEqual("((-70)1)", v.z);
                Assert.AreEqual("((90)-2)", v.w);
                Assert.AreEqual("((90)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((13)-3)", "((13)-3)", "(-81)", "", "0");
                var v = ov.swizzle.vxzyz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((13)-3)", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("((13)-3)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((3-3)-3)", "", "(-45)", "");
                var v = ov.swizzle.vxzyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((3-3)-3)", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", null, "8", "0", "-2");
                var v = ov.swizzle.vxzyv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(77)", "7", "(77)", "(77)", "");
                var v = ov.swizzle.vxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("(77)", v.z);
                Assert.AreEqual("(77)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "6", "((25)-1)", "((-47)-4)", "(-17)");
                var v = ov.swizzle.vxzzx;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((25)-1)", v.z);
                Assert.AreEqual("((25)-1)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(11)", "((-19)-9)", "(11)");
                var v = ov.swizzle.vxzzy;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-7)9)", "((6-7)9)", "(78)", "");
                var v = ov.swizzle.vxzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-7)9)", v.z);
                Assert.AreEqual("((6-7)9)", v.w);
                Assert.AreEqual("((6-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((3-5)9)", "-8", "-5", "((3-5)9)");
                var v = ov.swizzle.vxzzw;
                Assert.AreEqual("((3-5)9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, null, "9", "(-8-2)");
                var v = ov.swizzle.vxzzv;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((1-9)3)", "((14)-8)", "((14)-8)", "((1-9)3)");
                var v = ov.swizzle.vxzw;
                Assert.AreEqual("((1-9)3)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((14)-8)", v.z);
                Assert.AreEqual("((14)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(6-1)", "(2-1)", "(2-1)", "(6-1)");
                var v = ov.swizzle.vxzwx;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)2)", "-4", "-1", "((-82)-3)", "-1");
                var v = ov.swizzle.vxzwy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((8-2)2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-82)-3)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-4", "3", "((2-9)-6)", "-6");
                var v = ov.swizzle.vxzwz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((2-9)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(0-6)", "((-3-5)7)", "((-34)6)", "-6");
                var v = ov.swizzle.vxzww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-3-5)7)", v.z);
                Assert.AreEqual("((-34)6)", v.w);
                Assert.AreEqual("((-34)6)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "(7-4)", "((14)2)", "(0-2)");
                var v = ov.swizzle.vxzwv;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(7-4)", v.z);
                Assert.AreEqual("((14)2)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "9", "(72)", "", null);
                var v = ov.swizzle.vxzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-7-7)", "(-7-7)", "-1", "-1", "(9-2)");
                var v = ov.swizzle.vxzvx;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", "5", "3", null, "(75)");
                var v = ov.swizzle.vxzvy;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "5", "((-6-2)6)", "(-20)");
                var v = ov.swizzle.vxzvz;
                Assert.AreEqual("(-20)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "(2-2)", "(2-2)", "-1", "3");
                var v = ov.swizzle.vxzvw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", "(5-3)", "(-92)", "((-89)3)", "(5-3)");
                var v = ov.swizzle.vxzvv;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("(5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-18)", "(-37)", "-4", "");
                var v = ov.swizzle.vxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec5<string>("", "(0-1)", "1", "((-73)-9)", "-1");
                var v = ov.swizzle.vxwx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-73)-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((7-4)-6)", "-9", "8", "((8-4)-8)");
                var v = ov.swizzle.vxwxx;
                Assert.AreEqual("((8-4)-8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-6", "(-4-3)", null);
                var v = ov.swizzle.vxwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((66)7)", "", "", "(09)");
                var v = ov.swizzle.vxwxz;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", "2", "((8-9)-6)", "2", "((0-3)7)");
                var v = ov.swizzle.vxwxw;
                Assert.AreEqual("((0-3)7)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "((57)-9)", "((3-1)-6)", null, "((3-1)-6)");
                var v = ov.swizzle.vxwxv;
                Assert.AreEqual("((3-1)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((3-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-93)-2)", "-1", "((-51)-1)", "((-51)-1)");
                var v = ov.swizzle.vxwy;
                Assert.AreEqual("((-51)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-51)-1)", v.z);
                Assert.AreEqual("((-93)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-4)", "((-4-2)1)", "(94)", "5", "((63)8)");
                var v = ov.swizzle.vxwyx;
                Assert.AreEqual("((63)8)", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-4-2)1)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "(73)", "7", "(0-4)");
                var v = ov.swizzle.vxwyy;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "7", "((02)5)", "6", "(99)");
                var v = ov.swizzle.vxwyz;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((02)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)-2)", null, "(09)", "(-93)", null);
                var v = ov.swizzle.vxwyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-7)-2)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "", "(07)", "-7");
                var v = ov.swizzle.vxwyv;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-8)", "((9-7)5)", "-6", "((54)-3)");
                var v = ov.swizzle.vxwz;
                Assert.AreEqual("((54)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((9-7)5)", v.w);
            }
            {
                var ov = new gvec5<string>("((67)-7)", "", "-3", "(-7-9)", "");
                var v = ov.swizzle.vxwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((67)-7)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((67)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "((3-1)-4)", null, "((4-8)9)", "(53)");
                var v = ov.swizzle.vxwzy;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("((4-8)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-9)", "", "-4", "((27)-7)", "((-37)-9)");
                var v = ov.swizzle.vxwzz;
                Assert.AreEqual("((-37)-9)", v.x);
                Assert.AreEqual("((-37)-9)", v.y);
                Assert.AreEqual("((27)-7)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-32)", "((-46)8)", null, "(03)", "((-46)8)");
                var v = ov.swizzle.vxwzw;
                Assert.AreEqual("((-46)8)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(8-3)", "-5", "-5", "");
                var v = ov.swizzle.vxwzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "(-46)", "(3-1)", "", "(-46)");
                var v = ov.swizzle.vxww;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((0-8)9)", "((-14)7)", "", null, "");
                var v = ov.swizzle.vxwwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-8)9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-5)4)", "((7-5)4)", "(-7-8)", null, "(-35)");
                var v = ov.swizzle.vxwwy;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("((7-5)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((7-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-98)6)", "(68)", "(9-5)", "(68)");
                var v = ov.swizzle.vxwwz;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("(9-5)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("(-35)", "(-35)", null, "((-1-3)5)", "");
                var v = ov.swizzle.vxwww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-35)", v.y);
                Assert.AreEqual("((-1-3)5)", v.z);
                Assert.AreEqual("((-1-3)5)", v.w);
                Assert.AreEqual("((-1-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-9)", "(5-4)", "2", "-3", "-6");
                var v = ov.swizzle.vxwwv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "(7-1)", null, "", "9");
                var v = ov.swizzle.vxwv;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("3", "((-39)4)", "(-94)", "3", "((-39)4)");
                var v = ov.swizzle.vxwvx;
                Assert.AreEqual("((-39)4)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-39)4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((74)2)", "9", "9", "-8", "((74)2)");
                var v = ov.swizzle.vxwvy;
                Assert.AreEqual("((74)2)", v.x);
                Assert.AreEqual("((74)2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((74)2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("5", "1", "(-98)", "((-19)8)", "((-19)8)");
                var v = ov.swizzle.vxwvz;
                Assert.AreEqual("((-19)8)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-19)8)", v.z);
                Assert.AreEqual("((-19)8)", v.w);
                Assert.AreEqual("(-98)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((13)-9)", "((13)-9)", "(-18)", "");
                var v = ov.swizzle.vxwvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-3-9)", null, "", null);
                var v = ov.swizzle.vxwvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-47)-1)", "", "(0-9)", "(0-6)", "((57)6)");
                var v = ov.swizzle.vxv;
                Assert.AreEqual("((57)6)", v.x);
                Assert.AreEqual("((-47)-1)", v.y);
                Assert.AreEqual("((57)6)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(-32)", "((5-2)3)", "", "");
                var v = ov.swizzle.vxvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>(null, "(1-1)", "(-8-5)", "((9-1)0)", "(1-1)");
                var v = ov.swizzle.vxvxx;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)-5)", "((8-9)3)", "-3", "(51)", "-3");
                var v = ov.swizzle.vxvxy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-9-1)-5)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-9-1)-5)", v.w);
                Assert.AreEqual("((8-9)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "6", "(2-2)", "(2-2)", "-4");
                var v = ov.swizzle.vxvxz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(78)", "((-4-6)-4)", "-3", "((39)-1)", "");
                var v = ov.swizzle.vxvxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(78)", v.w);
                Assert.AreEqual("((39)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((7-8)-4)", "(-25)", "-9", "(0-6)");
                var v = ov.swizzle.vxvxv;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(0-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((76)2)", "", "7", "((-58)-5)", "((81)1)");
                var v = ov.swizzle.vxvy;
                Assert.AreEqual("((81)1)", v.x);
                Assert.AreEqual("((76)2)", v.y);
                Assert.AreEqual("((81)1)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-7", "-7", "4", "4");
                var v = ov.swizzle.vxvyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-94)7)", "-3", "((-94)7)", "((8-7)9)", "2");
                var v = ov.swizzle.vxvyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-94)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(49)", "3", "", "3");
                var v = ov.swizzle.vxvyz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(49)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", null, null, "(-4-7)");
                var v = ov.swizzle.vxvyw;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-8)-3)", "((-1-8)-3)", "((-1-8)-3)", "((79)-8)", "(43)");
                var v = ov.swizzle.vxvyv;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("((-1-8)-3)", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual("((-1-8)-3)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "", "(4-3)", "", null);
                var v = ov.swizzle.vxvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-3)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((94)-6)", "-7", null, "(05)");
                var v = ov.swizzle.vxvzx;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(3-6)", null, "(3-6)");
                var v = ov.swizzle.vxvzy;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(8-9)", "(1-9)", "5", "(-4-6)");
                var v = ov.swizzle.vxvzz;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(96)", "(96)", "(-8-1)", null, "((3-7)-2)");
                var v = ov.swizzle.vxvzw;
                Assert.AreEqual("((3-7)-2)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("((3-7)-2)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((39)-2)", "(4-9)", null, "((51)0)", "-4");
                var v = ov.swizzle.vxvzv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((39)-2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((2-8)9)", "((2-8)9)", "5", "5", "(-9-9)");
                var v = ov.swizzle.vxvw;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("((2-8)9)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((06)4)", "(9-3)", "(91)", null, "(9-3)");
                var v = ov.swizzle.vxvwx;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("((06)4)", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((06)4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((3-4)6)", "(9-1)", "2", "(9-1)");
                var v = ov.swizzle.vxvwy;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((3-4)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-1-7)0)", "1", null, "-6");
                var v = ov.swizzle.vxvwz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)3)", null, "((5-4)3)", "(10)", "((5-4)3)");
                var v = ov.swizzle.vxvww;
                Assert.AreEqual("((5-4)3)", v.x);
                Assert.AreEqual("((5-4)3)", v.y);
                Assert.AreEqual("((5-4)3)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(10)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(53)", null, "-5", "-5");
                var v = ov.swizzle.vxvwv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-8)", "-8", "-6", "-8", "");
                var v = ov.swizzle.vxvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-9)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-2-1)-1)", "((-2-1)-1)", null, "(8-7)", "((-2-1)-1)");
                var v = ov.swizzle.vxvvx;
                Assert.AreEqual("((-2-1)-1)", v.x);
                Assert.AreEqual("((-2-1)-1)", v.y);
                Assert.AreEqual("((-2-1)-1)", v.z);
                Assert.AreEqual("((-2-1)-1)", v.w);
                Assert.AreEqual("((-2-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-6)6)", "(60)", "7", "7", "((23)3)");
                var v = ov.swizzle.vxvvy;
                Assert.AreEqual("((23)3)", v.x);
                Assert.AreEqual("((5-6)6)", v.y);
                Assert.AreEqual("((23)3)", v.z);
                Assert.AreEqual("((23)3)", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-7-7)-4)", "((17)-3)", "(71)", "((-78)-2)");
                var v = ov.swizzle.vxvvz;
                Assert.AreEqual("((-78)-2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-78)-2)", v.z);
                Assert.AreEqual("((-78)-2)", v.w);
                Assert.AreEqual("((17)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-5)", null, "(-16)", "((-65)2)", "((-37)-5)");
                var v = ov.swizzle.vxvvw;
                Assert.AreEqual("((-37)-5)", v.x);
                Assert.AreEqual("((-37)-5)", v.y);
                Assert.AreEqual("((-37)-5)", v.z);
                Assert.AreEqual("((-37)-5)", v.w);
                Assert.AreEqual("((-65)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((30)9)", "-7", "", "((-3-4)-8)", "(90)");
                var v = ov.swizzle.vxvvv;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("((30)9)", v.y);
                Assert.AreEqual("(90)", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-25)-9)", "((-74)4)", "7", "(3-1)");
                var v = ov.swizzle.vy;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("((-25)-9)", v.y);
            }
            {
                var ov = new gvec5<string>("((-86)-1)", "(65)", "((41)-7)", "2", null);
                var v = ov.swizzle.vyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("((-86)-1)", v.z);
            }
            {
                var ov = new gvec5<string>("(-38)", "-1", "5", "((38)-5)", "(-98)");
                var v = ov.swizzle.vyxx;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-38)", v.w);
            }
            {
                var ov = new gvec5<string>("(-63)", "(-63)", "((-75)-9)", "((-9-9)-5)", "((-9-9)-5)");
                var v = ov.swizzle.vyxxx;
                Assert.AreEqual("((-9-9)-5)", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-6)", "4", "(15)", "4", "((1-7)9)");
                var v = ov.swizzle.vyxxy;
                Assert.AreEqual("((1-7)9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((42)9)", "((42)9)", "(50)", "(50)", "");
                var v = ov.swizzle.vyxxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((42)9)", v.y);
                Assert.AreEqual("((42)9)", v.z);
                Assert.AreEqual("((42)9)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "((-8-9)4)", "5", "((3-4)2)", "(-52)");
                var v = ov.swizzle.vyxxw;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("((-8-9)4)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("((3-4)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "6", "(-95)", "-1");
                var v = ov.swizzle.vyxxv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((37)3)", "((37)3)", "(7-1)", "(-2-7)");
                var v = ov.swizzle.vyxy;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("((37)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((37)3)", v.w);
            }
            {
                var ov = new gvec5<string>("((93)1)", "(-8-1)", "", "-6", "");
                var v = ov.swizzle.vyxyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("((93)1)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("((93)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-7)", "0", "(51)", "", "2");
                var v = ov.swizzle.vyxyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "(-9-6)", "(-63)", "0");
                var v = ov.swizzle.vyxyz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "3", "((-3-6)-3)", "((-4-6)-1)", null);
                var v = ov.swizzle.vyxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-4-6)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "((-88)-1)", "-5", "-7", "4");
                var v = ov.swizzle.vyxyv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-88)-1)", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("((-88)-1)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "(8-9)", "(-43)", "6", "6");
                var v = ov.swizzle.vyxz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("(-43)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "(0-8)", "-2", "((-20)0)");
                var v = ov.swizzle.vyxzx;
                Assert.AreEqual("((-20)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "(88)", "", "((-4-4)7)");
                var v = ov.swizzle.vyxzy;
                Assert.AreEqual("((-4-4)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(88)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "6", "(-38)", "(-4-1)", "3");
                var v = ov.swizzle.vyxzz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-38)", v.w);
                Assert.AreEqual("(-38)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "(76)", "((-8-4)-7)", null);
                var v = ov.swizzle.vyxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("((-8-4)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-53)3)", "((83)9)", "-9", "(6-9)", "(6-9)");
                var v = ov.swizzle.vyxzv;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("((83)9)", v.y);
                Assert.AreEqual("((-53)3)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-7", "-7", "-2", "((-45)4)");
                var v = ov.swizzle.vyxw;
                Assert.AreEqual("((-45)4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("(91)", "(76)", "(76)", "((-1-7)-9)", "((-4-9)8)");
                var v = ov.swizzle.vyxwx;
                Assert.AreEqual("((-4-9)8)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("((-1-7)-9)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "9", "", "(-6-6)", "(-3-3)");
                var v = ov.swizzle.vyxwy;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(32)", "", "-7", "-7", null);
                var v = ov.swizzle.vyxwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "", "(2-7)", "(3-1)");
                var v = ov.swizzle.vyxww;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "((-33)-8)", "4", "4");
                var v = ov.swizzle.vyxwv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-6)-8)", "-8", "9", "((-4-6)-8)", "(9-5)");
                var v = ov.swizzle.vyxv;
                Assert.AreEqual("(9-5)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-4-6)-8)", v.z);
                Assert.AreEqual("(9-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "(-4-9)", "-5", "(2-6)", "((-11)4)");
                var v = ov.swizzle.vyxvx;
                Assert.AreEqual("((-11)4)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("((-11)4)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-76)", "(-5-9)", null, "((23)-9)", "((77)-8)");
                var v = ov.swizzle.vyxvy;
                Assert.AreEqual("((77)-8)", v.x);
                Assert.AreEqual("(-5-9)", v.y);
                Assert.AreEqual("(-76)", v.z);
                Assert.AreEqual("((77)-8)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-5-6)", "", "1", "");
                var v = ov.swizzle.vyxvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)0)", "", null, "5", null);
                var v = ov.swizzle.vyxvw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-42)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((5-2)0)", "(-3-8)", "(-22)", "-8", "(7-5)");
                var v = ov.swizzle.vyxvv;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("((5-2)0)", v.z);
                Assert.AreEqual("(7-5)", v.w);
                Assert.AreEqual("(7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "2", "((2-3)9)", "((0-1)-8)", "((0-1)-8)");
                var v = ov.swizzle.vyy;
                Assert.AreEqual("((0-1)-8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec5<string>("(-8-5)", "8", "((-82)-2)", "((-40)3)", "-9");
                var v = ov.swizzle.vyyx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-8-5)", v.w);
            }
            {
                var ov = new gvec5<string>("", "4", "-6", "", "(-5-9)");
                var v = ov.swizzle.vyyxx;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)-2)", "((-10)3)", "(5-6)", null, "((8-1)-2)");
                var v = ov.swizzle.vyyxy;
                Assert.AreEqual("((8-1)-2)", v.x);
                Assert.AreEqual("((-10)3)", v.y);
                Assert.AreEqual("((-10)3)", v.z);
                Assert.AreEqual("((8-1)-2)", v.w);
                Assert.AreEqual("((-10)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "-6", "((2-2)4)", "(32)");
                var v = ov.swizzle.vyyxz;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "((-5-1)4)", "((-5-1)4)", "(-4-9)", "");
                var v = ov.swizzle.vyyxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-1)4)", v.y);
                Assert.AreEqual("((-5-1)4)", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("(-4-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((4-5)6)", "((97)2)", "-5", "((97)2)");
                var v = ov.swizzle.vyyxv;
                Assert.AreEqual("((97)2)", v.x);
                Assert.AreEqual("((4-5)6)", v.y);
                Assert.AreEqual("((4-5)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((97)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", null, null, "3", "7");
                var v = ov.swizzle.vyyy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-9-4)5)", "", "((57)7)", "(-3-5)", "7");
                var v = ov.swizzle.vyyyx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-9-4)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "((-7-9)-4)", "(92)", null, "(92)");
                var v = ov.swizzle.vyyyy;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("((-7-9)-4)", v.y);
                Assert.AreEqual("((-7-9)-4)", v.z);
                Assert.AreEqual("((-7-9)-4)", v.w);
                Assert.AreEqual("((-7-9)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)4)", null, "1", "(-1-4)", "(6-1)");
                var v = ov.swizzle.vyyyz;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-22)2)", "(-49)", "-5", "(-7-7)");
                var v = ov.swizzle.vyyyw;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("((-22)2)", v.y);
                Assert.AreEqual("((-22)2)", v.z);
                Assert.AreEqual("((-22)2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-94)2)", "((-94)2)", "(50)", null, "(-9-6)");
                var v = ov.swizzle.vyyyv;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("((-94)2)", v.y);
                Assert.AreEqual("((-94)2)", v.z);
                Assert.AreEqual("((-94)2)", v.w);
                Assert.AreEqual("(-9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(98)", "((96)-4)", null, "5");
                var v = ov.swizzle.vyyz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("((96)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "3", "-9", "((13)-5)", "(76)");
                var v = ov.swizzle.vyyzx;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "(-7-8)", "(-4-7)", "(09)");
                var v = ov.swizzle.vyyzy;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((42)7)", "8", "((60)-1)", "(-55)", "((42)7)");
                var v = ov.swizzle.vyyzz;
                Assert.AreEqual("((42)7)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((60)-1)", v.w);
                Assert.AreEqual("((60)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)6)", "((0-3)-1)", null, "(1-4)", "(-6-8)");
                var v = ov.swizzle.vyyzw;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("((0-3)-1)", v.y);
                Assert.AreEqual("((0-3)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((49)-8)", "0", null, "-4", "((49)-8)");
                var v = ov.swizzle.vyyzv;
                Assert.AreEqual("((49)-8)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((49)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "(3-3)", "8", "");
                var v = ov.swizzle.vyyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "8", "8", "8", "((-21)-9)");
                var v = ov.swizzle.vyywx;
                Assert.AreEqual("((-21)-9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-3)-2)", "((-3-7)0)", null, "9", "9");
                var v = ov.swizzle.vyywy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-3-7)0)", v.y);
                Assert.AreEqual("((-3-7)0)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-3-7)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-56)", "-7", "-7", "1", "(-52)");
                var v = ov.swizzle.vyywz;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(68)", "0", "((76)-5)", "");
                var v = ov.swizzle.vyyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("((76)-5)", v.w);
                Assert.AreEqual("((76)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "8", "(-6-7)", "", "-4");
                var v = ov.swizzle.vyywv;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-84)-3)", null, "6", "3");
                var v = ov.swizzle.vyyv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-84)-3)", v.y);
                Assert.AreEqual("((-84)-3)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("2", "2", "(43)", "2", null);
                var v = ov.swizzle.vyyvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-22)", "((3-1)-4)", "1", "((3-1)-4)");
                var v = ov.swizzle.vyyvy;
                Assert.AreEqual("((3-1)-4)", v.x);
                Assert.AreEqual("(-22)", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("((3-1)-4)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(5-6)", "((-6-5)-1)", "-6", "");
                var v = ov.swizzle.vyyvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-6-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-9-3)5)", "((-8-9)-5)", "((-8-9)-5)", "(9-2)");
                var v = ov.swizzle.vyyvw;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("((-9-3)5)", v.y);
                Assert.AreEqual("((-9-3)5)", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("((-8-9)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-1)", "(4-1)", "(-5-3)", "", "(4-1)");
                var v = ov.swizzle.vyyvv;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "-1", "((86)0)", "-2");
                var v = ov.swizzle.vyz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>("((83)-3)", "((-4-1)-8)", "((83)-3)", "-6", "((-4-1)-8)");
                var v = ov.swizzle.vyzx;
                Assert.AreEqual("((-4-1)-8)", v.x);
                Assert.AreEqual("((-4-1)-8)", v.y);
                Assert.AreEqual("((83)-3)", v.z);
                Assert.AreEqual("((83)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((62)-8)", "-8", "(16)", "(16)", "(06)");
                var v = ov.swizzle.vyzxx;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(16)", v.z);
                Assert.AreEqual("((62)-8)", v.w);
                Assert.AreEqual("((62)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-6-1)8)", "-5", "((-59)-6)", "((-59)-6)");
                var v = ov.swizzle.vyzxy;
                Assert.AreEqual("((-59)-6)", v.x);
                Assert.AreEqual("((-6-1)8)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-6-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((27)-3)", "((27)-3)", "6", "(-29)");
                var v = ov.swizzle.vyzxz;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("((27)-3)", v.y);
                Assert.AreEqual("((27)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((27)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(9-6)", "", "((38)-9)", "(-42)");
                var v = ov.swizzle.vyzxw;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(9-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((38)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "(44)", "6", "(2-9)", "((4-8)5)");
                var v = ov.swizzle.vyzxv;
                Assert.AreEqual("((4-8)5)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("((4-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "((3-8)2)", "((84)2)", "((-3-2)-8)");
                var v = ov.swizzle.vyzy;
                Assert.AreEqual("((-3-2)-8)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((3-8)2)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "7", null, "((0-4)-8)", "-1");
                var v = ov.swizzle.vyzyx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)9)", "(2-8)", "", "(2-8)", "1");
                var v = ov.swizzle.vyzyy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)-9)", "((25)-1)", "1", "((25)-1)", "(36)");
                var v = ov.swizzle.vyzyz;
                Assert.AreEqual("(36)", v.x);
                Assert.AreEqual("((25)-1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((25)-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)5)", null, "((4-2)5)", "(60)", "(60)");
                var v = ov.swizzle.vyzyw;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-2)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-5)", "(40)", "8", "-4", null);
                var v = ov.swizzle.vyzyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(40)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((8-9)1)", "(76)", "-9", "((6-7)-4)", "(6-7)");
                var v = ov.swizzle.vyzz;
                Assert.AreEqual("(6-7)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("((55)5)", "((14)1)", null, "((55)5)", "");
                var v = ov.swizzle.vyzzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((14)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((55)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-20)-7)", "6", "((-1-3)4)", "((3-9)9)", "(-27)");
                var v = ov.swizzle.vyzzy;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-1-3)4)", v.z);
                Assert.AreEqual("((-1-3)4)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((92)-7)", "((92)-7)", "-6", "-3", "(53)");
                var v = ov.swizzle.vyzzz;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("((92)-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "-8", "(-12)", "6", null);
                var v = ov.swizzle.vyzzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-5-8)1)", "(-3-1)", "(-3-1)", null);
                var v = ov.swizzle.vyzzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-5-8)1)", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-2)", "(-9-9)", null, null, "((-2-1)6)");
                var v = ov.swizzle.vyzw;
                Assert.AreEqual("((-2-1)6)", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("3", "((-7-4)3)", "1", "((-9-3)-7)", "((8-2)7)");
                var v = ov.swizzle.vyzwx;
                Assert.AreEqual("((8-2)7)", v.x);
                Assert.AreEqual("((-7-4)3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-9-3)-7)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "(77)", "-4", "-6");
                var v = ov.swizzle.vyzwy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(77)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-25)-2)", "(24)", "(-51)", "8", "(-9-7)");
                var v = ov.swizzle.vyzwz;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "((91)4)", "-4", "4");
                var v = ov.swizzle.vyzww;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((91)4)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-22)9)", "3", "", null, "6");
                var v = ov.swizzle.vyzwv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)-2)", "5", null, "((-84)-9)", "(2-2)");
                var v = ov.swizzle.vyzv;
                Assert.AreEqual("(2-2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(2-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((33)-3)", "((33)-3)", "3", "((33)-3)", "((33)-3)");
                var v = ov.swizzle.vyzvx;
                Assert.AreEqual("((33)-3)", v.x);
                Assert.AreEqual("((33)-3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((33)-3)", v.w);
                Assert.AreEqual("((33)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "((75)-2)", "(-9-8)", null, "(-9-8)");
                var v = ov.swizzle.vyzvy;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("((75)-2)", v.y);
                Assert.AreEqual("(-9-8)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("((75)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-8)7)", "((-36)5)", "((-36)5)", "(6-1)", "((3-8)7)");
                var v = ov.swizzle.vyzvz;
                Assert.AreEqual("((3-8)7)", v.x);
                Assert.AreEqual("((-36)5)", v.y);
                Assert.AreEqual("((-36)5)", v.z);
                Assert.AreEqual("((3-8)7)", v.w);
                Assert.AreEqual("((-36)5)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-9-4)", "9", "9", "(-3-5)");
                var v = ov.swizzle.vyzvw;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "(-28)", "(-28)", "(-28)");
                var v = ov.swizzle.vyzvv;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-14)", "((-47)-4)", "((-47)-4)", null);
                var v = ov.swizzle.vyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-14)", v.y);
                Assert.AreEqual("((-47)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("(3-6)", "(6-9)", "(6-9)", "(3-6)", "((-5-2)-1)");
                var v = ov.swizzle.vywx;
                Assert.AreEqual("((-5-2)-1)", v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((-36)-1)", "((-36)-1)", "((-36)-1)", "((47)-1)", "((47)-1)");
                var v = ov.swizzle.vywxx;
                Assert.AreEqual("((47)-1)", v.x);
                Assert.AreEqual("((-36)-1)", v.y);
                Assert.AreEqual("((47)-1)", v.z);
                Assert.AreEqual("((-36)-1)", v.w);
                Assert.AreEqual("((-36)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(27)", "((-6-1)5)", "((34)8)", null, "(27)");
                var v = ov.swizzle.vywxy;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("((-6-1)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("((-6-1)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(22)", "5", "");
                var v = ov.swizzle.vywxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>("(-20)", "((-4-5)1)", "((-4-5)1)", "((9-1)-8)", "-3");
                var v = ov.swizzle.vywxw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-4-5)1)", v.y);
                Assert.AreEqual("((9-1)-8)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("((9-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-8", "((-4-9)-5)", "(03)", "(-2-9)");
                var v = ov.swizzle.vywxv;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-7)-4)", "(-19)", null, "((-8-7)-4)", "((-8-7)-4)");
                var v = ov.swizzle.vywy;
                Assert.AreEqual("((-8-7)-4)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("((-8-7)-4)", v.z);
                Assert.AreEqual("(-19)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "4", "(91)", null, "((13)3)");
                var v = ov.swizzle.vywyx;
                Assert.AreEqual("((13)3)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "((-3-3)4)", "", "4");
                var v = ov.swizzle.vywyy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-3-5)", "(3-5)", "((7-1)7)", "((-53)-2)");
                var v = ov.swizzle.vywyz;
                Assert.AreEqual("((-53)-2)", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("((7-1)7)", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("7", null, null, "-4", "7");
                var v = ov.swizzle.vywyw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("2", "4", "(4-7)", "3", null);
                var v = ov.swizzle.vywyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-91)9)", "(-93)", null, "7", "9");
                var v = ov.swizzle.vywz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(4-3)", "((0-4)8)", null, "(-7-3)");
                var v = ov.swizzle.vywzx;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((0-4)8)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((5-3)-6)", "-8", "((5-3)-6)", "(-20)", "(9-9)");
                var v = ov.swizzle.vywzy;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("((5-3)-6)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((0-6)-3)", "(-1-6)", "((0-6)-3)", "((-50)7)");
                var v = ov.swizzle.vywzz;
                Assert.AreEqual("((-50)7)", v.x);
                Assert.AreEqual("((0-6)-3)", v.y);
                Assert.AreEqual("((0-6)-3)", v.z);
                Assert.AreEqual("(-1-6)", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-8)3)", "9", "", "((6-5)-1)", "-3");
                var v = ov.swizzle.vywzw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((6-5)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((00)-2)", "((5-7)-6)", "(50)", "((5-7)-6)");
                var v = ov.swizzle.vywzv;
                Assert.AreEqual("((5-7)-6)", v.x);
                Assert.AreEqual("((00)-2)", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("((5-7)-6)", v.w);
                Assert.AreEqual("((5-7)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((6-4)0)", "(25)", "6", "");
                var v = ov.swizzle.vyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-4)0)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((2-2)4)", "((-2-7)-5)", null, "(-40)", "-3");
                var v = ov.swizzle.vywwx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-2-7)-5)", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("((2-2)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((29)-4)", "3", "4", "((29)-4)", "((-2-8)6)");
                var v = ov.swizzle.vywwy;
                Assert.AreEqual("((-2-8)6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((29)-4)", v.z);
                Assert.AreEqual("((29)-4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((86)3)", "((86)3)", "", "-2", "((9-3)-2)");
                var v = ov.swizzle.vywwz;
                Assert.AreEqual("((9-3)-2)", v.x);
                Assert.AreEqual("((86)3)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-57)", "(-55)", "", "((39)-1)", "((-6-4)-4)");
                var v = ov.swizzle.vywww;
                Assert.AreEqual("((-6-4)-4)", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("((39)-1)", v.z);
                Assert.AreEqual("((39)-1)", v.w);
                Assert.AreEqual("((39)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "(-5-9)", "((-70)-7)", "(5-6)");
                var v = ov.swizzle.vywwv;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-70)-7)", v.z);
                Assert.AreEqual("((-70)-7)", v.w);
                Assert.AreEqual("(5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-44)", null, "7", "(-1-4)", "(-1-4)");
                var v = ov.swizzle.vywv;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-2)", "(-61)", "(3-2)", "(-61)", "");
                var v = ov.swizzle.vywvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "", "-2", null);
                var v = ov.swizzle.vywvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-2-4)9)", "((3-2)-2)", "(97)", "-1");
                var v = ov.swizzle.vywvz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-2-4)9)", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((3-2)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "7", "0", "((63)0)", "(7-8)");
                var v = ov.swizzle.vywvw;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((63)0)", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("((63)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-70)", "9", null, "(-70)");
                var v = ov.swizzle.vywvv;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual("(-70)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "(-5-4)", "3", null);
                var v = ov.swizzle.vyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("-4", "-8", "(-75)", "(-2-3)", "8");
                var v = ov.swizzle.vyvx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((2-5)4)", "", "((-62)-5)", "(05)", "((1-9)4)");
                var v = ov.swizzle.vyvxx;
                Assert.AreEqual("((1-9)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-9)4)", v.z);
                Assert.AreEqual("((2-5)4)", v.w);
                Assert.AreEqual("((2-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(-9-6)", "(-9-6)", "6", "(-93)");
                var v = ov.swizzle.vyvxy;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(34)", "", "(-8-5)", "(-8-5)");
                var v = ov.swizzle.vyvxz;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((9-9)1)", "", "(-7-1)", "8", "(60)");
                var v = ov.swizzle.vyvxw;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("((9-9)1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "", "((5-2)-5)", "((-9-7)-5)");
                var v = ov.swizzle.vyvxv;
                Assert.AreEqual("((-9-7)-5)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-9-7)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-7)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-19)-7)", "((-19)-7)", "((-19)-7)", "(37)");
                var v = ov.swizzle.vyvy;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("((-19)-7)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((-19)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "((-7-3)-5)", "-5", "(-48)", "-3");
                var v = ov.swizzle.vyvyx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-7-3)-5)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-7-3)-5)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(36)", "5", "9", "(36)", "((3-1)-8)");
                var v = ov.swizzle.vyvyy;
                Assert.AreEqual("((3-1)-8)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((3-1)-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((3-9)8)", "((3-9)8)", "-5", "5");
                var v = ov.swizzle.vyvyz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((3-9)8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((3-9)8)", v.w);
                Assert.AreEqual("((3-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "((52)4)", "(-6-6)", "((-36)-3)");
                var v = ov.swizzle.vyvyw;
                Assert.AreEqual("((-36)-3)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-36)-3)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-71)-9)", "((-71)-9)", "-9", "((56)4)", "((56)4)");
                var v = ov.swizzle.vyvyv;
                Assert.AreEqual("((56)4)", v.x);
                Assert.AreEqual("((-71)-9)", v.y);
                Assert.AreEqual("((56)4)", v.z);
                Assert.AreEqual("((-71)-9)", v.w);
                Assert.AreEqual("((56)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-1-6)", "", "((51)-5)", "((5-6)9)");
                var v = ov.swizzle.vyvz;
                Assert.AreEqual("((5-6)9)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("((5-6)9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((0-4)-8)", null, "((16)-8)", "(87)", "1");
                var v = ov.swizzle.vyvzx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((16)-8)", v.w);
                Assert.AreEqual("((0-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-2)-8)", "", "((-8-7)9)", "(7-6)", null);
                var v = ov.swizzle.vyvzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-7)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)9)", "(-34)", "((0-9)-3)", "0", "((0-9)-3)");
                var v = ov.swizzle.vyvzz;
                Assert.AreEqual("((0-9)-3)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("((0-9)-3)", v.z);
                Assert.AreEqual("((0-9)-3)", v.w);
                Assert.AreEqual("((0-9)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-46)4)", "-1", "(28)", "((-46)4)");
                var v = ov.swizzle.vyvzw;
                Assert.AreEqual("((-46)4)", v.x);
                Assert.AreEqual("((-46)4)", v.y);
                Assert.AreEqual("((-46)4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((5-6)-8)", "-2", "(59)", "((5-6)-8)");
                var v = ov.swizzle.vyvzv;
                Assert.AreEqual("((5-6)-8)", v.x);
                Assert.AreEqual("((5-6)-8)", v.y);
                Assert.AreEqual("((5-6)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((5-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-44)8)", "(-79)", "((3-9)-8)", "8", "(-79)");
                var v = ov.swizzle.vyvw;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("(-79)", v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "", "(-8-1)", "");
                var v = ov.swizzle.vyvwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(8-2)", "((25)-7)", "(8-2)", "(8-2)", "(-72)");
                var v = ov.swizzle.vyvwy;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("((25)-7)", v.y);
                Assert.AreEqual("(-72)", v.z);
                Assert.AreEqual("(8-2)", v.w);
                Assert.AreEqual("((25)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(5-2)", "(5-2)", "8", "((2-1)-9)");
                var v = ov.swizzle.vyvwz;
                Assert.AreEqual("((2-1)-9)", v.x);
                Assert.AreEqual("(5-2)", v.y);
                Assert.AreEqual("((2-1)-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((08)4)", "", "((08)4)", "5");
                var v = ov.swizzle.vyvww;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((08)4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((08)4)", v.w);
                Assert.AreEqual("((08)4)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(08)", "(08)", "(1-9)", "6");
                var v = ov.swizzle.vyvwv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(05)", "0", "-2");
                var v = ov.swizzle.vyvv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "3", "(98)", "-1");
                var v = ov.swizzle.vyvvx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-1", "((2-5)-4)", "-1", "((62)-4)");
                var v = ov.swizzle.vyvvy;
                Assert.AreEqual("((62)-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((62)-4)", v.z);
                Assert.AreEqual("((62)-4)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-35)", "((09)6)", "(-9-8)", null, "((09)6)");
                var v = ov.swizzle.vyvvz;
                Assert.AreEqual("((09)6)", v.x);
                Assert.AreEqual("((09)6)", v.y);
                Assert.AreEqual("((09)6)", v.z);
                Assert.AreEqual("((09)6)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "-4", "7", null, "(7-3)");
                var v = ov.swizzle.vyvvw;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-3)", "-2", "", "7");
                var v = ov.swizzle.vyvvv;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-48)7)", "(-83)", "-9", "((-48)7)");
                var v = ov.swizzle.vz;
                Assert.AreEqual("((-48)7)", v.x);
                Assert.AreEqual("(-83)", v.y);
            }
            {
                var ov = new gvec5<string>("(3-5)", "((3-6)-3)", "(29)", "-5", "((3-6)-3)");
                var v = ov.swizzle.vzx;
                Assert.AreEqual("((3-6)-3)", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("(3-5)", v.z);
            }
            {
                var ov = new gvec5<string>("-2", "((13)5)", "(-6-9)", "((13)5)", "(-6-9)");
                var v = ov.swizzle.vzxx;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-77)", "(-77)", "(-55)", "");
                var v = ov.swizzle.vzxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-77)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-6", "((-99)-8)", "-4", "((0-8)2)");
                var v = ov.swizzle.vzxxy;
                Assert.AreEqual("((0-8)2)", v.x);
                Assert.AreEqual("((-99)-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((33)9)", null, "((-2-4)5)", "8");
                var v = ov.swizzle.vzxxz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-59)", "1", "1", "((96)0)", "1");
                var v = ov.swizzle.vzxxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("((96)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", null, "", "((-32)-4)");
                var v = ov.swizzle.vzxxv;
                Assert.AreEqual("((-32)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-32)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)-2)", "((-7-2)-2)", "(-74)", "((-7-2)-2)", null);
                var v = ov.swizzle.vzxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("((-7-2)-2)", v.z);
                Assert.AreEqual("((-7-2)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", null, "((4-2)2)", "((-6-6)5)", "");
                var v = ov.swizzle.vzxyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-2)2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-15)", "-5", "(26)", "((89)2)", "(-15)");
                var v = ov.swizzle.vzxyy;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(26)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)6)", "-7", null, "(-2-9)", "((-9-1)6)");
                var v = ov.swizzle.vzxyz;
                Assert.AreEqual("((-9-1)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-9-1)6)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((2-5)-3)", "(89)", "(89)", "-6", "1");
                var v = ov.swizzle.vzxyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((2-5)-3)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, null, "((-1-8)1)", "(7-5)");
                var v = ov.swizzle.vzxyv;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "", "((58)-5)", "(-99)", "2");
                var v = ov.swizzle.vzxz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((58)-5)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("((58)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "6", "6", "(-3-1)", "(-3-1)");
                var v = ov.swizzle.vzxzx;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-2)", "-9", "(-7-3)", "((4-2)-8)", "(2-5)");
                var v = ov.swizzle.vzxzy;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((17)-8)", "((17)-8)", "((17)-8)", "((-57)-2)", "");
                var v = ov.swizzle.vzxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((17)-8)", v.y);
                Assert.AreEqual("((17)-8)", v.z);
                Assert.AreEqual("((17)-8)", v.w);
                Assert.AreEqual("((17)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "", null, "(-25)");
                var v = ov.swizzle.vzxzw;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-49)5)", "(13)", "((-46)-5)", "(22)");
                var v = ov.swizzle.vzxzv;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-4", "", "4", "(-10)");
                var v = ov.swizzle.vzxw;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(8-1)", "((04)-8)", "(2-9)", "", "(38)");
                var v = ov.swizzle.vzxwx;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((88)-7)", "0", "((88)-7)", "(-2-4)");
                var v = ov.swizzle.vzxwy;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((88)-7)", v.w);
                Assert.AreEqual("((88)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((90)1)", "4", "", "((-5-7)0)", "((90)1)");
                var v = ov.swizzle.vzxwz;
                Assert.AreEqual("((90)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((90)1)", v.z);
                Assert.AreEqual("((-5-7)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)9)", "(-47)", "-1", "", "(46)");
                var v = ov.swizzle.vzxww;
                Assert.AreEqual("(46)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((3-1)9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-49)-3)", null, "(-4-7)", null);
                var v = ov.swizzle.vzxwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, "5", "", "3");
                var v = ov.swizzle.vzxv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>(null, "9", "9", "((82)-5)", "(-46)");
                var v = ov.swizzle.vzxvx;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)-5)", "(-6-6)", "((3-4)-5)", "3", "((3-4)-5)");
                var v = ov.swizzle.vzxvy;
                Assert.AreEqual("((3-4)-5)", v.x);
                Assert.AreEqual("((3-4)-5)", v.y);
                Assert.AreEqual("((3-4)-5)", v.z);
                Assert.AreEqual("((3-4)-5)", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)9)", "((-5-8)9)", "(-11)", "(-11)", "2");
                var v = ov.swizzle.vzxvz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("((-5-8)9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "((-31)-2)", null, "", "(-6-8)");
                var v = ov.swizzle.vzxvw;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)-4)", "((4-1)-4)", "(-2-5)", "0", "((-80)-8)");
                var v = ov.swizzle.vzxvv;
                Assert.AreEqual("((-80)-8)", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("((4-1)-4)", v.z);
                Assert.AreEqual("((-80)-8)", v.w);
                Assert.AreEqual("((-80)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-3)", "(-92)", "(-92)", "(-92)", null);
                var v = ov.swizzle.vzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("(-92)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-5", "((99)-5)", "-5", "-5");
                var v = ov.swizzle.vzyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((99)-5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("3", "(-7-4)", "(-7-4)", "((-4-3)-4)", "-4");
                var v = ov.swizzle.vzyxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-61)-5)", "(35)", "((-61)-5)", "((-16)-9)");
                var v = ov.swizzle.vzyxy;
                Assert.AreEqual("((-16)-9)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("((-61)-5)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-61)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)9)", "(-2-6)", "(-2-6)", "(-9-3)", "((8-3)-8)");
                var v = ov.swizzle.vzyxz;
                Assert.AreEqual("((8-3)-8)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("((-50)9)", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-13)-7)", "-3", null, "-2");
                var v = ov.swizzle.vzyxw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-13)-7)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "", "-3", "", "(-9-1)");
                var v = ov.swizzle.vzyxv;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "", "2", "", "(5-5)");
                var v = ov.swizzle.vzyy;
                Assert.AreEqual("(5-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((7-8)2)", "((24)3)", "(-8-9)", "", "(-1-3)");
                var v = ov.swizzle.vzyyx;
                Assert.AreEqual("(-1-3)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("((24)3)", v.z);
                Assert.AreEqual("((24)3)", v.w);
                Assert.AreEqual("((7-8)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "(3-1)", "", "", "((-4-2)-9)");
                var v = ov.swizzle.vzyyy;
                Assert.AreEqual("((-4-2)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((81)-5)", "(66)", "(14)", "((81)-5)");
                var v = ov.swizzle.vzyyz;
                Assert.AreEqual("((81)-5)", v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual("((81)-5)", v.z);
                Assert.AreEqual("((81)-5)", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("(-62)", "(43)", "((-8-1)-4)", "(-62)", "(-62)");
                var v = ov.swizzle.vzyyw;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("((-8-1)-4)", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, null, "((-22)7)", "((-22)7)");
                var v = ov.swizzle.vzyyv;
                Assert.AreEqual("((-22)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-22)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((4-3)7)", null, "(-99)", "(-55)");
                var v = ov.swizzle.vzyz;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-3)7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(9-2)", "(9-2)", "", "-8", "-4");
                var v = ov.swizzle.vzyzx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "(-5-1)", "9", "(-5-1)");
                var v = ov.swizzle.vzyzy;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-84)", "((-4-3)0)", "((-4-3)0)", "((5-7)-2)");
                var v = ov.swizzle.vzyzz;
                Assert.AreEqual("((5-7)-2)", v.x);
                Assert.AreEqual("((-4-3)0)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("((-4-3)0)", v.w);
                Assert.AreEqual("((-4-3)0)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "((49)-5)", "(-9-1)", "(06)");
                var v = ov.swizzle.vzyzw;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("((49)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((49)-5)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((9-7)8)", "1", "4", "1");
                var v = ov.swizzle.vzyzv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((9-7)8)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-45)", "((9-4)-5)", "((9-4)-5)", "(-45)");
                var v = ov.swizzle.vzyw;
                Assert.AreEqual("(-45)", v.x);
                Assert.AreEqual("((9-4)-5)", v.y);
                Assert.AreEqual("(-45)", v.z);
                Assert.AreEqual("((9-4)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(79)", "((1-5)2)", "(79)", "((51)6)", null);
                var v = ov.swizzle.vzywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("((1-5)2)", v.z);
                Assert.AreEqual("((51)6)", v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "((-27)-7)", "(13)", null);
                var v = ov.swizzle.vzywy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-27)-7)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((11)-8)", null, "(51)", "((11)-8)");
                var v = ov.swizzle.vzywz;
                Assert.AreEqual("((11)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((11)-8)", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-5-1)", "", "4", "(36)", "");
                var v = ov.swizzle.vzyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("(36)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-7)-5)", "-7", "(3-9)", null, "(3-9)");
                var v = ov.swizzle.vzywv;
                Assert.AreEqual("(3-9)", v.x);
                Assert.AreEqual("(3-9)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "4", "(72)", "-1");
                var v = ov.swizzle.vzyv;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-1)", "-6", "(-6-1)", "((-2-2)-5)", "-4");
                var v = ov.swizzle.vzyvx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-81)", "(4-4)", "((74)-3)", "((45)1)", "");
                var v = ov.swizzle.vzyvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((74)-3)", v.y);
                Assert.AreEqual("(4-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "(-28)", "((9-1)7)", "");
                var v = ov.swizzle.vzyvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-3-5)", "((-79)3)", "(-63)", "((-11)-5)");
                var v = ov.swizzle.vzyvw;
                Assert.AreEqual("((-11)-5)", v.x);
                Assert.AreEqual("((-79)3)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("((-11)-5)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "(9-7)", "", "5");
                var v = ov.swizzle.vzyvv;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(9-7)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "", "(-5-9)", "3");
                var v = ov.swizzle.vzz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("-4", "7", "((-38)1)", "-4", "((-19)4)");
                var v = ov.swizzle.vzzx;
                Assert.AreEqual("((-19)4)", v.x);
                Assert.AreEqual("((-38)1)", v.y);
                Assert.AreEqual("((-38)1)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "((4-1)6)", null, "", "(-9-4)");
                var v = ov.swizzle.vzzxx;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)7)", "", "3", "", "(77)");
                var v = ov.swizzle.vzzxy;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-26)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "((-3-7)-8)", "", "-6");
                var v = ov.swizzle.vzzxz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-3-7)-8)", v.y);
                Assert.AreEqual("((-3-7)-8)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-3-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((43)-4)", "(-73)", "", "6");
                var v = ov.swizzle.vzzxw;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(0-8)", "-9", "8");
                var v = ov.swizzle.vzzxv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual("(0-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "5", "", "((9-7)4)", "9");
                var v = ov.swizzle.vzzy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-6)-4)", "((-7-6)-4)", null, "(2-1)", "((-88)-6)");
                var v = ov.swizzle.vzzyx;
                Assert.AreEqual("((-88)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-6)-4)", v.w);
                Assert.AreEqual("((-7-6)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-1", "(67)", "(-16)", "(-16)");
                var v = ov.swizzle.vzzyy;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(1-4)", "-6", "", "((-2-5)-7)");
                var v = ov.swizzle.vzzyz;
                Assert.AreEqual("((-2-5)-7)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "3", "3", "3", "9");
                var v = ov.swizzle.vzzyw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "", "((-52)4)", "(23)", "-6");
                var v = ov.swizzle.vzzyv;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-52)4)", v.y);
                Assert.AreEqual("((-52)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(60)", "-6", null, "-1", "1");
                var v = ov.swizzle.vzzz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-9", "-2", "((62)-1)", "((56)2)", "(7-3)");
                var v = ov.swizzle.vzzzx;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("((62)-1)", v.y);
                Assert.AreEqual("((62)-1)", v.z);
                Assert.AreEqual("((62)-1)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(9-5)", "(9-5)", "(9-5)", "((-96)2)", "-5");
                var v = ov.swizzle.vzzzy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(9-5)", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("(9-5)", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-4-7)", "(-4-7)", "-1", "8");
                var v = ov.swizzle.vzzzz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(88)", "5", "5", "(88)", "");
                var v = ov.swizzle.vzzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "(83)", "((-9-2)-2)", "(83)");
                var v = ov.swizzle.vzzzv;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(3-9)", "((77)4)", "-4", "(9-2)");
                var v = ov.swizzle.vzzw;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("((77)4)", v.y);
                Assert.AreEqual("((77)4)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("1", "((81)-4)", "5", "1", "((81)-4)");
                var v = ov.swizzle.vzzwx;
                Assert.AreEqual("((81)-4)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-87)-4)", "-7", "-4", "-1", "-4");
                var v = ov.swizzle.vzzwy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-32)", "((-30)-3)", "0", "((92)9)", "(-32)");
                var v = ov.swizzle.vzzwz;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((92)9)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "-9", "(4-9)", "(08)");
                var v = ov.swizzle.vzzww;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("(4-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "-9", "8", null);
                var v = ov.swizzle.vzzwv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-81)", "(-51)", "(-30)", "((7-4)9)");
                var v = ov.swizzle.vzzv;
                Assert.AreEqual("((7-4)9)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("((7-4)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-31)5)", "7", "7", "((-31)5)", null);
                var v = ov.swizzle.vzzvx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-31)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((75)1)", "(-82)", null, "", null);
                var v = ov.swizzle.vzzvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-36)", "4", "((-78)5)", "((9-6)8)");
                var v = ov.swizzle.vzzvz;
                Assert.AreEqual("((9-6)8)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((9-6)8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(4-5)", null, "-2", "-6", "((3-3)2)");
                var v = ov.swizzle.vzzvw;
                Assert.AreEqual("((3-3)2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((3-3)2)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-4-9)", "(44)", "((6-8)1)", "(44)");
                var v = ov.swizzle.vzzvv;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(44)", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "", "3", "((11)1)", "(6-4)");
                var v = ov.swizzle.vzw;
                Assert.AreEqual("(6-4)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((11)1)", v.z);
            }
            {
                var ov = new gvec5<string>("(1-6)", "((-81)-2)", "(35)", "5", "((-6-9)-9)");
                var v = ov.swizzle.vzwx;
                Assert.AreEqual("((-6-9)-9)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(1-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "-2", "", null, null);
                var v = ov.swizzle.vzwxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "((64)-2)", "(0-8)", "((64)-2)");
                var v = ov.swizzle.vzwxy;
                Assert.AreEqual("((64)-2)", v.x);
                Assert.AreEqual("((64)-2)", v.y);
                Assert.AreEqual("(0-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)0)", "-6", null, "(-9-1)", "(04)");
                var v = ov.swizzle.vzwxz;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("((2-2)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-76)", "0", "(-62)");
                var v = ov.swizzle.vzwxw;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("(-76)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "5", "(-91)", "", "");
                var v = ov.swizzle.vzwxv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "(8-4)", "((-3-5)-2)", "");
                var v = ov.swizzle.vzwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("((-3-5)-2)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(-95)", "(-95)", "((03)-5)", "((03)-5)", "((-3-5)-5)");
                var v = ov.swizzle.vzwyx;
                Assert.AreEqual("((-3-5)-5)", v.x);
                Assert.AreEqual("((03)-5)", v.y);
                Assert.AreEqual("((03)-5)", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("(-95)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)-4)", "((5-4)-4)", "((5-4)-4)", "-1", "0");
                var v = ov.swizzle.vzwyy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((5-4)-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((5-4)-4)", v.w);
                Assert.AreEqual("((5-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-75)-5)", "(28)", "(-7-5)", "((-75)-5)");
                var v = ov.swizzle.vzwyz;
                Assert.AreEqual("((-75)-5)", v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("((-75)-5)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(15)", "((4-7)1)", "", "0");
                var v = ov.swizzle.vzwyw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((4-7)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((7-2)9)", "(-1-8)", null, "2", null);
                var v = ov.swizzle.vzwyv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-1-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((75)8)", "((-88)3)", "((75)8)", "", "");
                var v = ov.swizzle.vzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((75)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((75)8)", v.w);
            }
            {
                var ov = new gvec5<string>("((69)-6)", "(23)", "", "", "((69)-6)");
                var v = ov.swizzle.vzwzx;
                Assert.AreEqual("((69)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((69)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(88)", "(88)", "((90)-5)", "", "((-64)8)");
                var v = ov.swizzle.vzwzy;
                Assert.AreEqual("((-64)8)", v.x);
                Assert.AreEqual("((90)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((90)-5)", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "((-40)1)", "", "5");
                var v = ov.swizzle.vzwzz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-40)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-40)1)", v.w);
                Assert.AreEqual("((-40)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-38)-3)", "((7-2)1)", "((7-2)1)", "(-3-6)", null);
                var v = ov.swizzle.vzwzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-2)1)", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("((7-2)1)", v.w);
                Assert.AreEqual("(-3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-89)", null, "-2", null, "(54)");
                var v = ov.swizzle.vzwzv;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec5<string>("((60)5)", "((6-1)4)", null, "", "(03)");
                var v = ov.swizzle.vzww;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-9-6)2)", "7", null, "(-65)", "((-9-6)2)");
                var v = ov.swizzle.vzwwx;
                Assert.AreEqual("((-9-6)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("((-9-6)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(26)", "((-2-5)-9)", "(18)", "(26)", "1");
                var v = ov.swizzle.vzwwy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("(26)", v.w);
                Assert.AreEqual("((-2-5)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "(-25)", "(7-2)", "(7-2)", "((-36)-9)");
                var v = ov.swizzle.vzwwz;
                Assert.AreEqual("((-36)-9)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("(7-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-57)6)", "(-3-2)", "(-70)", "");
                var v = ov.swizzle.vzwww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(08)", null, "(08)", "-5");
                var v = ov.swizzle.vzwwv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-77)9)", "-5", "(77)", "((-77)9)", "-5");
                var v = ov.swizzle.vzwv;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("((-77)9)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("(53)", "(53)", "-9", "-3", "((22)-8)");
                var v = ov.swizzle.vzwvx;
                Assert.AreEqual("((22)-8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((22)-8)", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(4-5)", "((-97)-6)", "1", "(4-5)");
                var v = ov.swizzle.vzwvy;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("((-97)-6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(4-5)", v.w);
                Assert.AreEqual("(4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)-8)", null, "5", "(-7-9)", "");
                var v = ov.swizzle.vzwvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(5-6)", "-1", "((-7-6)-4)", "-1");
                var v = ov.swizzle.vzwvw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-7-6)-4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-7-6)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-6)4)", "0", "1", "((-4-6)4)", "1");
                var v = ov.swizzle.vzwvv;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-4-6)4)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "((-5-4)-3)", "(-4-9)", "(0-1)");
                var v = ov.swizzle.vzv;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("((-5-4)-3)", v.y);
                Assert.AreEqual("(0-1)", v.z);
            }
            {
                var ov = new gvec5<string>("7", "", null, "(6-2)", "");
                var v = ov.swizzle.vzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-7)", null, "5", "((0-4)-1)", "");
                var v = ov.swizzle.vzvxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-7)", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)5)", "-3", "(-86)", "(57)", "0");
                var v = ov.swizzle.vzvxy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-86)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((03)5)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(5-8)", "(5-8)", "(-8-1)", "((0-3)3)");
                var v = ov.swizzle.vzvxz;
                Assert.AreEqual("((0-3)3)", v.x);
                Assert.AreEqual("(5-8)", v.y);
                Assert.AreEqual("((0-3)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(22)", null, "((2-4)7)");
                var v = ov.swizzle.vzvxw;
                Assert.AreEqual("((2-4)7)", v.x);
                Assert.AreEqual("(22)", v.y);
                Assert.AreEqual("((2-4)7)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((78)8)", "(4-3)", "((21)5)", "((21)5)", null);
                var v = ov.swizzle.vzvxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((21)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((78)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", null, "4", "(1-2)", null);
                var v = ov.swizzle.vzvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("6", "((-46)-5)", "((-46)-5)", "-7", "((-8-8)2)");
                var v = ov.swizzle.vzvyx;
                Assert.AreEqual("((-8-8)2)", v.x);
                Assert.AreEqual("((-46)-5)", v.y);
                Assert.AreEqual("((-8-8)2)", v.z);
                Assert.AreEqual("((-46)-5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((85)4)", "(-8-4)", "(-8-4)");
                var v = ov.swizzle.vzvyy;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("((85)4)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-2-4)-3)", "(89)", "", "((-2-4)-3)");
                var v = ov.swizzle.vzvyz;
                Assert.AreEqual("((-2-4)-3)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((-2-4)-3)", v.z);
                Assert.AreEqual("((-2-4)-3)", v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-2)1)", "(0-8)", "((-9-2)1)", null, "((74)-8)");
                var v = ov.swizzle.vzvyw;
                Assert.AreEqual("((74)-8)", v.x);
                Assert.AreEqual("((-9-2)1)", v.y);
                Assert.AreEqual("((74)-8)", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "((0-9)7)", "((8-5)3)", "", "(-20)");
                var v = ov.swizzle.vzvyv;
                Assert.AreEqual("(-20)", v.x);
                Assert.AreEqual("((8-5)3)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("((0-9)7)", v.w);
                Assert.AreEqual("(-20)", v.v);
            }
            {
                var ov = new gvec5<string>("((65)-5)", "(-6-9)", "((50)-7)", "(-3-9)", "((50)-7)");
                var v = ov.swizzle.vzvz;
                Assert.AreEqual("((50)-7)", v.x);
                Assert.AreEqual("((50)-7)", v.y);
                Assert.AreEqual("((50)-7)", v.z);
                Assert.AreEqual("((50)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(15)", "2", "((2-6)8)", "(92)", "((-8-4)-8)");
                var v = ov.swizzle.vzvzx;
                Assert.AreEqual("((-8-4)-8)", v.x);
                Assert.AreEqual("((2-6)8)", v.y);
                Assert.AreEqual("((-8-4)-8)", v.z);
                Assert.AreEqual("((2-6)8)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "((-7-8)-5)", "((-9-7)-2)", "1");
                var v = ov.swizzle.vzvzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-7-8)-5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-7-8)-5)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-99)", "(-99)", "-6", "((8-4)8)", "0");
                var v = ov.swizzle.vzvzz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-42)2)", "(18)", "-5", "(7-8)");
                var v = ov.swizzle.vzvzw;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "6", "-5", "((7-3)-5)", "(0-9)");
                var v = ov.swizzle.vzvzv;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((62)-2)", "", null, "-9", "((62)-2)");
                var v = ov.swizzle.vzvw;
                Assert.AreEqual("((62)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((62)-2)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(5-1)", "-2", "((-8-1)-8)", null);
                var v = ov.swizzle.vzvwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-1)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(4-1)", "((95)8)", "((-48)-2)", "(-7-8)");
                var v = ov.swizzle.vzvwy;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("((95)8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("((-48)-2)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)-9)", "((4-8)9)", "((12)2)", "", "");
                var v = ov.swizzle.vzvwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((12)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((12)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)3)", "(35)", "3", "4", "((-81)-1)");
                var v = ov.swizzle.vzvww;
                Assert.AreEqual("((-81)-1)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-81)-1)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-7)", "(-98)", "((6-7)5)", "(-7-5)", "((27)-2)");
                var v = ov.swizzle.vzvwv;
                Assert.AreEqual("((27)-2)", v.x);
                Assert.AreEqual("((6-7)5)", v.y);
                Assert.AreEqual("((27)-2)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("((27)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", null, null, "(4-3)");
                var v = ov.swizzle.vzvv;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("(4-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-19)", "6", "(-2-9)", "(73)", "(-19)");
                var v = ov.swizzle.vzvvx;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("(-19)", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("(-19)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-7)4)", "((-9-4)0)", null, "9", "((5-7)4)");
                var v = ov.swizzle.vzvvy;
                Assert.AreEqual("((5-7)4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-7)4)", v.z);
                Assert.AreEqual("((5-7)4)", v.w);
                Assert.AreEqual("((-9-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-99)8)", "3", "4", "(95)", "((-46)2)");
                var v = ov.swizzle.vzvvz;
                Assert.AreEqual("((-46)2)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-46)2)", v.z);
                Assert.AreEqual("((-46)2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((7-3)8)", "((-53)-4)", "-6", "(6-5)", "((52)0)");
                var v = ov.swizzle.vzvvw;
                Assert.AreEqual("((52)0)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((52)0)", v.z);
                Assert.AreEqual("((52)0)", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-6)", "-8", "-2", "(-32)", "-2");
                var v = ov.swizzle.vzvvv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(93)", null, "((-46)-7)", "(51)", "9");
                var v = ov.swizzle.vw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(51)", v.y);
            }
            {
                var ov = new gvec5<string>("(-92)", "(5-9)", "6", "(-73)", "6");
                var v = ov.swizzle.vwx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("(-92)", v.z);
            }
            {
                var ov = new gvec5<string>("(-6-2)", "", "((0-9)-6)", "8", "(-6-2)");
                var v = ov.swizzle.vwxx;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-6-2)", v.z);
                Assert.AreEqual("(-6-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(17)", "5", "4", "((84)6)", "5");
                var v = ov.swizzle.vwxxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((84)6)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-5-7)8)", "((-76)-9)", "(0-9)", "(0-9)");
                var v = ov.swizzle.vwxxy;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-7)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-2)-7)", "(18)", "7", "((-9-2)1)", null);
                var v = ov.swizzle.vwxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-2)1)", v.y);
                Assert.AreEqual("((7-2)-7)", v.z);
                Assert.AreEqual("((7-2)-7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "(94)", "(90)", "-5");
                var v = ov.swizzle.vwxxw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "((9-9)9)", "((-99)6)", "-2", "-2");
                var v = ov.swizzle.vwxxv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "((02)-7)", null, "-4", null);
                var v = ov.swizzle.vwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("((02)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-4", "-4", "(72)", "(-86)");
                var v = ov.swizzle.vwxyx;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("(72)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(-18)", "((7-3)0)", "(-35)");
                var v = ov.swizzle.vwxyy;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("((7-3)0)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)8)", "(14)", "(4-6)", "", "(14)");
                var v = ov.swizzle.vwxyz;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((4-1)8)", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)-4)", "(-63)", "3", null, "-5");
                var v = ov.swizzle.vwxyw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-4)-4)", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-26)1)", null, "", "((-26)1)", "((-4-1)-6)");
                var v = ov.swizzle.vwxyv;
                Assert.AreEqual("((-4-1)-6)", v.x);
                Assert.AreEqual("((-26)1)", v.y);
                Assert.AreEqual("((-26)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-4-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", null, "(-51)", "0");
                var v = ov.swizzle.vwxz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(32)", "8", "((74)-9)", "(9-5)", "(-90)");
                var v = ov.swizzle.vwxzx;
                Assert.AreEqual("(-90)", v.x);
                Assert.AreEqual("(9-5)", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("((74)-9)", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)-2)", "(57)", "((65)-9)", "((65)-9)", "((65)-9)");
                var v = ov.swizzle.vwxzy;
                Assert.AreEqual("((65)-9)", v.x);
                Assert.AreEqual("((65)-9)", v.y);
                Assert.AreEqual("((48)-2)", v.z);
                Assert.AreEqual("((65)-9)", v.w);
                Assert.AreEqual("(57)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "9", "(-16)", null, "((4-5)-2)");
                var v = ov.swizzle.vwxzz;
                Assert.AreEqual("((4-5)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-16)", v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-8)-6)", "", "((98)-2)", "(-97)", "(-97)");
                var v = ov.swizzle.vwxzw;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("(-97)", v.y);
                Assert.AreEqual("((3-8)-6)", v.z);
                Assert.AreEqual("((98)-2)", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-3)2)", null, "-1", "(37)", null);
                var v = ov.swizzle.vwxzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("((-1-3)2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "1", "-8", "1");
                var v = ov.swizzle.vwxw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((6-1)0)", "((6-1)0)", "5", "(-62)", "((7-9)9)");
                var v = ov.swizzle.vwxwx;
                Assert.AreEqual("((7-9)9)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("((6-1)0)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("((6-1)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-8)-8)", "", "7", "(0-5)", "((-17)-3)");
                var v = ov.swizzle.vwxwy;
                Assert.AreEqual("((-17)-3)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("((-7-8)-8)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "6", "((-51)0)", "(-1-2)", "6");
                var v = ov.swizzle.vwxwz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("((-51)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "-8", "-8", "2");
                var v = ov.swizzle.vwxww;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "8", "((42)-3)", "(42)");
                var v = ov.swizzle.vwxwv;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("((42)-3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((42)-3)", v.w);
                Assert.AreEqual("(42)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-3", "-8", "((-4-6)-8)");
                var v = ov.swizzle.vwxv;
                Assert.AreEqual("((-4-6)-8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-4-6)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(1-5)", "", "((-11)-7)", "((43)1)", "(7-7)");
                var v = ov.swizzle.vwxvx;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("((43)1)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("(1-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(96)", null, "((-86)8)", "((-86)8)", "(-8-8)");
                var v = ov.swizzle.vwxvy;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("((-86)8)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((10)-3)", "(31)", "9", "((6-7)1)", "((7-9)4)");
                var v = ov.swizzle.vwxvz;
                Assert.AreEqual("((7-9)4)", v.x);
                Assert.AreEqual("((6-7)1)", v.y);
                Assert.AreEqual("((10)-3)", v.z);
                Assert.AreEqual("((7-9)4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(12)", "(-2-3)", "(12)", "((9-2)8)", "(-4-6)");
                var v = ov.swizzle.vwxvw;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("((9-2)8)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((9-2)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((5-5)-9)", "", "3", "((-1-6)-8)");
                var v = ov.swizzle.vwxvv;
                Assert.AreEqual("((-1-6)-8)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-1-6)-8)", v.w);
                Assert.AreEqual("((-1-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-34)-9)", "((69)5)", "((-1-3)-4)", "((-1-3)-4)", "(-53)");
                var v = ov.swizzle.vwy;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("((-1-3)-4)", v.y);
                Assert.AreEqual("((69)5)", v.z);
            }
            {
                var ov = new gvec5<string>("9", "-4", "9", "", "(-5-2)");
                var v = ov.swizzle.vwyx;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-8)", "9", "((-42)3)", "((-7-6)-3)", "(-5-5)");
                var v = ov.swizzle.vwyxx;
                Assert.AreEqual("(-5-5)", v.x);
                Assert.AreEqual("((-7-6)-3)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(56)", "(56)", "((0-4)3)", "");
                var v = ov.swizzle.vwyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-4)3)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "3", "((-11)-2)", "(-1-8)");
                var v = ov.swizzle.vwyxz;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("((-11)-2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "((-3-1)-3)", "-4", "(-9-3)");
                var v = ov.swizzle.vwyxw;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-4-9)", "(59)", "((-5-3)-7)", "((54)3)");
                var v = ov.swizzle.vwyxv;
                Assert.AreEqual("((54)3)", v.x);
                Assert.AreEqual("((-5-3)-7)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((54)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "((1-2)9)", "", "", "7");
                var v = ov.swizzle.vwyy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-2)9)", v.z);
                Assert.AreEqual("((1-2)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-1)-7)", "", "((6-1)-7)", "-9", "6");
                var v = ov.swizzle.vwyyx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-1)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-7)", "((7-8)7)", "(-6-7)", "(-6-7)");
                var v = ov.swizzle.vwyyy;
                Assert.AreEqual("(-6-7)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-3)1)", "(63)", "((-9-3)1)", "(63)");
                var v = ov.swizzle.vwyyz;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("((-9-3)1)", v.y);
                Assert.AreEqual("((-9-3)1)", v.z);
                Assert.AreEqual("((-9-3)1)", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-9)8)", "-6", "(-3-8)", "((-4-9)8)", "((6-4)3)");
                var v = ov.swizzle.vwyyw;
                Assert.AreEqual("((6-4)3)", v.x);
                Assert.AreEqual("((-4-9)8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-4-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "-3", "((-4-1)-5)", "(34)");
                var v = ov.swizzle.vwyyv;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("((-4-1)-5)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", "-8", "-6", "-8");
                var v = ov.swizzle.vwyz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("2", "((7-9)6)", "(-78)", "((-85)-5)", "-5");
                var v = ov.swizzle.vwyzx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-85)-5)", v.y);
                Assert.AreEqual("((7-9)6)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", null, "(-61)", "((0-6)2)");
                var v = ov.swizzle.vwyzy;
                Assert.AreEqual("((0-6)2)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", "(-5-8)", "((6-4)-5)", "((9-6)-6)");
                var v = ov.swizzle.vwyzz;
                Assert.AreEqual("((9-6)-6)", v.x);
                Assert.AreEqual("((6-4)-5)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-2)2)", "(62)", "((5-2)2)", "-7", "");
                var v = ov.swizzle.vwyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("((5-2)2)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-2-1)", "((-4-3)9)", "((-4-3)9)");
                var v = ov.swizzle.vwyzv;
                Assert.AreEqual("((-4-3)9)", v.x);
                Assert.AreEqual("((-4-3)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("((-4-3)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "2", null, "((-71)8)", "-6");
                var v = ov.swizzle.vwyw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-71)8)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-71)8)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "", "((-8-8)-2)", "(59)", "");
                var v = ov.swizzle.vwywx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-7)", "((9-3)-9)", "(-4-7)", "((-12)9)", "(-4-7)");
                var v = ov.swizzle.vwywy;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("((-12)9)", v.y);
                Assert.AreEqual("((9-3)-9)", v.z);
                Assert.AreEqual("((-12)9)", v.w);
                Assert.AreEqual("((9-3)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(3-7)", "((42)-6)", "(15)", "7");
                var v = ov.swizzle.vwywz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("((42)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(69)", "(-6-4)", "6", "8");
                var v = ov.swizzle.vwyww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(69)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "(-5-7)", "9", "(-6-5)", "8");
                var v = ov.swizzle.vwywv;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-6-5)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("(-6-5)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "8", "", "", "3");
                var v = ov.swizzle.vwyv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("(28)", "(7-4)", "9", "(28)", "((-30)6)");
                var v = ov.swizzle.vwyvx;
                Assert.AreEqual("((-30)6)", v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("(7-4)", v.z);
                Assert.AreEqual("((-30)6)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-1)", "2", "(4-3)", "(-3-3)", "2");
                var v = ov.swizzle.vwyvy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-3-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((81)-1)", null, "-9", "(-7-5)");
                var v = ov.swizzle.vwyvz;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((81)-1)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)6)", null, "", "((-9-4)6)", "((-7-8)-7)");
                var v = ov.swizzle.vwyvw;
                Assert.AreEqual("((-7-8)-7)", v.x);
                Assert.AreEqual("((-9-4)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-8)-7)", v.w);
                Assert.AreEqual("((-9-4)6)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((9-1)-4)", "((1-1)-3)", null, "((9-1)-4)");
                var v = ov.swizzle.vwyvv;
                Assert.AreEqual("((9-1)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-1)-4)", v.z);
                Assert.AreEqual("((9-1)-4)", v.w);
                Assert.AreEqual("((9-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)8)", "9", "1", "-3", "1");
                var v = ov.swizzle.vwz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec5<string>("((-7-7)6)", "", "((-2-8)0)", "7", "");
                var v = ov.swizzle.vwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-2-8)0)", v.z);
                Assert.AreEqual("((-7-7)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-74)", "((05)0)", "-5", "9", "");
                var v = ov.swizzle.vwzxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-18)9)", null, null, "(6-3)");
                var v = ov.swizzle.vwzxy;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-18)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((54)1)", "", "((3-9)1)", "(-6-3)", "1");
                var v = ov.swizzle.vwzxz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("((3-9)1)", v.z);
                Assert.AreEqual("((54)1)", v.w);
                Assert.AreEqual("((3-9)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "", "(-21)", "");
                var v = ov.swizzle.vwzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "6", "(-7-6)", "((-1-6)0)");
                var v = ov.swizzle.vwzxv;
                Assert.AreEqual("((-1-6)0)", v.x);
                Assert.AreEqual("(-7-6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-1-6)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((69)7)", "-5", "((-2-3)-4)", "(7-6)", "((87)2)");
                var v = ov.swizzle.vwzy;
                Assert.AreEqual("((87)2)", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("((-2-3)-4)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((-36)-7)", "((2-1)-1)", null, "7");
                var v = ov.swizzle.vwzyx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((2-1)-1)", v.z);
                Assert.AreEqual("((-36)-7)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((6-8)-9)", "3", "-9", "(-28)");
                var v = ov.swizzle.vwzyy;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((6-8)-9)", v.w);
                Assert.AreEqual("((6-8)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "((6-8)-2)", "((6-8)-2)", "(14)");
                var v = ov.swizzle.vwzyz;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("((6-8)-2)", v.y);
                Assert.AreEqual("((6-8)-2)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((6-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)8)", "((-63)-2)", "(-7-4)", null, null);
                var v = ov.swizzle.vwzyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("((-63)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-6)-6)", "-5", "(02)", "(02)");
                var v = ov.swizzle.vwzyv;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-4-6)-6)", v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec5<string>("(70)", null, "5", "5", null);
                var v = ov.swizzle.vwzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-8)-7)", "((68)-2)", "((68)-2)", null, "(0-7)");
                var v = ov.swizzle.vwzzx;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((68)-2)", v.z);
                Assert.AreEqual("((68)-2)", v.w);
                Assert.AreEqual("((-7-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "3", "", "(-75)");
                var v = ov.swizzle.vwzzy;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)-3)", "((-18)-8)", "((-87)2)", null, "(33)");
                var v = ov.swizzle.vwzzz;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-87)2)", v.z);
                Assert.AreEqual("((-87)2)", v.w);
                Assert.AreEqual("((-87)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)-8)", "1", "((0-7)-5)", "5", null);
                var v = ov.swizzle.vwzzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((0-7)-5)", v.z);
                Assert.AreEqual("((0-7)-5)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(3-7)", "(3-7)", "(51)", "6");
                var v = ov.swizzle.vwzzv;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "((21)-5)", "(58)", "-4", "((-5-7)-1)");
                var v = ov.swizzle.vwzw;
                Assert.AreEqual("((-5-7)-1)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "(45)", "((87)-6)", "-1");
                var v = ov.swizzle.vwzwx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((87)-6)", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("((87)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "(4-4)", "(-5-4)", "((6-6)-7)", "");
                var v = ov.swizzle.vwzwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-6)-7)", v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual("((6-6)-7)", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((9-4)-1)", "", "1", "(-30)");
                var v = ov.swizzle.vwzwz;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(23)", "-6", "-6", "-6");
                var v = ov.swizzle.vwzww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "1", "1", "((41)-7)", "(5-9)");
                var v = ov.swizzle.vwzwv;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("((41)-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((41)-7)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((9-5)-4)", "3", "((-44)1)", "(30)");
                var v = ov.swizzle.vwzv;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("((-44)1)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(30)", v.w);
            }
            {
                var ov = new gvec5<string>("((20)-1)", "-8", "", "(-62)", "");
                var v = ov.swizzle.vwzvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((20)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "(-47)", "7", "((-77)-1)");
                var v = ov.swizzle.vwzvy;
                Assert.AreEqual("((-77)-1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("((-77)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((9-4)-3)", "(38)", "(58)", "1", "-1");
                var v = ov.swizzle.vwzvz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "-2", "-2", "((2-6)1)");
                var v = ov.swizzle.vwzvw;
                Assert.AreEqual("((2-6)1)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((2-6)1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "(-2-1)", "((40)-6)", "(9-1)");
                var v = ov.swizzle.vwzvv;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("((40)-6)", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-90)", "0", "0", "((-27)6)", "(-3-9)");
                var v = ov.swizzle.vww;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("((-27)6)", v.y);
                Assert.AreEqual("((-27)6)", v.z);
            }
            {
                var ov = new gvec5<string>("(-11)", "-1", "((-91)-2)", "((-91)-2)", "((-91)-2)");
                var v = ov.swizzle.vwwx;
                Assert.AreEqual("((-91)-2)", v.x);
                Assert.AreEqual("((-91)-2)", v.y);
                Assert.AreEqual("((-91)-2)", v.z);
                Assert.AreEqual("(-11)", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "0", "(-73)", "", null);
                var v = ov.swizzle.vwwxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((8-4)0)", "6", "((-98)2)", "-8");
                var v = ov.swizzle.vwwxy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-98)2)", v.y);
                Assert.AreEqual("((-98)2)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((8-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((63)6)", "((4-2)-1)", "4", "", "4");
                var v = ov.swizzle.vwwxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((63)6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-45)-5)", "((12)3)", "(59)", "2");
                var v = ov.swizzle.vwwxw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "(-5-3)", "((-2-4)-3)", "-3");
                var v = ov.swizzle.vwwxv;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-2-4)-3)", v.y);
                Assert.AreEqual("((-2-4)-3)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)-2)", "(51)", "((4-5)-1)", "-8", "((-9-5)-2)");
                var v = ov.swizzle.vwwy;
                Assert.AreEqual("((-9-5)-2)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(51)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "((-11)0)", "((-11)0)", "(-1-7)", "");
                var v = ov.swizzle.vwwyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("((-11)0)", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)-2)", null, "(-26)", "2", "");
                var v = ov.swizzle.vwwyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((15)7)", "((-23)7)", "((15)7)", "((-23)7)", "((91)-1)");
                var v = ov.swizzle.vwwyz;
                Assert.AreEqual("((91)-1)", v.x);
                Assert.AreEqual("((-23)7)", v.y);
                Assert.AreEqual("((-23)7)", v.z);
                Assert.AreEqual("((-23)7)", v.w);
                Assert.AreEqual("((15)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-63)-6)", "(-18)", null, "((-25)6)", "((-63)-6)");
                var v = ov.swizzle.vwwyw;
                Assert.AreEqual("((-63)-6)", v.x);
                Assert.AreEqual("((-25)6)", v.y);
                Assert.AreEqual("((-25)6)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("((-25)6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-5-9)-5)", "9", "(-67)", "(-67)");
                var v = ov.swizzle.vwwyv;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("((-5-9)-5)", v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(6-9)", "(6-9)", "(7-9)", "((-44)-7)");
                var v = ov.swizzle.vwwz;
                Assert.AreEqual("((-44)-7)", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("(7-9)", v.z);
                Assert.AreEqual("(6-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-33)-5)", null, "((-33)-5)", "(-2-5)", "-1");
                var v = ov.swizzle.vwwzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("((-33)-5)", v.w);
                Assert.AreEqual("((-33)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-3)", "0", "((50)7)", "(46)", "((50)7)");
                var v = ov.swizzle.vwwzy;
                Assert.AreEqual("((50)7)", v.x);
                Assert.AreEqual("(46)", v.y);
                Assert.AreEqual("(46)", v.z);
                Assert.AreEqual("((50)7)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-5)", "2", "5", "2", "-2");
                var v = ov.swizzle.vwwzz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "1", "(01)", "((7-3)0)");
                var v = ov.swizzle.vwwzw;
                Assert.AreEqual("((7-3)0)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("(01)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(01)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-56)", "((0-3)7)", "(2-9)", "-9");
                var v = ov.swizzle.vwwzv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(2-9)", v.z);
                Assert.AreEqual("((0-3)7)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "((3-8)-6)", "((90)-1)", "(85)", "(78)");
                var v = ov.swizzle.vwww;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("(85)", v.z);
                Assert.AreEqual("(85)", v.w);
            }
            {
                var ov = new gvec5<string>("((65)4)", "6", "8", "6", "8");
                var v = ov.swizzle.vwwwx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((65)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "((51)2)", "1", "-2", "-2");
                var v = ov.swizzle.vwwwy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((51)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-17)8)", "0", "((5-7)3)", "-8", null);
                var v = ov.swizzle.vwwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((5-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-8", "((-1-2)-6)", "(1-4)", "-9");
                var v = ov.swizzle.vwwww;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("(1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "(80)", "((-46)9)", "((-3-4)9)", "0");
                var v = ov.swizzle.vwwwv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-3-4)9)", v.y);
                Assert.AreEqual("((-3-4)9)", v.z);
                Assert.AreEqual("((-3-4)9)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("2", "1", "", "(9-2)", "(9-3)");
                var v = ov.swizzle.vwwv;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("(9-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "3", null, "(-39)", "((0-2)-1)");
                var v = ov.swizzle.vwwvx;
                Assert.AreEqual("((0-2)-1)", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("(-39)", v.z);
                Assert.AreEqual("((0-2)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-20)-2)", null, "", "(37)");
                var v = ov.swizzle.vwwvy;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(37)", v.w);
                Assert.AreEqual("((-20)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-74)", "-8", "((-5-3)-3)", "(-9-2)");
                var v = ov.swizzle.vwwvz;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("((-5-3)-3)", v.y);
                Assert.AreEqual("((-5-3)-3)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "((-48)8)", "2", "", "-3");
                var v = ov.swizzle.vwwvw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "(5-9)", null, "", "((-9-4)9)");
                var v = ov.swizzle.vwwvv;
                Assert.AreEqual("((-9-4)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-9-4)9)", v.w);
                Assert.AreEqual("((-9-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-85)1)", "", "((73)-1)", "((73)-1)");
                var v = ov.swizzle.vwv;
                Assert.AreEqual("((73)-1)", v.x);
                Assert.AreEqual("((73)-1)", v.y);
                Assert.AreEqual("((73)-1)", v.z);
            }
            {
                var ov = new gvec5<string>("((0-1)3)", "(4-4)", "((7-2)-4)", "(79)", "-2");
                var v = ov.swizzle.vwvx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((0-1)3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-5-3)", null, "(-5-3)", "1", null);
                var v = ov.swizzle.vwvxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((9-7)6)", null, "(-26)", "((3-7)-3)");
                var v = ov.swizzle.vwvxy;
                Assert.AreEqual("((3-7)-3)", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("((3-7)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((9-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "((-2-2)8)", "(4-7)", "((-20)-9)", "((-7-3)3)");
                var v = ov.swizzle.vwvxz;
                Assert.AreEqual("((-7-3)3)", v.x);
                Assert.AreEqual("((-20)-9)", v.y);
                Assert.AreEqual("((-7-3)3)", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual("(4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "5", "(-59)", "(-7-9)");
                var v = ov.swizzle.vwvxw;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-6)9)", null, "", "((-2-6)9)", "((-3-6)-7)");
                var v = ov.swizzle.vwvxv;
                Assert.AreEqual("((-3-6)-7)", v.x);
                Assert.AreEqual("((-2-6)9)", v.y);
                Assert.AreEqual("((-3-6)-7)", v.z);
                Assert.AreEqual("((-2-6)9)", v.w);
                Assert.AreEqual("((-3-6)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-97)1)", "((5-4)8)", "((-97)1)", "2", "");
                var v = ov.swizzle.vwvy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-4)8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "0", "(43)", "4");
                var v = ov.swizzle.vwvyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(4-8)", "-4", "", "((-42)-3)", "(-58)");
                var v = ov.swizzle.vwvyy;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((-42)-3)", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-2)", "(6-2)", "5", "5");
                var v = ov.swizzle.vwvyz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("(6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-98)2)", "9", "(21)", "(21)", "(-14)");
                var v = ov.swizzle.vwvyw;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("(-14)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "((-34)1)", "((4-7)-9)", "(-3-3)");
                var v = ov.swizzle.vwvyv;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("((4-7)-9)", v.y);
                Assert.AreEqual("(-3-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-8)", "((-7-9)-8)", null, "(-2-7)", "-7");
                var v = ov.swizzle.vwvz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-2-7)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "", "", "7", "3");
                var v = ov.swizzle.vwvzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-23)0)", "(-2-9)", "-1", "-1");
                var v = ov.swizzle.vwvzy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("((-23)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", null, "", "-4", "(90)");
                var v = ov.swizzle.vwvzz;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(90)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "(-9-4)", "1", "");
                var v = ov.swizzle.vwvzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-8-8)", "-7", "", "0");
                var v = ov.swizzle.vwvzv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "(9-7)", "((39)6)", "");
                var v = ov.swizzle.vwvw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((39)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((39)6)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "5", "(4-7)", null, "((4-9)-1)");
                var v = ov.swizzle.vwvwx;
                Assert.AreEqual("((4-9)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-9)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("6", "-3", "6", "(4-2)", "");
                var v = ov.swizzle.vwvwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-3)", null, "-3", "-5", "");
                var v = ov.swizzle.vwvwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((92)-3)", "-2", "(08)", "((-41)9)", "((92)-3)");
                var v = ov.swizzle.vwvww;
                Assert.AreEqual("((92)-3)", v.x);
                Assert.AreEqual("((-41)9)", v.y);
                Assert.AreEqual("((92)-3)", v.z);
                Assert.AreEqual("((-41)9)", v.w);
                Assert.AreEqual("((-41)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-5)5)", "((1-7)-5)", "0", "((-94)-5)", "((9-5)5)");
                var v = ov.swizzle.vwvwv;
                Assert.AreEqual("((9-5)5)", v.x);
                Assert.AreEqual("((-94)-5)", v.y);
                Assert.AreEqual("((9-5)5)", v.z);
                Assert.AreEqual("((-94)-5)", v.w);
                Assert.AreEqual("((9-5)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-70)8)", "((3-4)7)", "((-70)8)", "(-55)", "((-70)8)");
                var v = ov.swizzle.vwvv;
                Assert.AreEqual("((-70)8)", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("((-70)8)", v.z);
                Assert.AreEqual("((-70)8)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "3", "((-3-3)-5)", "((-48)-1)", "(-52)");
                var v = ov.swizzle.vwvvx;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("((-48)-1)", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "7", "((0-6)1)", "6", "6");
                var v = ov.swizzle.vwvvy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)-6)", "((-23)-6)", "", "-8", "((-23)-6)");
                var v = ov.swizzle.vwvvz;
                Assert.AreEqual("((-23)-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-23)-6)", v.z);
                Assert.AreEqual("((-23)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((1-3)-6)", "", "((-8-5)1)", "4");
                var v = ov.swizzle.vwvvw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-8-5)1)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-8-5)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "((97)0)", null, null);
                var v = ov.swizzle.vwvvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-74)", "(-67)", "(7-2)", "-2");
                var v = ov.swizzle.vv;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
            }
            {
                var ov = new gvec5<string>("((-83)-7)", "", "(-18)", null, "(92)");
                var v = ov.swizzle.vvx;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual("((-83)-7)", v.z);
            }
            {
                var ov = new gvec5<string>("((-25)7)", "5", "(69)", "((-7-7)6)", "8");
                var v = ov.swizzle.vvxx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-25)7)", v.z);
                Assert.AreEqual("((-25)7)", v.w);
            }
            {
                var ov = new gvec5<string>("((-2-3)0)", "((-2-3)0)", "-3", "((-8-8)0)", "");
                var v = ov.swizzle.vvxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-3)0)", v.z);
                Assert.AreEqual("((-2-3)0)", v.w);
                Assert.AreEqual("((-2-3)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-9)", "(-7-4)", "((-3-5)-6)", "0", "(-91)");
                var v = ov.swizzle.vvxxy;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "((-9-8)6)", "((-9-8)6)", null);
                var v = ov.swizzle.vvxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", null, "7", "", "(-3-9)");
                var v = ov.swizzle.vvxxw;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-7)", "5", "(20)", "((93)-7)", null);
                var v = ov.swizzle.vvxxv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((93)-7)", v.z);
                Assert.AreEqual("((93)-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((4-5)-8)", null, "-6", null, "(-19)");
                var v = ov.swizzle.vvxy;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("((4-5)-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("4", "0", "((-5-4)4)", "", "4");
                var v = ov.swizzle.vvxyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(03)", "((7-7)-6)", "(-10)", "((0-1)0)", "((16)-7)");
                var v = ov.swizzle.vvxyy;
                Assert.AreEqual("((16)-7)", v.x);
                Assert.AreEqual("((16)-7)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("((7-7)-6)", v.w);
                Assert.AreEqual("((7-7)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-5)3)", "(-4-6)", "((-51)0)", "9", "((25)-9)");
                var v = ov.swizzle.vvxyz;
                Assert.AreEqual("((25)-9)", v.x);
                Assert.AreEqual("((25)-9)", v.y);
                Assert.AreEqual("((-6-5)3)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((-51)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-19)", "((2-4)-5)", "-1", null);
                var v = ov.swizzle.vvxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((2-5)6)", "((2-5)6)", "(57)", "(-70)", "4");
                var v = ov.swizzle.vvxyv;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((2-5)6)", v.z);
                Assert.AreEqual("((2-5)6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "(2-4)", "3", "3", "(21)");
                var v = ov.swizzle.vvxz;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("9", "((38)-2)", "-9", "-9", "-9");
                var v = ov.swizzle.vvxzx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(3-1)", "(3-1)", "-9", "(7-7)", null);
                var v = ov.swizzle.vvxzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-7)", "((8-6)7)", "((-91)6)", "", "(2-7)");
                var v = ov.swizzle.vvxzz;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("((-91)6)", v.w);
                Assert.AreEqual("((-91)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-1)", "6", "(-4-9)", null, null);
                var v = ov.swizzle.vvxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "-7", "(6-4)", null);
                var v = ov.swizzle.vvxzv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "", "((-7-2)-4)", "((6-3)2)");
                var v = ov.swizzle.vvxw;
                Assert.AreEqual("((6-3)2)", v.x);
                Assert.AreEqual("((6-3)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-2)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((0-6)-7)", "-1", "5", "-6", "5");
                var v = ov.swizzle.vvxwx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((0-6)-7)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((0-6)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-32)", "-7", null, "((5-7)-5)", "9");
                var v = ov.swizzle.vvxwy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("((5-7)-5)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-4)-4)", "(4-5)", "((-8-4)-4)", null, "");
                var v = ov.swizzle.vvxwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-4)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-8-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "0", "((-4-2)8)", "((26)-2)");
                var v = ov.swizzle.vvxww;
                Assert.AreEqual("((26)-2)", v.x);
                Assert.AreEqual("((26)-2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-4-2)8)", v.w);
                Assert.AreEqual("((-4-2)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-59)", "(-59)", null, "((-78)-4)");
                var v = ov.swizzle.vvxwv;
                Assert.AreEqual("((-78)-4)", v.x);
                Assert.AreEqual("((-78)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-78)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((17)-8)", null, "-5", "2", "3");
                var v = ov.swizzle.vvxv;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((17)-8)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("(10)", "2", "(2-6)", "(2-6)", "(10)");
                var v = ov.swizzle.vvxvx;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(10)", v.v);
            }
            {
                var ov = new gvec5<string>("((20)-5)", "(0-8)", "-4", "-4", "((-84)4)");
                var v = ov.swizzle.vvxvy;
                Assert.AreEqual("((-84)4)", v.x);
                Assert.AreEqual("((-84)4)", v.y);
                Assert.AreEqual("((20)-5)", v.z);
                Assert.AreEqual("((-84)4)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "(-3-7)", null, "-5", "(-31)");
                var v = ov.swizzle.vvxvz;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("(-3-7)", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-16)", "((0-7)-5)", "", null, "-4");
                var v = ov.swizzle.vvxvw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "((-9-8)3)", "((2-3)0)", null);
                var v = ov.swizzle.vvxvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-7-4)", "", "((-98)-1)", "(-5-3)");
                var v = ov.swizzle.vvy;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
            }
            {
                var ov = new gvec5<string>("(9-7)", "(9-7)", "((-28)-3)", "(00)", "((32)-8)");
                var v = ov.swizzle.vvyx;
                Assert.AreEqual("((32)-8)", v.x);
                Assert.AreEqual("((32)-8)", v.y);
                Assert.AreEqual("(9-7)", v.z);
                Assert.AreEqual("(9-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((32)-1)", "(17)", "-2", "", "4");
                var v = ov.swizzle.vvyxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("((32)-1)", v.w);
                Assert.AreEqual("((32)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-5-2)", "((37)2)", "((-7-9)-5)", "((-5-4)-3)");
                var v = ov.swizzle.vvyxy;
                Assert.AreEqual("((-5-4)-3)", v.x);
                Assert.AreEqual("((-5-4)-3)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(3-6)", "((-2-8)-8)", "8", "((82)6)");
                var v = ov.swizzle.vvyxz;
                Assert.AreEqual("((82)6)", v.x);
                Assert.AreEqual("((82)6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-2-8)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "((-2-7)6)", "6", null);
                var v = ov.swizzle.vvyxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(1-9)", "-7", "6", "(1-9)", "((43)6)");
                var v = ov.swizzle.vvyxv;
                Assert.AreEqual("((43)6)", v.x);
                Assert.AreEqual("((43)6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("((43)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-9)", "3", "((-46)9)", "((23)-5)");
                var v = ov.swizzle.vvyy;
                Assert.AreEqual("((23)-5)", v.x);
                Assert.AreEqual("((23)-5)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("(0-9)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "", "-5", "", "6");
                var v = ov.swizzle.vvyyx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-8)", "-2", null, "((-96)1)");
                var v = ov.swizzle.vvyyy;
                Assert.AreEqual("((-96)1)", v.x);
                Assert.AreEqual("((-96)1)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("(-2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-4)", "(58)", "0", null, "(-4-4)");
                var v = ov.swizzle.vvyyz;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-82)-1)", "4", "((-91)-9)", "(-21)");
                var v = ov.swizzle.vvyyw;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("((-82)-1)", v.z);
                Assert.AreEqual("((-82)-1)", v.w);
                Assert.AreEqual("((-91)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(83)", "((-97)-1)", "9", null, "((-22)3)");
                var v = ov.swizzle.vvyyv;
                Assert.AreEqual("((-22)3)", v.x);
                Assert.AreEqual("((-22)3)", v.y);
                Assert.AreEqual("((-97)-1)", v.z);
                Assert.AreEqual("((-97)-1)", v.w);
                Assert.AreEqual("((-22)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((12)-9)", null, "(-9-9)", null);
                var v = ov.swizzle.vvyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((12)-9)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(25)", "(59)", null, "((-93)7)", "((-93)7)");
                var v = ov.swizzle.vvyzx;
                Assert.AreEqual("((-93)7)", v.x);
                Assert.AreEqual("((-93)7)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "", "4", "4");
                var v = ov.swizzle.vvyzy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(0-9)", "(0-9)", "(0-9)", "9", null);
                var v = ov.swizzle.vvyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("(0-9)", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "((8-4)-4)", "(8-6)", "((8-4)-4)", null);
                var v = ov.swizzle.vvyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-4)-4)", v.z);
                Assert.AreEqual("(8-6)", v.w);
                Assert.AreEqual("((8-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-8-3)", null, null, "");
                var v = ov.swizzle.vvyzv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "(67)", "(1-8)", "(67)", "((4-7)4)");
                var v = ov.swizzle.vvyw;
                Assert.AreEqual("((4-7)4)", v.x);
                Assert.AreEqual("((4-7)4)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-6)2)", "((-4-1)-9)", null, "((-32)2)", "((4-6)2)");
                var v = ov.swizzle.vvywx;
                Assert.AreEqual("((4-6)2)", v.x);
                Assert.AreEqual("((4-6)2)", v.y);
                Assert.AreEqual("((-4-1)-9)", v.z);
                Assert.AreEqual("((-32)2)", v.w);
                Assert.AreEqual("((4-6)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(85)", null, "((36)1)", "((-7-6)-5)", "((36)1)");
                var v = ov.swizzle.vvywy;
                Assert.AreEqual("((36)1)", v.x);
                Assert.AreEqual("((36)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-6)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(5-8)", "(83)", "-7", null);
                var v = ov.swizzle.vvywz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "(4-1)", "(4-1)", "8", "(5-9)");
                var v = ov.swizzle.vvyww;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-9)8)", "1", null, "((-27)6)", "((-27)6)");
                var v = ov.swizzle.vvywv;
                Assert.AreEqual("((-27)6)", v.x);
                Assert.AreEqual("((-27)6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-27)6)", v.w);
                Assert.AreEqual("((-27)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((7-6)7)", "((-7-2)-4)", "((7-6)7)", "(-54)");
                var v = ov.swizzle.vvyv;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("((7-6)7)", v.z);
                Assert.AreEqual("(-54)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "5", "((4-4)-8)", "(-28)", "5");
                var v = ov.swizzle.vvyvx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-16)-6)", "((9-7)3)", "(70)", "((9-7)3)", null);
                var v = ov.swizzle.vvyvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-7)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((82)9)", "-4", "-8", "((82)9)", "((-22)0)");
                var v = ov.swizzle.vvyvz;
                Assert.AreEqual("((-22)0)", v.x);
                Assert.AreEqual("((-22)0)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-22)0)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-3)", "((2-6)1)", "1", "((-75)0)", "(-26)");
                var v = ov.swizzle.vvyvw;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("((2-6)1)", v.z);
                Assert.AreEqual("(-26)", v.w);
                Assert.AreEqual("((-75)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(30)", null, "(8-2)", "((-25)-3)", null);
                var v = ov.swizzle.vvyvv;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(57)", "", "(-9-5)", null, "((5-9)-6)");
                var v = ov.swizzle.vvz;
                Assert.AreEqual("((5-9)-6)", v.x);
                Assert.AreEqual("((5-9)-6)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
            }
            {
                var ov = new gvec5<string>("((-9-3)-9)", "((-9-3)-9)", "((-9-3)-9)", "(-43)", "-7");
                var v = ov.swizzle.vvzx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-9-3)-9)", v.z);
                Assert.AreEqual("((-9-3)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((17)4)", "(5-4)", "((00)0)", "(5-4)", "(2-5)");
                var v = ov.swizzle.vvzxx;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("((00)0)", v.z);
                Assert.AreEqual("((17)4)", v.w);
                Assert.AreEqual("((17)4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-73)3)", "((81)-4)", "((73)4)", "7");
                var v = ov.swizzle.vvzxy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((81)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-73)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)6)", "((-62)6)", "(-6-7)", "((-62)6)", "");
                var v = ov.swizzle.vvzxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("((-62)6)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(46)", "(88)", "(60)", "((24)9)", "(88)");
                var v = ov.swizzle.vvzxw;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("((24)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "(-2-1)", null, "((-3-1)-1)");
                var v = ov.swizzle.vvzxv;
                Assert.AreEqual("((-3-1)-1)", v.x);
                Assert.AreEqual("((-3-1)-1)", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-3-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(82)", "(-1-8)", "((-22)4)", "3");
                var v = ov.swizzle.vvzy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(82)", v.w);
            }
            {
                var ov = new gvec5<string>("((34)-7)", "(-5-1)", "((34)-7)", "(49)", "((4-2)1)");
                var v = ov.swizzle.vvzyx;
                Assert.AreEqual("((4-2)1)", v.x);
                Assert.AreEqual("((4-2)1)", v.y);
                Assert.AreEqual("((34)-7)", v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual("((34)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)2)", "(-4-6)", "", "(-4-6)", "((7-1)7)");
                var v = ov.swizzle.vvzyy;
                Assert.AreEqual("((7-1)7)", v.x);
                Assert.AreEqual("((7-1)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((24)8)", "-2", "", "(-1-2)", null);
                var v = ov.swizzle.vvzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", null, "(-5-9)", null);
                var v = ov.swizzle.vvzyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "-3", "(4-9)", "((87)4)");
                var v = ov.swizzle.vvzyv;
                Assert.AreEqual("((87)4)", v.x);
                Assert.AreEqual("((87)4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((87)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "(98)", null, "(0-9)", "(22)");
                var v = ov.swizzle.vvzz;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(22)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-59)", "((90)-7)", "((9-5)-2)", "(-85)", "7");
                var v = ov.swizzle.vvzzx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((9-5)-2)", v.z);
                Assert.AreEqual("((9-5)-2)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-77)9)", "((8-5)5)", "-9", "(1-9)");
                var v = ov.swizzle.vvzzy;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("((8-5)5)", v.z);
                Assert.AreEqual("((8-5)5)", v.w);
                Assert.AreEqual("((-77)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((92)-9)", "((-55)-5)", "((1-6)-8)", "(-3-8)", "(-6-4)");
                var v = ov.swizzle.vvzzz;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("((1-6)-8)", v.z);
                Assert.AreEqual("((1-6)-8)", v.w);
                Assert.AreEqual("((1-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-37)", "-3", "(-37)", "(-37)");
                var v = ov.swizzle.vvzzw;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("((86)2)", "((59)-3)", "0", "", "((59)-3)");
                var v = ov.swizzle.vvzzv;
                Assert.AreEqual("((59)-3)", v.x);
                Assert.AreEqual("((59)-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((59)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-5)-6)", "", "((-89)7)", "(2-8)", "-2");
                var v = ov.swizzle.vvzw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-89)7)", v.z);
                Assert.AreEqual("(2-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((-49)-3)", "(-4-6)", "(-4-6)", "((-49)-3)", "(-4-6)");
                var v = ov.swizzle.vvzwx;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("((-49)-3)", v.w);
                Assert.AreEqual("((-49)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-1)-7)", "((58)-8)", "", "((-4-3)-9)", "(-32)");
                var v = ov.swizzle.vvzwy;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-4-3)-9)", v.w);
                Assert.AreEqual("((58)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((47)-5)", null, "(-8-8)", "5", null);
                var v = ov.swizzle.vvzwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)1)", "8", "-7", "-7", "((-37)-5)");
                var v = ov.swizzle.vvzww;
                Assert.AreEqual("((-37)-5)", v.x);
                Assert.AreEqual("((-37)-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-66)", "-5", "((2-9)-6)", "((2-9)-6)", "(-66)");
                var v = ov.swizzle.vvzwv;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("((2-9)-6)", v.z);
                Assert.AreEqual("((2-9)-6)", v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)-2)", null, "((8-1)-4)", "3", "((8-1)-4)");
                var v = ov.swizzle.vvzv;
                Assert.AreEqual("((8-1)-4)", v.x);
                Assert.AreEqual("((8-1)-4)", v.y);
                Assert.AreEqual("((8-1)-4)", v.z);
                Assert.AreEqual("((8-1)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((32)-5)", "", "-3", "5", "-3");
                var v = ov.swizzle.vvzvx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((32)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((56)9)", "9", "(05)", null);
                var v = ov.swizzle.vvzvy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((56)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-10)-6)", "((-7-2)-1)", null, "-1", "-1");
                var v = ov.swizzle.vvzvz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, null, "((-28)-5)", "((4-9)5)");
                var v = ov.swizzle.vvzvw;
                Assert.AreEqual("((4-9)5)", v.x);
                Assert.AreEqual("((4-9)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((4-9)5)", v.w);
                Assert.AreEqual("((-28)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((9-1)-4)", "(48)", "-7", "(-3-9)");
                var v = ov.swizzle.vvzvv;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "((-6-7)-3)", "7", "((83)9)", "((-6-7)-3)");
                var v = ov.swizzle.vvw;
                Assert.AreEqual("((-6-7)-3)", v.x);
                Assert.AreEqual("((-6-7)-3)", v.y);
                Assert.AreEqual("((83)9)", v.z);
            }
            {
                var ov = new gvec5<string>(null, null, "4", "-1", "(-34)");
                var v = ov.swizzle.vvwx;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-1-6)-7)", "-4", "(-50)", "((-1-6)-7)", "-4");
                var v = ov.swizzle.vvwxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-1-6)-7)", v.z);
                Assert.AreEqual("((-1-6)-7)", v.w);
                Assert.AreEqual("((-1-6)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-53)", "((-46)-7)", "", "");
                var v = ov.swizzle.vvwxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-1)", "", "", "(96)", "(-7-1)");
                var v = ov.swizzle.vvwxz;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-72)", "-6", "((-98)2)", null);
                var v = ov.swizzle.vvwxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-98)2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-98)2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "((-49)0)", "((2-2)-1)", "(1-9)");
                var v = ov.swizzle.vvwxv;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("((2-2)-1)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(8-3)", null, "-4", "(-23)");
                var v = ov.swizzle.vvwy;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(8-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((59)-1)", "((72)-7)", "((59)-1)", "9", "(-50)");
                var v = ov.swizzle.vvwyx;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((72)-7)", v.w);
                Assert.AreEqual("((59)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-1)", "(49)", "9", "");
                var v = ov.swizzle.vvwyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("(0-1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-8-9)-6)", null, "(5-1)", "(-90)");
                var v = ov.swizzle.vvwyz;
                Assert.AreEqual("(-90)", v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("((-8-9)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-1", "(-8-4)", "", "(-8-4)");
                var v = ov.swizzle.vvwyw;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("(-8-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(50)", null, "((42)-5)", "((42)-5)", "((68)2)");
                var v = ov.swizzle.vvwyv;
                Assert.AreEqual("((68)2)", v.x);
                Assert.AreEqual("((68)2)", v.y);
                Assert.AreEqual("((42)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((68)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((73)3)", "((73)3)", "(8-2)", null, "-1");
                var v = ov.swizzle.vvwz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(8-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-5-5)7)", "", "", "1", "-8");
                var v = ov.swizzle.vvwzx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-5)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "((-48)-6)", "-2", "(30)", "((-48)-6)");
                var v = ov.swizzle.vvwzy;
                Assert.AreEqual("((-48)-6)", v.x);
                Assert.AreEqual("((-48)-6)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-48)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-82)", "9", "(-82)", null);
                var v = ov.swizzle.vvwzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "(-5-5)", "", "(-5-5)", "((00)-6)");
                var v = ov.swizzle.vvwzw;
                Assert.AreEqual("((00)-6)", v.x);
                Assert.AreEqual("((00)-6)", v.y);
                Assert.AreEqual("(-5-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(4-3)", "((-45)-5)", "((-76)-3)", "((-76)-3)");
                var v = ov.swizzle.vvwzv;
                Assert.AreEqual("((-76)-3)", v.x);
                Assert.AreEqual("((-76)-3)", v.y);
                Assert.AreEqual("((-76)-3)", v.z);
                Assert.AreEqual("((-45)-5)", v.w);
                Assert.AreEqual("((-76)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-8)", "-9", "-5", null, null);
                var v = ov.swizzle.vvww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-5-7)6)", "(-4-8)", "((18)-8)", "", "(6-5)");
                var v = ov.swizzle.vvwwx;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "-6", "((92)-8)", "((92)-8)");
                var v = ov.swizzle.vvwwy;
                Assert.AreEqual("((92)-8)", v.x);
                Assert.AreEqual("((92)-8)", v.y);
                Assert.AreEqual("((92)-8)", v.z);
                Assert.AreEqual("((92)-8)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(4-1)", "(-76)", "", "2", "((5-2)-1)");
                var v = ov.swizzle.vvwwz;
                Assert.AreEqual("((5-2)-1)", v.x);
                Assert.AreEqual("((5-2)-1)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((37)8)", "((37)8)", "(55)", "-1");
                var v = ov.swizzle.vvwww;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)6)", "((-8-9)3)", "(61)", "((48)-5)", "0");
                var v = ov.swizzle.vvwwv;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((48)-5)", v.z);
                Assert.AreEqual("((48)-5)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-68)-7)", "(66)", "0", "", "((6-5)-4)");
                var v = ov.swizzle.vvwv;
                Assert.AreEqual("((6-5)-4)", v.x);
                Assert.AreEqual("((6-5)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-5)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((88)-1)", "(-27)", "-8", "((-62)-2)", "");
                var v = ov.swizzle.vvwvx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-62)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((88)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "((-87)-1)", "-9", "-9", "((03)-4)");
                var v = ov.swizzle.vvwvy;
                Assert.AreEqual("((03)-4)", v.x);
                Assert.AreEqual("((03)-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((03)-4)", v.w);
                Assert.AreEqual("((-87)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(5-2)", "((6-4)8)", "", null);
                var v = ov.swizzle.vvwvz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((13)-8)", "((-63)0)", "8", "8", "((13)-8)");
                var v = ov.swizzle.vvwvw;
                Assert.AreEqual("((13)-8)", v.x);
                Assert.AreEqual("((13)-8)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((13)-8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-5)", "-6", "((-72)4)", null, "((-72)4)");
                var v = ov.swizzle.vvwvv;
                Assert.AreEqual("((-72)4)", v.x);
                Assert.AreEqual("((-72)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-72)4)", v.w);
                Assert.AreEqual("((-72)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-2-9)-7)", "", "(4-6)", "((0-1)-6)");
                var v = ov.swizzle.vvv;
                Assert.AreEqual("((0-1)-6)", v.x);
                Assert.AreEqual("((0-1)-6)", v.y);
                Assert.AreEqual("((0-1)-6)", v.z);
            }
            {
                var ov = new gvec5<string>("-2", "(2-2)", "((-6-5)0)", null, "(2-2)");
                var v = ov.swizzle.vvvx;
                Assert.AreEqual("(2-2)", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("-5", null, "-5", "(2-4)", "(-28)");
                var v = ov.swizzle.vvvxx;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-3", "9", "((-1-1)0)", "(76)");
                var v = ov.swizzle.vvvxy;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "(-9-2)", "9", null);
                var v = ov.swizzle.vvvxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)-8)", "-9", "", "4", "((-3-3)0)");
                var v = ov.swizzle.vvvxw;
                Assert.AreEqual("((-3-3)0)", v.x);
                Assert.AreEqual("((-3-3)0)", v.y);
                Assert.AreEqual("((-3-3)0)", v.z);
                Assert.AreEqual("((91)-8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "-9", "2", "(84)", "-9");
                var v = ov.swizzle.vvvxv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(73)", "((-81)1)", "-3", "(-8-8)");
                var v = ov.swizzle.vvvy;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("(73)", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "-2", "", "((-35)-2)", "((-6-4)-8)");
                var v = ov.swizzle.vvvyx;
                Assert.AreEqual("((-6-4)-8)", v.x);
                Assert.AreEqual("((-6-4)-8)", v.y);
                Assert.AreEqual("((-6-4)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-9-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-71)6)", "(8-5)", "(14)", "-7");
                var v = ov.swizzle.vvvyy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-71)6)", v.w);
                Assert.AreEqual("((-71)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-6", "", "-6", "((2-2)3)");
                var v = ov.swizzle.vvvyz;
                Assert.AreEqual("((2-2)3)", v.x);
                Assert.AreEqual("((2-2)3)", v.y);
                Assert.AreEqual("((2-2)3)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((1-1)5)", "1", "1", "(-29)");
                var v = ov.swizzle.vvvyw;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("((1-1)5)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-8", "(7-3)", "(19)");
                var v = ov.swizzle.vvvyv;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(19)", v.v);
            }
            {
                var ov = new gvec5<string>("6", null, "-6", null, "");
                var v = ov.swizzle.vvvz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("", "7", "(9-3)", "-5", null);
                var v = ov.swizzle.vvvzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "((-42)5)", "8", "((-42)5)", "(-11)");
                var v = ov.swizzle.vvvzy;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-42)5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(5-2)", "", "((44)-9)", "((44)-9)");
                var v = ov.swizzle.vvvzz;
                Assert.AreEqual("((44)-9)", v.x);
                Assert.AreEqual("((44)-9)", v.y);
                Assert.AreEqual("((44)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "-2", "5", "5", "(-8-8)");
                var v = ov.swizzle.vvvzw;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "((-57)-9)", "-9", "((-32)5)", "-9");
                var v = ov.swizzle.vvvzv;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-67)", "((0-8)-8)", null, "(-67)");
                var v = ov.swizzle.vvvw;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((13)-2)", null, "2", "", "((-7-6)-5)");
                var v = ov.swizzle.vvvwx;
                Assert.AreEqual("((-7-6)-5)", v.x);
                Assert.AreEqual("((-7-6)-5)", v.y);
                Assert.AreEqual("((-7-6)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((13)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)6)", "((-92)8)", "2", "(6-2)", "(71)");
                var v = ov.swizzle.vvvwy;
                Assert.AreEqual("(71)", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("(71)", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("((-92)8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-88)6)", "6", null, "");
                var v = ov.swizzle.vvvwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-4)", "((00)-2)", "7", "((00)-2)", null);
                var v = ov.swizzle.vvvww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((00)-2)", v.w);
                Assert.AreEqual("((00)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-5)", "((77)6)", "-5", "(-2-5)", "((2-9)4)");
                var v = ov.swizzle.vvvwv;
                Assert.AreEqual("((2-9)4)", v.x);
                Assert.AreEqual("((2-9)4)", v.y);
                Assert.AreEqual("((2-9)4)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("((2-9)4)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "(-78)", null, "((-91)0)");
                var v = ov.swizzle.vvvv;
                Assert.AreEqual("((-91)0)", v.x);
                Assert.AreEqual("((-91)0)", v.y);
                Assert.AreEqual("((-91)0)", v.z);
                Assert.AreEqual("((-91)0)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "(-45)", "(79)", "((-3-1)-8)", "(-45)");
                var v = ov.swizzle.vvvvx;
                Assert.AreEqual("(-45)", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("(-45)", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "", "((1-4)-5)", "((-88)4)", "((5-2)-2)");
                var v = ov.swizzle.vvvvy;
                Assert.AreEqual("((5-2)-2)", v.x);
                Assert.AreEqual("((5-2)-2)", v.y);
                Assert.AreEqual("((5-2)-2)", v.z);
                Assert.AreEqual("((5-2)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", "(-21)", "(-5-6)", "((-13)5)");
                var v = ov.swizzle.vvvvz;
                Assert.AreEqual("((-13)5)", v.x);
                Assert.AreEqual("((-13)5)", v.y);
                Assert.AreEqual("((-13)5)", v.z);
                Assert.AreEqual("((-13)5)", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", "((-18)7)", "", "((-1-1)9)", "-8");
                var v = ov.swizzle.vvvvw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-1-1)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-6)-8)", "-8", "((-9-9)1)", "-8", "");
                var v = ov.swizzle.vvvvv;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
        }

        [Test]
        public void rgbaklpq()
        {
            {
                var ov = new gvec5<string>("(74)", "-9", "7", null, null);
                var v = ov.swizzle.rr;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("(74)", v.y);
            }
            {
                var ov = new gvec5<string>(null, "8", null, null, "((12)1)");
                var v = ov.swizzle.rrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("-8", "((78)-3)", "-7", "-8", "(-2-1)");
                var v = ov.swizzle.rrrr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>(null, "7", "(-1-9)", "((-7-9)-6)", "(-77)");
                var v = ov.swizzle.rrrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-42)", "-7", "-6", "(-42)", "-6");
                var v = ov.swizzle.rrrrg;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "4", "", "", "(-95)");
                var v = ov.swizzle.rrrrb;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((71)9)", "(32)", "-2", "(-5-3)");
                var v = ov.swizzle.rrrra;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(2-4)", "((70)6)", "4", "(2-4)", "4");
                var v = ov.swizzle.rrrrk;
                Assert.AreEqual("(2-4)", v.x);
                Assert.AreEqual("(2-4)", v.y);
                Assert.AreEqual("(2-4)", v.z);
                Assert.AreEqual("(2-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-5-6)-7)", "(-77)", "-4", "-4");
                var v = ov.swizzle.rrrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-5-6)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "((-5-7)5)", "((-5-6)7)", null, null);
                var v = ov.swizzle.rrrgr;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual("((-5-7)5)", v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((8-2)9)", "-4", "-7", "((8-2)9)");
                var v = ov.swizzle.rrrgg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((8-2)9)", v.w);
                Assert.AreEqual("((8-2)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)6)", "8", "(8-3)", "(8-3)", "");
                var v = ov.swizzle.rrrgb;
                Assert.AreEqual("((-7-2)6)", v.x);
                Assert.AreEqual("((-7-2)6)", v.y);
                Assert.AreEqual("((-7-2)6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-3", "(59)", "-8", "((-50)-6)");
                var v = ov.swizzle.rrrga;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-6)", null, "-3", "((73)-8)", "8");
                var v = ov.swizzle.rrrgk;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", "-9", "((-4-3)-3)", "(19)", "((-4-3)-3)");
                var v = ov.swizzle.rrrb;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("((-4-3)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("", "0", "(73)", "", "0");
                var v = ov.swizzle.rrrbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", "(9-5)", "(-54)", "0", "((6-5)1)");
                var v = ov.swizzle.rrrbg;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)-7)", "(26)", "-7", "", "(55)");
                var v = ov.swizzle.rrrbb;
                Assert.AreEqual("((-1-4)-7)", v.x);
                Assert.AreEqual("((-1-4)-7)", v.y);
                Assert.AreEqual("((-1-4)-7)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("6", "-9", "-9", "(-6-4)", "(-7-9)");
                var v = ov.swizzle.rrrba;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)-8)", "-2", "(6-2)", "", null);
                var v = ov.swizzle.rrrbk;
                Assert.AreEqual("((6-9)-8)", v.x);
                Assert.AreEqual("((6-9)-8)", v.y);
                Assert.AreEqual("((6-9)-8)", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((3-8)4)", "(5-3)", "(5-3)", "((6-7)2)", "4");
                var v = ov.swizzle.rrra;
                Assert.AreEqual("((3-8)4)", v.x);
                Assert.AreEqual("((3-8)4)", v.y);
                Assert.AreEqual("((3-8)4)", v.z);
                Assert.AreEqual("((6-7)2)", v.w);
            }
            {
                var ov = new gvec5<string>("((66)-7)", "", "(-3-6)", "((81)2)", "-8");
                var v = ov.swizzle.rrrar;
                Assert.AreEqual("((66)-7)", v.x);
                Assert.AreEqual("((66)-7)", v.y);
                Assert.AreEqual("((66)-7)", v.z);
                Assert.AreEqual("((81)2)", v.w);
                Assert.AreEqual("((66)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "((9-1)-9)", "(-3-5)", "((-9-6)-2)");
                var v = ov.swizzle.rrrag;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "", "", null);
                var v = ov.swizzle.rrrab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-4)-9)", "(-57)", "(7-6)", "(-57)", "(7-6)");
                var v = ov.swizzle.rrraa;
                Assert.AreEqual("((8-4)-9)", v.x);
                Assert.AreEqual("((8-4)-9)", v.y);
                Assert.AreEqual("((8-4)-9)", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("(-57)", v.v);
            }
            {
                var ov = new gvec5<string>("(-34)", "((-9-1)-5)", "-8", "(-34)", "(6-3)");
                var v = ov.swizzle.rrrak;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("(-34)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-4)3)", "((-6-2)0)", "-7", "(68)", "(4-1)");
                var v = ov.swizzle.rrrk;
                Assert.AreEqual("((-5-4)3)", v.x);
                Assert.AreEqual("((-5-4)3)", v.y);
                Assert.AreEqual("((-5-4)3)", v.z);
                Assert.AreEqual("(4-1)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "9", "(8-7)", "9", "9");
                var v = ov.swizzle.rrrkr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(58)", "(66)", "-4", "(66)", "-4");
                var v = ov.swizzle.rrrkg;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-25)-9)", "(-6-3)", "(-7-2)", "((01)-6)");
                var v = ov.swizzle.rrrkb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((01)-6)", v.w);
                Assert.AreEqual("(-6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-6)", "", "-8", "-8", null);
                var v = ov.swizzle.rrrka;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "-8", "-8", "(8-8)", "(3-8)");
                var v = ov.swizzle.rrrkk;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)-5)", "", "9", "", "(-88)");
                var v = ov.swizzle.rrg;
                Assert.AreEqual("((03)-5)", v.x);
                Assert.AreEqual("((03)-5)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("-3", "(5-1)", "((-5-3)8)", "(5-1)", "-3");
                var v = ov.swizzle.rrgr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "1", "(-52)", "((-2-6)0)", "-8");
                var v = ov.swizzle.rrgrr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-6)", "(25)", null, "(25)", "((75)9)");
                var v = ov.swizzle.rrgrg;
                Assert.AreEqual("((-3-6)-6)", v.x);
                Assert.AreEqual("((-3-6)-6)", v.y);
                Assert.AreEqual("(25)", v.z);
                Assert.AreEqual("((-3-6)-6)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(45)", "((3-4)6)", "(19)", "((4-1)6)");
                var v = ov.swizzle.rrgrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((3-4)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "(1-5)", "-3", "((-91)-3)", "7");
                var v = ov.swizzle.rrgra;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("((-91)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((3-8)4)", "(30)", "-9", "(-9-2)");
                var v = ov.swizzle.rrgrk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((3-8)4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)4)", "-6", "(62)", "-4", "-6");
                var v = ov.swizzle.rrgg;
                Assert.AreEqual("((-5-1)4)", v.x);
                Assert.AreEqual("((-5-1)4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-2)3)", "1", "((88)8)", "(-5-2)", null);
                var v = ov.swizzle.rrggr;
                Assert.AreEqual("((-4-2)3)", v.x);
                Assert.AreEqual("((-4-2)3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-4-2)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-8)-5)", "-1", "", null, "((1-8)-5)");
                var v = ov.swizzle.rrggg;
                Assert.AreEqual("((1-8)-5)", v.x);
                Assert.AreEqual("((1-8)-5)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((32)2)", "((-10)-6)", null, "9", "((32)2)");
                var v = ov.swizzle.rrggb;
                Assert.AreEqual("((32)2)", v.x);
                Assert.AreEqual("((32)2)", v.y);
                Assert.AreEqual("((-10)-6)", v.z);
                Assert.AreEqual("((-10)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-5)", "(-8-5)", "1", "-6", "(1-8)");
                var v = ov.swizzle.rrgga;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("(-8-5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "", "(59)", "(46)");
                var v = ov.swizzle.rrggk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(46)", v.v);
            }
            {
                var ov = new gvec5<string>("(46)", "(-8-4)", null, null, null);
                var v = ov.swizzle.rrgb;
                Assert.AreEqual("(46)", v.x);
                Assert.AreEqual("(46)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "(-1-3)", "(-1-3)", "", "-5");
                var v = ov.swizzle.rrgbr;
                Assert.AreEqual("(-1-3)", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("(-1-3)", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-50)", "-6", "(-3-6)", null);
                var v = ov.swizzle.rrgbg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)6)", "((-41)6)", null, "(12)", "((-41)6)");
                var v = ov.swizzle.rrgbb;
                Assert.AreEqual("((-41)6)", v.x);
                Assert.AreEqual("((-41)6)", v.y);
                Assert.AreEqual("((-41)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((70)7)", "(-60)", "-8", "((-3-4)-9)", "((49)2)");
                var v = ov.swizzle.rrgba;
                Assert.AreEqual("((70)7)", v.x);
                Assert.AreEqual("((70)7)", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-3-4)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-36)9)", "", "((-46)-3)", "((33)-2)", "");
                var v = ov.swizzle.rrgbk;
                Assert.AreEqual("((-36)9)", v.x);
                Assert.AreEqual("((-36)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-46)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "-4", "(-5-9)", "-4");
                var v = ov.swizzle.rrga;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-5-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-38)6)", "(-3-5)", "5", "((2-4)-9)", "");
                var v = ov.swizzle.rrgar;
                Assert.AreEqual("((-38)6)", v.x);
                Assert.AreEqual("((-38)6)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("((2-4)-9)", v.w);
                Assert.AreEqual("((-38)6)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((2-2)0)", "4", "-5", "(52)");
                var v = ov.swizzle.rrgag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((2-2)0)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((2-2)0)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "3", "(-9-1)", "((89)9)", "((1-4)6)");
                var v = ov.swizzle.rrgab;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((89)9)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-57)", "7", "(1-8)", "(58)", "(-57)");
                var v = ov.swizzle.rrgaa;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)5)", "(-98)", "", "-6", "4");
                var v = ov.swizzle.rrgak;
                Assert.AreEqual("((1-1)5)", v.x);
                Assert.AreEqual("((1-1)5)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-44)3)", "-9", "((1-5)2)", "(55)", "2");
                var v = ov.swizzle.rrgk;
                Assert.AreEqual("((-44)3)", v.x);
                Assert.AreEqual("((-44)3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "3", "(4-1)", "2");
                var v = ov.swizzle.rrgkr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-2)8)", "(-4-6)", null, "((-5-2)8)", "");
                var v = ov.swizzle.rrgkg;
                Assert.AreEqual("((-5-2)8)", v.x);
                Assert.AreEqual("((-5-2)8)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", null, "5", "-5", null);
                var v = ov.swizzle.rrgkb;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-75)", "(7-6)", "0", "0");
                var v = ov.swizzle.rrgka;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)-4)", "-6", null, null, "(2-1)");
                var v = ov.swizzle.rrgkk;
                Assert.AreEqual("((9-8)-4)", v.x);
                Assert.AreEqual("((9-8)-4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual("(2-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((06)8)", "3", null, "-2", "((06)8)");
                var v = ov.swizzle.rrb;
                Assert.AreEqual("((06)8)", v.x);
                Assert.AreEqual("((06)8)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("", "(59)", "((-5-5)-9)", "((25)-2)", "(-49)");
                var v = ov.swizzle.rrbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-5)-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((79)7)", "(64)", "((79)7)", "((-64)2)", "");
                var v = ov.swizzle.rrbrr;
                Assert.AreEqual("((79)7)", v.x);
                Assert.AreEqual("((79)7)", v.y);
                Assert.AreEqual("((79)7)", v.z);
                Assert.AreEqual("((79)7)", v.w);
                Assert.AreEqual("((79)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "(-10)", "(8-6)", "(35)");
                var v = ov.swizzle.rrbrg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "-8", "((16)2)", "((37)7)", "((-38)7)");
                var v = ov.swizzle.rrbrb;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("((16)2)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("((16)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "(5-9)", "(5-9)", "(5-9)");
                var v = ov.swizzle.rrbra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "3", "((-79)5)", "((7-8)-8)");
                var v = ov.swizzle.rrbrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((7-8)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-5-6)", "", "1", "(-3-3)");
                var v = ov.swizzle.rrbg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(42)", null, "((00)0)", "((9-5)4)");
                var v = ov.swizzle.rrbgr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(42)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)1)", "(6-2)", "-9", null, null);
                var v = ov.swizzle.rrbgg;
                Assert.AreEqual("((-62)1)", v.x);
                Assert.AreEqual("((-62)1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("(6-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-6-1)5)", "((-58)6)", "");
                var v = ov.swizzle.rrbgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-6-1)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-6-1)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-27)8)", "(17)", "(-37)", "((-27)8)", null);
                var v = ov.swizzle.rrbga;
                Assert.AreEqual("((-27)8)", v.x);
                Assert.AreEqual("((-27)8)", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("((-27)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-5)8)", null, "((82)8)", "((82)8)", null);
                var v = ov.swizzle.rrbgk;
                Assert.AreEqual("((-4-5)8)", v.x);
                Assert.AreEqual("((-4-5)8)", v.y);
                Assert.AreEqual("((82)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-2-9)", "(1-7)", "((-8-2)6)", null, null);
                var v = ov.swizzle.rrbb;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((-8-2)6)", v.z);
                Assert.AreEqual("((-8-2)6)", v.w);
            }
            {
                var ov = new gvec5<string>("((-3-8)9)", "(-43)", "-2", "(7-3)", "(-43)");
                var v = ov.swizzle.rrbbr;
                Assert.AreEqual("((-3-8)9)", v.x);
                Assert.AreEqual("((-3-8)9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-3-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", "((8-3)5)", "((49)9)", "5", "");
                var v = ov.swizzle.rrbbg;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("((49)9)", v.z);
                Assert.AreEqual("((49)9)", v.w);
                Assert.AreEqual("((8-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-18)", "0", "(-18)", "0", "0");
                var v = ov.swizzle.rrbbb;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((8-7)7)", "", "", "((8-7)7)");
                var v = ov.swizzle.rrbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)9)", "((0-1)-1)", "", "(3-6)", "(3-6)");
                var v = ov.swizzle.rrbbk;
                Assert.AreEqual("((-15)9)", v.x);
                Assert.AreEqual("((-15)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-8-6)6)", "((-4-9)3)", "", "");
                var v = ov.swizzle.rrba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-4-9)3)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-9", "((-86)2)", "((-70)-1)", "((-86)2)");
                var v = ov.swizzle.rrbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-86)2)", v.z);
                Assert.AreEqual("((-70)-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)-2)", "-2", "1", "(-7-6)", "((-9-4)-2)");
                var v = ov.swizzle.rrbag;
                Assert.AreEqual("((-9-4)-2)", v.x);
                Assert.AreEqual("((-9-4)-2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-7-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "", "", "-8", "1");
                var v = ov.swizzle.rrbab;
                Assert.AreEqual("(-1-3)", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-94)", "(-53)", "((-4-2)-5)", "((-70)-4)");
                var v = ov.swizzle.rrbaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("((-4-2)-5)", v.w);
                Assert.AreEqual("((-4-2)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "2", "9", "2", "");
                var v = ov.swizzle.rrbak;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)0)", "", null, "(86)", "(86)");
                var v = ov.swizzle.rrbk;
                Assert.AreEqual("((-74)0)", v.x);
                Assert.AreEqual("((-74)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(86)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-7)", "(3-4)", "7", "((-9-2)9)", "(4-1)");
                var v = ov.swizzle.rrbkr;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)-7)", "(-28)", "-2", "-2", null);
                var v = ov.swizzle.rrbkg;
                Assert.AreEqual("((-9-9)-7)", v.x);
                Assert.AreEqual("((-9-9)-7)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec5<string>("(-57)", "((-4-8)-9)", "((16)-2)", "(-97)", "");
                var v = ov.swizzle.rrbkb;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("((16)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((16)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(11)", "((8-6)-7)", "-6", "((6-2)-7)");
                var v = ov.swizzle.rrbka;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((8-6)-7)", v.z);
                Assert.AreEqual("((6-2)-7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)-9)", "(31)", "(-1-3)", "7", "(31)");
                var v = ov.swizzle.rrbkk;
                Assert.AreEqual("((2-6)-9)", v.x);
                Assert.AreEqual("((2-6)-9)", v.y);
                Assert.AreEqual("(-1-3)", v.z);
                Assert.AreEqual("(31)", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "((-41)-3)", "5", "((-8-4)-5)", "((-8-4)-5)");
                var v = ov.swizzle.rra;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("((-8-4)-5)", v.z);
            }
            {
                var ov = new gvec5<string>("((98)-6)", "(-40)", null, null, "((98)-6)");
                var v = ov.swizzle.rrar;
                Assert.AreEqual("((98)-6)", v.x);
                Assert.AreEqual("((98)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((98)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "((21)-6)", "(56)", "((7-7)-8)", "-5");
                var v = ov.swizzle.rrarr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((7-7)-8)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "8", "(2-2)", "((-1-7)-9)", "((-4-1)4)");
                var v = ov.swizzle.rrarg;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual("((-1-7)-9)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "5", "(07)", "(07)");
                var v = ov.swizzle.rrarb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((3-2)7)", "-9", "5", "");
                var v = ov.swizzle.rrara;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((0-5)7)", "((0-5)7)", null, "(4-4)");
                var v = ov.swizzle.rrark;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-8-1)", "(-8-1)", "(-72)", "(-8-1)");
                var v = ov.swizzle.rrag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-72)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(18)", "", "(75)", null);
                var v = ov.swizzle.rragr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "(-44)", "1", "(-46)");
                var v = ov.swizzle.rragg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "(01)", "(30)", "", "");
                var v = ov.swizzle.rragb;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-3)-2)", "(-5-6)", "0", "(-5-6)");
                var v = ov.swizzle.rraga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-6-3)-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "", "((-16)2)", "(-66)", "((-16)2)");
                var v = ov.swizzle.rragk;
                Assert.AreEqual("(-6-7)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-16)2)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", null, "", "-7");
                var v = ov.swizzle.rrab;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(63)", "3", "(8-8)", "(7-7)", "3");
                var v = ov.swizzle.rrabr;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((85)-7)", "(39)", "", "(-22)");
                var v = ov.swizzle.rrabg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("((85)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-6)", "((-4-1)8)", "7", "((-4-1)8)", "((-4-1)8)");
                var v = ov.swizzle.rrabb;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("((-4-1)8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-1)", "(88)", "((-56)-7)", "1", "(-1-1)");
                var v = ov.swizzle.rraba;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-56)-7)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "7", null, "(7-3)");
                var v = ov.swizzle.rrabk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(7-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(54)", "(3-4)", "", "(30)", "((18)0)");
                var v = ov.swizzle.rraa;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("(30)", v.w);
            }
            {
                var ov = new gvec5<string>("((49)0)", null, "((-41)0)", "(86)", "((49)0)");
                var v = ov.swizzle.rraar;
                Assert.AreEqual("((49)0)", v.x);
                Assert.AreEqual("((49)0)", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("((49)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "((9-5)2)", null, "(2-2)", "");
                var v = ov.swizzle.rraag;
                Assert.AreEqual("(2-2)", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("(2-2)", v.w);
                Assert.AreEqual("((9-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)-9)", "(-39)", "(-63)", null, "((-5-7)-9)");
                var v = ov.swizzle.rraab;
                Assert.AreEqual("((-5-7)-9)", v.x);
                Assert.AreEqual("((-5-7)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)9)", null, "(-5-5)", "1", "((-11)9)");
                var v = ov.swizzle.rraaa;
                Assert.AreEqual("((-11)9)", v.x);
                Assert.AreEqual("((-11)9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-2-7)1)", null, "(-10)", "2");
                var v = ov.swizzle.rraak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "6", "6", "6");
                var v = ov.swizzle.rrak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "(01)", "-3", "3", "((4-4)9)");
                var v = ov.swizzle.rrakr;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((4-4)9)", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "((-86)7)", "((9-2)7)", "(20)", "((9-2)7)");
                var v = ov.swizzle.rrakg;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("((9-2)7)", v.w);
                Assert.AreEqual("((-86)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", null, "7", "(43)");
                var v = ov.swizzle.rrakb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-13)-7)", "((-13)-7)", "", "(87)", "((-13)-7)");
                var v = ov.swizzle.rraka;
                Assert.AreEqual("((-13)-7)", v.x);
                Assert.AreEqual("((-13)-7)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("((-13)-7)", v.w);
                Assert.AreEqual("(87)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-76)", "(-43)", null, "((-62)-8)");
                var v = ov.swizzle.rrakk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-62)-8)", v.w);
                Assert.AreEqual("((-62)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "(-6-4)", "(01)", "(8-5)");
                var v = ov.swizzle.rrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(8-5)", v.z);
            }
            {
                var ov = new gvec5<string>("(82)", "", "((5-5)2)", "(-40)", "-6");
                var v = ov.swizzle.rrkr;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(82)", v.w);
            }
            {
                var ov = new gvec5<string>("((-23)-9)", "((-6-4)1)", "(-5-2)", "(-1-6)", "(-5-2)");
                var v = ov.swizzle.rrkrr;
                Assert.AreEqual("((-23)-9)", v.x);
                Assert.AreEqual("((-23)-9)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("((-23)-9)", v.w);
                Assert.AreEqual("((-23)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)-7)", "5", "", "-4", "((1-9)-4)");
                var v = ov.swizzle.rrkrg;
                Assert.AreEqual("((-66)-7)", v.x);
                Assert.AreEqual("((-66)-7)", v.y);
                Assert.AreEqual("((1-9)-4)", v.z);
                Assert.AreEqual("((-66)-7)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((3-7)9)", "(0-5)", "-6", "(-26)", "(-26)");
                var v = ov.swizzle.rrkrb;
                Assert.AreEqual("((3-7)9)", v.x);
                Assert.AreEqual("((3-7)9)", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("((3-7)9)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-8)", "(-2-8)", "((-3-2)1)", "", "(-2-8)");
                var v = ov.swizzle.rrkra;
                Assert.AreEqual("((93)-8)", v.x);
                Assert.AreEqual("((93)-8)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("((93)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "((-32)-9)", "((73)-8)", "((73)-8)");
                var v = ov.swizzle.rrkrk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((73)-8)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((73)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "1", "1", "1", "(-92)");
                var v = ov.swizzle.rrkg;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("(01)", "(-8-6)", "", null, "-4");
                var v = ov.swizzle.rrkgr;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("(01)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-6)3)", "((72)4)", "((9-2)-4)", "-5", "((9-2)-4)");
                var v = ov.swizzle.rrkgg;
                Assert.AreEqual("((-6-6)3)", v.x);
                Assert.AreEqual("((-6-6)3)", v.y);
                Assert.AreEqual("((9-2)-4)", v.z);
                Assert.AreEqual("((72)4)", v.w);
                Assert.AreEqual("((72)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((2-8)-9)", "", "", "(30)");
                var v = ov.swizzle.rrkgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("((2-8)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-40)2)", "(70)", "(12)", "(70)");
                var v = ov.swizzle.rrkga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("((-40)2)", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "((-36)0)", "(-84)", "((-36)0)");
                var v = ov.swizzle.rrkgk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-36)0)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-36)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((50)-5)", "(98)", "");
                var v = ov.swizzle.rrkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((50)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-41)6)", "((-41)6)", "((6-3)5)", "((6-3)5)", "7");
                var v = ov.swizzle.rrkbr;
                Assert.AreEqual("((-41)6)", v.x);
                Assert.AreEqual("((-41)6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((6-3)5)", v.w);
                Assert.AreEqual("((-41)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "((-67)1)", "((3-1)-4)", "((3-1)-4)", "1");
                var v = ov.swizzle.rrkbg;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((3-1)-4)", v.w);
                Assert.AreEqual("((-67)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-4-9)-3)", "-4", "((-4-4)-7)", "-3");
                var v = ov.swizzle.rrkbb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-3)-2)", "((-94)-2)", "((-8-3)-2)", "((-3-6)6)", null);
                var v = ov.swizzle.rrkba;
                Assert.AreEqual("((-8-3)-2)", v.x);
                Assert.AreEqual("((-8-3)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-3)-2)", v.w);
                Assert.AreEqual("((-3-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)-2)", "(3-4)", "-2", "(3-4)", "-8");
                var v = ov.swizzle.rrkbk;
                Assert.AreEqual("((-42)-2)", v.x);
                Assert.AreEqual("((-42)-2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", null, "(-67)", null, "((-8-3)3)");
                var v = ov.swizzle.rrka;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("((-8-3)3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-35)-4)", "-4", "((-51)2)", "(-69)", "((-35)-4)");
                var v = ov.swizzle.rrkar;
                Assert.AreEqual("((-35)-4)", v.x);
                Assert.AreEqual("((-35)-4)", v.y);
                Assert.AreEqual("((-35)-4)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("((-35)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-43)", "((-8-8)-9)", "8", "-2");
                var v = ov.swizzle.rrkag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-43)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-7)4)", "9", "9", "3", "(1-3)");
                var v = ov.swizzle.rrkab;
                Assert.AreEqual("((-6-7)4)", v.x);
                Assert.AreEqual("((-6-7)4)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((58)3)", "", "3", "((4-8)1)");
                var v = ov.swizzle.rrkaa;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((4-8)1)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "(7-2)", "(41)", "0", "((05)8)");
                var v = ov.swizzle.rrkak;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("((05)8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((05)8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((65)0)", "(-72)", "(-72)", "");
                var v = ov.swizzle.rrkk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-8)9)", "", "-6", null, "7");
                var v = ov.swizzle.rrkkr;
                Assert.AreEqual("((-7-8)9)", v.x);
                Assert.AreEqual("((-7-8)9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((-7-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "-3", "3", "-3", "((85)-8)");
                var v = ov.swizzle.rrkkg;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("((85)-8)", v.z);
                Assert.AreEqual("((85)-8)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(55)", "((6-6)3)", null, "(55)", "(55)");
                var v = ov.swizzle.rrkkb;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(2-9)", null, "((1-3)4)", "", "((76)8)");
                var v = ov.swizzle.rrkka;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("((76)8)", v.z);
                Assert.AreEqual("((76)8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "-1", "(-7-6)", "", "");
                var v = ov.swizzle.rrkkk;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-3", "-3", "(-6-4)", "3");
                var v = ov.swizzle.rg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-3", v.y);
            }
            {
                var ov = new gvec5<string>("-1", "((-7-3)-2)", null, "(2-2)", "((-7-3)-2)");
                var v = ov.swizzle.rgr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-7-3)-2)", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>("7", "(-55)", "-2", "(-9-8)", "(-9-8)");
                var v = ov.swizzle.rgrr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("(-78)", "-1", "(0-1)", "((52)-2)", "");
                var v = ov.swizzle.rgrrr;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("(-78)", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)5)", "(14)", "((55)-2)", "((55)-2)", "((-47)5)");
                var v = ov.swizzle.rgrrg;
                Assert.AreEqual("((-47)5)", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("((-47)5)", v.z);
                Assert.AreEqual("((-47)5)", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((65)-3)", "((65)-3)", "(-75)", "(-75)");
                var v = ov.swizzle.rgrrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((65)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((65)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(51)", "(0-5)", null, "7");
                var v = ov.swizzle.rgrra;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, null, "", "((-87)-7)");
                var v = ov.swizzle.rgrrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-87)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((63)-8)", "0", "(06)");
                var v = ov.swizzle.rgrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("7", "7", "(4-9)", "((32)0)", "-7");
                var v = ov.swizzle.rgrgr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((3-6)-3)", "1", "(-66)", "", "((-79)-5)");
                var v = ov.swizzle.rgrgg;
                Assert.AreEqual("((3-6)-3)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((3-6)-3)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)-2)", "2", "(64)", "((4-1)9)", "6");
                var v = ov.swizzle.rgrgb;
                Assert.AreEqual("((-15)-2)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-15)-2)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "5", "-9", "((-42)4)", "");
                var v = ov.swizzle.rgrga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-42)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-13)", "((9-5)5)", "((62)2)", "7", "(-80)");
                var v = ov.swizzle.rgrgk;
                Assert.AreEqual("(-13)", v.x);
                Assert.AreEqual("((9-5)5)", v.y);
                Assert.AreEqual("(-13)", v.z);
                Assert.AreEqual("((9-5)5)", v.w);
                Assert.AreEqual("(-80)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "1", "(3-9)", "(-3-6)");
                var v = ov.swizzle.rgrb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("(-4-3)", "((3-5)-8)", "((-95)-9)", "((3-5)-8)", "(-35)");
                var v = ov.swizzle.rgrbr;
                Assert.AreEqual("(-4-3)", v.x);
                Assert.AreEqual("((3-5)-8)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("((-95)-9)", v.w);
                Assert.AreEqual("(-4-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((54)9)", "-2", "-2", "((56)-3)", "((54)9)");
                var v = ov.swizzle.rgrbg;
                Assert.AreEqual("((54)9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((54)9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(48)", null, "(9-2)", "((-57)-3)");
                var v = ov.swizzle.rgrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "(2-1)", "", "((-36)-8)");
                var v = ov.swizzle.rgrba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "(1-5)", "6", "((3-6)3)", "8");
                var v = ov.swizzle.rgrbk;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-28)", "(-12)", "", "((11)-6)");
                var v = ov.swizzle.rgra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(94)", null, "(94)", "((32)2)", "");
                var v = ov.swizzle.rgrar;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("((32)2)", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "6", "6", "6", "-6");
                var v = ov.swizzle.rgrag;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "((-2-9)3)", null, "-8", "-9");
                var v = ov.swizzle.rgrab;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("((-2-9)3)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((1-5)1)", "((-53)8)", "((-53)8)", "((1-5)1)");
                var v = ov.swizzle.rgraa;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((1-5)1)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-53)8)", v.w);
                Assert.AreEqual("((-53)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((95)-8)", "(-8-8)", "-7");
                var v = ov.swizzle.rgrak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-91)-3)", "((-91)-3)", "(-55)", "((32)-9)", "6");
                var v = ov.swizzle.rgrk;
                Assert.AreEqual("((-91)-3)", v.x);
                Assert.AreEqual("((-91)-3)", v.y);
                Assert.AreEqual("((-91)-3)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("7", null, "(-5-3)", "7", "0");
                var v = ov.swizzle.rgrkr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", null, null, "-2", "(-72)");
                var v = ov.swizzle.rgrkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", "(7-2)", null, "((3-4)1)", "(9-4)");
                var v = ov.swizzle.rgrkb;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(0-1)", "-5", "6", "((79)-3)", "6");
                var v = ov.swizzle.rgrka;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((79)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((37)-8)", "((37)-8)", "-4", "((-7-6)2)", "1");
                var v = ov.swizzle.rgrkk;
                Assert.AreEqual("((37)-8)", v.x);
                Assert.AreEqual("((37)-8)", v.y);
                Assert.AreEqual("((37)-8)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-35)9)", "((6-7)8)", "7", "((-35)9)");
                var v = ov.swizzle.rgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-35)9)", v.y);
                Assert.AreEqual("((-35)9)", v.z);
            }
            {
                var ov = new gvec5<string>("8", null, "0", "(47)", "((-6-9)8)");
                var v = ov.swizzle.rggr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("(06)", "(06)", "((-89)-4)", "((-5-1)0)", "((-5-1)0)");
                var v = ov.swizzle.rggrr;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("(06)", v.z);
                Assert.AreEqual("(06)", v.w);
                Assert.AreEqual("(06)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-4", "-4", "-4");
                var v = ov.swizzle.rggrg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(9-9)", "", "6", "6");
                var v = ov.swizzle.rggrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(71)", "9", "((-10)9)", "(71)");
                var v = ov.swizzle.rggra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("(71)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-10)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((13)6)", null, "", null);
                var v = ov.swizzle.rggrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((13)6)", v.y);
                Assert.AreEqual("((13)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((05)-1)", "", "((05)-1)", "(7-8)", null);
                var v = ov.swizzle.rggg;
                Assert.AreEqual("((05)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-60)6)", "9", "3", "", "9");
                var v = ov.swizzle.rgggr;
                Assert.AreEqual("((-60)6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-60)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "(-91)", "((99)-6)", null, "(-21)");
                var v = ov.swizzle.rgggg;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("(25)", "((61)-5)", "(25)", "((6-4)0)", "((61)-5)");
                var v = ov.swizzle.rgggb;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual("((61)-5)", v.y);
                Assert.AreEqual("((61)-5)", v.z);
                Assert.AreEqual("((61)-5)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "8", "((-64)-5)", "(-29)");
                var v = ov.swizzle.rggga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-64)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "5", "(19)", "(-30)", "((-94)-9)");
                var v = ov.swizzle.rgggk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-94)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(54)", "-9", "((-8-2)3)", "-6", null);
                var v = ov.swizzle.rggb;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-8-2)3)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "((-9-8)4)", "", "3", "(-50)");
                var v = ov.swizzle.rggbr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-9-8)4)", v.y);
                Assert.AreEqual("((-9-8)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((93)-6)", "((-14)1)", null, null);
                var v = ov.swizzle.rggbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((93)-6)", v.y);
                Assert.AreEqual("((93)-6)", v.z);
                Assert.AreEqual("((-14)1)", v.w);
                Assert.AreEqual("((93)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-8)", "((7-8)1)", "((7-8)1)", "((-45)-3)", "((-45)-3)");
                var v = ov.swizzle.rggbb;
                Assert.AreEqual("((97)-8)", v.x);
                Assert.AreEqual("((7-8)1)", v.y);
                Assert.AreEqual("((7-8)1)", v.z);
                Assert.AreEqual("((7-8)1)", v.w);
                Assert.AreEqual("((7-8)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)7)", "(-4-1)", "((1-1)3)", "((66)-7)", "((66)-7)");
                var v = ov.swizzle.rggba;
                Assert.AreEqual("((-8-2)7)", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("((1-1)3)", v.w);
                Assert.AreEqual("((66)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(77)", "((-2-3)-8)", null, "((-74)6)", "((-2-3)-8)");
                var v = ov.swizzle.rggbk;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual("((-2-3)-8)", v.y);
                Assert.AreEqual("((-2-3)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-2-3)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((25)7)", "", "((-5-6)5)", "1", "0");
                var v = ov.swizzle.rgga;
                Assert.AreEqual("((25)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("3", null, "3", "2", "((-55)7)");
                var v = ov.swizzle.rggar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-7)2)", "((74)1)", "(-69)", "-3", "-1");
                var v = ov.swizzle.rggag;
                Assert.AreEqual("((-6-7)2)", v.x);
                Assert.AreEqual("((74)1)", v.y);
                Assert.AreEqual("((74)1)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((74)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-4-3)8)", "((-4-3)8)", "(49)", "(-50)");
                var v = ov.swizzle.rggab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-3)8)", v.y);
                Assert.AreEqual("((-4-3)8)", v.z);
                Assert.AreEqual("(49)", v.w);
                Assert.AreEqual("((-4-3)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-1)", "(-2-2)", "-1", "((-5-9)9)", "(-2-2)");
                var v = ov.swizzle.rggaa;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("((-5-9)9)", v.w);
                Assert.AreEqual("((-5-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-37)2)", "((-99)-6)", "-4");
                var v = ov.swizzle.rggak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-99)-6)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)0)", "((0-4)-4)", "((0-4)-4)", "(4-7)", "(8-9)");
                var v = ov.swizzle.rggk;
                Assert.AreEqual("((-84)0)", v.x);
                Assert.AreEqual("((0-4)-4)", v.y);
                Assert.AreEqual("((0-4)-4)", v.z);
                Assert.AreEqual("(8-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((66)7)", "(-7-3)", "4", "((66)7)", "((-6-8)9)");
                var v = ov.swizzle.rggkr;
                Assert.AreEqual("((66)7)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("((-6-8)9)", v.w);
                Assert.AreEqual("((66)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-6)", "(6-6)", "((-5-7)9)", "(7-6)");
                var v = ov.swizzle.rggkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("(7-6)", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-7-5)8)", "((-6-5)-3)", "-2", "(-54)");
                var v = ov.swizzle.rggkb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-7-5)8)", v.y);
                Assert.AreEqual("((-7-5)8)", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("((-6-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "-8", "(29)", "((13)4)");
                var v = ov.swizzle.rggka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((13)4)", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-8)9)", "((68)6)", "(-1-7)", "2", "7");
                var v = ov.swizzle.rggkk;
                Assert.AreEqual("((-8-8)9)", v.x);
                Assert.AreEqual("((68)6)", v.y);
                Assert.AreEqual("((68)6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-6-9)", "(39)", "((1-6)-8)", "0");
                var v = ov.swizzle.rgb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("(39)", v.z);
            }
            {
                var ov = new gvec5<string>("", "((74)0)", "2", "(20)", "((-4-8)2)");
                var v = ov.swizzle.rgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((74)0)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((54)-6)", "-8", "-4", "", null);
                var v = ov.swizzle.rgbrr;
                Assert.AreEqual("((54)-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((54)-6)", v.w);
                Assert.AreEqual("((54)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "((67)-8)", "(6-1)", "((-1-8)-1)", "((-1-8)-1)");
                var v = ov.swizzle.rgbrg;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("((67)-8)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("(6-1)", v.w);
                Assert.AreEqual("((67)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "5", "(-5-4)", null, null);
                var v = ov.swizzle.rgbrb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-5-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((9-1)-7)", "((-7-5)4)", "((-7-5)4)", "1");
                var v = ov.swizzle.rgbra;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((9-1)-7)", v.y);
                Assert.AreEqual("((-7-5)4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-7-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-87)-5)", "8", "6", "(15)", null);
                var v = ov.swizzle.rgbrk;
                Assert.AreEqual("((-87)-5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-87)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(4-9)", null, "7", null, "((24)-2)");
                var v = ov.swizzle.rgbg;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(19)", "4", "-1", "(1-4)", "6");
                var v = ov.swizzle.rgbgr;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(19)", v.v);
            }
            {
                var ov = new gvec5<string>("((-21)2)", "(65)", "-3", "((-21)2)", "-3");
                var v = ov.swizzle.rgbgg;
                Assert.AreEqual("((-21)2)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(65)", v.w);
                Assert.AreEqual("(65)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-9-6)0)", "(-8-9)", "(2-7)", "");
                var v = ov.swizzle.rgbgb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-9-6)0)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("((-9-6)0)", v.w);
                Assert.AreEqual("(-8-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "8", "((-62)7)", "((1-6)5)", "((45)4)");
                var v = ov.swizzle.rgbga;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-62)7)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((1-6)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-9", "((70)-1)", "((70)-1)");
                var v = ov.swizzle.rgbgk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((70)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-45)", "5", "((3-2)5)", "(-12)");
                var v = ov.swizzle.rgbb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("(26)", "(26)", "((02)-1)", "-4", "((38)6)");
                var v = ov.swizzle.rgbbr;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("(26)", v.y);
                Assert.AreEqual("((02)-1)", v.z);
                Assert.AreEqual("((02)-1)", v.w);
                Assert.AreEqual("(26)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "(-6-7)", "(-6-7)", "-5", "");
                var v = ov.swizzle.rgbbg;
                Assert.AreEqual("(-6-7)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "-9", "((-32)-1)", "((-6-9)9)");
                var v = ov.swizzle.rgbbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-5", "8", "0", "8");
                var v = ov.swizzle.rgbba;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "((12)-8)", "((-4-4)7)", "(-8-3)", "((12)-8)");
                var v = ov.swizzle.rgbbk;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((12)-8)", v.y);
                Assert.AreEqual("((-4-4)7)", v.z);
                Assert.AreEqual("((-4-4)7)", v.w);
                Assert.AreEqual("((12)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-87)3)", "(32)", "((3-7)6)", null, "(-2-3)");
                var v = ov.swizzle.rgba;
                Assert.AreEqual("((-87)3)", v.x);
                Assert.AreEqual("(32)", v.y);
                Assert.AreEqual("((3-7)6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-3", "(-19)", "-3", "6", "((-66)-7)");
                var v = ov.swizzle.rgbar;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "(-89)", "(0-1)", "(0-1)", "9");
                var v = ov.swizzle.rgbag;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "7", "((71)-8)", "7", null);
                var v = ov.swizzle.rgbab;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((71)-8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((71)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "7", null, "1");
                var v = ov.swizzle.rgbaa;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-5-6)", "1", "", "((9-7)9)");
                var v = ov.swizzle.rgbak;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((9-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((98)2)", "((62)-8)", "(-3-5)", "(-9-9)");
                var v = ov.swizzle.rgbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((98)2)", v.y);
                Assert.AreEqual("((62)-8)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-8)", "", "", "(90)", "");
                var v = ov.swizzle.rgbkr;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(54)", "", "(54)", "", "((-91)-7)");
                var v = ov.swizzle.rgbkg;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("((-91)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "-6", "((-3-3)-4)", "((3-7)7)");
                var v = ov.swizzle.rgbkb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((3-7)7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "((01)1)", "((-54)3)", "((-20)-6)", "((-54)3)");
                var v = ov.swizzle.rgbka;
                Assert.AreEqual("(-1-5)", v.x);
                Assert.AreEqual("((01)1)", v.y);
                Assert.AreEqual("((-54)3)", v.z);
                Assert.AreEqual("((-54)3)", v.w);
                Assert.AreEqual("((-20)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)1)", "((-9-5)1)", "-6", "((63)7)", "((-9-5)1)");
                var v = ov.swizzle.rgbkk;
                Assert.AreEqual("((-9-5)1)", v.x);
                Assert.AreEqual("((-9-5)1)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-9-5)1)", v.w);
                Assert.AreEqual("((-9-5)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-6)", null, "-4", "-4", "-2");
                var v = ov.swizzle.rga;
                Assert.AreEqual("(9-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec5<string>("4", "((-42)7)", "(-2-4)", "((77)-2)", "(02)");
                var v = ov.swizzle.rgar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-42)7)", v.y);
                Assert.AreEqual("((77)-2)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("6", "-6", "", "((3-8)-1)", "(8-6)");
                var v = ov.swizzle.rgarr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((3-8)-1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)-8)", "(-3-8)", null, "((-1-9)-8)", "(-8-5)");
                var v = ov.swizzle.rgarg;
                Assert.AreEqual("((-5-7)-8)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("((-1-9)-8)", v.z);
                Assert.AreEqual("((-5-7)-8)", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-60)5)", "((3-1)7)", "((3-1)7)", "(8-2)", "(8-2)");
                var v = ov.swizzle.rgarb;
                Assert.AreEqual("((-60)5)", v.x);
                Assert.AreEqual("((3-1)7)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("((-60)5)", v.w);
                Assert.AreEqual("((3-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)6)", "3", "", "6", "((-5-8)6)");
                var v = ov.swizzle.rgara;
                Assert.AreEqual("((-5-8)6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-5-8)6)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)-8)", "(4-8)", "7", "3", null);
                var v = ov.swizzle.rgark;
                Assert.AreEqual("((-42)-8)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-42)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "((-82)-6)", "((1-5)1)", "", "((1-5)1)");
                var v = ov.swizzle.rgag;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("((-82)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-82)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("((38)-7)", "((38)-7)", null, "8", "4");
                var v = ov.swizzle.rgagr;
                Assert.AreEqual("((38)-7)", v.x);
                Assert.AreEqual("((38)-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((38)-7)", v.w);
                Assert.AreEqual("((38)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-2)", "-6", "8", "(7-3)", "(7-3)");
                var v = ov.swizzle.rgagg;
                Assert.AreEqual("((-7-9)-2)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-8", "((48)0)", "-8", "");
                var v = ov.swizzle.rgagb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((48)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-95)-3)", null, "((88)3)", null, "((88)3)");
                var v = ov.swizzle.rgaga;
                Assert.AreEqual("((-95)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(66)", "((40)2)", null, "(14)", "((40)2)");
                var v = ov.swizzle.rgagk;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("((40)2)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("((40)2)", v.w);
                Assert.AreEqual("((40)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-9)", null, "((54)-3)", "((46)0)", "");
                var v = ov.swizzle.rgab;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((46)0)", v.z);
                Assert.AreEqual("((54)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "9", "(-26)", "(-7-5)", "(67)");
                var v = ov.swizzle.rgabr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("(-26)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-27)", "((6-4)4)", "(61)", null, "((6-4)4)");
                var v = ov.swizzle.rgabg;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("((6-4)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(61)", v.w);
                Assert.AreEqual("((6-4)4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(39)", "7", "", "");
                var v = ov.swizzle.rgabb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)4)", "((-4-7)-9)", "", "((-4-7)-9)", "-5");
                var v = ov.swizzle.rgaba;
                Assert.AreEqual("((-8-6)4)", v.x);
                Assert.AreEqual("((-4-7)-9)", v.y);
                Assert.AreEqual("((-4-7)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-4-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(88)", "((-2-9)-1)", "6", "(1-6)");
                var v = ov.swizzle.rgabk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-2-9)-1)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "(2-8)", "(2-8)", "((9-4)-2)");
                var v = ov.swizzle.rgaa;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((78)8)", "((-3-6)7)", "-4", "((9-8)7)");
                var v = ov.swizzle.rgaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((78)8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "-8", "(-33)", "-3", "(-33)");
                var v = ov.swizzle.rgaag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((5-8)7)", "(5-9)", "-1", "(5-9)");
                var v = ov.swizzle.rgaab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-8)7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "3", "((79)0)", "((4-3)-3)", "(-9-2)");
                var v = ov.swizzle.rgaaa;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((4-3)-3)", v.z);
                Assert.AreEqual("((4-3)-3)", v.w);
                Assert.AreEqual("((4-3)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-5)", "", null, "(-20)", "2");
                var v = ov.swizzle.rgaak;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("7", "9", "((-78)-9)", "(-12)", "(-8-2)");
                var v = ov.swizzle.rgak;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-2)9)", "-5", "", "((-11)-9)", "(2-6)");
                var v = ov.swizzle.rgakr;
                Assert.AreEqual("((6-2)9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-11)-9)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("((6-2)9)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((30)1)", "(-6-1)", "(-44)", "(1-6)");
                var v = ov.swizzle.rgakg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((30)1)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("((30)1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "6", null, "6", "6");
                var v = ov.swizzle.rgakb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "((-91)7)", "9", "((11)6)", "9");
                var v = ov.swizzle.rgaka;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("((-91)7)", v.y);
                Assert.AreEqual("((11)6)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((11)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(20)", null, "3", "7", "(20)");
                var v = ov.swizzle.rgakk;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-69)", "((-8-5)2)", "", null);
                var v = ov.swizzle.rgk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("(-80)", "((-82)-5)", "((6-9)3)", "((-80)-4)", "((-82)-5)");
                var v = ov.swizzle.rgkr;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("((-82)-5)", v.y);
                Assert.AreEqual("((-82)-5)", v.z);
                Assert.AreEqual("(-80)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(8-9)", "1", "", "(-82)");
                var v = ov.swizzle.rgkrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-31)-7)", "(-5-8)", "", "((-89)6)", "5");
                var v = ov.swizzle.rgkrg;
                Assert.AreEqual("((-31)-7)", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-31)-7)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(93)", "-3", "", "(93)");
                var v = ov.swizzle.rgkrb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((53)1)", "((-29)9)", "(03)", "((53)1)");
                var v = ov.swizzle.rgkra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((53)1)", v.y);
                Assert.AreEqual("((53)1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec5<string>("((-67)0)", "(-2-4)", "((33)-1)", "8", "7");
                var v = ov.swizzle.rgkrk;
                Assert.AreEqual("((-67)0)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-67)0)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((55)-4)", "6", "((-86)1)", "((-86)1)", "(-34)");
                var v = ov.swizzle.rgkg;
                Assert.AreEqual("((55)-4)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("2", "(01)", "-6", "2", "((-20)-5)");
                var v = ov.swizzle.rgkgr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("((-20)-5)", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("0", "9", "0", "(68)", "-3");
                var v = ov.swizzle.rgkgg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-3-4)1)", "((-3-4)1)", "4", "4");
                var v = ov.swizzle.rgkgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-3-4)1)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-3-4)1)", v.w);
                Assert.AreEqual("((-3-4)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-8)", "(-1-8)", null, "-4");
                var v = ov.swizzle.rgkga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-1-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", "((-5-8)5)", "((-84)5)", "((-5-8)5)", "1");
                var v = ov.swizzle.rgkgk;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("((-5-8)5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-5-8)5)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", "-1", null, "(-78)", "(38)");
                var v = ov.swizzle.rgkb;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-2-5)", "((4-4)-9)", "(6-7)", "(-5-3)", "(6-7)");
                var v = ov.swizzle.rgkbr;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("((4-4)-9)", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("(6-7)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "((-78)-5)", null, "2", "(1-5)");
                var v = ov.swizzle.rgkbg;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("((-78)-5)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-78)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-9)3)", "(-49)", "", null, null);
                var v = ov.swizzle.rgkbb;
                Assert.AreEqual("((-8-9)3)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(22)", "(-9-9)", "2", null, "(-9-9)");
                var v = ov.swizzle.rgkba;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-1-4)-2)", "", "8", "(-76)");
                var v = ov.swizzle.rgkbk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-1-4)-2)", v.y);
                Assert.AreEqual("(-76)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-76)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-6)4)", "((0-1)7)", "", "-6", "");
                var v = ov.swizzle.rgka;
                Assert.AreEqual("((-2-6)4)", v.x);
                Assert.AreEqual("((0-1)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-92)-8)", "5", "((-92)-8)", "6");
                var v = ov.swizzle.rgkar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-92)-8)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-92)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-44)-8)", "3", "3", "-1", null);
                var v = ov.swizzle.rgkag;
                Assert.AreEqual("((-44)-8)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((82)-1)", "((82)-1)", "((-38)9)", null, "-1");
                var v = ov.swizzle.rgkab;
                Assert.AreEqual("((82)-1)", v.x);
                Assert.AreEqual("((82)-1)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-38)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "(47)", "((3-8)8)", "(-71)", "0");
                var v = ov.swizzle.rgkaa;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-47)", "(-4-2)", "", "((-5-6)4)");
                var v = ov.swizzle.rgkak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("((-5-6)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-55)", "-8", "(-55)", "((-4-7)0)", "-8");
                var v = ov.swizzle.rgkk;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((-72)9)", "8", "-9", "(7-7)", "");
                var v = ov.swizzle.rgkkr;
                Assert.AreEqual("((-72)9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-72)9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((02)-6)", "((02)-6)", "-3", "((-91)5)");
                var v = ov.swizzle.rgkkg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((02)-6)", v.y);
                Assert.AreEqual("((-91)5)", v.z);
                Assert.AreEqual("((-91)5)", v.w);
                Assert.AreEqual("((02)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((35)-8)", "(2-5)", "((35)-8)", "(2-5)", "-2");
                var v = ov.swizzle.rgkkb;
                Assert.AreEqual("((35)-8)", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((35)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((81)4)", "", "-9", "((9-6)-3)");
                var v = ov.swizzle.rgkka;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((81)4)", v.y);
                Assert.AreEqual("((9-6)-3)", v.z);
                Assert.AreEqual("((9-6)-3)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(83)", "", "3", "(-77)", "(83)");
                var v = ov.swizzle.rgkkk;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("(82)", "", "((-9-2)-9)", "3", "");
                var v = ov.swizzle.rb;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("((-9-2)-9)", v.y);
            }
            {
                var ov = new gvec5<string>("", "", "(-7-2)", "4", "");
                var v = ov.swizzle.rbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-7-2)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("", "-1", "(9-1)", "(1-9)", "(9-1)");
                var v = ov.swizzle.rbrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(1-9)", null, "(1-9)", "(3-4)", "8");
                var v = ov.swizzle.rbrrr;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("(1-9)", v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-3)2)", "((1-3)2)", "(44)", "((-89)-3)", null);
                var v = ov.swizzle.rbrrg;
                Assert.AreEqual("((1-3)2)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("((1-3)2)", v.z);
                Assert.AreEqual("((1-3)2)", v.w);
                Assert.AreEqual("((1-3)2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((2-3)0)", "9", "((-44)-1)", "9");
                var v = ov.swizzle.rbrrb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-3)", null, "(-83)", null, "((-33)-3)");
                var v = ov.swizzle.rbrra;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("(-3-3)", v.z);
                Assert.AreEqual("(-3-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "(-9-8)", "");
                var v = ov.swizzle.rbrrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", "((50)-7)", "3", "((81)-3)", "-7");
                var v = ov.swizzle.rbrg;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("((50)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("7", "9", "((-82)-2)", "7", null);
                var v = ov.swizzle.rbrgr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-82)-2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-3)5)", "((-1-3)5)", "((91)-1)", "5", "(3-4)");
                var v = ov.swizzle.rbrgg;
                Assert.AreEqual("((-1-3)5)", v.x);
                Assert.AreEqual("((91)-1)", v.y);
                Assert.AreEqual("((-1-3)5)", v.z);
                Assert.AreEqual("((-1-3)5)", v.w);
                Assert.AreEqual("((-1-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-2-4)6)", "((-4-2)-8)", "(38)", "4");
                var v = ov.swizzle.rbrgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-4-2)-8)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-2-4)6)", v.w);
                Assert.AreEqual("((-4-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)9)", null, null, "-4", "(12)");
                var v = ov.swizzle.rbrga;
                Assert.AreEqual("((-8-6)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-8-6)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((17)-6)", "((17)-6)", null, "-1");
                var v = ov.swizzle.rbrgk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((17)-6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((17)-6)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(68)", "(68)", "(68)", "0");
                var v = ov.swizzle.rbrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(68)", v.w);
            }
            {
                var ov = new gvec5<string>("(14)", "(14)", "-1", "-1", "(5-2)");
                var v = ov.swizzle.rbrbr;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-4-8)", "(-49)", "((82)4)", "((43)-9)");
                var v = ov.swizzle.rbrbg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-49)", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((59)9)", "3", "((-5-2)1)");
                var v = ov.swizzle.rbrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((59)9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((59)9)", v.w);
                Assert.AreEqual("((59)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((57)8)", "-1", null, "((13)1)", "-1");
                var v = ov.swizzle.rbrba;
                Assert.AreEqual("((57)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((57)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((13)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-53)", "5", "5", "((3-7)-1)", "((15)3)");
                var v = ov.swizzle.rbrbk;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((15)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-7)", "(86)", "(0-7)", "8", "((8-2)-3)");
                var v = ov.swizzle.rbra;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(-62)", "((7-4)-2)", null, "((7-7)-5)");
                var v = ov.swizzle.rbrar;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((7-4)-2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "-8", "((3-1)3)", "-7", "(07)");
                var v = ov.swizzle.rbrag;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("((3-1)3)", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "(61)", "((-8-8)-5)", "((-8-8)-5)");
                var v = ov.swizzle.rbrab;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-8-8)-5)", v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-5", "4", "((56)-5)", "((1-3)5)");
                var v = ov.swizzle.rbraa;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((56)-5)", v.w);
                Assert.AreEqual("((56)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)0)", "((-41)5)", "(-4-4)", "(-4-4)", "3");
                var v = ov.swizzle.rbrak;
                Assert.AreEqual("((0-4)0)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("((0-4)0)", v.z);
                Assert.AreEqual("(-4-4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((63)0)", null, "6", "((-60)-5)", "((4-2)2)");
                var v = ov.swizzle.rbrk;
                Assert.AreEqual("((63)0)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((63)0)", v.z);
                Assert.AreEqual("((4-2)2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "(-4-9)", "-7", null, "((1-4)3)");
                var v = ov.swizzle.rbrkr;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("((1-4)3)", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-2", "(3-8)", "", null);
                var v = ov.swizzle.rbrkg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-8", "((-5-4)2)", "(-3-8)", "((95)-8)");
                var v = ov.swizzle.rbrkb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-5-4)2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((95)-8)", v.w);
                Assert.AreEqual("((-5-4)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "((-7-7)7)", "(-5-5)", "(-5-5)", "(-5-5)");
                var v = ov.swizzle.rbrka;
                Assert.AreEqual("(-5-5)", v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual("(-5-5)", v.z);
                Assert.AreEqual("(-5-5)", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-9", null, "(-4-3)", "((-7-2)-8)");
                var v = ov.swizzle.rbrkk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-7-2)-8)", v.w);
                Assert.AreEqual("((-7-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(45)", "((45)-2)", "2", "(45)");
                var v = ov.swizzle.rbg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((45)-2)", v.y);
                Assert.AreEqual("(45)", v.z);
            }
            {
                var ov = new gvec5<string>("((-27)-2)", "(93)", "((-61)-1)", "2", "(93)");
                var v = ov.swizzle.rbgr;
                Assert.AreEqual("((-27)-2)", v.x);
                Assert.AreEqual("((-61)-1)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("((-27)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(6-8)", "(6-8)", null, "(6-8)", null);
                var v = ov.swizzle.rbgrr;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(6-8)", v.z);
                Assert.AreEqual("(6-8)", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-2)", null, "(3-2)", null, "-1");
                var v = ov.swizzle.rbgrg;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", null, "2", "(35)", "-2");
                var v = ov.swizzle.rbgrb;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-1)", "(-7-1)", "((11)-8)", "6", "-9");
                var v = ov.swizzle.rbgra;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("((11)-8)", v.y);
                Assert.AreEqual("(-7-1)", v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "9", "((-15)-5)", "(6-3)", "-4");
                var v = ov.swizzle.rbgrk;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("((-15)-5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)1)", "(-78)", "-4", "-4", "(75)");
                var v = ov.swizzle.rbgg;
                Assert.AreEqual("((6-6)1)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-78)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "", "(12)", "(40)", "(40)");
                var v = ov.swizzle.rbggr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)8)", "((-60)-9)", "(30)", "(-6-3)", "((-60)-9)");
                var v = ov.swizzle.rbggg;
                Assert.AreEqual("((-7-9)8)", v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual("((-60)-9)", v.z);
                Assert.AreEqual("((-60)-9)", v.w);
                Assert.AreEqual("((-60)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)-6)", "", "", "4", "(-41)");
                var v = ov.swizzle.rbggb;
                Assert.AreEqual("((-8-1)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-92)-4)", "((8-6)9)", "0", "");
                var v = ov.swizzle.rbgga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-6)9)", v.y);
                Assert.AreEqual("((-92)-4)", v.z);
                Assert.AreEqual("((-92)-4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", "(5-3)", "8", "((-84)3)", null);
                var v = ov.swizzle.rbggk;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-6-8)", "6", "((-7-9)-6)", "(-6-8)");
                var v = ov.swizzle.rbgb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((-15)3)", "(-48)", "(-6-7)", "-3", "-6");
                var v = ov.swizzle.rbgbr;
                Assert.AreEqual("((-15)3)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-48)", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("((-15)3)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "-2", "(-66)", null);
                var v = ov.swizzle.rbgbg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-29)8)", "", "(-30)", "((83)2)");
                var v = ov.swizzle.rbgbb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-29)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((32)4)", null, "((-4-6)6)", "((32)4)", "-8");
                var v = ov.swizzle.rbgba;
                Assert.AreEqual("((32)4)", v.x);
                Assert.AreEqual("((-4-6)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-4-6)6)", v.w);
                Assert.AreEqual("((32)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-2", "((9-7)-3)", "8", "(6-5)");
                var v = ov.swizzle.rbgbk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((9-7)-3)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((9-7)-3)", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((90)1)", "", "-3", "-7");
                var v = ov.swizzle.rbga;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((90)1)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("(52)", "-8", "((50)-3)", "((-57)4)", "((-87)-3)");
                var v = ov.swizzle.rbgar;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((50)-3)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-57)4)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("((53)0)", "((-38)8)", null, "(-4-8)", "((-38)8)");
                var v = ov.swizzle.rbgag;
                Assert.AreEqual("((53)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-38)8)", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("((-38)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)6)", "(0-6)", null, "-3", "-3");
                var v = ov.swizzle.rbgab;
                Assert.AreEqual("((48)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(56)", "((-81)8)", "-9", "(18)", "((-7-2)4)");
                var v = ov.swizzle.rbgaa;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-81)8)", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("(18)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-1)6)", "(-8-4)", "", "", "");
                var v = ov.swizzle.rbgak;
                Assert.AreEqual("((-6-1)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)2)", "(-5-3)", "4", "", null);
                var v = ov.swizzle.rbgk;
                Assert.AreEqual("((-41)2)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-8", "((-34)5)", "", "", "(-4-6)");
                var v = ov.swizzle.rbgkr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-34)5)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((67)3)", "1", "((67)3)", "(4-9)", "(4-9)");
                var v = ov.swizzle.rbgkg;
                Assert.AreEqual("((67)3)", v.x);
                Assert.AreEqual("((67)3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((58)6)", "", "((58)6)", null, "((58)6)");
                var v = ov.swizzle.rbgkb;
                Assert.AreEqual("((58)6)", v.x);
                Assert.AreEqual("((58)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((58)6)", v.w);
                Assert.AreEqual("((58)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)0)", "3", "3", "((98)-4)", "((98)-4)");
                var v = ov.swizzle.rbgka;
                Assert.AreEqual("((2-3)0)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((98)-4)", v.w);
                Assert.AreEqual("((98)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((28)-3)", "((28)-3)", "(4-2)", "((28)-3)", "((-8-1)-8)");
                var v = ov.swizzle.rbgkk;
                Assert.AreEqual("((28)-3)", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("((28)-3)", v.z);
                Assert.AreEqual("((-8-1)-8)", v.w);
                Assert.AreEqual("((-8-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "-9", "(6-5)", "-9");
                var v = ov.swizzle.rbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec5<string>("((-9-6)1)", "(-37)", "-1", "((-34)-3)", "4");
                var v = ov.swizzle.rbbr;
                Assert.AreEqual("((-9-6)1)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-9-6)1)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-2)", null, "", "((8-4)-6)", "-6");
                var v = ov.swizzle.rbbrr;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-2)", v.w);
                Assert.AreEqual("(-7-2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((96)4)", "(-9-5)", "0", "(-63)");
                var v = ov.swizzle.rbbrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-9-5)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((96)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)-4)", "4", "5", "((51)-9)", "((51)-9)");
                var v = ov.swizzle.rbbrb;
                Assert.AreEqual("((4-8)-4)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((4-8)-4)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(9-8)", "((5-8)-6)", "(9-8)", "(9-8)", "((-19)-7)");
                var v = ov.swizzle.rbbra;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("(9-8)", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(08)", "((-9-4)-8)", "-5", "((69)-4)", "((42)-4)");
                var v = ov.swizzle.rbbrk;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((42)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-2)", "((06)-7)", "(9-2)", null, "-4");
                var v = ov.swizzle.rbbg;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("((06)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(9-8)", "(9-8)", "-2", "((12)2)", "(-9-8)");
                var v = ov.swizzle.rbbgr;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-5)2)", "((-5-5)2)", "(58)", "((-5-5)2)", "4");
                var v = ov.swizzle.rbbgg;
                Assert.AreEqual("((-5-5)2)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("((-5-5)2)", v.w);
                Assert.AreEqual("((-5-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "4", "((25)-7)", "(29)", "(33)");
                var v = ov.swizzle.rbbgb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((25)-7)", v.y);
                Assert.AreEqual("((25)-7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((25)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(00)", null, "-7", "(-2-6)");
                var v = ov.swizzle.rbbga;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", null, "((7-1)4)", "((-26)-4)");
                var v = ov.swizzle.rbbgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-26)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(1-2)", "((4-6)0)", "-7");
                var v = ov.swizzle.rbbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual("(1-2)", v.z);
                Assert.AreEqual("(1-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-8)2)", "(-1-6)", "(50)", "((84)-1)", "-8");
                var v = ov.swizzle.rbbbr;
                Assert.AreEqual("((-1-8)2)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("(50)", v.w);
                Assert.AreEqual("((-1-8)2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(4-1)", "((95)4)", "((-7-7)3)", "((11)7)");
                var v = ov.swizzle.rbbbg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((95)4)", v.y);
                Assert.AreEqual("((95)4)", v.z);
                Assert.AreEqual("((95)4)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(58)", "(58)", "1", "((-1-5)-2)", "-2");
                var v = ov.swizzle.rbbbb;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((5-3)-7)", "((-3-1)-8)", "3", "((5-3)-7)");
                var v = ov.swizzle.rbbba;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-3-1)-8)", v.y);
                Assert.AreEqual("((-3-1)-8)", v.z);
                Assert.AreEqual("((-3-1)-8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-4", null, null, "-5");
                var v = ov.swizzle.rbbbk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-2)", "(-88)", "3", "((-9-8)1)", "");
                var v = ov.swizzle.rbba;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-9-8)1)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "8", "((-5-3)9)", "0", "(-15)");
                var v = ov.swizzle.rbbar;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-5-3)9)", v.y);
                Assert.AreEqual("((-5-3)9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-18)-2)", null, "(3-6)", "((-18)-2)", "((4-5)-7)");
                var v = ov.swizzle.rbbag;
                Assert.AreEqual("((-18)-2)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("((-18)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "((4-1)0)", "((-32)4)", "((87)-9)", "((-32)4)");
                var v = ov.swizzle.rbbab;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("((-32)4)", v.y);
                Assert.AreEqual("((-32)4)", v.z);
                Assert.AreEqual("((87)-9)", v.w);
                Assert.AreEqual("((-32)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", "", "(75)", "((-2-5)7)", null);
                var v = ov.swizzle.rbbaa;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("((-2-5)7)", v.w);
                Assert.AreEqual("((-2-5)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "((-8-6)-6)", "(2-3)", null);
                var v = ov.swizzle.rbbak;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-8-6)-6)", v.y);
                Assert.AreEqual("((-8-6)-6)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-87)-5)", "(1-4)", "((-87)-5)", "3", "(4-1)");
                var v = ov.swizzle.rbbk;
                Assert.AreEqual("((-87)-5)", v.x);
                Assert.AreEqual("((-87)-5)", v.y);
                Assert.AreEqual("((-87)-5)", v.z);
                Assert.AreEqual("(4-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "((12)0)", "(-2-3)", "-7", "-7");
                var v = ov.swizzle.rbbkr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-72)", "(-2-3)", "8", null, "((-2-5)-5)");
                var v = ov.swizzle.rbbkg;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-2-5)-5)", v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-7)7)", "-1", "", "((6-7)7)", "4");
                var v = ov.swizzle.rbbkb;
                Assert.AreEqual("((6-7)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-3", "((76)6)", "((51)-9)", "0");
                var v = ov.swizzle.rbbka;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((76)6)", v.y);
                Assert.AreEqual("((76)6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((51)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(92)", "((-30)-8)", "(92)", "(-91)");
                var v = ov.swizzle.rbbkk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-30)-8)", v.y);
                Assert.AreEqual("((-30)-8)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "(-80)", "((-4-5)8)", "((02)-4)", "((-4-5)8)");
                var v = ov.swizzle.rba;
                Assert.AreEqual("(07)", v.x);
                Assert.AreEqual("((-4-5)8)", v.y);
                Assert.AreEqual("((02)-4)", v.z);
            }
            {
                var ov = new gvec5<string>("-8", null, "3", null, null);
                var v = ov.swizzle.rbar;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-4-9)1)", "((58)2)", "(5-3)", "(5-3)");
                var v = ov.swizzle.rbarr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((58)2)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)5)", null, "((2-3)5)", "((-58)4)", "(-2-1)");
                var v = ov.swizzle.rbarg;
                Assert.AreEqual("((2-3)5)", v.x);
                Assert.AreEqual("((2-3)5)", v.y);
                Assert.AreEqual("((-58)4)", v.z);
                Assert.AreEqual("((2-3)5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "1", "((31)-5)", "", "(-70)");
                var v = ov.swizzle.rbarb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((31)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((31)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "", "-4", "-4");
                var v = ov.swizzle.rbara;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(96)", null, "(10)", "((1-2)5)", "");
                var v = ov.swizzle.rbark;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual("((1-2)5)", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((25)-7)", "((25)-7)", "", "((25)-7)", "(1-4)");
                var v = ov.swizzle.rbag;
                Assert.AreEqual("((25)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((25)-7)", v.z);
                Assert.AreEqual("((25)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-3)", "((16)2)", "", "((16)2)", "(-6-6)");
                var v = ov.swizzle.rbagr;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((16)2)", v.z);
                Assert.AreEqual("((16)2)", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-55)2)", "(11)", null, "-7", "((-55)2)");
                var v = ov.swizzle.rbagg;
                Assert.AreEqual("((-55)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "2", "8", "2", "");
                var v = ov.swizzle.rbagb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-4)-4)", "(76)", "(76)", "(25)", "((4-4)-1)");
                var v = ov.swizzle.rbaga;
                Assert.AreEqual("((-3-4)-4)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("(25)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "(62)", "(-4-7)", "-6");
                var v = ov.swizzle.rbagk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-40)6)", "((81)9)", "", "(5-3)");
                var v = ov.swizzle.rbab;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((81)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((81)9)", v.w);
            }
            {
                var ov = new gvec5<string>("(82)", "-5", "3", "3", "((49)-6)");
                var v = ov.swizzle.rbabr;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(82)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "((0-4)8)", "((0-4)8)", "(-98)", "(8-3)");
                var v = ov.swizzle.rbabg;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual("((0-4)8)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("((0-4)8)", v.w);
                Assert.AreEqual("((0-4)8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-5-9)-6)", "(-21)", "9", "((5-9)-7)");
                var v = ov.swizzle.rbabb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-21)", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(76)", "((-5-7)1)", "((-83)3)", "");
                var v = ov.swizzle.rbaba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-5-7)1)", v.y);
                Assert.AreEqual("((-83)3)", v.z);
                Assert.AreEqual("((-5-7)1)", v.w);
                Assert.AreEqual("((-83)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)9)", "((9-1)9)", "(-81)", "", "1");
                var v = ov.swizzle.rbabk;
                Assert.AreEqual("((9-1)9)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((79)4)", "((0-4)9)", null, "(70)");
                var v = ov.swizzle.rbaa;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((0-4)9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("5", "(8-8)", "((-88)4)", "((0-8)-7)", "((0-8)-7)");
                var v = ov.swizzle.rbaar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-88)4)", v.y);
                Assert.AreEqual("((0-8)-7)", v.z);
                Assert.AreEqual("((0-8)-7)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((94)9)", "-9", null, "((7-6)2)", "(-15)");
                var v = ov.swizzle.rbaag;
                Assert.AreEqual("((94)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-6)2)", v.z);
                Assert.AreEqual("((7-6)2)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "-1", "3", "((54)4)");
                var v = ov.swizzle.rbaab;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((59)0)", "((42)0)", "9", "6", "(3-7)");
                var v = ov.swizzle.rbaaa;
                Assert.AreEqual("((59)0)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-30)3)", "((-30)3)", null, "");
                var v = ov.swizzle.rbaak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-30)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-2)", "((-91)4)", "((-91)4)", "2", null);
                var v = ov.swizzle.rbak;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("((-91)4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "(-9-1)", "(-9-1)", "-9", "-9");
                var v = ov.swizzle.rbakr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(3-3)", "-1", "(-66)", "-8");
                var v = ov.swizzle.rbakg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-6)5)", "((13)2)", "(30)", "((-4-6)5)");
                var v = ov.swizzle.rbakb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((13)2)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("((-4-6)5)", v.w);
                Assert.AreEqual("((13)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "((31)-9)", "7", "", "(98)");
                var v = ov.swizzle.rbaka;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(98)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((85)-5)", "-2", "", "((-99)8)", "2");
                var v = ov.swizzle.rbakk;
                Assert.AreEqual("((85)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-99)8)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-1-4)", null, "((9-4)-1)", null);
                var v = ov.swizzle.rbk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("(-63)", "(-63)", "((28)2)", "(-2-4)", "((47)1)");
                var v = ov.swizzle.rbkr;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("((28)2)", v.y);
                Assert.AreEqual("((47)1)", v.z);
                Assert.AreEqual("(-63)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(-6-7)", "(14)", "(14)", "((9-4)0)");
                var v = ov.swizzle.rbkrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("((9-4)0)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-74)", "((67)4)", "(-74)", "((-51)3)", "((-82)0)");
                var v = ov.swizzle.rbkrg;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("((-82)0)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("((67)4)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(5-2)", "((93)-3)", "", "2");
                var v = ov.swizzle.rbkrb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((93)-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((93)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((32)8)", "8", "", "-2", "((-2-6)9)");
                var v = ov.swizzle.rbkra;
                Assert.AreEqual("((32)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-6)9)", v.z);
                Assert.AreEqual("((32)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", "((-96)-7)", "(1-5)", "(95)", "((-5-3)6)");
                var v = ov.swizzle.rbkrk;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("((-5-3)6)", v.z);
                Assert.AreEqual("(1-5)", v.w);
                Assert.AreEqual("((-5-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", null, "-3", "((-6-9)0)", "-9");
                var v = ov.swizzle.rbkg;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((72)-5)", "((72)-5)", "(40)", null, "((-52)-2)");
                var v = ov.swizzle.rbkgr;
                Assert.AreEqual("((72)-5)", v.x);
                Assert.AreEqual("(40)", v.y);
                Assert.AreEqual("((-52)-2)", v.z);
                Assert.AreEqual("((72)-5)", v.w);
                Assert.AreEqual("((72)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((88)1)", "(53)", null, "((88)1)");
                var v = ov.swizzle.rbkgg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("((88)1)", v.z);
                Assert.AreEqual("((88)1)", v.w);
                Assert.AreEqual("((88)1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-95)0)", "(2-7)", "3", "(2-7)");
                var v = ov.swizzle.rbkgb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("((-95)0)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(21)", "((5-1)5)", null, "((-20)-8)");
                var v = ov.swizzle.rbkga;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((5-1)5)", v.y);
                Assert.AreEqual("((-20)-8)", v.z);
                Assert.AreEqual("(21)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", "(5-1)", "(-4-8)", "1", "(-4-8)");
                var v = ov.swizzle.rbkgk;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "(9-8)", "-3", "((76)4)");
                var v = ov.swizzle.rbkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("((76)4)", v.z);
                Assert.AreEqual("(9-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-71)", "((-98)-7)", "(-71)", "((-22)0)", "5");
                var v = ov.swizzle.rbkbr;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-6)-6)", "(-78)", "(-78)", "(0-1)", null);
                var v = ov.swizzle.rbkbg;
                Assert.AreEqual("((7-6)-6)", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("(-78)", v.v);
            }
            {
                var ov = new gvec5<string>("((37)7)", "(2-8)", "0", "4", "2");
                var v = ov.swizzle.rbkbb;
                Assert.AreEqual("((37)7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(6-8)", "-3", "((5-6)5)", "", "-9");
                var v = ov.swizzle.rbkba;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("((5-6)5)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((5-6)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "-4", "(-7-8)", "((-55)-8)", "(-7-8)");
                var v = ov.swizzle.rbkbk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(59)", "5", "((6-4)-8)", "(-69)", "(59)");
                var v = ov.swizzle.rbka;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("((6-4)-8)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("(-69)", v.w);
            }
            {
                var ov = new gvec5<string>("", "-9", "((-76)-9)", "(-4-2)", "((31)-6)");
                var v = ov.swizzle.rbkar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-76)-9)", v.y);
                Assert.AreEqual("((31)-6)", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((99)5)", "(2-7)", "-6", "(2-7)", "(2-7)");
                var v = ov.swizzle.rbkag;
                Assert.AreEqual("((99)5)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-2-2)", "((05)4)", "-5", "((8-1)1)");
                var v = ov.swizzle.rbkab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((05)4)", v.y);
                Assert.AreEqual("((8-1)1)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((05)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)9)", "((3-6)-5)", "((9-2)9)", "-5", null);
                var v = ov.swizzle.rbkaa;
                Assert.AreEqual("((9-2)9)", v.x);
                Assert.AreEqual("((9-2)9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)9)", "", "((5-1)9)", "((41)-1)", "(-92)");
                var v = ov.swizzle.rbkak;
                Assert.AreEqual("((5-1)9)", v.x);
                Assert.AreEqual("((5-1)9)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("((41)-1)", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((60)-5)", "((25)-1)", "-3", "((60)-5)");
                var v = ov.swizzle.rbkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((25)-1)", v.y);
                Assert.AreEqual("((60)-5)", v.z);
                Assert.AreEqual("((60)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "((-58)0)", "", "((-58)0)", "((-65)1)");
                var v = ov.swizzle.rbkkr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-65)1)", v.z);
                Assert.AreEqual("((-65)1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((8-1)-8)", "(-37)", "((8-1)-8)", "8");
                var v = ov.swizzle.rbkkg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((8-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "4", "((6-3)-7)", null, "1");
                var v = ov.swizzle.rbkkb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((6-3)-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((6-3)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(52)", "(9-1)", "8");
                var v = ov.swizzle.rbkka;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-8-8)", "((01)1)", "-6", "2");
                var v = ov.swizzle.rbkkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((01)1)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "(-62)", "(-62)", "((21)2)");
                var v = ov.swizzle.ra;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-62)", v.y);
            }
            {
                var ov = new gvec5<string>(null, "(-2-1)", "((-67)5)", "-3", "((-1-2)-1)");
                var v = ov.swizzle.rar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("8", "8", "(-37)", "((-11)1)", null);
                var v = ov.swizzle.rarr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-11)1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("0", "0", null, "6", "6");
                var v = ov.swizzle.rarrr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "2", "((-9-8)-1)", "5", "2");
                var v = ov.swizzle.rarrg;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, null, "0", "((-93)7)");
                var v = ov.swizzle.rarrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-15)7)", "((6-8)7)", "(0-1)", "(99)", "3");
                var v = ov.swizzle.rarra;
                Assert.AreEqual("((-15)7)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("((-15)7)", v.z);
                Assert.AreEqual("((-15)7)", v.w);
                Assert.AreEqual("(99)", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "(-4-6)", "((89)9)", "((89)9)", "(-43)");
                var v = ov.swizzle.rarrk;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("((89)9)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("(-43)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-1)", "-9", "((-4-8)8)", "-9", null);
                var v = ov.swizzle.rarg;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-7-1)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>(null, "1", "((-72)0)", "((20)-7)", "((20)-7)");
                var v = ov.swizzle.rargr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((20)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-1)-1)", "(-8-1)", "((9-6)0)", "");
                var v = ov.swizzle.rargg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((9-6)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-4-1)-1)", v.w);
                Assert.AreEqual("((-4-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-3)", "((-9-8)-1)", "-8", "1", "6");
                var v = ov.swizzle.rargb;
                Assert.AreEqual("(0-3)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("((-9-8)-1)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)7)", "(5-8)", null, "(-2-9)", "(-2-9)");
                var v = ov.swizzle.rarga;
                Assert.AreEqual("((-9-3)7)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((-9-3)7)", v.z);
                Assert.AreEqual("(5-8)", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((29)-2)", "", "((13)-7)", "4");
                var v = ov.swizzle.rargk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((13)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((29)-2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((18)-3)", "((9-9)4)", "-2", "-2", null);
                var v = ov.swizzle.rarb;
                Assert.AreEqual("((18)-3)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((18)-3)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("((0-6)7)", null, "", "-5", "(-82)");
                var v = ov.swizzle.rarbr;
                Assert.AreEqual("((0-6)7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((0-6)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((0-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "(6-1)", "-5", "(6-1)", "(19)");
                var v = ov.swizzle.rarbg;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-4)", "(-70)", "(3-8)", "((-23)6)", "5");
                var v = ov.swizzle.rarbb;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual("((-23)6)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((41)-1)", "(-95)", "(82)", "((89)-1)");
                var v = ov.swizzle.rarba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("(82)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)2)", "((34)-6)", "((4-2)2)", "-2", "(4-7)");
                var v = ov.swizzle.rarbk;
                Assert.AreEqual("((4-2)2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((4-2)2)", v.z);
                Assert.AreEqual("((4-2)2)", v.w);
                Assert.AreEqual("(4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-2)5)", "-2", null, null, "-9");
                var v = ov.swizzle.rara;
                Assert.AreEqual("((-1-2)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-1-2)5)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("5", "", "", "(15)", "-6");
                var v = ov.swizzle.rarar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((9-1)-6)", "((9-1)-6)", null, "(-42)");
                var v = ov.swizzle.rarag;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", "((-15)2)", "-4", "(-96)", "-4");
                var v = ov.swizzle.rarab;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(0-4)", "-6", "-6", "(-21)");
                var v = ov.swizzle.raraa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)5)", "", null, "(61)", "(61)");
                var v = ov.swizzle.rarak;
                Assert.AreEqual("((-6-4)5)", v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("((-6-4)5)", v.z);
                Assert.AreEqual("(61)", v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "((1-5)-9)", "4", "4");
                var v = ov.swizzle.rark;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(6-8)", "(0-1)", "(6-8)", "((-70)3)", "");
                var v = ov.swizzle.rarkr;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("((-70)3)", v.y);
                Assert.AreEqual("(6-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(82)", null, null, "(48)", "((-25)-8)");
                var v = ov.swizzle.rarkg;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("((-25)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((38)5)", "((-92)5)", "((-47)-1)", "((-47)-1)", "((38)5)");
                var v = ov.swizzle.rarkb;
                Assert.AreEqual("((38)5)", v.x);
                Assert.AreEqual("((-47)-1)", v.y);
                Assert.AreEqual("((38)5)", v.z);
                Assert.AreEqual("((38)5)", v.w);
                Assert.AreEqual("((-47)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-5-5)3)", "6", "", "(-20)");
                var v = ov.swizzle.rarka;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-20)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((59)-5)", "4", "((7-3)8)", "6");
                var v = ov.swizzle.rarkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((7-3)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((95)6)", null, "(-82)", "(77)", "-5");
                var v = ov.swizzle.rag;
                Assert.AreEqual("((95)6)", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("((8-6)-9)", "-7", "9", "-7", "9");
                var v = ov.swizzle.ragr;
                Assert.AreEqual("((8-6)-9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((8-6)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-34)-9)", "((83)-8)", "7", "7", "7");
                var v = ov.swizzle.ragrr;
                Assert.AreEqual("((-34)-9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((83)-8)", v.z);
                Assert.AreEqual("((-34)-9)", v.w);
                Assert.AreEqual("((-34)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(90)", "2", "-8", "((-47)-2)", "");
                var v = ov.swizzle.ragrg;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("((-47)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-8)", "", "6", "-6", "((50)-5)");
                var v = ov.swizzle.ragrb;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(5-8)", "-9", "((79)5)", "-5");
                var v = ov.swizzle.ragra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((79)5)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((79)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-3)", "(-1-8)", "", "-3", "(5-8)");
                var v = ov.swizzle.ragrk;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual("(5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-7)", "(-7-8)", "-4", "(-3-7)", "((64)8)");
                var v = ov.swizzle.ragg;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("(-7-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((9-3)3)", "((9-3)3)", "((0-2)-6)", null, "-3");
                var v = ov.swizzle.raggr;
                Assert.AreEqual("((9-3)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-3)3)", v.z);
                Assert.AreEqual("((9-3)3)", v.w);
                Assert.AreEqual("((9-3)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "(-8-6)", "(-21)", "((11)4)", "(1-8)");
                var v = ov.swizzle.raggg;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("((11)4)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "-2", null, "-2");
                var v = ov.swizzle.raggb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)-4)", "2", "(83)", "((1-7)-4)", "0");
                var v = ov.swizzle.ragga;
                Assert.AreEqual("((1-7)-4)", v.x);
                Assert.AreEqual("((1-7)-4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((1-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-49)5)", "9", "2", "((-89)1)", "((-49)5)");
                var v = ov.swizzle.raggk;
                Assert.AreEqual("((-49)5)", v.x);
                Assert.AreEqual("((-89)1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-49)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((5-3)-7)", "", "1", "((-32)1)");
                var v = ov.swizzle.ragb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((5-3)-7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((93)8)", "((-62)6)", "(44)", "((-62)6)", "2");
                var v = ov.swizzle.ragbr;
                Assert.AreEqual("((93)8)", v.x);
                Assert.AreEqual("((-62)6)", v.y);
                Assert.AreEqual("((-62)6)", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("((93)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((84)2)", "((84)2)", "((84)2)", "(13)");
                var v = ov.swizzle.ragbg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((84)2)", v.y);
                Assert.AreEqual("((84)2)", v.z);
                Assert.AreEqual("((84)2)", v.w);
                Assert.AreEqual("((84)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-76)", "(0-9)", null, "((87)9)", null);
                var v = ov.swizzle.ragbb;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((87)9)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((65)0)", "", "((6-5)6)", "6", "((62)9)");
                var v = ov.swizzle.ragba;
                Assert.AreEqual("((65)0)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-5)6)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "((26)-6)", "", "((26)-6)", "((26)-6)");
                var v = ov.swizzle.ragbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((26)-6)", v.y);
                Assert.AreEqual("((26)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((26)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-3", "-7", "9", "(-8-1)");
                var v = ov.swizzle.raga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "((84)-3)", "((33)4)", "(-2-7)", "((84)-3)");
                var v = ov.swizzle.ragar;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("(-2-7)", v.y);
                Assert.AreEqual("((84)-3)", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("(-2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(48)", "5", "((-7-1)-4)", "(58)", "(15)");
                var v = ov.swizzle.ragag;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)9)", "((7-5)0)", "", "((0-7)9)", null);
                var v = ov.swizzle.ragab;
                Assert.AreEqual("((0-7)9)", v.x);
                Assert.AreEqual("((0-7)9)", v.y);
                Assert.AreEqual("((7-5)0)", v.z);
                Assert.AreEqual("((0-7)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-9)", null, "7", "((-68)-7)", null);
                var v = ov.swizzle.ragaa;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("((-68)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-68)-7)", v.w);
                Assert.AreEqual("((-68)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-91)", null, "(-91)", "((-5-4)-4)");
                var v = ov.swizzle.ragak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("((-5-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-39)-6)", "(-9-6)", "(36)", "(36)", "(36)");
                var v = ov.swizzle.ragk;
                Assert.AreEqual("((-39)-6)", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("(36)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "((3-1)3)", "-5", "(11)", "");
                var v = ov.swizzle.ragkr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("((3-1)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((01)9)", "-4", "(25)", null, null);
                var v = ov.swizzle.ragkg;
                Assert.AreEqual("((01)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-2)-2)", null, "", "((53)8)", "(43)");
                var v = ov.swizzle.ragkb;
                Assert.AreEqual("((-9-2)-2)", v.x);
                Assert.AreEqual("((53)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((01)8)", "-3", "-3", "((01)8)");
                var v = ov.swizzle.ragka;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((01)8)", v.z);
                Assert.AreEqual("((01)8)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "(-41)", "6", "(-41)", "((-8-4)-8)");
                var v = ov.swizzle.ragkk;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("((-8-4)-8)", v.w);
                Assert.AreEqual("((-8-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-4)-3)", "-2", "3", null, "3");
                var v = ov.swizzle.rab;
                Assert.AreEqual("((9-4)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("", "(-76)", "((-3-2)-5)", "(-63)", "-2");
                var v = ov.swizzle.rabr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("((-3-2)-5)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-16)1)", "0", null, "", "9");
                var v = ov.swizzle.rabrr;
                Assert.AreEqual("((-16)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-16)1)", v.w);
                Assert.AreEqual("((-16)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", "(-56)", "-6", "");
                var v = ov.swizzle.rabrg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", null, "((8-4)0)", "", "-8");
                var v = ov.swizzle.rabrb;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((8-4)0)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("((8-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)7)", "((83)-1)", "(-8-2)", "-2", "-9");
                var v = ov.swizzle.rabra;
                Assert.AreEqual("((03)7)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("((03)7)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-7", "((80)-9)", "((-65)-5)", "(-29)");
                var v = ov.swizzle.rabrk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-65)-5)", v.y);
                Assert.AreEqual("((80)-9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-3)9)", "-3", "((43)4)", "((43)4)", null);
                var v = ov.swizzle.rabg;
                Assert.AreEqual("((-5-3)9)", v.x);
                Assert.AreEqual("((43)4)", v.y);
                Assert.AreEqual("((43)4)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("((-38)-3)", "((-8-4)4)", "-7", "((-38)-3)", "(-7-4)");
                var v = ov.swizzle.rabgr;
                Assert.AreEqual("((-38)-3)", v.x);
                Assert.AreEqual("((-38)-3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-8-4)4)", v.w);
                Assert.AreEqual("((-38)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", "(-9-2)", "(-84)", "-6", "((-2-8)0)");
                var v = ov.swizzle.rabgg;
                Assert.AreEqual("(-84)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "8", "0", "(69)", "(-90)");
                var v = ov.swizzle.rabgb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-39)", "((-3-5)6)", "6", "(81)", null);
                var v = ov.swizzle.rabga;
                Assert.AreEqual("(-39)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-3-5)6)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "0", "-3", "((4-9)-2)", "((-74)9)");
                var v = ov.swizzle.rabgk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((4-9)-2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-74)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)8)", "-2", "((16)0)", "(-8-5)", "");
                var v = ov.swizzle.rabb;
                Assert.AreEqual("((-96)8)", v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("((16)0)", v.z);
                Assert.AreEqual("((16)0)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "(-2-7)", "-5", "((-4-8)-7)", "8");
                var v = ov.swizzle.rabbr;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("((-4-8)-7)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-6)", "-2", "((3-3)-6)", null, null);
                var v = ov.swizzle.rabbg;
                Assert.AreEqual("((93)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((3-3)-6)", v.z);
                Assert.AreEqual("((3-3)-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(9-7)", "((-56)-4)", "((-56)-4)", "-8", "-4");
                var v = ov.swizzle.rabbb;
                Assert.AreEqual("(9-7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-56)-4)", v.z);
                Assert.AreEqual("((-56)-4)", v.w);
                Assert.AreEqual("((-56)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-5)8)", "((-7-5)8)", null, "-7", null);
                var v = ov.swizzle.rabba;
                Assert.AreEqual("((-7-5)8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(76)", "-3", "((-2-1)-1)", "7", "((6-3)4)");
                var v = ov.swizzle.rabbk;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-2-1)-1)", v.z);
                Assert.AreEqual("((-2-1)-1)", v.w);
                Assert.AreEqual("((6-3)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)4)", "(07)", "-5", "5", "(46)");
                var v = ov.swizzle.raba;
                Assert.AreEqual("((7-1)4)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("9", null, "(03)", "((-63)-2)", "-5");
                var v = ov.swizzle.rabar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-63)-2)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("((-63)-2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-1", "7", "((1-2)-4)", "8");
                var v = ov.swizzle.rabag;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((1-2)-4)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((1-2)-4)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "5", "", "5");
                var v = ov.swizzle.rabab;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "((66)-7)", "-8", "((06)-7)", "(99)");
                var v = ov.swizzle.rabaa;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("((06)-7)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((06)-7)", v.w);
                Assert.AreEqual("((06)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "((37)-5)", "((47)-6)", "(47)");
                var v = ov.swizzle.rabak;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((47)-6)", v.y);
                Assert.AreEqual("((37)-5)", v.z);
                Assert.AreEqual("((47)-6)", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-7)-8)", "(78)", "((-4-6)-4)", "-8", "((-4-6)-4)");
                var v = ov.swizzle.rabk;
                Assert.AreEqual("((5-7)-8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-4-6)-4)", v.z);
                Assert.AreEqual("((-4-6)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-5)-1)", "-1", null, "((-4-5)-1)", "((2-7)-8)");
                var v = ov.swizzle.rabkr;
                Assert.AreEqual("((-4-5)-1)", v.x);
                Assert.AreEqual("((-4-5)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((2-7)-8)", v.w);
                Assert.AreEqual("((-4-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "(-25)", "(1-3)", null, "((3-2)5)");
                var v = ov.swizzle.rabkg;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("((3-2)5)", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", null, "", "-4");
                var v = ov.swizzle.rabkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", null, "", null, "-4");
                var v = ov.swizzle.rabka;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", null, "(-92)", null);
                var v = ov.swizzle.rabkk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", null, null, "1", "((3-2)-8)");
                var v = ov.swizzle.raa;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec5<string>("(-28)", "(-59)", "((3-8)-9)", "(-59)", "-7");
                var v = ov.swizzle.raar;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(-28)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-3)-5)", "", "5", "", "5");
                var v = ov.swizzle.raarr;
                Assert.AreEqual("((6-3)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-3)-5)", v.w);
                Assert.AreEqual("((6-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "(-2-4)", "(20)", "((6-4)-5)", "((57)5)");
                var v = ov.swizzle.raarg;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("((6-4)-5)", v.y);
                Assert.AreEqual("((6-4)-5)", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((04)-5)", null, "(47)", "(98)");
                var v = ov.swizzle.raarb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "((94)-5)", "(-26)", "0", "(7-5)");
                var v = ov.swizzle.raara;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)2)", null, "(-5-3)", "7", "((-81)-2)");
                var v = ov.swizzle.raark;
                Assert.AreEqual("((3-4)2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((3-4)2)", v.w);
                Assert.AreEqual("((-81)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-8)", "(-4-5)", "", "(-4-5)", "(-4-5)");
                var v = ov.swizzle.raag;
                Assert.AreEqual("((-7-9)-8)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("(-4-5)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "((-6-4)5)", "-7", "((3-5)4)", "-1");
                var v = ov.swizzle.raagr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((3-5)4)", v.y);
                Assert.AreEqual("((3-5)4)", v.z);
                Assert.AreEqual("((-6-4)5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(8-6)", "4", "", "((2-8)4)", "4");
                var v = ov.swizzle.raagg;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("((2-8)4)", v.y);
                Assert.AreEqual("((2-8)4)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-3-1)0)", "", "-7", "");
                var v = ov.swizzle.raagb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-3-1)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-5)", "3", "7", "3");
                var v = ov.swizzle.raaga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-6-5)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((8-6)-5)", "7", "((55)8)", "8");
                var v = ov.swizzle.raagk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((55)8)", v.y);
                Assert.AreEqual("((55)8)", v.z);
                Assert.AreEqual("((8-6)-5)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-5)", "(29)", "((74)0)", null);
                var v = ov.swizzle.raab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((74)0)", v.y);
                Assert.AreEqual("((74)0)", v.z);
                Assert.AreEqual("(29)", v.w);
            }
            {
                var ov = new gvec5<string>("(51)", "((-2-7)8)", "(-15)", "-5", "3");
                var v = ov.swizzle.raabr;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec5<string>("(-36)", "((7-6)-3)", "(-57)", "((23)3)", "(-36)");
                var v = ov.swizzle.raabg;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("((23)3)", v.y);
                Assert.AreEqual("((23)3)", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("((7-6)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "-9", "(10)", "((-6-5)-8)", "(-4-2)");
                var v = ov.swizzle.raabb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-6-5)-8)", v.y);
                Assert.AreEqual("((-6-5)-8)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(10)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-2)", "(80)", "-9", "", "-9");
                var v = ov.swizzle.raaba;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-4-3)", null, "(-4-3)", "(9-5)");
                var v = ov.swizzle.raabk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-4-3)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-9)1)", "5", "((9-9)1)", "(30)", "");
                var v = ov.swizzle.raaa;
                Assert.AreEqual("((9-9)1)", v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("(30)", v.w);
            }
            {
                var ov = new gvec5<string>("((27)-6)", "(57)", "(57)", "((0-6)-6)", "((27)-6)");
                var v = ov.swizzle.raaar;
                Assert.AreEqual("((27)-6)", v.x);
                Assert.AreEqual("((0-6)-6)", v.y);
                Assert.AreEqual("((0-6)-6)", v.z);
                Assert.AreEqual("((0-6)-6)", v.w);
                Assert.AreEqual("((27)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(1-8)", "((85)1)", "(-81)", "((10)9)");
                var v = ov.swizzle.raaag;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("(1-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-9", "4", "(-3-2)", "");
                var v = ov.swizzle.raaab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((08)-1)", "((08)-1)", "((08)-1)", "(35)", "");
                var v = ov.swizzle.raaaa;
                Assert.AreEqual("((08)-1)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-7", null, "((17)-3)");
                var v = ov.swizzle.raaak;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((17)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "((50)8)", "(2-8)", "7");
                var v = ov.swizzle.raak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("(6-1)", "((-57)-4)", "((85)4)", "", "(-5-8)");
                var v = ov.swizzle.raakr;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "", "((-3-2)2)", "(-70)", null);
                var v = ov.swizzle.raakg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-70)", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "((45)-4)", null, "((6-9)-7)", "4");
                var v = ov.swizzle.raakb;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((6-9)-7)", v.y);
                Assert.AreEqual("((6-9)-7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((8-8)3)", "((8-8)3)", "(0-8)", "5");
                var v = ov.swizzle.raaka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual("(0-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-2)3)", "-5", "((2-1)3)", null, "((-78)5)");
                var v = ov.swizzle.raakk;
                Assert.AreEqual("((5-2)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-78)5)", v.w);
                Assert.AreEqual("((-78)5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "5", "5", "((-8-8)9)", "((6-6)2)");
                var v = ov.swizzle.rak;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-8-8)9)", v.y);
                Assert.AreEqual("((6-6)2)", v.z);
            }
            {
                var ov = new gvec5<string>("-8", "(11)", "0", "(27)", "((01)-8)");
                var v = ov.swizzle.rakr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("((01)-8)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(44)", "-9", "", null);
                var v = ov.swizzle.rakrr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-6)-1)", "((-9-6)-1)", "((86)-8)", "(-7-4)");
                var v = ov.swizzle.rakrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((86)-8)", v.y);
                Assert.AreEqual("(-7-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-6)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(0-4)", null, "8", "((77)3)");
                var v = ov.swizzle.rakrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((77)3)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-90)-9)", "((9-4)8)", "", "-9", "((-3-9)4)");
                var v = ov.swizzle.rakra;
                Assert.AreEqual("((-90)-9)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-3-9)4)", v.z);
                Assert.AreEqual("((-90)-9)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(1-1)", "6", "6", "((80)-1)", "(1-1)");
                var v = ov.swizzle.rakrk;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((80)-1)", v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-14)5)", "", "((94)-3)", "0", "");
                var v = ov.swizzle.rakg;
                Assert.AreEqual("((-14)5)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((9-5)-8)", "(91)", "8", null, "8");
                var v = ov.swizzle.rakgr;
                Assert.AreEqual("((9-5)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(91)", v.w);
                Assert.AreEqual("((9-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "", "1", "");
                var v = ov.swizzle.rakgg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-80)3)", "(-94)", "-6", "((5-1)-5)", "((-6-2)4)");
                var v = ov.swizzle.rakgb;
                Assert.AreEqual("((-80)3)", v.x);
                Assert.AreEqual("((5-1)-5)", v.y);
                Assert.AreEqual("((-6-2)4)", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-34)-8)", "2", null, "((-5-3)5)");
                var v = ov.swizzle.rakga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-3)5)", v.z);
                Assert.AreEqual("((-34)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)-2)", "((-8-2)1)", null, "((7-1)-2)", "9");
                var v = ov.swizzle.rakgk;
                Assert.AreEqual("((7-1)-2)", v.x);
                Assert.AreEqual("((7-1)-2)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-8-2)1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((00)1)", "-3", "((00)1)", "(9-5)");
                var v = ov.swizzle.rakb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((00)1)", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-1)-6)", "5", "((86)-5)", "", "-6");
                var v = ov.swizzle.rakbr;
                Assert.AreEqual("((-7-1)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((86)-5)", v.w);
                Assert.AreEqual("((-7-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((99)-7)", "((-15)-6)", "(-83)", "", "-2");
                var v = ov.swizzle.rakbg;
                Assert.AreEqual("((99)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("((-15)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-9", "(17)", "");
                var v = ov.swizzle.rakbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-3-7)", "(-87)", "((-7-9)4)", "(-87)");
                var v = ov.swizzle.rakba;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-7-9)4)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("((-7-9)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(66)", "(5-9)", "3", "(5-9)", null);
                var v = ov.swizzle.rakbk;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-5-2)-9)", null, "((-62)-7)", "-7");
                var v = ov.swizzle.raka;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-62)-7)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-62)-7)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-7", "(-90)", "(-10)", "(-10)");
                var v = ov.swizzle.rakar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-10)", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((7-5)-4)", "((-2-3)-4)", "((7-5)-4)", "((-2-3)-4)", "((-2-3)-4)");
                var v = ov.swizzle.rakag;
                Assert.AreEqual("((7-5)-4)", v.x);
                Assert.AreEqual("((-2-3)-4)", v.y);
                Assert.AreEqual("((-2-3)-4)", v.z);
                Assert.AreEqual("((-2-3)-4)", v.w);
                Assert.AreEqual("((-2-3)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((79)-8)", null, "", "-5");
                var v = ov.swizzle.rakab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)0)", "((26)0)", "(5-2)", "((-94)-7)", "((-3-6)0)");
                var v = ov.swizzle.rakaa;
                Assert.AreEqual("((-3-6)0)", v.x);
                Assert.AreEqual("((-94)-7)", v.y);
                Assert.AreEqual("((-3-6)0)", v.z);
                Assert.AreEqual("((-94)-7)", v.w);
                Assert.AreEqual("((-94)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "(-1-7)", "((-3-8)2)", "(52)", "(52)");
                var v = ov.swizzle.rakak;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-58)1)", "((3-7)-1)", "((3-7)-1)", "((3-7)-1)");
                var v = ov.swizzle.rakk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((3-7)-1)", v.y);
                Assert.AreEqual("((3-7)-1)", v.z);
                Assert.AreEqual("((3-7)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-3-9)-1)", "-2", "(-78)", "1", "((11)5)");
                var v = ov.swizzle.rakkr;
                Assert.AreEqual("((-3-9)-1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((11)5)", v.z);
                Assert.AreEqual("((11)5)", v.w);
                Assert.AreEqual("((-3-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((78)-1)", null, "((78)-1)", "((57)0)", "(93)");
                var v = ov.swizzle.rakkg;
                Assert.AreEqual("((78)-1)", v.x);
                Assert.AreEqual("((57)0)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("(93)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((4-6)6)", "((4-6)6)", null, "((4-6)6)", "7");
                var v = ov.swizzle.rakkb;
                Assert.AreEqual("((4-6)6)", v.x);
                Assert.AreEqual("((4-6)6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((02)-6)", null, "((5-1)4)", "(-42)", "((8-9)-1)");
                var v = ov.swizzle.rakka;
                Assert.AreEqual("((02)-6)", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual("((8-9)-1)", v.z);
                Assert.AreEqual("((8-9)-1)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-5-2)-4)", "((-5-2)-4)", "((-5-2)-4)", "");
                var v = ov.swizzle.rakkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-5-2)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(18)", "(-1-3)", "", "(-1-3)");
                var v = ov.swizzle.rk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-3)", v.y);
            }
            {
                var ov = new gvec5<string>("(99)", "-9", "(-9-6)", "(-9-6)", "((-1-2)-9)");
                var v = ov.swizzle.rkr;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("((-1-2)-9)", v.y);
                Assert.AreEqual("(99)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-9", "4", "(-2-5)", "(-68)");
                var v = ov.swizzle.rkrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(50)", "-6", "((9-3)2)", null, "3");
                var v = ov.swizzle.rkrrr;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("(50)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-6)", "((-38)5)", "((-38)5)", "", "-7");
                var v = ov.swizzle.rkrrg;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual("((-38)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((51)-3)", "", "((51)-3)", "6", null);
                var v = ov.swizzle.rkrrb;
                Assert.AreEqual("((51)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((51)-3)", v.z);
                Assert.AreEqual("((51)-3)", v.w);
                Assert.AreEqual("((51)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", null, "", "3", "9");
                var v = ov.swizzle.rkrra;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-3-5)0)", "0", "((54)9)", "3");
                var v = ov.swizzle.rkrrk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-53)", "((86)-8)", "((86)-8)", null);
                var v = ov.swizzle.rkrg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-53)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-8)", "(00)", "7", "((21)-7)", "-8");
                var v = ov.swizzle.rkrgr;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "", "((-57)9)", "((5-4)5)");
                var v = ov.swizzle.rkrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-4)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-99)8)", "-2", "-9", "(-78)");
                var v = ov.swizzle.rkrgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-99)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((6-6)-2)", "", "(-9-8)", "(-9-8)", "");
                var v = ov.swizzle.rkrga;
                Assert.AreEqual("((6-6)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-6)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-59)", "(8-9)", "(-50)", "(-50)", "(-50)");
                var v = ov.swizzle.rkrgk;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "(-73)", "(-73)", "((-8-7)-6)", "(0-1)");
                var v = ov.swizzle.rkrb;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("(-73)", v.w);
            }
            {
                var ov = new gvec5<string>("((2-7)6)", "", "((2-7)6)", "((2-3)-7)", null);
                var v = ov.swizzle.rkrbr;
                Assert.AreEqual("((2-7)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((2-7)6)", v.z);
                Assert.AreEqual("((2-7)6)", v.w);
                Assert.AreEqual("((2-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-4)6)", "-9", "(-90)", "((3-7)-7)", "-9");
                var v = ov.swizzle.rkrbg;
                Assert.AreEqual("((-5-4)6)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-5-4)6)", v.z);
                Assert.AreEqual("(-90)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(1-7)", "(4-2)", "(1-7)", "(4-2)");
                var v = ov.swizzle.rkrbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("(4-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, null, "((-1-3)3)", null);
                var v = ov.swizzle.rkrba;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-1-3)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-97)", "", "-7", null, "((90)-3)");
                var v = ov.swizzle.rkrbk;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("((90)-3)", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((90)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "1", "(50)", "(-1-8)", "1");
                var v = ov.swizzle.rkra;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-1-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-1)-6)", "-9", "3", "3", "(5-7)");
                var v = ov.swizzle.rkrar;
                Assert.AreEqual("((4-1)-6)", v.x);
                Assert.AreEqual("(5-7)", v.y);
                Assert.AreEqual("((4-1)-6)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((4-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)7)", "((-6-5)-4)", "(9-2)", null, "");
                var v = ov.swizzle.rkrag;
                Assert.AreEqual("((-26)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-26)7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-6-5)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-1)", "((-73)-1)", "((-73)-1)", "-8", "(0-9)");
                var v = ov.swizzle.rkrab;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-73)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(13)", "(-5-9)", null);
                var v = ov.swizzle.rkraa;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "5", "5", "");
                var v = ov.swizzle.rkrak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(8-4)", "((49)8)", "((49)8)", null, "(71)");
                var v = ov.swizzle.rkrk;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(71)", v.w);
            }
            {
                var ov = new gvec5<string>("(-54)", null, "-6", "((-91)7)", null);
                var v = ov.swizzle.rkrkr;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("(50)", null, "((-4-2)-2)", "8", "-3");
                var v = ov.swizzle.rkrkg;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((3-5)-2)", "((-7-3)-7)", "5", "2", "(0-7)");
                var v = ov.swizzle.rkrkb;
                Assert.AreEqual("((3-5)-2)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("((3-5)-2)", v.z);
                Assert.AreEqual("(0-7)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((53)-2)", "((-7-8)1)", "-3");
                var v = ov.swizzle.rkrka;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-7-8)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(88)", "", "((-19)-5)", "(-29)", null);
                var v = ov.swizzle.rkrkk;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(88)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-6)", "5", "5", "", "((5-5)-6)");
                var v = ov.swizzle.rkg;
                Assert.AreEqual("((5-5)-6)", v.x);
                Assert.AreEqual("((5-5)-6)", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("7", "(12)", "(12)", "5", "((-2-1)-9)");
                var v = ov.swizzle.rkgr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-2-1)-9)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("(6-2)", "-4", "(-23)", "((-6-2)-2)", "");
                var v = ov.swizzle.rkgrr;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("(6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "5", "", "((8-6)6)");
                var v = ov.swizzle.rkgrg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((8-6)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-6-1)", null, "2", "9", "8");
                var v = ov.swizzle.rkgrb;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-46)", "((-1-4)-9)", null, null);
                var v = ov.swizzle.rkgra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-46)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "(0-9)", "3", null, "((-6-6)2)");
                var v = ov.swizzle.rkgrk;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((-6-6)2)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("((-6-6)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)-9)", "(1-3)", "(-7-5)", "((-9-6)-9)", "(-1-2)");
                var v = ov.swizzle.rkgg;
                Assert.AreEqual("((-9-6)-9)", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(1-3)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "(2-1)", null, "(5-5)");
                var v = ov.swizzle.rkggr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-5", "((-35)-4)", "((78)-3)", "(-47)");
                var v = ov.swizzle.rkggg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-77)8)", "6", null, "0");
                var v = ov.swizzle.rkggb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-77)8)", v.z);
                Assert.AreEqual("((-77)8)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-68)-6)", "((-4-2)9)", "8", null);
                var v = ov.swizzle.rkgga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-68)-6)", v.z);
                Assert.AreEqual("((-68)-6)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(5-2)", null, "-3", "((-66)-4)", "-3");
                var v = ov.swizzle.rkggk;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "6", "-4", "((91)-9)", "((33)-4)");
                var v = ov.swizzle.rkgb;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("((33)-4)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "", "(-8-7)", "");
                var v = ov.swizzle.rkgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)0)", "(-81)", "6", "(-81)", "((64)2)");
                var v = ov.swizzle.rkgbg;
                Assert.AreEqual("((-84)0)", v.x);
                Assert.AreEqual("((64)2)", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-9)-1)", "((-6-5)-1)", "((0-6)-4)", "((0-6)-4)");
                var v = ov.swizzle.rkgbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-6)-4)", v.y);
                Assert.AreEqual("((2-9)-1)", v.z);
                Assert.AreEqual("((-6-5)-1)", v.w);
                Assert.AreEqual("((-6-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-1)-5)", "((-64)5)", "", "((7-3)6)", "-4");
                var v = ov.swizzle.rkgba;
                Assert.AreEqual("((-2-1)-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-64)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((7-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)-6)", "", "(5-8)", "-1", "(81)");
                var v = ov.swizzle.rkgbk;
                Assert.AreEqual("((-62)-6)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-8)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "9", "4", "((28)0)", "((28)0)");
                var v = ov.swizzle.rkga;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("((28)0)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((28)0)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(2-5)", "((96)-6)", "((96)-6)", "-8");
                var v = ov.swizzle.rkgar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual("((96)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "0", "", null, "((-74)9)");
                var v = ov.swizzle.rkgag;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((-74)9)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((9-8)-2)", "((-87)0)", "(4-5)");
                var v = ov.swizzle.rkgab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-87)0)", v.w);
                Assert.AreEqual("((9-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "(56)", "(-9-2)", "(-9-2)", "((-4-3)-1)");
                var v = ov.swizzle.rkgaa;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("((-4-3)-1)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((53)2)", "1", "(-53)", "0", "(-25)");
                var v = ov.swizzle.rkgak;
                Assert.AreEqual("((53)2)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((41)-1)", "(-3-7)", "(6-5)", "((-9-2)-9)");
                var v = ov.swizzle.rkgk;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-9-2)-9)", v.y);
                Assert.AreEqual("((41)-1)", v.z);
                Assert.AreEqual("((-9-2)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(8-3)", "7", "7", "-2", "(-66)");
                var v = ov.swizzle.rkgkr;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "", "(-26)", "((83)2)");
                var v = ov.swizzle.rkgkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((83)2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((83)2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "(55)", "((-8-6)-2)", "((-3-7)4)", "");
                var v = ov.swizzle.rkgkb;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-6)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(49)", "((42)1)", "", "(99)", "(0-2)");
                var v = ov.swizzle.rkgka;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("((42)1)", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("(99)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-7)-4)", "(2-8)", "((74)7)", "((79)8)", "-6");
                var v = ov.swizzle.rkgkk;
                Assert.AreEqual("((1-7)-4)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-40)", "((-5-3)3)", null, "(-40)");
                var v = ov.swizzle.rkb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-40)", v.y);
                Assert.AreEqual("((-5-3)3)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-4", "((-70)3)", "7", "");
                var v = ov.swizzle.rkbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-70)3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(3-2)", "((-6-8)-3)", "((66)-2)");
                var v = ov.swizzle.rkbrr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((66)-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-52)", "", "((-64)3)", "(-52)");
                var v = ov.swizzle.rkbrg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-52)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((8-7)2)", "((-28)-3)", "(-5-7)", "(3-2)");
                var v = ov.swizzle.rkbrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((-28)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-28)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(0-8)", "((-14)-7)", "((37)-1)", "");
                var v = ov.swizzle.rkbra;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-14)-7)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((37)-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-54)6)", null, "1", "((-9-7)0)");
                var v = ov.swizzle.rkbrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-7)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-7)0)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-1-5)9)", "(-6-5)", "4", "(4-2)");
                var v = ov.swizzle.rkbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("((-1-5)9)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "6", "(-66)", "-3", "-3");
                var v = ov.swizzle.rkbgr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "(-83)", "((-14)-5)", "((94)-9)", "(-1-6)");
                var v = ov.swizzle.rkbgg;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("((-14)-5)", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec5<string>("(-58)", "2", "-1", "-1", null);
                var v = ov.swizzle.rkbgb;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "(-7-9)", "(-2-6)", "5");
                var v = ov.swizzle.rkbga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-2-1)-6)", "(8-6)", "", "(-4-8)");
                var v = ov.swizzle.rkbgk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("((-2-1)-6)", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((90)-6)", "(33)", "(33)", "((90)-6)", "((-4-5)8)");
                var v = ov.swizzle.rkbb;
                Assert.AreEqual("((90)-6)", v.x);
                Assert.AreEqual("((-4-5)8)", v.y);
                Assert.AreEqual("(33)", v.z);
                Assert.AreEqual("(33)", v.w);
            }
            {
                var ov = new gvec5<string>("(96)", "-2", "(96)", "1", "((81)-8)");
                var v = ov.swizzle.rkbbr;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("((81)-8)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "(-25)", "(-25)", "-2", "3");
                var v = ov.swizzle.rkbbg;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(38)", "", "-4", null);
                var v = ov.swizzle.rkbbb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(0-7)", "0", "0", "0", "(0-7)");
                var v = ov.swizzle.rkbba;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-65)", null, "((8-3)-7)", "-7", "");
                var v = ov.swizzle.rkbbk;
                Assert.AreEqual("(-65)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((8-3)-7)", v.z);
                Assert.AreEqual("((8-3)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((74)6)", "(16)", "((74)6)", "(16)", "(16)");
                var v = ov.swizzle.rkba;
                Assert.AreEqual("((74)6)", v.x);
                Assert.AreEqual("(16)", v.y);
                Assert.AreEqual("((74)6)", v.z);
                Assert.AreEqual("(16)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-3-3)-4)", "((-2-7)7)", "(89)", "6");
                var v = ov.swizzle.rkbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-2-7)7)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-59)", "((-4-2)-3)", "((-3-5)-8)", "8");
                var v = ov.swizzle.rkbag;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-4-2)-3)", v.z);
                Assert.AreEqual("((-3-5)-8)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((3-6)6)", null, "(-2-8)", "(2-3)");
                var v = ov.swizzle.rkbab;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(2-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-99)", null, "-1", "(-99)");
                var v = ov.swizzle.rkbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "-3", "(47)", "(47)", "((-1-5)4)");
                var v = ov.swizzle.rkbak;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("((-1-5)4)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("(47)", v.w);
                Assert.AreEqual("((-1-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(62)", "(62)", "7", "2");
                var v = ov.swizzle.rkbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "8", "8", "-5", "((33)-7)");
                var v = ov.swizzle.rkbkr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((33)-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((33)-7)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)-6)", "7", "-1", "", "-1");
                var v = ov.swizzle.rkbkg;
                Assert.AreEqual("((-62)-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(5-4)", "((-1-3)6)", "-1");
                var v = ov.swizzle.rkbkb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(5-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-24)1)", "-1", null);
                var v = ov.swizzle.rkbka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-24)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "-9", "", "3", "-9");
                var v = ov.swizzle.rkbkk;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "6", "((07)3)", "");
                var v = ov.swizzle.rka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((07)3)", v.z);
            }
            {
                var ov = new gvec5<string>("((-48)0)", "((-48)0)", "8", "8", "6");
                var v = ov.swizzle.rkar;
                Assert.AreEqual("((-48)0)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-48)0)", v.w);
            }
            {
                var ov = new gvec5<string>("9", null, "((73)6)", "((73)6)", "-5");
                var v = ov.swizzle.rkarr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((73)6)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "((80)7)", "-6", "((80)7)");
                var v = ov.swizzle.rkarg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((80)7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-5-6)", "", "((-8-2)8)", "");
                var v = ov.swizzle.rkarb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-2)8)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-73)-7)", "((-73)-7)", "-4", "((-1-6)5)");
                var v = ov.swizzle.rkara;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-1-6)5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-2)6)", "((-4-2)6)", "((08)0)", null, "((-11)5)");
                var v = ov.swizzle.rkark;
                Assert.AreEqual("((-4-2)6)", v.x);
                Assert.AreEqual("((-11)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-4-2)6)", v.w);
                Assert.AreEqual("((-11)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "0", "(04)", "", "((13)-6)");
                var v = ov.swizzle.rkag;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("((13)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("((-8-8)-5)", "(-1-2)", "(05)", "((-9-5)5)", "((-8-8)-5)");
                var v = ov.swizzle.rkagr;
                Assert.AreEqual("((-8-8)-5)", v.x);
                Assert.AreEqual("((-8-8)-5)", v.y);
                Assert.AreEqual("((-9-5)5)", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("((-8-8)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-5)8)", "(-17)", "((0-5)8)", null, "1");
                var v = ov.swizzle.rkagg;
                Assert.AreEqual("((0-5)8)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)3)", "-6", "6", "(-56)", "((-7-2)3)");
                var v = ov.swizzle.rkagb;
                Assert.AreEqual("((-7-2)3)", v.x);
                Assert.AreEqual("((-7-2)3)", v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((66)6)", "6", "6", null);
                var v = ov.swizzle.rkaga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((66)6)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "-7", "(-9-8)", "", "((2-6)7)");
                var v = ov.swizzle.rkagk;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("((2-6)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((2-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "8", "", "((-70)-8)");
                var v = ov.swizzle.rkab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-70)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((5-2)-1)", "(7-3)", "(88)", "((5-2)-1)", "");
                var v = ov.swizzle.rkabr;
                Assert.AreEqual("((5-2)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((5-2)-1)", v.z);
                Assert.AreEqual("(88)", v.w);
                Assert.AreEqual("((5-2)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)0)", "(09)", "-1", null, "((-34)-6)");
                var v = ov.swizzle.rkabg;
                Assert.AreEqual("((48)0)", v.x);
                Assert.AreEqual("((-34)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "1", "7", null, "(0-1)");
                var v = ov.swizzle.rkabb;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((92)1)", "(-5-5)", "0", null, "((92)1)");
                var v = ov.swizzle.rkaba;
                Assert.AreEqual("((92)1)", v.x);
                Assert.AreEqual("((92)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "((58)-6)", "((58)-6)", "((-1-4)-1)", "-5");
                var v = ov.swizzle.rkabk;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-1-4)-1)", v.z);
                Assert.AreEqual("((58)-6)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-1", "-2", "(49)", "-2");
                var v = ov.swizzle.rkaa;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("(49)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "", "4", "4", "0");
                var v = ov.swizzle.rkaar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "(9-7)", "1", "3", "(9-7)");
                var v = ov.swizzle.rkaag;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(9-7)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(9-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)6)", "(36)", "((-19)0)", "(36)", "(36)");
                var v = ov.swizzle.rkaab;
                Assert.AreEqual("((-8-2)6)", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("((-19)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-5)", "", "((-26)-2)", "(-63)", "(-63)");
                var v = ov.swizzle.rkaaa;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-7)", null, "", "8");
                var v = ov.swizzle.rkaak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((20)6)", "-3", "(8-8)", "(8-8)", "(-93)");
                var v = ov.swizzle.rkak;
                Assert.AreEqual("((20)6)", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(8-8)", v.z);
                Assert.AreEqual("(-93)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "((68)6)", "-9", "((-28)4)", "((91)-8)");
                var v = ov.swizzle.rkakr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((91)-8)", v.y);
                Assert.AreEqual("((-28)4)", v.z);
                Assert.AreEqual("((91)-8)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-1)4)", "-7", null, "((-84)-9)", "((-3-6)3)");
                var v = ov.swizzle.rkakg;
                Assert.AreEqual("((-2-1)4)", v.x);
                Assert.AreEqual("((-3-6)3)", v.y);
                Assert.AreEqual("((-84)-9)", v.z);
                Assert.AreEqual("((-3-6)3)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-9-9)", "((36)9)", "", "(-58)");
                var v = ov.swizzle.rkakb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("((36)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "((70)-8)", "((25)9)", "((-2-9)8)", "((-2-9)8)");
                var v = ov.swizzle.rkaka;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("((-2-9)8)", v.y);
                Assert.AreEqual("((-2-9)8)", v.z);
                Assert.AreEqual("((-2-9)8)", v.w);
                Assert.AreEqual("((-2-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-3)-6)", "((17)6)", "", "((08)-5)", null);
                var v = ov.swizzle.rkakk;
                Assert.AreEqual("((-5-3)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((08)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", null, "((2-8)2)", "-9", null);
                var v = ov.swizzle.rkk;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("(86)", null, "-1", "", "((88)7)");
                var v = ov.swizzle.rkkr;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("((88)7)", v.y);
                Assert.AreEqual("((88)7)", v.z);
                Assert.AreEqual("(86)", v.w);
            }
            {
                var ov = new gvec5<string>("(-5-8)", "((71)-6)", "(-5-8)", "((3-1)-5)", "((1-3)-6)");
                var v = ov.swizzle.rkkrr;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("((1-3)-6)", v.y);
                Assert.AreEqual("((1-3)-6)", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "6", "((8-9)-9)", "((5-3)-7)", "6");
                var v = ov.swizzle.rkkrg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)5)", null, "((-69)5)", "((-2-6)-4)", "6");
                var v = ov.swizzle.rkkrb;
                Assert.AreEqual("((-69)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-69)5)", v.w);
                Assert.AreEqual("((-69)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "((-52)-7)", "((35)-5)", "3", "3");
                var v = ov.swizzle.rkkra;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((8-9)-5)", null, "(-29)", null, "((8-9)-5)");
                var v = ov.swizzle.rkkrk;
                Assert.AreEqual("((8-9)-5)", v.x);
                Assert.AreEqual("((8-9)-5)", v.y);
                Assert.AreEqual("((8-9)-5)", v.z);
                Assert.AreEqual("((8-9)-5)", v.w);
                Assert.AreEqual("((8-9)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "6", "", "(-98)", "6");
                var v = ov.swizzle.rkkg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "((-59)-7)", "(5-8)", "(-3-8)");
                var v = ov.swizzle.rkkgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((1-4)-8)", "-2", "((77)6)", "");
                var v = ov.swizzle.rkkgg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((1-4)-8)", v.w);
                Assert.AreEqual("((1-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)-8)", "4", "((8-1)3)", "4", "((8-1)3)");
                var v = ov.swizzle.rkkgb;
                Assert.AreEqual("((-66)-8)", v.x);
                Assert.AreEqual("((8-1)3)", v.y);
                Assert.AreEqual("((8-1)3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((8-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-97)4)", "7", "9", "9");
                var v = ov.swizzle.rkkga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-97)4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "6", null, "(2-4)", "((18)-4)");
                var v = ov.swizzle.rkkgk;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("((18)-4)", v.y);
                Assert.AreEqual("((18)-4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((18)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-26)-8)", "-3", null, "-3");
                var v = ov.swizzle.rkkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "", "(0-3)", "((23)1)");
                var v = ov.swizzle.rkkbr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((23)1)", v.y);
                Assert.AreEqual("((23)1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(86)", "(-73)", "-7", "((81)5)", "((81)5)");
                var v = ov.swizzle.rkkbg;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("((81)5)", v.y);
                Assert.AreEqual("((81)5)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "(8-2)", "((-6-8)-2)", "(8-2)");
                var v = ov.swizzle.rkkbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("(8-2)", v.w);
                Assert.AreEqual("(8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((39)-4)", "((15)-9)", "(6-6)", "((-33)-9)");
                var v = ov.swizzle.rkkba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-33)-9)", v.y);
                Assert.AreEqual("((-33)-9)", v.z);
                Assert.AreEqual("((15)-9)", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(9-3)", "", "((31)-6)", "3");
                var v = ov.swizzle.rkkbk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(71)", "(-1-1)", "2", "((8-8)-3)", "(-67)");
                var v = ov.swizzle.rkka;
                Assert.AreEqual("(71)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("((8-8)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-87)1)", "0", "(06)", "8", "((-87)1)");
                var v = ov.swizzle.rkkar;
                Assert.AreEqual("((-87)1)", v.x);
                Assert.AreEqual("((-87)1)", v.y);
                Assert.AreEqual("((-87)1)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-87)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-8-5)-7)", "", "-3", "(-6-3)");
                var v = ov.swizzle.rkkag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-8-5)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-2)-1)", "((-3-2)-1)", null, "9", "2");
                var v = ov.swizzle.rkkab;
                Assert.AreEqual("((-3-2)-1)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((88)-1)", "-7", "9", null, null);
                var v = ov.swizzle.rkkaa;
                Assert.AreEqual("((88)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "(-3-7)", "7", "7", "((81)6)");
                var v = ov.swizzle.rkkak;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("((81)6)", v.y);
                Assert.AreEqual("((81)6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((81)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-66)", "((-85)1)", "((-85)1)", "((-59)-8)", null);
                var v = ov.swizzle.rkkk;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-6-1)", null, "(-5-6)", "((2-6)2)", "((44)7)");
                var v = ov.swizzle.rkkkr;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("((44)7)", v.y);
                Assert.AreEqual("((44)7)", v.z);
                Assert.AreEqual("((44)7)", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-9)", "(-3-5)", "2", "(8-9)", "((-25)7)");
                var v = ov.swizzle.rkkkg;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("((-25)7)", v.y);
                Assert.AreEqual("((-25)7)", v.z);
                Assert.AreEqual("((-25)7)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-42)", "9", "", "-1");
                var v = ov.swizzle.rkkkb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, null, null, "");
                var v = ov.swizzle.rkkka;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "(-1-2)", "8", "2");
                var v = ov.swizzle.rkkkk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "(33)", "(-84)", "1", "((-82)3)");
                var v = ov.swizzle.gr;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("", v.y);
            }
            {
                var ov = new gvec5<string>("7", "7", "5", "((38)8)", "((76)-1)");
                var v = ov.swizzle.grr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((54)-5)", "(-7-9)", "((54)-5)", "8", "((54)-5)");
                var v = ov.swizzle.grrr;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("((54)-5)", v.y);
                Assert.AreEqual("((54)-5)", v.z);
                Assert.AreEqual("((54)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((-9-6)0)", "(4-7)", "(-2-6)");
                var v = ov.swizzle.grrrr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(6-5)", "(-59)", "((79)4)", "(-16)", "1");
                var v = ov.swizzle.grrrg;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("(6-5)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)-5)", "8", null, "8", "(74)");
                var v = ov.swizzle.grrrb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((9-8)-5)", v.y);
                Assert.AreEqual("((9-8)-5)", v.z);
                Assert.AreEqual("((9-8)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-7)5)", "((-1-7)5)", "(02)", "(02)", "((-1-7)5)");
                var v = ov.swizzle.grrra;
                Assert.AreEqual("((-1-7)5)", v.x);
                Assert.AreEqual("((-1-7)5)", v.y);
                Assert.AreEqual("((-1-7)5)", v.z);
                Assert.AreEqual("((-1-7)5)", v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "5", "5", "((-5-8)-6)", "((1-4)-1)");
                var v = ov.swizzle.grrrk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("(98)", v.w);
                Assert.AreEqual("((1-4)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(6-5)", "(6-5)", "", "-2");
                var v = ov.swizzle.grrg;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(6-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-83)-7)", "(-2-6)", "9", "((-83)-7)", "");
                var v = ov.swizzle.grrgr;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("((-83)-7)", v.y);
                Assert.AreEqual("((-83)-7)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("((-83)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-3)", "", null, "-5", "9");
                var v = ov.swizzle.grrgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-1-9)", "((-78)0)", "", "2");
                var v = ov.swizzle.grrgb;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("((-78)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-83)-1)", "(-83)", "((-90)6)", null, "");
                var v = ov.swizzle.grrga;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("((-83)-1)", v.y);
                Assert.AreEqual("((-83)-1)", v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((26)-9)", "-9", "-9", "((45)5)");
                var v = ov.swizzle.grrgk;
                Assert.AreEqual("((26)-9)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("((26)-9)", v.w);
                Assert.AreEqual("((45)5)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "5", "(4-5)", "(4-5)", "(4-5)");
                var v = ov.swizzle.grrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(4-5)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-3-4)", "", "(-3-4)", "(-23)");
                var v = ov.swizzle.grrbr;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "-2", "((13)1)", "(-8-9)", "6");
                var v = ov.swizzle.grrbg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((13)1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "((-65)7)", "((37)-4)", "(67)");
                var v = ov.swizzle.grrbb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-65)7)", v.w);
                Assert.AreEqual("((-65)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-66)", "(-66)", "(0-7)", null);
                var v = ov.swizzle.grrba;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("(0-7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(90)", "(-5-5)", "((93)-3)", "-8");
                var v = ov.swizzle.grrbk;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-5-5)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((9-5)-8)", "((9-5)-8)", "((9-5)-8)", "(-62)");
                var v = ov.swizzle.grra;
                Assert.AreEqual("((9-5)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((9-5)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((-45)0)", "9", "(0-7)", "-9", "");
                var v = ov.swizzle.grrar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-45)0)", v.y);
                Assert.AreEqual("((-45)0)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-45)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "0", "((68)3)", "((68)3)", null);
                var v = ov.swizzle.grrag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("((68)3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((4-5)9)", "-4", "((-55)4)", null, "(-36)");
                var v = ov.swizzle.grrab;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((4-5)9)", v.y);
                Assert.AreEqual("((4-5)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-55)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((69)-2)", "((8-5)7)", "((9-3)4)", "0", "-5");
                var v = ov.swizzle.grraa;
                Assert.AreEqual("((8-5)7)", v.x);
                Assert.AreEqual("((69)-2)", v.y);
                Assert.AreEqual("((69)-2)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-49)-7)", "(60)", "(60)", "(60)", null);
                var v = ov.swizzle.grrak;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("((-49)-7)", v.y);
                Assert.AreEqual("((-49)-7)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", "", "((47)2)", "(08)", "-5");
                var v = ov.swizzle.grrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-4)7)", null, "(-2-1)", "", "(-77)");
                var v = ov.swizzle.grrkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-6-4)7)", v.y);
                Assert.AreEqual("((-6-4)7)", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("((-6-4)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-89)", null, "(-52)");
                var v = ov.swizzle.grrkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "(9-8)", null, "5");
                var v = ov.swizzle.grrkb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "-5", "(2-4)", "((-6-4)6)");
                var v = ov.swizzle.grrka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-6-4)6)", v.w);
                Assert.AreEqual("(2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-9)-2)", "((12)7)", "(89)", "(-1-8)", "");
                var v = ov.swizzle.grrkk;
                Assert.AreEqual("((12)7)", v.x);
                Assert.AreEqual("((3-9)-2)", v.y);
                Assert.AreEqual("((3-9)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "((-84)-8)", "((-6-1)-8)", "(33)", "((-6-1)-8)");
                var v = ov.swizzle.grg;
                Assert.AreEqual("((-84)-8)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("((-84)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("5", "5", "3", "((-34)0)", null);
                var v = ov.swizzle.grgr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>(null, "9", "(7-9)", "", "");
                var v = ov.swizzle.grgrr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-5)", null, "((2-5)1)", "(2-4)", "((2-5)1)");
                var v = ov.swizzle.grgrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-6)-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-3-6)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(8-4)", "((-9-8)9)", "(5-3)", "((-9-8)9)");
                var v = ov.swizzle.grgrb;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-8)9)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "((8-8)-7)", "((45)4)", "9");
                var v = ov.swizzle.grgra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((45)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(08)", "((6-5)-1)", "(58)", "(08)", null);
                var v = ov.swizzle.grgrk;
                Assert.AreEqual("((6-5)-1)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("((6-5)-1)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-1)8)", "(99)", "(99)", "((-7-1)8)", "(-31)");
                var v = ov.swizzle.grgg;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("((-7-1)8)", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("(99)", v.w);
            }
            {
                var ov = new gvec5<string>("(5-3)", "((-1-3)-9)", "", "", "-5");
                var v = ov.swizzle.grggr;
                Assert.AreEqual("((-1-3)-9)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("((-1-3)-9)", v.z);
                Assert.AreEqual("((-1-3)-9)", v.w);
                Assert.AreEqual("(5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(83)", "9", "9", "((4-5)-9)", "((-36)5)");
                var v = ov.swizzle.grggg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)2)", "(-2-5)", "", "(32)", "((-74)2)");
                var v = ov.swizzle.grggb;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("((-74)2)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "1", "", "(-90)");
                var v = ov.swizzle.grgga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "(89)", "-4", "", "((54)3)");
                var v = ov.swizzle.grggk;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("((54)3)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-4-1)", "((3-1)6)", "-4", "(-4-1)");
                var v = ov.swizzle.grgb;
                Assert.AreEqual("(-4-1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("((3-1)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "", "(5-7)", "", "");
                var v = ov.swizzle.grgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual("(-9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-2)9)", "((8-6)-6)", null, "", "(-62)");
                var v = ov.swizzle.grgbg;
                Assert.AreEqual("((8-6)-6)", v.x);
                Assert.AreEqual("((-3-2)9)", v.y);
                Assert.AreEqual("((8-6)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((8-6)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)-2)", "(54)", "(55)", "(55)", "-7");
                var v = ov.swizzle.grgbb;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("((4-2)-2)", v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "(81)", "(81)", "(-23)", "-9");
                var v = ov.swizzle.grgba;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("(81)", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "(66)", "", null);
                var v = ov.swizzle.grgbk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((32)-9)", "((67)0)", "5", "((67)0)", "5");
                var v = ov.swizzle.grga;
                Assert.AreEqual("((67)0)", v.x);
                Assert.AreEqual("((32)-9)", v.y);
                Assert.AreEqual("((67)0)", v.z);
                Assert.AreEqual("((67)0)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((-3-7)-9)", "((-3-7)-9)", "(-45)", "(28)");
                var v = ov.swizzle.grgar;
                Assert.AreEqual("((-3-7)-9)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-3-7)-9)", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("9", "2", "2", "2", "(62)");
                var v = ov.swizzle.grgag;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((29)1)", "5", "-4", "((-61)2)");
                var v = ov.swizzle.grgab;
                Assert.AreEqual("((29)1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((29)1)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(18)", "-2", "-2", "((-81)7)");
                var v = ov.swizzle.grgaa;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((9-5)4)", "(-7-1)", "0", "0", "((-16)-4)");
                var v = ov.swizzle.grgak;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("((9-5)4)", v.y);
                Assert.AreEqual("(-7-1)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-16)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(-5-8)", "", "(-33)");
                var v = ov.swizzle.grgk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-33)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "(-68)", "((6-4)6)", "(-68)", "-5");
                var v = ov.swizzle.grgkr;
                Assert.AreEqual("(-68)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((45)8)", "(-39)", "((-40)5)", "((45)8)");
                var v = ov.swizzle.grgkg;
                Assert.AreEqual("((45)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((45)8)", v.z);
                Assert.AreEqual("((45)8)", v.w);
                Assert.AreEqual("((45)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "((74)4)", "-9");
                var v = ov.swizzle.grgkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-15)", "(14)", "3", null);
                var v = ov.swizzle.grgka;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((0-6)-4)", null, "(-2-8)", "((0-2)-7)", "8");
                var v = ov.swizzle.grgkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-6)-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((48)-4)", "((48)-4)", null, "(2-7)", "((30)-3)");
                var v = ov.swizzle.grb;
                Assert.AreEqual("((48)-4)", v.x);
                Assert.AreEqual("((48)-4)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("((-9-7)0)", "((-72)-4)", "((-72)-4)", "1", "(13)");
                var v = ov.swizzle.grbr;
                Assert.AreEqual("((-72)-4)", v.x);
                Assert.AreEqual("((-9-7)0)", v.y);
                Assert.AreEqual("((-72)-4)", v.z);
                Assert.AreEqual("((-9-7)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((68)-2)", "3", "2", "((-22)-6)", "(5-8)");
                var v = ov.swizzle.grbrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((68)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((68)-2)", v.w);
                Assert.AreEqual("((68)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-80)", "((-8-6)7)", "", null, "");
                var v = ov.swizzle.grbrg;
                Assert.AreEqual("((-8-6)7)", v.x);
                Assert.AreEqual("(-80)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-80)", v.w);
                Assert.AreEqual("((-8-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)4)", "", "((-4-8)4)", "(-4-9)", "(13)");
                var v = ov.swizzle.grbrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((12)4)", v.y);
                Assert.AreEqual("((-4-8)4)", v.z);
                Assert.AreEqual("((12)4)", v.w);
                Assert.AreEqual("((-4-8)4)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(68)", "(68)", "((-89)0)", "((86)3)");
                var v = ov.swizzle.grbra;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-89)0)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-2-3)8)", "(7-8)", "-8", null);
                var v = ov.swizzle.grbrk;
                Assert.AreEqual("((-2-3)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(39)", "((-19)6)", "((-19)6)", "((9-8)-1)");
                var v = ov.swizzle.grbg;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-19)6)", v.z);
                Assert.AreEqual("(39)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-4", "(-8-5)", "8", "(2-1)");
                var v = ov.swizzle.grbgr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "-9", "(-78)", "((99)-6)", "(-78)");
                var v = ov.swizzle.grbgg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-91)8)", "1", null, "((-34)-6)", "(7-9)");
                var v = ov.swizzle.grbgb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-91)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "(-29)", "(-29)", "((72)-8)");
                var v = ov.swizzle.grbga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(49)", "-1", "-1");
                var v = ov.swizzle.grbgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "-9", "(0-4)", "");
                var v = ov.swizzle.grbb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("((71)-8)", "-6", "-3", "((98)-2)", "");
                var v = ov.swizzle.grbbr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((71)-8)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((71)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-3)", null, "(1-3)", "(69)", "(1-3)");
                var v = ov.swizzle.grbbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(1-3)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-57)", "((-58)-6)", "1", "6");
                var v = ov.swizzle.grbbb;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-58)-6)", v.z);
                Assert.AreEqual("((-58)-6)", v.w);
                Assert.AreEqual("((-58)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-6)-3)", "-7", "((29)-8)", "4", null);
                var v = ov.swizzle.grbba;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((1-6)-3)", v.y);
                Assert.AreEqual("((29)-8)", v.z);
                Assert.AreEqual("((29)-8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-98)3)", "((-5-9)-1)", "(-5-8)", "((-76)4)");
                var v = ov.swizzle.grbbk;
                Assert.AreEqual("((-98)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-9)-1)", v.z);
                Assert.AreEqual("((-5-9)-1)", v.w);
                Assert.AreEqual("((-76)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-57)-8)", "(4-6)", null, "(-2-6)", "(-2-6)");
                var v = ov.swizzle.grba;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("((-57)-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-2-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(71)", "-3", "(32)", "-3", "(71)");
                var v = ov.swizzle.grbar;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(71)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-3)", "(33)", "(33)", "((05)2)", "-6");
                var v = ov.swizzle.grbag;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("(0-3)", v.y);
                Assert.AreEqual("(33)", v.z);
                Assert.AreEqual("((05)2)", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-1)-1)", "(76)", "(6-1)", "7", "((-3-2)5)");
                var v = ov.swizzle.grbab;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("((6-1)-1)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)7)", "-7", "((-8-8)-4)", "((-96)4)", null);
                var v = ov.swizzle.grbaa;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-76)7)", v.y);
                Assert.AreEqual("((-8-8)-4)", v.z);
                Assert.AreEqual("((-96)4)", v.w);
                Assert.AreEqual("((-96)4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(58)", "((-60)-6)", "5", null);
                var v = ov.swizzle.grbak;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-60)-6)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(6-9)", "-2", null, "(40)");
                var v = ov.swizzle.grbk;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(40)", v.w);
            }
            {
                var ov = new gvec5<string>("((93)6)", "((93)6)", "3", "(29)", "(29)");
                var v = ov.swizzle.grbkr;
                Assert.AreEqual("((93)6)", v.x);
                Assert.AreEqual("((93)6)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(29)", v.w);
                Assert.AreEqual("((93)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(27)", "(27)", "((-5-7)-6)", "((33)7)", "(96)");
                var v = ov.swizzle.grbkg;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("((-5-7)-6)", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec5<string>("((-94)9)", "(14)", "(-22)", "((-8-6)4)", "((2-3)-7)");
                var v = ov.swizzle.grbkb;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("((-94)9)", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("((2-3)-7)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)5)", "-2", "-2", "(06)", "(14)");
                var v = ov.swizzle.grbka;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-79)5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("(06)", v.v);
            }
            {
                var ov = new gvec5<string>("(03)", "-9", "((-62)-7)", "-9", "9");
                var v = ov.swizzle.grbkk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("((-62)-7)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "-2", "(40)", "((06)-1)", "-9");
                var v = ov.swizzle.gra;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("((06)-1)", v.z);
            }
            {
                var ov = new gvec5<string>("-8", "(18)", "", "((7-7)-9)", "-5");
                var v = ov.swizzle.grar;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((7-7)-9)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-89)", "((-7-3)3)", "", "4");
                var v = ov.swizzle.grarr;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-3-9)", "4", "((04)4)", "((4-8)6)");
                var v = ov.swizzle.grarg;
                Assert.AreEqual("(-3-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((04)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)-8)", "(7-6)", "", "(-5-2)", "((1-3)6)");
                var v = ov.swizzle.grarb;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("((46)-8)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("((46)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-9)1)", "((83)-9)", "", "(49)", "(-62)");
                var v = ov.swizzle.grara;
                Assert.AreEqual("((83)-9)", v.x);
                Assert.AreEqual("((8-9)1)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("((8-9)1)", v.w);
                Assert.AreEqual("(49)", v.v);
            }
            {
                var ov = new gvec5<string>("(48)", "", "(48)", "((-77)8)", "0");
                var v = ov.swizzle.grark;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("((-77)8)", v.z);
                Assert.AreEqual("(48)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(0-1)", "9", null, "(-47)", "(0-1)");
                var v = ov.swizzle.grag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("", "4", "((-50)5)", "((-50)5)", "");
                var v = ov.swizzle.gragr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-50)5)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "(27)", "-6");
                var v = ov.swizzle.gragg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((76)-7)", "(85)", "(5-2)", "(5-2)");
                var v = ov.swizzle.gragb;
                Assert.AreEqual("((76)-7)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual("((76)-7)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "(-2-3)", "((4-8)5)", "", "((17)3)");
                var v = ov.swizzle.graga;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-21)8)", "((-99)8)", "((-9-2)3)", null, "");
                var v = ov.swizzle.gragk;
                Assert.AreEqual("((-99)8)", v.x);
                Assert.AreEqual("((-21)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-99)8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-8)-5)", "((5-4)4)", "-4", "((-26)2)", "");
                var v = ov.swizzle.grab;
                Assert.AreEqual("((5-4)4)", v.x);
                Assert.AreEqual("((-4-8)-5)", v.y);
                Assert.AreEqual("((-26)2)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((-43)-7)", "(95)", "5", "(-4-2)", "((85)8)");
                var v = ov.swizzle.grabr;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("((-43)-7)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-43)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((59)0)", "((-6-2)-8)", "-4", "-4");
                var v = ov.swizzle.grabg;
                Assert.AreEqual("((59)0)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-6-2)-8)", v.w);
                Assert.AreEqual("((59)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)-1)", "(7-4)", "-9", "3", "((0-3)-1)");
                var v = ov.swizzle.grabb;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("((0-3)-1)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-2)", "", "((6-2)2)", "((-3-6)-2)", "((2-9)-7)");
                var v = ov.swizzle.graba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-3-6)-2)", v.y);
                Assert.AreEqual("((-3-6)-2)", v.z);
                Assert.AreEqual("((6-2)2)", v.w);
                Assert.AreEqual("((-3-6)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "((3-6)-2)", "((21)1)", "4", "5");
                var v = ov.swizzle.grabk;
                Assert.AreEqual("((3-6)-2)", v.x);
                Assert.AreEqual("(-1-7)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((21)1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((1-1)-2)", "((1-1)-2)", "3", "-6");
                var v = ov.swizzle.graa;
                Assert.AreEqual("((1-1)-2)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("2", "", "2", null, "((4-7)9)");
                var v = ov.swizzle.graar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "(0-5)", "(9-7)", "(0-5)", "");
                var v = ov.swizzle.graag;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "2", "1", null);
                var v = ov.swizzle.graab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((7-9)-3)", "6", "3", "((7-9)-3)", "6");
                var v = ov.swizzle.graaa;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((7-9)-3)", v.y);
                Assert.AreEqual("((7-9)-3)", v.z);
                Assert.AreEqual("((7-9)-3)", v.w);
                Assert.AreEqual("((7-9)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((39)0)", "((-7-6)-9)", "", "-1");
                var v = ov.swizzle.graak;
                Assert.AreEqual("((39)0)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-97)", "-5", "(-89)", "((-93)4)");
                var v = ov.swizzle.grak;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("((-93)4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-70)-5)", "(01)", "(01)", "(10)", "(01)");
                var v = ov.swizzle.grakr;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("((-70)-5)", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("((-70)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "((-6-1)9)", "-1", "(-60)");
                var v = ov.swizzle.grakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-60)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((82)-2)", "(-2-4)", "4", "(51)", "(51)");
                var v = ov.swizzle.grakb;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("((82)-2)", v.y);
                Assert.AreEqual("(51)", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", "-7", "-7", "0", "-7");
                var v = ov.swizzle.graka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "(37)", "(37)", "2");
                var v = ov.swizzle.grakk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-13)1)", "((9-3)7)", "-3", "");
                var v = ov.swizzle.grk;
                Assert.AreEqual("((-13)1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("5", "((12)-5)", "(-8-2)", "((-66)4)", "-9");
                var v = ov.swizzle.grkr;
                Assert.AreEqual("((12)-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("(36)", "((-4-1)-3)", "(14)", "((4-6)9)", "-4");
                var v = ov.swizzle.grkrr;
                Assert.AreEqual("((-4-1)-3)", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("(36)", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "((-59)1)", "3", "((-2-3)-7)", "((5-3)-2)");
                var v = ov.swizzle.grkrg;
                Assert.AreEqual("((-59)1)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("((5-3)-2)", v.z);
                Assert.AreEqual("(-21)", v.w);
                Assert.AreEqual("((-59)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-18)7)", "(-97)", "((2-2)-8)", null, "-7");
                var v = ov.swizzle.grkrb;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("((-18)7)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-18)7)", v.w);
                Assert.AreEqual("((2-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((94)3)", "-3", "(87)", "", "((01)6)");
                var v = ov.swizzle.grkra;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((94)3)", v.y);
                Assert.AreEqual("((01)6)", v.z);
                Assert.AreEqual("((94)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(32)", "(32)", "(32)", "(32)", "(52)");
                var v = ov.swizzle.grkrk;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("(32)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("(32)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)-1)", "-5", "(58)", "5", "(-5-8)");
                var v = ov.swizzle.grkg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((03)-1)", v.y);
                Assert.AreEqual("(-5-8)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(5-9)", "-4", "((6-1)3)", "2");
                var v = ov.swizzle.grkgr;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(5-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "((02)-7)", "((02)-7)", "7", "(-7-3)");
                var v = ov.swizzle.grkgg;
                Assert.AreEqual("((02)-7)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("((02)-7)", v.w);
                Assert.AreEqual("((02)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-1)", null, "5", "((67)1)", null);
                var v = ov.swizzle.grkgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-6)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-2)-3)", "(74)", "", "((-3-2)-3)", "(74)");
                var v = ov.swizzle.grkga;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("((-3-2)-3)", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("(74)", v.w);
                Assert.AreEqual("((-3-2)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-38)2)", "(-58)", "((1-6)6)", "(-1-9)", null);
                var v = ov.swizzle.grkgk;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((-38)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-47)", "(-47)", null, "", "-6");
                var v = ov.swizzle.grkb;
                Assert.AreEqual("(-47)", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("8", "8", "(68)", "8", null);
                var v = ov.swizzle.grkbr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(68)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", "4", "((-2-2)9)", "-2");
                var v = ov.swizzle.grkbg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((88)-8)", "9", "((88)-8)", "(-2-3)");
                var v = ov.swizzle.grkbb;
                Assert.AreEqual("((88)-8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((5-7)0)", null, "");
                var v = ov.swizzle.grkba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-7)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-5)7)", "(7-3)", "((-1-5)7)", "1", "1");
                var v = ov.swizzle.grkbk;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("((-1-5)7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-1-5)7)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-4-3)-6)", "((-4-3)-6)", "", null);
                var v = ov.swizzle.grka;
                Assert.AreEqual("((-4-3)-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(4-5)", "(-4-7)", null, "-6", "(4-5)");
                var v = ov.swizzle.grkar;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("(4-5)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-7)", "-2", "((-7-1)-9)", "", "0");
                var v = ov.swizzle.grkag;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-54)", "", "", "");
                var v = ov.swizzle.grkab;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)2)", "((-3-3)8)", null, "(5-1)", "((-3-3)8)");
                var v = ov.swizzle.grkaa;
                Assert.AreEqual("((-3-3)8)", v.x);
                Assert.AreEqual("((-1-9)2)", v.y);
                Assert.AreEqual("((-3-3)8)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", null, "((-3-1)6)", "(36)", "(36)");
                var v = ov.swizzle.grkak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("(36)", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", null, "((-3-8)-7)", "-4", "((-5-8)9)");
                var v = ov.swizzle.grkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("((-5-8)9)", v.z);
                Assert.AreEqual("((-5-8)9)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-64)", "9", "((9-9)-8)", "((9-4)2)");
                var v = ov.swizzle.grkkr;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-4)2)", v.z);
                Assert.AreEqual("((9-4)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)6)", "((49)0)", "((0-2)6)", "6", null);
                var v = ov.swizzle.grkkg;
                Assert.AreEqual("((49)0)", v.x);
                Assert.AreEqual("((0-2)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((49)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-2)-4)", "0", "(8-5)", null, "0");
                var v = ov.swizzle.grkkb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-4-2)-4)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "(5-4)", "(-6-7)", "((2-3)5)", "((-3-4)2)");
                var v = ov.swizzle.grkka;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("((-3-4)2)", v.z);
                Assert.AreEqual("((-3-4)2)", v.w);
                Assert.AreEqual("((2-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(04)", "(93)", "((-94)0)", "");
                var v = ov.swizzle.grkkk;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)-6)", "((-90)-3)", "(4-9)", "8", "8");
                var v = ov.swizzle.gg;
                Assert.AreEqual("((-90)-3)", v.x);
                Assert.AreEqual("((-90)-3)", v.y);
            }
            {
                var ov = new gvec5<string>("-7", "(-66)", "3", "((-38)7)", "3");
                var v = ov.swizzle.ggr;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>("(-1-8)", "-9", "", "(-1-8)", "-7");
                var v = ov.swizzle.ggrr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(-1-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((97)-2)", "((97)-2)", "-1", "((97)-2)", "-6");
                var v = ov.swizzle.ggrrr;
                Assert.AreEqual("((97)-2)", v.x);
                Assert.AreEqual("((97)-2)", v.y);
                Assert.AreEqual("((97)-2)", v.z);
                Assert.AreEqual("((97)-2)", v.w);
                Assert.AreEqual("((97)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((33)-8)", "(-4-9)", "((33)-8)", "((33)-8)");
                var v = ov.swizzle.ggrrg;
                Assert.AreEqual("((33)-8)", v.x);
                Assert.AreEqual("((33)-8)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((33)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-7)", "-8", "(3-9)", "((-8-1)2)", "-8");
                var v = ov.swizzle.ggrrb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual("(3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-43)", null, "((4-1)-5)", "(-4-9)");
                var v = ov.swizzle.ggrra;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((4-1)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((98)0)", "((-78)4)", "((98)0)", "3");
                var v = ov.swizzle.ggrrk;
                Assert.AreEqual("((98)0)", v.x);
                Assert.AreEqual("((98)0)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-97)4)", "((-86)-2)", "-6", "(-64)", "-7");
                var v = ov.swizzle.ggrg;
                Assert.AreEqual("((-86)-2)", v.x);
                Assert.AreEqual("((-86)-2)", v.y);
                Assert.AreEqual("((-97)4)", v.z);
                Assert.AreEqual("((-86)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-1)1)", "-7", "-7", "5", "-7");
                var v = ov.swizzle.ggrgr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((4-1)1)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((4-1)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((88)7)", "(5-5)", "(88)", "(88)");
                var v = ov.swizzle.ggrgg;
                Assert.AreEqual("((88)7)", v.x);
                Assert.AreEqual("((88)7)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((88)7)", v.w);
                Assert.AreEqual("((88)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "(54)", "(54)", "-5");
                var v = ov.swizzle.ggrgb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "7", "((37)8)", "-4");
                var v = ov.swizzle.ggrga;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((37)8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "(96)", "8", "8");
                var v = ov.swizzle.ggrgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "9", "9", "(-79)", "9");
                var v = ov.swizzle.ggrb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "-2", "9", "-2");
                var v = ov.swizzle.ggrbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)-7)", "", "((-7-4)-9)", "((3-9)5)", "2");
                var v = ov.swizzle.ggrbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-50)-7)", v.z);
                Assert.AreEqual("((-7-4)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "1", "((-27)4)", null);
                var v = ov.swizzle.ggrbb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-5-1)9)", "((-5-1)9)", "((81)4)", "9");
                var v = ov.swizzle.ggrba;
                Assert.AreEqual("((-5-1)9)", v.x);
                Assert.AreEqual("((-5-1)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-1)9)", v.w);
                Assert.AreEqual("((81)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-92)", "8", "(-77)", "(-92)");
                var v = ov.swizzle.ggrbk;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "", "((-8-9)3)", "((8-4)5)", null);
                var v = ov.swizzle.ggra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("((8-4)5)", v.w);
            }
            {
                var ov = new gvec5<string>("(2-3)", "(-20)", "((6-4)2)", "-5", "(-20)");
                var v = ov.swizzle.ggrar;
                Assert.AreEqual("(-20)", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("(2-3)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-9)-4)", null, "((-9-2)-6)", "((69)-2)", "-6");
                var v = ov.swizzle.ggrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-9)-4)", v.z);
                Assert.AreEqual("((69)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-16)-5)", "(3-3)", "-1", "3", null);
                var v = ov.swizzle.ggrab;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((-16)-5)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "", "(-5-9)", null);
                var v = ov.swizzle.ggraa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-88)-9)", "-2", "(-6-8)", "(-3-2)", "(-3-2)");
                var v = ov.swizzle.ggrak;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-88)-9)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "0", "((1-7)3)", "(2-7)", "(-6-5)");
                var v = ov.swizzle.ggrk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("(-6-5)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "(68)", "(18)", "8", "9");
                var v = ov.swizzle.ggrkr;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-9)", "-6", "-1", null, "(27)");
                var v = ov.swizzle.ggrkg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(09)", "(09)", "5", "-2", null);
                var v = ov.swizzle.ggrkb;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-5)3)", "(19)", "((90)-4)", "0");
                var v = ov.swizzle.ggrka;
                Assert.AreEqual("((3-5)3)", v.x);
                Assert.AreEqual("((3-5)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((90)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-5)", "2", "((24)-6)", "2", "");
                var v = ov.swizzle.ggrkk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((93)-3)", "((-54)-7)", "2", "(18)");
                var v = ov.swizzle.ggg;
                Assert.AreEqual("((93)-3)", v.x);
                Assert.AreEqual("((93)-3)", v.y);
                Assert.AreEqual("((93)-3)", v.z);
            }
            {
                var ov = new gvec5<string>("((7-2)2)", "((7-2)2)", "((7-2)2)", "((3-5)3)", "((7-2)2)");
                var v = ov.swizzle.gggr;
                Assert.AreEqual("((7-2)2)", v.x);
                Assert.AreEqual("((7-2)2)", v.y);
                Assert.AreEqual("((7-2)2)", v.z);
                Assert.AreEqual("((7-2)2)", v.w);
            }
            {
                var ov = new gvec5<string>("((1-6)4)", null, "(-8-4)", "-5", "-5");
                var v = ov.swizzle.gggrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((1-6)4)", v.w);
                Assert.AreEqual("((1-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(17)", "((-45)8)", null, "(93)", "4");
                var v = ov.swizzle.gggrg;
                Assert.AreEqual("((-45)8)", v.x);
                Assert.AreEqual("((-45)8)", v.y);
                Assert.AreEqual("((-45)8)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("((-45)8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-34)", "-4", "1", "(-87)");
                var v = ov.swizzle.gggrb;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", null, "(73)", "-8");
                var v = ov.swizzle.gggra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "((-4-4)9)", "((-75)-8)", null, "(-1-4)");
                var v = ov.swizzle.gggrk;
                Assert.AreEqual("((-4-4)9)", v.x);
                Assert.AreEqual("((-4-4)9)", v.y);
                Assert.AreEqual("((-4-4)9)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((13)-1)", "((4-7)-7)", "((3-5)-9)", "(09)", "5");
                var v = ov.swizzle.gggg;
                Assert.AreEqual("((4-7)-7)", v.x);
                Assert.AreEqual("((4-7)-7)", v.y);
                Assert.AreEqual("((4-7)-7)", v.z);
                Assert.AreEqual("((4-7)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(56)", "0", "(56)", "((74)6)", "((2-9)7)");
                var v = ov.swizzle.ggggr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("((-64)2)", "((-64)2)", "", "", "-7");
                var v = ov.swizzle.ggggg;
                Assert.AreEqual("((-64)2)", v.x);
                Assert.AreEqual("((-64)2)", v.y);
                Assert.AreEqual("((-64)2)", v.z);
                Assert.AreEqual("((-64)2)", v.w);
                Assert.AreEqual("((-64)2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-5-4)-1)", "-2", "9", "9");
                var v = ov.swizzle.ggggb;
                Assert.AreEqual("((-5-4)-1)", v.x);
                Assert.AreEqual("((-5-4)-1)", v.y);
                Assert.AreEqual("((-5-4)-1)", v.z);
                Assert.AreEqual("((-5-4)-1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)4)", "(0-5)", "(0-5)", "3", "");
                var v = ov.swizzle.gggga;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-44)", "(-44)", "((-5-5)1)", null, null);
                var v = ov.swizzle.ggggk;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(83)", "5", "(-4-2)", "-1", "(-4-2)");
                var v = ov.swizzle.gggb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-4-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "", "", "((23)1)", "4");
                var v = ov.swizzle.gggbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-2)-8)", "", "((1-6)-5)", "8");
                var v = ov.swizzle.gggbg;
                Assert.AreEqual("((-6-2)-8)", v.x);
                Assert.AreEqual("((-6-2)-8)", v.y);
                Assert.AreEqual("((-6-2)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-6-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "(6-3)", "((-71)9)", "((-2-5)9)", "((-71)9)");
                var v = ov.swizzle.gggbb;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("((-71)9)", v.w);
                Assert.AreEqual("((-71)9)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(12)", null, "(12)", "3");
                var v = ov.swizzle.gggba;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "6", "6", "((8-8)-2)");
                var v = ov.swizzle.gggbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((8-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((64)4)", "(1-9)", "", "(9-3)");
                var v = ov.swizzle.ggga;
                Assert.AreEqual("((64)4)", v.x);
                Assert.AreEqual("((64)4)", v.y);
                Assert.AreEqual("((64)4)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("6", "-7", "", "((-7-7)5)", "((-7-7)5)");
                var v = ov.swizzle.gggar;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-7-7)5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "5", "", "3");
                var v = ov.swizzle.gggag;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-68)8)", "(-50)", "-8", "(-50)", "((-68)8)");
                var v = ov.swizzle.gggab;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(-50)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(1-1)", "(1-1)", null);
                var v = ov.swizzle.gggaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-55)1)", "1", "", "(-2-6)", "-1");
                var v = ov.swizzle.gggak;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "((-1-2)7)", "-4", "((-17)-9)");
                var v = ov.swizzle.gggk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-17)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-8-7)4)", "8", null, "((84)4)", "");
                var v = ov.swizzle.gggkr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-7)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)-7)", "4", null, "((55)-6)", "((55)-6)");
                var v = ov.swizzle.gggkg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((55)-6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-7)", "-1", "(4-8)", "9", "-9");
                var v = ov.swizzle.gggkb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)9)", "(7-6)", "((-45)7)", null, "(-31)");
                var v = ov.swizzle.gggka;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("(7-6)", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", null, "2", "(-91)", "((-9-1)-2)");
                var v = ov.swizzle.gggkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-1)-2)", v.w);
                Assert.AreEqual("((-9-1)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "(-46)", "3", "((-9-2)-3)", "8");
                var v = ov.swizzle.ggb;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("(-46)", v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "-3", "((7-1)1)", "(55)", "((-68)5)");
                var v = ov.swizzle.ggbr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((7-1)1)", v.z);
                Assert.AreEqual("(-1-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((6-9)8)", "((-3-2)5)", "(-54)", "8");
                var v = ov.swizzle.ggbrr;
                Assert.AreEqual("((6-9)8)", v.x);
                Assert.AreEqual("((6-9)8)", v.y);
                Assert.AreEqual("((-3-2)5)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)4)", "(21)", "2", "(37)", "3");
                var v = ov.swizzle.ggbrg;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-5-1)4)", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-3)-8)", "((-2-3)-8)", "((-9-9)0)", "(-7-3)", "4");
                var v = ov.swizzle.ggbrb;
                Assert.AreEqual("((-2-3)-8)", v.x);
                Assert.AreEqual("((-2-3)-8)", v.y);
                Assert.AreEqual("((-9-9)0)", v.z);
                Assert.AreEqual("((-2-3)-8)", v.w);
                Assert.AreEqual("((-9-9)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-2)-4)", "4", "4", null, "(-5-7)");
                var v = ov.swizzle.ggbra;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((3-2)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-1", null, "(39)", "((0-1)-6)");
                var v = ov.swizzle.ggbrk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((0-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)4)", null, "-8", "", "");
                var v = ov.swizzle.ggbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-8-1)-9)", "(-65)", "((-1-3)-5)", "((-1-3)-5)", "6");
                var v = ov.swizzle.ggbgr;
                Assert.AreEqual("(-65)", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("((-1-3)-5)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("((-8-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(98)", "", "((5-7)8)", "((5-7)8)", "((-6-9)8)");
                var v = ov.swizzle.ggbgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((5-7)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((08)3)", "", "", "((84)-6)", "((87)-3)");
                var v = ov.swizzle.ggbgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "((46)-8)", "(31)", "3");
                var v = ov.swizzle.ggbga;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((46)-8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "((44)9)", "0", "0");
                var v = ov.swizzle.ggbgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((44)9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((68)5)", "(-9-2)", null, "(-9-2)");
                var v = ov.swizzle.ggbb;
                Assert.AreEqual("((68)5)", v.x);
                Assert.AreEqual("((68)5)", v.y);
                Assert.AreEqual("(-9-2)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "-2", "(10)", "(41)");
                var v = ov.swizzle.ggbbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(0-3)", "", "7", "(81)", "");
                var v = ov.swizzle.ggbbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(8-6)", "(-8-3)", "((27)-8)", "(8-6)");
                var v = ov.swizzle.ggbbb;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("(8-6)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "(32)", "", "-3", "((4-7)-8)");
                var v = ov.swizzle.ggbba;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("(32)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-9", "5", "5");
                var v = ov.swizzle.ggbbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((88)-8)", "((88)-8)", "-4", "((88)-8)", null);
                var v = ov.swizzle.ggba;
                Assert.AreEqual("((88)-8)", v.x);
                Assert.AreEqual("((88)-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((88)-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(3-8)", "0", "(-9-6)", "0");
                var v = ov.swizzle.ggbar;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(74)", "-7", "", "", "6");
                var v = ov.swizzle.ggbag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-1)3)", "(2-1)", "((-6-1)3)", "-4", "");
                var v = ov.swizzle.ggbab;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("((-6-1)3)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-6-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "((8-2)7)", null, "-2", "");
                var v = ov.swizzle.ggbaa;
                Assert.AreEqual("((8-2)7)", v.x);
                Assert.AreEqual("((8-2)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("9", "2", "-7", "", "((2-5)-3)");
                var v = ov.swizzle.ggbak;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((2-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-9)", "-5", "3", "(9-9)", "3");
                var v = ov.swizzle.ggbk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((07)3)", "((96)6)", "9", "((96)6)");
                var v = ov.swizzle.ggbkr;
                Assert.AreEqual("((07)3)", v.x);
                Assert.AreEqual("((07)3)", v.y);
                Assert.AreEqual("((96)6)", v.z);
                Assert.AreEqual("((96)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "(92)", "-7", "0", "(-65)");
                var v = ov.swizzle.ggbkg;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("(92)", v.v);
            }
            {
                var ov = new gvec5<string>("((79)2)", "((-45)-1)", "(55)", null, "((15)7)");
                var v = ov.swizzle.ggbkb;
                Assert.AreEqual("((-45)-1)", v.x);
                Assert.AreEqual("((-45)-1)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("((15)7)", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-6", "3", "((59)2)", null);
                var v = ov.swizzle.ggbka;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((59)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-7)6)", "6", "", "6", "-7");
                var v = ov.swizzle.ggbkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "((-95)8)", "9", "(-64)");
                var v = ov.swizzle.gga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
            }
            {
                var ov = new gvec5<string>("-7", "", "(93)", "((52)-9)", "((30)-6)");
                var v = ov.swizzle.ggar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((52)-9)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(-53)", "((9-2)-2)", "-2", "(-53)", "(58)");
                var v = ov.swizzle.ggarr;
                Assert.AreEqual("((9-2)-2)", v.x);
                Assert.AreEqual("((9-2)-2)", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("(-53)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "8", "((23)0)", "4", "(11)");
                var v = ov.swizzle.ggarg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("2", "5", "((-94)0)", "(-80)", "(-7-1)");
                var v = ov.swizzle.ggarb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-80)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-94)0)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "-8", null, null, "(33)");
                var v = ov.swizzle.ggara;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", null, null, "7", "((5-5)-5)");
                var v = ov.swizzle.ggark;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("((5-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)-5)", "((08)-5)", "0", "0", "(64)");
                var v = ov.swizzle.ggag;
                Assert.AreEqual("((08)-5)", v.x);
                Assert.AreEqual("((08)-5)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((08)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-1)-9)", "(-5-8)", null, "-6", null);
                var v = ov.swizzle.ggagr;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("((-6-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-6-3)-5)", "(53)", "", "(53)");
                var v = ov.swizzle.ggagg;
                Assert.AreEqual("((-6-3)-5)", v.x);
                Assert.AreEqual("((-6-3)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-3)-5)", v.w);
                Assert.AreEqual("((-6-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "((-3-5)5)", null, "(-5-9)", "-5");
                var v = ov.swizzle.ggagb;
                Assert.AreEqual("((-3-5)5)", v.x);
                Assert.AreEqual("((-3-5)5)", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("((-3-5)5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-97)5)", "", "", "-8", "((-97)5)");
                var v = ov.swizzle.ggaga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(59)", "-6", "((58)-4)", "(-8-9)");
                var v = ov.swizzle.ggagk;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("((58)-4)", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("(-8-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-4)-3)", "((3-4)-3)", "((3-4)-3)", "((-7-1)5)");
                var v = ov.swizzle.ggab;
                Assert.AreEqual("((3-4)-3)", v.x);
                Assert.AreEqual("((3-4)-3)", v.y);
                Assert.AreEqual("((3-4)-3)", v.z);
                Assert.AreEqual("((3-4)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((13)-7)", "(-8-7)", "-8", "", "8");
                var v = ov.swizzle.ggabr;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((13)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "-5", "(93)", "-5");
                var v = ov.swizzle.ggabg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-4-7)-6)", "", null, "((-5-8)-7)", "(04)");
                var v = ov.swizzle.ggabb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-8)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(1-6)", "((73)8)", "-5", "((-91)1)", "");
                var v = ov.swizzle.ggaba;
                Assert.AreEqual("((73)8)", v.x);
                Assert.AreEqual("((73)8)", v.y);
                Assert.AreEqual("((-91)1)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-91)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "", "1", "((97)9)");
                var v = ov.swizzle.ggabk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((97)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-21)", "((4-7)-4)", "8", "8");
                var v = ov.swizzle.ggaa;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(-8-1)", null, "2");
                var v = ov.swizzle.ggaar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)9)", "1", "((6-5)9)", "((56)7)", "((40)1)");
                var v = ov.swizzle.ggaag;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((56)7)", v.z);
                Assert.AreEqual("((56)7)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((14)-3)", "(-33)", "5", "", "((-93)2)");
                var v = ov.swizzle.ggaab;
                Assert.AreEqual("(-33)", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(5-7)", "(-26)", "", "(-26)", "-6");
                var v = ov.swizzle.ggaaa;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("(-26)", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("(-26)", v.w);
                Assert.AreEqual("(-26)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-6)-2)", "(-53)", null, "", "((-2-6)-2)");
                var v = ov.swizzle.ggaak;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-6)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-3-6)", "(-3-6)", null, "((-34)7)");
                var v = ov.swizzle.ggak;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-34)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-74)", "0", "((-6-8)0)", "(-74)", "((-6-8)0)");
                var v = ov.swizzle.ggakr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("((-6-8)0)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)-6)", "((37)-9)", "((-4-3)-6)", "-5", null);
                var v = ov.swizzle.ggakg;
                Assert.AreEqual("((37)-9)", v.x);
                Assert.AreEqual("((37)-9)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((37)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "((-49)2)", "-4", "((0-1)-6)", null);
                var v = ov.swizzle.ggakb;
                Assert.AreEqual("((-49)2)", v.x);
                Assert.AreEqual("((-49)2)", v.y);
                Assert.AreEqual("((0-1)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", null, "", "(48)", "(-2-6)");
                var v = ov.swizzle.ggaka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("(48)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "(18)", "((3-3)2)", "-1");
                var v = ov.swizzle.ggakk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((3-3)2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((76)-8)", "(-7-9)", "-8", "-8");
                var v = ov.swizzle.ggk;
                Assert.AreEqual("((76)-8)", v.x);
                Assert.AreEqual("((76)-8)", v.y);
                Assert.AreEqual("-8", v.z);
            }
            {
                var ov = new gvec5<string>("(3-3)", "((-61)-7)", "-2", "(90)", "-8");
                var v = ov.swizzle.ggkr;
                Assert.AreEqual("((-61)-7)", v.x);
                Assert.AreEqual("((-61)-7)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(3-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-18)", "(-8-2)", "", "(-18)", "((-4-3)-3)");
                var v = ov.swizzle.ggkrr;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("((-4-3)-3)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((44)6)", "8", "(1-4)", "(1-4)");
                var v = ov.swizzle.ggkrg;
                Assert.AreEqual("((44)6)", v.x);
                Assert.AreEqual("((44)6)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((44)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(51)", "(-28)", "((-3-2)0)", "(-28)", "((-3-2)0)");
                var v = ov.swizzle.ggkrb;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("((-3-2)0)", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual("((-3-2)0)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-3)", "5", "((-30)-6)", "((-5-4)-8)");
                var v = ov.swizzle.ggkra;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("((-5-4)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-30)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "(-60)", "", "(-60)");
                var v = ov.swizzle.ggkrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(8-7)", "5", "5", "((28)3)");
                var v = ov.swizzle.ggkg;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("(8-7)", v.y);
                Assert.AreEqual("((28)3)", v.z);
                Assert.AreEqual("(8-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(25)", "(-3-5)", "", "((0-7)-7)", "5");
                var v = ov.swizzle.ggkgr;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "-5", "-5", "((-3-5)-9)", "6");
                var v = ov.swizzle.ggkgg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((32)7)", "-3", "((32)7)", "-2");
                var v = ov.swizzle.ggkgb;
                Assert.AreEqual("((32)7)", v.x);
                Assert.AreEqual("((32)7)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((32)7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "(-2-6)", "-3", "((1-6)3)", "((58)-4)");
                var v = ov.swizzle.ggkga;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("((58)-4)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("((1-6)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "0", null, "(-4-4)");
                var v = ov.swizzle.ggkgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-3", "3", "(9-4)", "(-68)");
                var v = ov.swizzle.ggkb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("", "(86)", "1", "", null);
                var v = ov.swizzle.ggkbr;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("(86)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(68)", "((49)7)", "(8-6)", "5");
                var v = ov.swizzle.ggkbg;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((49)7)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-47)1)", "((-4-9)9)", "6", "6");
                var v = ov.swizzle.ggkbb;
                Assert.AreEqual("((-47)1)", v.x);
                Assert.AreEqual("((-47)1)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-4-9)9)", v.w);
                Assert.AreEqual("((-4-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "-1", "-1", "-1", "-6");
                var v = ov.swizzle.ggkba;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-46)3)", "(-19)", "((-46)3)", "(4-3)", "-8");
                var v = ov.swizzle.ggkbk;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-46)3)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("5", "0", "(-8-2)", "((6-5)-2)", "((32)3)");
                var v = ov.swizzle.ggka;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((32)3)", v.z);
                Assert.AreEqual("((6-5)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-7)", null, "2", "((-65)-7)", "(3-7)");
                var v = ov.swizzle.ggkar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("((-65)-7)", v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-1)", "(-87)", "7", "(73)");
                var v = ov.swizzle.ggkag;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(62)", "(62)", "((78)-3)", "2", "2");
                var v = ov.swizzle.ggkab;
                Assert.AreEqual("(62)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((78)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(14)", "(14)", "((-1-1)-7)", "-4", "(-9-5)");
                var v = ov.swizzle.ggkaa;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("9", "7", "7", "7", "((52)-3)");
                var v = ov.swizzle.ggkak;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((52)-3)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((52)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)6)", "8", "(-85)", null, "(-85)");
                var v = ov.swizzle.ggkk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-85)", v.z);
                Assert.AreEqual("(-85)", v.w);
            }
            {
                var ov = new gvec5<string>("((2-7)7)", "(9-3)", "7", "(9-3)", "((2-7)7)");
                var v = ov.swizzle.ggkkr;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("(9-3)", v.y);
                Assert.AreEqual("((2-7)7)", v.z);
                Assert.AreEqual("((2-7)7)", v.w);
                Assert.AreEqual("((2-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-92)9)", "((-8-6)9)", "((8-1)-8)", null, "(-12)");
                var v = ov.swizzle.ggkkg;
                Assert.AreEqual("((-8-6)9)", v.x);
                Assert.AreEqual("((-8-6)9)", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("((-8-6)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((6-4)-6)", "((-4-9)-9)", "(-47)", "((-4-9)-9)");
                var v = ov.swizzle.ggkkb;
                Assert.AreEqual("((6-4)-6)", v.x);
                Assert.AreEqual("((6-4)-6)", v.y);
                Assert.AreEqual("((-4-9)-9)", v.z);
                Assert.AreEqual("((-4-9)-9)", v.w);
                Assert.AreEqual("((-4-9)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((84)-9)", "((7-5)4)", "(72)", "(-8-3)", "(-8-3)");
                var v = ov.swizzle.ggkka;
                Assert.AreEqual("((7-5)4)", v.x);
                Assert.AreEqual("((7-5)4)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((68)9)", "-2", "((68)9)", "((-58)-9)", "8");
                var v = ov.swizzle.ggkkk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(30)", "(30)", "(-81)", "", "(30)");
                var v = ov.swizzle.gb;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("(-81)", v.y);
            }
            {
                var ov = new gvec5<string>("((-9-5)-2)", "(68)", "(-7-3)", "((67)2)", "-3");
                var v = ov.swizzle.gbr;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("((-9-5)-2)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(-74)", "-6", "5", "(92)");
                var v = ov.swizzle.gbrr;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-72)", "(4-9)", "((-58)-7)", "((-58)-7)", "4");
                var v = ov.swizzle.gbrrr;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual("((-58)-7)", v.y);
                Assert.AreEqual("(-72)", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("(-72)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "2", "((-31)6)", "", "-1");
                var v = ov.swizzle.gbrrg;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-31)6)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-4)-6)", "((4-2)0)", null, "(-23)", "-3");
                var v = ov.swizzle.gbrrb;
                Assert.AreEqual("((4-2)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-4)-6)", v.z);
                Assert.AreEqual("((-2-4)-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-90)0)", "1", "2", "2");
                var v = ov.swizzle.gbrra;
                Assert.AreEqual("((-90)0)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "(-48)", "(-49)", "(1-6)", "((-46)-1)");
                var v = ov.swizzle.gbrrk;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("(-49)", v.w);
                Assert.AreEqual("((-46)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(56)", "4", "(4-3)", "((-63)8)", "(7-4)");
                var v = ov.swizzle.gbrg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-4)", "((7-4)8)", "(-9-7)", "((-95)4)", "5");
                var v = ov.swizzle.gbrgr;
                Assert.AreEqual("((7-4)8)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("((7-4)8)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "-1", "8", "((-3-3)2)");
                var v = ov.swizzle.gbrgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "(5-6)", "0", "((5-5)2)");
                var v = ov.swizzle.gbrgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-18)6)", "-7", "(-45)", "(5-2)");
                var v = ov.swizzle.gbrga;
                Assert.AreEqual("((-18)6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-18)6)", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((9-4)0)", null, null, "");
                var v = ov.swizzle.gbrgk;
                Assert.AreEqual("((9-4)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((9-4)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "5", "((1-8)5)", "((-3-5)7)", "((-2-5)-5)");
                var v = ov.swizzle.gbrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((1-8)5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((1-8)5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-91)3)", "-1", "(-18)", "(-18)", "4");
                var v = ov.swizzle.gbrbr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("((-91)3)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("((-91)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-8-5)", "((-5-4)-9)", "((-5-4)-9)");
                var v = ov.swizzle.gbrbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-8-7)4)", "((-85)-6)", "", null, "");
                var v = ov.swizzle.gbrbb;
                Assert.AreEqual("((-85)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-7)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "((-26)-7)", "-4", "");
                var v = ov.swizzle.gbrba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-26)-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-26)-7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "", "-7", "((-1-8)-4)");
                var v = ov.swizzle.gbrbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-1-8)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "0", "((18)1)", "-7", "(0-5)");
                var v = ov.swizzle.gbra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((18)1)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("5", "-3", "(7-9)", "((-47)-8)", "2");
                var v = ov.swizzle.gbrar;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-47)-8)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((4-1)4)", "4", "((4-1)4)", "(8-4)", "");
                var v = ov.swizzle.gbrag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((4-1)4)", v.y);
                Assert.AreEqual("((4-1)4)", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "((8-2)-4)", "(50)", "(-1-9)", null);
                var v = ov.swizzle.gbrab;
                Assert.AreEqual("((8-2)-4)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-8)9)", "(81)", "-8", "(-62)", "(81)");
                var v = ov.swizzle.gbraa;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-9-8)9)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-8)", "7", "((8-7)1)", "((-55)6)", "");
                var v = ov.swizzle.gbrak;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((8-7)1)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("((-55)6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "-4", "((-6-3)-1)", "-3");
                var v = ov.swizzle.gbrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("6", "6", "3", "((83)-9)", "(-8-4)");
                var v = ov.swizzle.gbrkr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-8-4)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "", "-6", "1");
                var v = ov.swizzle.gbrkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-55)", "-4", "-4", "7", "((-2-8)-6)");
                var v = ov.swizzle.gbrkb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("((-2-8)-6)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-82)", "", "(-33)", "((63)7)", "((63)7)");
                var v = ov.swizzle.gbrka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("((63)7)", v.w);
                Assert.AreEqual("((63)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)3)", "3", null, "(3-3)", null);
                var v = ov.swizzle.gbrkk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-7)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "(-9-2)", "8", "5", "(-8-7)");
                var v = ov.swizzle.gbg;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-9-2)", v.z);
            }
            {
                var ov = new gvec5<string>("-4", "((-77)-2)", "", "-6", "((-77)-2)");
                var v = ov.swizzle.gbgr;
                Assert.AreEqual("((-77)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-77)-2)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("7", "", "", "7", null);
                var v = ov.swizzle.gbgrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "5", "((1-8)4)", "-5", "-5");
                var v = ov.swizzle.gbgrg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((1-8)4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(7-3)", "", "(-2-7)", "((-6-4)5)");
                var v = ov.swizzle.gbgrb;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)9)", "-9", "(-99)", "((20)7)", "(-6-2)");
                var v = ov.swizzle.gbgra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-7-4)9)", v.w);
                Assert.AreEqual("((20)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-81)", "3", "((68)-3)", "3", "-7");
                var v = ov.swizzle.gbgrk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((68)-3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((08)5)", "-6", "(95)", "-4", "(2-3)");
                var v = ov.swizzle.gbgg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("9", "6", "((-83)7)", "((45)-2)", "(92)");
                var v = ov.swizzle.gbggr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-83)7)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-19)", "(-58)", "(-19)", "-3", "-9");
                var v = ov.swizzle.gbggg;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("(-58)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((12)2)", "((47)-6)", "((-8-4)-4)", "(8-2)");
                var v = ov.swizzle.gbggb;
                Assert.AreEqual("((12)2)", v.x);
                Assert.AreEqual("((47)-6)", v.y);
                Assert.AreEqual("((12)2)", v.z);
                Assert.AreEqual("((12)2)", v.w);
                Assert.AreEqual("((47)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)7)", "((50)7)", "-7", "7", "((5-4)1)");
                var v = ov.swizzle.gbgga;
                Assert.AreEqual("((50)7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((50)7)", v.z);
                Assert.AreEqual("((50)7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((57)-1)", "((8-7)-5)", "(16)");
                var v = ov.swizzle.gbggk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((57)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(16)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((92)-6)", "(1-9)", "((-7-9)1)", "((92)-6)");
                var v = ov.swizzle.gbgb;
                Assert.AreEqual("((92)-6)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("((92)-6)", v.z);
                Assert.AreEqual("(1-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((1-2)7)", "(68)", "(-4-2)", "(68)", "-1");
                var v = ov.swizzle.gbgbr;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("((1-2)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(85)", "-8", "((10)6)", "((10)6)", "-6");
                var v = ov.swizzle.gbgbg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((10)6)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((10)6)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-75)", "((9-9)-1)", "4", "6");
                var v = ov.swizzle.gbgbb;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("((9-9)-1)", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("((9-9)-1)", v.w);
                Assert.AreEqual("((9-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-9)9)", "-5", "9", "(12)", "9");
                var v = ov.swizzle.gbgba;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "(8-5)", "(8-5)", "((9-1)-8)");
                var v = ov.swizzle.gbgbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("((9-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-5", "6", "-2", "((-6-4)-5)");
                var v = ov.swizzle.gbga;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("4", "2", "(-27)", "(-27)", "((-53)9)");
                var v = ov.swizzle.gbgar;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-87)", "-8", "-1", "((0-3)3)");
                var v = ov.swizzle.gbgag;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)-4)", "-9", "((-1-2)-7)", "5", "(-50)");
                var v = ov.swizzle.gbgab;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-1-2)-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-1-2)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "7", null, "((85)7)");
                var v = ov.swizzle.gbgaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)8)", "-3", "((2-2)-4)", "(5-4)", "((-7-3)8)");
                var v = ov.swizzle.gbgak;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((2-2)-4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual("((-7-3)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-87)", "(29)", "(-2-6)", "-9");
                var v = ov.swizzle.gbgk;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "4", "3", "(-6-5)", "");
                var v = ov.swizzle.gbgkr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-6-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "(13)", "((81)6)", "(0-1)");
                var v = ov.swizzle.gbgkg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((5-1)-6)", "(-94)", "((5-1)-6)", "");
                var v = ov.swizzle.gbgkb;
                Assert.AreEqual("((5-1)-6)", v.x);
                Assert.AreEqual("(-94)", v.y);
                Assert.AreEqual("((5-1)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-94)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-7)", "((69)9)", null, "(-37)", "3");
                var v = ov.swizzle.gbgka;
                Assert.AreEqual("((69)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((69)9)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-89)3)", null, null, "-7");
                var v = ov.swizzle.gbgkk;
                Assert.AreEqual("((-89)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-89)3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-43)8)", "", "((-43)8)", "-7", "4");
                var v = ov.swizzle.gbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-43)8)", v.y);
                Assert.AreEqual("((-43)8)", v.z);
            }
            {
                var ov = new gvec5<string>("(-76)", "((-4-2)7)", "((8-4)2)", "-6", "-6");
                var v = ov.swizzle.gbbr;
                Assert.AreEqual("((-4-2)7)", v.x);
                Assert.AreEqual("((8-4)2)", v.y);
                Assert.AreEqual("((8-4)2)", v.z);
                Assert.AreEqual("(-76)", v.w);
            }
            {
                var ov = new gvec5<string>("((-20)-9)", "(-89)", "((-7-7)5)", "(-89)", "(-8-4)");
                var v = ov.swizzle.gbbrr;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("((-7-7)5)", v.y);
                Assert.AreEqual("((-7-7)5)", v.z);
                Assert.AreEqual("((-20)-9)", v.w);
                Assert.AreEqual("((-20)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "-8", "-8", "(-16)");
                var v = ov.swizzle.gbbrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(3-2)", "0", "(2-2)", "(2-2)");
                var v = ov.swizzle.gbbrb;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((12)5)", "((12)5)", null, "-5", "((8-2)4)");
                var v = ov.swizzle.gbbra;
                Assert.AreEqual("((12)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((12)5)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-91)", "", "-3", "(-3-9)");
                var v = ov.swizzle.gbbrk;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "7", null, "((5-9)-1)", "");
                var v = ov.swizzle.gbbg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("((-37)-2)", "-9", "(83)", "((-37)-2)", "");
                var v = ov.swizzle.gbbgr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-37)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-4)", "((4-2)6)", "2", "", "(5-7)");
                var v = ov.swizzle.gbbgg;
                Assert.AreEqual("((4-2)6)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((4-2)6)", v.w);
                Assert.AreEqual("((4-2)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-84)", "-6", "", "(54)");
                var v = ov.swizzle.gbbgb;
                Assert.AreEqual("(-84)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "8", "((09)-2)", "8", "3");
                var v = ov.swizzle.gbbga;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((09)-2)", v.y);
                Assert.AreEqual("((09)-2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(5-5)", "((-47)1)", null, "(67)", "(67)");
                var v = ov.swizzle.gbbgk;
                Assert.AreEqual("((-47)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-47)1)", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((11)-5)", "((0-8)-3)", "0", "-3");
                var v = ov.swizzle.gbbb;
                Assert.AreEqual("((11)-5)", v.x);
                Assert.AreEqual("((0-8)-3)", v.y);
                Assert.AreEqual("((0-8)-3)", v.z);
                Assert.AreEqual("((0-8)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-74)1)", "(29)", "2", "(61)", null);
                var v = ov.swizzle.gbbbr;
                Assert.AreEqual("(29)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-74)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-3)9)", "(-55)", "", null, "(-27)");
                var v = ov.swizzle.gbbbg;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-55)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-8)", "(-9-8)", "", "7");
                var v = ov.swizzle.gbbbb;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual("(-9-8)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "((-6-9)7)", "((12)0)", "-1");
                var v = ov.swizzle.gbbba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-9)7)", v.y);
                Assert.AreEqual("((-6-9)7)", v.z);
                Assert.AreEqual("((-6-9)7)", v.w);
                Assert.AreEqual("((12)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "8", "8", "");
                var v = ov.swizzle.gbbbk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "", "(5-6)", "-4", "");
                var v = ov.swizzle.gbba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "", "4", "");
                var v = ov.swizzle.gbbar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "((3-2)1)", "((3-2)1)", "1");
                var v = ov.swizzle.gbbag;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((3-2)1)", v.y);
                Assert.AreEqual("((3-2)1)", v.z);
                Assert.AreEqual("((3-2)1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "(53)", "((0-1)1)", "-1");
                var v = ov.swizzle.gbbab;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("((0-1)1)", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("(08)", "(08)", null, "((0-7)5)", "(-7-4)");
                var v = ov.swizzle.gbbaa;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((0-7)5)", v.w);
                Assert.AreEqual("((0-7)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-76)6)", "1", "((72)-1)");
                var v = ov.swizzle.gbbak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-76)6)", v.y);
                Assert.AreEqual("((-76)6)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((72)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(13)", "(-5-7)", "((-98)-6)", "(13)", "5");
                var v = ov.swizzle.gbbk;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("((-98)-6)", v.y);
                Assert.AreEqual("((-98)-6)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "1", "(63)", "(-35)", "-5");
                var v = ov.swizzle.gbbkr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(63)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-2)5)", "", "((06)2)", "(68)", "((06)2)");
                var v = ov.swizzle.gbbkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((06)2)", v.y);
                Assert.AreEqual("((06)2)", v.z);
                Assert.AreEqual("((06)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "2", "(7-9)", "((-5-7)9)");
                var v = ov.swizzle.gbbkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-5-7)9)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "((-98)1)", "(55)", null);
                var v = ov.swizzle.gbbka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-98)1)", v.y);
                Assert.AreEqual("((-98)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "((-56)-7)", "(2-1)", "6", "(-2-4)");
                var v = ov.swizzle.gbbkk;
                Assert.AreEqual("((-56)-7)", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "-7", "((0-9)-4)", "(3-4)");
                var v = ov.swizzle.gba;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((0-9)-4)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "", "((-1-8)5)", "(-8-3)", "(-30)");
                var v = ov.swizzle.gbar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-1-8)5)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-5-7)", "(-5-7)", "(-7-9)", "(-7-9)", "-9");
                var v = ov.swizzle.gbarr;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)-4)", "((-9-9)-3)", "", "((-9-9)-3)", "-3");
                var v = ov.swizzle.gbarg;
                Assert.AreEqual("((-9-9)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-9)-3)", v.z);
                Assert.AreEqual("((0-3)-4)", v.w);
                Assert.AreEqual("((-9-9)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(68)", "-6", "-6", "((-3-2)1)");
                var v = ov.swizzle.gbarb;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-1)2)", "-8", "((-6-1)2)", null, "(-80)");
                var v = ov.swizzle.gbara;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-6-1)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-1)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-25)-2)", "-7", "(-5-4)", "(-64)", null);
                var v = ov.swizzle.gbark;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual("((-25)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-4)-5)", "(50)", "(-4-4)", "4", "((75)2)");
                var v = ov.swizzle.gbag;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(50)", v.w);
            }
            {
                var ov = new gvec5<string>("((20)0)", "((7-9)7)", "(51)", "(1-6)", "(-2-9)");
                var v = ov.swizzle.gbagr;
                Assert.AreEqual("((7-9)7)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("((7-9)7)", v.w);
                Assert.AreEqual("((20)0)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "-5", "5", "((-1-8)-4)", "(-84)");
                var v = ov.swizzle.gbagg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-1-8)-4)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "((27)5)", "3", "((18)1)");
                var v = ov.swizzle.gbagb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((27)5)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((27)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "0", "(-11)", "(-11)");
                var v = ov.swizzle.gbaga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(99)", "(12)", "-7", "(-2-6)");
                var v = ov.swizzle.gbagk;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(99)", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "((-36)5)", "((-87)-5)", "-9", "-9");
                var v = ov.swizzle.gbab;
                Assert.AreEqual("((-36)5)", v.x);
                Assert.AreEqual("((-87)-5)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-87)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(13)", "((16)-8)", "((16)-8)", "8", "(13)");
                var v = ov.swizzle.gbabr;
                Assert.AreEqual("((16)-8)", v.x);
                Assert.AreEqual("((16)-8)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((16)-8)", v.w);
                Assert.AreEqual("(13)", v.v);
            }
            {
                var ov = new gvec5<string>("((-59)1)", "(-8-3)", "((3-4)5)", "7", "0");
                var v = ov.swizzle.gbabg;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((3-4)5)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((3-4)5)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-6)", "((-5-9)9)", "((-5-1)-4)", "", "((-5-9)9)");
                var v = ov.swizzle.gbabb;
                Assert.AreEqual("((-5-9)9)", v.x);
                Assert.AreEqual("((-5-1)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-1)-4)", v.w);
                Assert.AreEqual("((-5-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)7)", "((30)5)", "(-10)", "((6-4)-4)", "");
                var v = ov.swizzle.gbaba;
                Assert.AreEqual("((30)5)", v.x);
                Assert.AreEqual("(-10)", v.y);
                Assert.AreEqual("((6-4)-4)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("((6-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "(57)", "7", "(96)");
                var v = ov.swizzle.gbabk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(57)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(57)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "((-57)-3)", "8", "((02)-1)", "(8-2)");
                var v = ov.swizzle.gbaa;
                Assert.AreEqual("((-57)-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((02)-1)", v.z);
                Assert.AreEqual("((02)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-4)", null, "5", "(48)", "(48)");
                var v = ov.swizzle.gbaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(48)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-54)", "-4", "(-15)", "-5");
                var v = ov.swizzle.gbaag;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "((83)-8)", "((1-2)-7)", "", "");
                var v = ov.swizzle.gbaab;
                Assert.AreEqual("((83)-8)", v.x);
                Assert.AreEqual("((1-2)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-2)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-19)", "((39)8)", "(67)", "(67)");
                var v = ov.swizzle.gbaaa;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("((39)8)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)-9)", "(-47)", "-3", null, "((-58)-2)");
                var v = ov.swizzle.gbaak;
                Assert.AreEqual("(-47)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-58)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-53)", "(-68)", "-4", null);
                var v = ov.swizzle.gbak;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>(null, "-5", "((-14)-4)", "((55)9)", "(-4-3)");
                var v = ov.swizzle.gbakr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-14)-4)", v.y);
                Assert.AreEqual("((55)9)", v.z);
                Assert.AreEqual("(-4-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", "((-8-5)8)", "4", "((-81)2)", "(-67)");
                var v = ov.swizzle.gbakg;
                Assert.AreEqual("((-8-5)8)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-81)2)", v.z);
                Assert.AreEqual("(-67)", v.w);
                Assert.AreEqual("((-8-5)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(9-8)", "-5", "(9-8)", "(17)");
                var v = ov.swizzle.gbakb;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(9-8)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((5-6)-5)", "1", "((5-6)-5)", "((-10)2)", "((-20)-7)");
                var v = ov.swizzle.gbaka;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((5-6)-5)", v.y);
                Assert.AreEqual("((-10)2)", v.z);
                Assert.AreEqual("((-20)-7)", v.w);
                Assert.AreEqual("((-10)2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((44)2)", "((92)4)", "((92)4)", "-9");
                var v = ov.swizzle.gbakk;
                Assert.AreEqual("((44)2)", v.x);
                Assert.AreEqual("((92)4)", v.y);
                Assert.AreEqual("((92)4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-73)1)", null, "((-73)1)", "3");
                var v = ov.swizzle.gbk;
                Assert.AreEqual("((-73)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "9", "((6-1)4)", "((-53)-6)", "5");
                var v = ov.swizzle.gbkr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((6-1)4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-1-6)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "", "(0-5)", "-6", "((-12)7)");
                var v = ov.swizzle.gbkrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("((-12)7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-58)", "((-8-4)2)", "(-58)", "-1", "((-8-4)2)");
                var v = ov.swizzle.gbkrg;
                Assert.AreEqual("((-8-4)2)", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("((-8-4)2)", v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("((-8-4)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((9-3)-5)", "-6", "-2", "");
                var v = ov.swizzle.gbkrb;
                Assert.AreEqual("((9-3)-5)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((6-2)1)", "(54)", null, "-9");
                var v = ov.swizzle.gbkra;
                Assert.AreEqual("((6-2)1)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-2-7)3)", "1", "((5-5)-7)", "1", "1");
                var v = ov.swizzle.gbkrk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((5-5)-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-2-7)3)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(4-3)", "((-29)-7)", "((-6-6)3)", "((-6-6)3)", "-7");
                var v = ov.swizzle.gbkg;
                Assert.AreEqual("((-29)-7)", v.x);
                Assert.AreEqual("((-6-6)3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-29)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "((-2-3)3)", "-7", "", "-7");
                var v = ov.swizzle.gbkgr;
                Assert.AreEqual("((-2-3)3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-2-3)3)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-3)2)", "(64)", "-1", null);
                var v = ov.swizzle.gbkgg;
                Assert.AreEqual("((-6-3)2)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-3)2)", v.w);
                Assert.AreEqual("((-6-3)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((4-6)-1)", "((-22)4)", "-6", "(-4-9)");
                var v = ov.swizzle.gbkgb;
                Assert.AreEqual("((4-6)-1)", v.x);
                Assert.AreEqual("((-22)4)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("((4-6)-1)", v.w);
                Assert.AreEqual("((-22)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-86)7)", "((11)9)", "((11)9)", "-6");
                var v = ov.swizzle.gbkga;
                Assert.AreEqual("((-86)7)", v.x);
                Assert.AreEqual("((11)9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-86)7)", v.w);
                Assert.AreEqual("((11)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "(8-7)", "4", "-6");
                var v = ov.swizzle.gbkgk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(8-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((28)-3)", "((-55)4)", "(34)", "5", "(-17)");
                var v = ov.swizzle.gbkb;
                Assert.AreEqual("((-55)4)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(34)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((53)-3)", "(33)", "2", "(-6-9)");
                var v = ov.swizzle.gbkbr;
                Assert.AreEqual("((53)-3)", v.x);
                Assert.AreEqual("(33)", v.y);
                Assert.AreEqual("(-6-9)", v.z);
                Assert.AreEqual("(33)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-57)", "", "((71)2)", "((-2-7)-9)", "-9");
                var v = ov.swizzle.gbkbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((71)2)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((71)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "1", "((44)3)", "((89)7)", "((44)3)");
                var v = ov.swizzle.gbkbb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((44)3)", v.y);
                Assert.AreEqual("((44)3)", v.z);
                Assert.AreEqual("((44)3)", v.w);
                Assert.AreEqual("((44)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((97)-2)", "(7-9)", "(9-1)", "((-8-9)-1)", "");
                var v = ov.swizzle.gbkba;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("((-8-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "((-85)-8)", "-3", "(-3-1)", "7");
                var v = ov.swizzle.gbkbk;
                Assert.AreEqual("((-85)-8)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-32)3)", "((-58)-1)", "1", null, "(-4-4)");
                var v = ov.swizzle.gbka;
                Assert.AreEqual("((-58)-1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(5-9)", "((-9-9)1)", "4", null, "4");
                var v = ov.swizzle.gbkar;
                Assert.AreEqual("((-9-9)1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(1-1)", "((17)-6)", "7", "6");
                var v = ov.swizzle.gbkag;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((17)-6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "((-6-5)-9)", null, "-3", "-3");
                var v = ov.swizzle.gbkab;
                Assert.AreEqual("((-6-5)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-5-6)", "((84)6)", "(-5-6)", "");
                var v = ov.swizzle.gbkaa;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual("((84)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-6)", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-3-1)2)", "((-6-4)5)", "(4-9)", null);
                var v = ov.swizzle.gbkak;
                Assert.AreEqual("((-3-1)2)", v.x);
                Assert.AreEqual("((-6-4)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(3-5)", "((-10)6)", "((-10)6)", "((6-9)5)");
                var v = ov.swizzle.gbkk;
                Assert.AreEqual("(3-5)", v.x);
                Assert.AreEqual("((-10)6)", v.y);
                Assert.AreEqual("((6-9)5)", v.z);
                Assert.AreEqual("((6-9)5)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-3-4)", "((67)8)", "", "(-3-4)");
                var v = ov.swizzle.gbkkr;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("((67)8)", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("(-3-4)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)-9)", "(5-2)", "-9", "(-4-2)", "((-79)-9)");
                var v = ov.swizzle.gbkkg;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-79)-9)", v.z);
                Assert.AreEqual("((-79)-9)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-5-4)", "(-14)", "", "5");
                var v = ov.swizzle.gbkkb;
                Assert.AreEqual("(-5-4)", v.x);
                Assert.AreEqual("(-14)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "(-6-6)", "((6-1)-4)", "((-7-2)5)");
                var v = ov.swizzle.gbkka;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("((-7-2)5)", v.z);
                Assert.AreEqual("((-7-2)5)", v.w);
                Assert.AreEqual("((6-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "", "(-9-6)", "-6", "5");
                var v = ov.swizzle.gbkkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "-6", "", "((-5-2)-4)", null);
                var v = ov.swizzle.ga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-5-2)-4)", v.y);
            }
            {
                var ov = new gvec5<string>("2", "2", null, "-3", "");
                var v = ov.swizzle.gar;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-4", "((-11)-4)", "-4", "-4");
                var v = ov.swizzle.garr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("8", "2", "9", "9", "(7-2)");
                var v = ov.swizzle.garrr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "(9-2)", "(-33)", "(9-2)", "((-19)-2)");
                var v = ov.swizzle.garrg;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(-9-2)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("(9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-3-3)4)", "-9", "((-6-9)-9)", "6");
                var v = ov.swizzle.garrb;
                Assert.AreEqual("((-3-3)4)", v.x);
                Assert.AreEqual("((-6-9)-9)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "6", "(0-5)", "6", "6");
                var v = ov.swizzle.garra;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "(-8-6)", "(-8-6)", "(-79)", "(-79)");
                var v = ov.swizzle.garrk;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("(-79)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("(-79)", v.v);
            }
            {
                var ov = new gvec5<string>("(49)", "(-29)", "((15)8)", "((10)7)", "-7");
                var v = ov.swizzle.garg;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("((10)7)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("(-29)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(6-6)", "(-8-8)", "(8-3)", "((-3-4)-8)");
                var v = ov.swizzle.gargr;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(6-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-5-6)8)", "2", "2", null);
                var v = ov.swizzle.gargg;
                Assert.AreEqual("((-5-6)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-6)8)", v.w);
                Assert.AreEqual("((-5-6)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)-3)", null, "(-54)", null, "((90)-3)");
                var v = ov.swizzle.gargb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-66)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-3", "-3", "", null);
                var v = ov.swizzle.garga;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "(43)", "(43)", "(23)", "((-11)-2)");
                var v = ov.swizzle.gargk;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("((-11)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-8)-8)", "2", "((-1-8)-8)", "((-53)8)", "((-53)8)");
                var v = ov.swizzle.garb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-53)8)", v.y);
                Assert.AreEqual("((-1-8)-8)", v.z);
                Assert.AreEqual("((-1-8)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-1)1)", "((8-1)1)", null, null, "-4");
                var v = ov.swizzle.garbr;
                Assert.AreEqual("((8-1)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-1)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((8-1)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-9", "-4", "(-30)", "");
                var v = ov.swizzle.garbg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(5-9)", "(-33)", "-9", "5");
                var v = ov.swizzle.garbb;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-33)", v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-1)0)", null, "((2-4)-6)", "(03)", "((-4-1)0)");
                var v = ov.swizzle.garba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("((-4-1)0)", v.z);
                Assert.AreEqual("((2-4)-6)", v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)-4)", "(-5-9)", null, "", "((82)0)");
                var v = ov.swizzle.garbk;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((48)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((82)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "(-83)", "-8", "(85)", "7");
                var v = ov.swizzle.gara;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("(85)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-30)", "(-8-2)", "(-30)", "-3");
                var v = ov.swizzle.garar;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-30)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(54)", "", "((71)-6)", "", "-6");
                var v = ov.swizzle.garag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "((-1-4)-1)", "(-5-8)", "((1-1)1)", "9");
                var v = ov.swizzle.garab;
                Assert.AreEqual("((-1-4)-1)", v.x);
                Assert.AreEqual("((1-1)1)", v.y);
                Assert.AreEqual("(42)", v.z);
                Assert.AreEqual("((1-1)1)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "-4", "", "-4");
                var v = ov.swizzle.garaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(3-9)", "((-5-4)1)", "(3-9)", "((-26)-5)", "2");
                var v = ov.swizzle.garak;
                Assert.AreEqual("((-5-4)1)", v.x);
                Assert.AreEqual("((-26)-5)", v.y);
                Assert.AreEqual("(3-9)", v.z);
                Assert.AreEqual("((-26)-5)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-93)-4)", "(-95)", "", null, "-4");
                var v = ov.swizzle.gark;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-93)-4)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((35)-6)", "", "-1", "", null);
                var v = ov.swizzle.garkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((35)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((35)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "(-28)", null, "((-3-7)-4)");
                var v = ov.swizzle.garkg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-3-7)-4)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "(-6-1)", "(-8-8)", "-2", "-2");
                var v = ov.swizzle.garkb;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-16)-2)", "8", "((00)-6)", "((-16)-2)");
                var v = ov.swizzle.garka;
                Assert.AreEqual("((-16)-2)", v.x);
                Assert.AreEqual("((00)-6)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-16)-2)", v.w);
                Assert.AreEqual("((00)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "((1-4)-8)", "-8", null);
                var v = ov.swizzle.garkk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-66)1)", "((0-7)-2)", "((-66)1)", "((0-7)-2)", "((-66)1)");
                var v = ov.swizzle.gag;
                Assert.AreEqual("((0-7)-2)", v.x);
                Assert.AreEqual("((0-7)-2)", v.y);
                Assert.AreEqual("((0-7)-2)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(-79)", null, null, "(-3-6)");
                var v = ov.swizzle.gagr;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("", "((-2-6)7)", "((-2-6)7)", null, "((35)8)");
                var v = ov.swizzle.gagrr;
                Assert.AreEqual("((-2-6)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-6)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-7)7)", "-6", "1", "((06)-7)");
                var v = ov.swizzle.gagrg;
                Assert.AreEqual("((-3-7)7)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-3-7)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-3-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "0", "((-2-3)4)", "0", "(-3-7)");
                var v = ov.swizzle.gagrb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-2-3)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)7)", "6", "((1-9)0)", "-4", "(-3-5)");
                var v = ov.swizzle.gagra;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((3-4)7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "", "(-1-5)", "(8-9)", "((88)3)");
                var v = ov.swizzle.gagrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("((88)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)3)", "1", "((-78)0)", "1", "(-9-9)");
                var v = ov.swizzle.gagg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("((36)3)", "6", "", "((-2-4)-4)", "(2-9)");
                var v = ov.swizzle.gaggr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-2-4)-4)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((36)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-6)0)", "3", "-7", "((-2-6)0)", "-7");
                var v = ov.swizzle.gaggg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-2-6)0)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(-56)", "-2", "-1");
                var v = ov.swizzle.gaggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-56)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-9)", "-5", "-6", "-5", "-5");
                var v = ov.swizzle.gagga;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "((70)-7)", "(47)", "(47)", null);
                var v = ov.swizzle.gaggk;
                Assert.AreEqual("((70)-7)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("((70)-7)", v.z);
                Assert.AreEqual("((70)-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", "(-40)", "(7-7)", "2", "9");
                var v = ov.swizzle.gagb;
                Assert.AreEqual("(-40)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("(7-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-2)-6)", "((-6-2)-7)", "(8-9)", "", "((-6-2)-7)");
                var v = ov.swizzle.gagbr;
                Assert.AreEqual("((-6-2)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-6-2)-7)", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual("((4-2)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-70)", "-3", "((-73)-2)", "(-9-4)", "((-73)-2)");
                var v = ov.swizzle.gagbg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-73)-2)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-21)", null, "(-21)", "-3");
                var v = ov.swizzle.gagbb;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "3", "8", null);
                var v = ov.swizzle.gagba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-4)", "((27)3)", null, null, "((-9-2)-4)");
                var v = ov.swizzle.gagbk;
                Assert.AreEqual("((27)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((27)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-2)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-90)-6)", "((-83)7)", "-2", "(78)", null);
                var v = ov.swizzle.gaga;
                Assert.AreEqual("((-83)7)", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("((-83)7)", v.z);
                Assert.AreEqual("(78)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "(-5-1)", "(4-4)", "(-60)", "-4");
                var v = ov.swizzle.gagar;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("(-60)", v.y);
                Assert.AreEqual("(-5-1)", v.z);
                Assert.AreEqual("(-60)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "(24)", "(-5-8)", null, "(8-7)");
                var v = ov.swizzle.gagag;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("(-11)", "(-11)", "2", "((-5-1)-9)", "((-24)8)");
                var v = ov.swizzle.gagab;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("((-5-1)-9)", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("((-5-1)-9)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "-1", "9", "(4-6)");
                var v = ov.swizzle.gagaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(82)", "(82)", "-1", "-5", "(82)");
                var v = ov.swizzle.gagak;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(82)", v.v);
            }
            {
                var ov = new gvec5<string>("((76)5)", "-9", "(-21)", "-9", "(78)");
                var v = ov.swizzle.gagk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(78)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-31)", "((91)-4)", "4", "4");
                var v = ov.swizzle.gagkr;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((91)3)", "(-62)", "-7", "(-19)", "((-2-7)0)");
                var v = ov.swizzle.gagkg;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("((-2-7)0)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(11)", "2", "(-6-2)", "((-95)8)");
                var v = ov.swizzle.gagkb;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("(-6-2)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("((-95)8)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-3)", "((-74)-1)", "-8", "(-99)", "");
                var v = ov.swizzle.gagka;
                Assert.AreEqual("((-74)-1)", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("((-74)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-99)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "((9-3)-3)", "", "(-17)");
                var v = ov.swizzle.gagkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("((17)-6)", "", "((6-6)3)", "(-50)", "-8");
                var v = ov.swizzle.gab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("((6-6)3)", v.z);
            }
            {
                var ov = new gvec5<string>("((-43)-6)", "(-70)", "(-70)", "3", "((9-2)-6)");
                var v = ov.swizzle.gabr;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual("((-43)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-92)", "((-15)-3)", "(3-7)", "", "(-92)");
                var v = ov.swizzle.gabrr;
                Assert.AreEqual("((-15)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "-9", "(-74)", "(8-3)", "1");
                var v = ov.swizzle.gabrg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("(47)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-79)", "6", "(5-7)", "((3-8)-3)");
                var v = ov.swizzle.gabrb;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("(5-7)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((8-7)7)", "((90)7)", "(76)", null, "-7");
                var v = ov.swizzle.gabra;
                Assert.AreEqual("((90)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("((8-7)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "-7", "", "(4-8)", "(-9-4)");
                var v = ov.swizzle.gabrk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(37)", "(37)", "6", "((-62)8)", null);
                var v = ov.swizzle.gabg;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("((-62)8)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(37)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-4)-1)", "8", "((-16)-2)", "((8-4)-1)", "8");
                var v = ov.swizzle.gabgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((8-4)-1)", v.y);
                Assert.AreEqual("((-16)-2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((8-4)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((58)-8)", null, "(16)", "2", "2");
                var v = ov.swizzle.gabgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(16)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "((-5-9)0)", "((-1-5)-1)", "((-5-9)0)", "3");
                var v = ov.swizzle.gabgb;
                Assert.AreEqual("((-5-9)0)", v.x);
                Assert.AreEqual("((-5-9)0)", v.y);
                Assert.AreEqual("((-1-5)-1)", v.z);
                Assert.AreEqual("((-5-9)0)", v.w);
                Assert.AreEqual("((-1-5)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((59)-1)", "(66)", "(66)", "-4", null);
                var v = ov.swizzle.gabga;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(9-5)", "((73)9)", "", "((75)8)", "((75)8)");
                var v = ov.swizzle.gabgk;
                Assert.AreEqual("((73)9)", v.x);
                Assert.AreEqual("((75)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((73)9)", v.w);
                Assert.AreEqual("((75)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-73)7)", "-2", "9", "9", null);
                var v = ov.swizzle.gabb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-8-2)", "((-71)-5)", "((-71)-5)", "(3-8)");
                var v = ov.swizzle.gabbr;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("((-71)-5)", v.y);
                Assert.AreEqual("((-71)-5)", v.z);
                Assert.AreEqual("((-71)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "((17)-6)", "((-6-8)1)", "((17)-6)", "((17)-6)");
                var v = ov.swizzle.gabbg;
                Assert.AreEqual("((17)-6)", v.x);
                Assert.AreEqual("((17)-6)", v.y);
                Assert.AreEqual("((-6-8)1)", v.z);
                Assert.AreEqual("((-6-8)1)", v.w);
                Assert.AreEqual("((17)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((15)3)", "((15)3)", "((-36)8)", "8", "6");
                var v = ov.swizzle.gabbb;
                Assert.AreEqual("((15)3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-36)8)", v.z);
                Assert.AreEqual("((-36)8)", v.w);
                Assert.AreEqual("((-36)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", "8", "((71)-4)", "8", "(-1-2)");
                var v = ov.swizzle.gabba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((71)-4)", v.z);
                Assert.AreEqual("((71)-4)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "9", "(16)", "(81)", "0");
                var v = ov.swizzle.gabbk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(16)", v.z);
                Assert.AreEqual("(16)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "((31)-4)", "3", "((31)-4)", "((31)-4)");
                var v = ov.swizzle.gaba;
                Assert.AreEqual("((31)-4)", v.x);
                Assert.AreEqual("((31)-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((31)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-89)-7)", "(-87)", "8", "((-74)-1)", "((-4-6)4)");
                var v = ov.swizzle.gabar;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("((-74)-1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-74)-1)", v.w);
                Assert.AreEqual("((-89)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-6)0)", "((-94)7)", "9", "-1", "9");
                var v = ov.swizzle.gabag;
                Assert.AreEqual("((-94)7)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-94)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)2)", "((12)2)", "(-2-9)", "((2-8)2)", "(-34)");
                var v = ov.swizzle.gabab;
                Assert.AreEqual("((12)2)", v.x);
                Assert.AreEqual("((2-8)2)", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("((2-8)2)", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(56)", "(56)", "(-1-1)", null);
                var v = ov.swizzle.gabaa;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "((-1-1)4)", "(83)", "(83)", null);
                var v = ov.swizzle.gabak;
                Assert.AreEqual("((-1-1)4)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-9", "(-6-9)", "-7");
                var v = ov.swizzle.gabk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-5", "-5", "((-3-8)5)", "(-9-3)");
                var v = ov.swizzle.gabkr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-3-8)5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "-6", null, "-5");
                var v = ov.swizzle.gabkg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-2)", "((6-3)7)", null, "", null);
                var v = ov.swizzle.gabkb;
                Assert.AreEqual("((6-3)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((44)2)", "-4", "((44)2)", "", "");
                var v = ov.swizzle.gabka;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((44)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-14)", "", "", "(-14)");
                var v = ov.swizzle.gabkk;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-9)3)", "((-20)8)", "(-9-2)", "9", "((39)3)");
                var v = ov.swizzle.gaa;
                Assert.AreEqual("((-20)8)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
            }
            {
                var ov = new gvec5<string>("((12)1)", "", "((-9-4)7)", "(-20)", null);
                var v = ov.swizzle.gaar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("((12)1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-54)-3)", null, "((-8-1)8)", "(80)", "(73)");
                var v = ov.swizzle.gaarr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("((-54)-3)", v.w);
                Assert.AreEqual("((-54)-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-3)", "8", "((-5-1)6)", "(7-9)");
                var v = ov.swizzle.gaarg;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("((-5-1)6)", v.y);
                Assert.AreEqual("((-5-1)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-3)8)", "8", "1", null, null);
                var v = ov.swizzle.gaarb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((2-3)8)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-8)-8)", "(6-8)", "-5", "7", "");
                var v = ov.swizzle.gaara;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-2-8)-8)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "(9-6)", "1", "5", "-7");
                var v = ov.swizzle.gaark;
                Assert.AreEqual("(9-6)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((9-6)6)", "3", null, "-7", "-7");
                var v = ov.swizzle.gaag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "-1", "((0-7)-6)", "-5");
                var v = ov.swizzle.gaagr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((0-7)-6)", v.y);
                Assert.AreEqual("((0-7)-6)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((7-5)-8)", "(0-4)", "(0-4)", "((1-3)-9)", "((1-3)-9)");
                var v = ov.swizzle.gaagg;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("((1-3)-9)", v.y);
                Assert.AreEqual("((1-3)-9)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("(0-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-45)0)", null, "3");
                var v = ov.swizzle.gaagb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-45)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(28)", "-9", null, "(-3-8)", "-5");
                var v = ov.swizzle.gaaga;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "(-96)", null, "((63)-5)", "");
                var v = ov.swizzle.gaagk;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("((63)-5)", v.y);
                Assert.AreEqual("((63)-5)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((6-9)9)", "((17)-8)", "(-5-4)", "(-76)");
                var v = ov.swizzle.gaab;
                Assert.AreEqual("((6-9)9)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual("((17)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "4", "((-7-6)-5)", "", "((-23)8)");
                var v = ov.swizzle.gaabr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-6)-5)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-9-9)4)", null, "(3-7)", null);
                var v = ov.swizzle.gaabg;
                Assert.AreEqual("((-9-9)4)", v.x);
                Assert.AreEqual("(3-7)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-9-9)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-3)", "(4-1)", "(24)", "-5");
                var v = ov.swizzle.gaabb;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "-6", "((45)7)", "((72)2)", "((72)2)");
                var v = ov.swizzle.gaaba;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((72)2)", v.y);
                Assert.AreEqual("((72)2)", v.z);
                Assert.AreEqual("((45)7)", v.w);
                Assert.AreEqual("((72)2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-9", "(60)", "", "");
                var v = ov.swizzle.gaabk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)-8)", "(-9-8)", "((7-8)-7)", "-4", "-4");
                var v = ov.swizzle.gaaa;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(-85)", "(-85)", null, "-4", "(-85)");
                var v = ov.swizzle.gaaar;
                Assert.AreEqual("(-85)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "5", "5", null, "((80)2)");
                var v = ov.swizzle.gaaag;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(-1-9)", "(-1-9)", "4");
                var v = ov.swizzle.gaaab;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "(8-1)", "((48)4)", "((13)4)", "(-91)");
                var v = ov.swizzle.gaaaa;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("((13)4)", v.y);
                Assert.AreEqual("((13)4)", v.z);
                Assert.AreEqual("((13)4)", v.w);
                Assert.AreEqual("((13)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((1-3)-8)", "2", "(-42)");
                var v = ov.swizzle.gaaak;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("((00)3)", "(02)", "", "(02)", "(02)");
                var v = ov.swizzle.gaak;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("(02)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "2", "(-61)", "", "2");
                var v = ov.swizzle.gaakr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((35)2)", "((7-4)0)", "((35)2)");
                var v = ov.swizzle.gaakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((7-4)0)", v.y);
                Assert.AreEqual("((7-4)0)", v.z);
                Assert.AreEqual("((35)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-6)", "-2", "-2", "(1-3)", "((5-9)1)");
                var v = ov.swizzle.gaakb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(1-3)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("((5-9)1)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-7)", "(-5-1)", "-5", "(0-7)");
                var v = ov.swizzle.gaaka;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(0-7)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-8", null, "((-4-2)-8)", "-8", "-8");
                var v = ov.swizzle.gaakk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)1)", "", "1", "1", "(-9-6)");
                var v = ov.swizzle.gak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-9-6)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-6", "", "((-36)0)", "3");
                var v = ov.swizzle.gakr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-36)0)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((63)1)", null, "(2-3)", "", "9");
                var v = ov.swizzle.gakrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((63)1)", v.w);
                Assert.AreEqual("((63)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "((8-1)-1)", "((8-1)-1)", "(-37)", "((4-8)2)");
                var v = ov.swizzle.gakrg;
                Assert.AreEqual("((8-1)-1)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("((4-8)2)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("((8-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-2)8)", "-9", "(-3-7)", "((6-2)8)", "((6-2)8)");
                var v = ov.swizzle.gakrb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((6-2)8)", v.y);
                Assert.AreEqual("((6-2)8)", v.z);
                Assert.AreEqual("((6-2)8)", v.w);
                Assert.AreEqual("(-3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-19)9)", "7", "((-19)9)", "((-9-5)-8)");
                var v = ov.swizzle.gakra;
                Assert.AreEqual("((-19)9)", v.x);
                Assert.AreEqual("((-19)9)", v.y);
                Assert.AreEqual("((-9-5)-8)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-19)9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "((-4-5)3)", "-9", "(7-9)");
                var v = ov.swizzle.gakrk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(7-9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-46)-3)", "", "", "-2", "");
                var v = ov.swizzle.gakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-88)", "((70)9)", "((-60)-7)", "-9");
                var v = ov.swizzle.gakgr;
                Assert.AreEqual("(-88)", v.x);
                Assert.AreEqual("((-60)-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-88)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(2-3)", "-4", "(64)", "((-58)-9)");
                var v = ov.swizzle.gakgg;
                Assert.AreEqual("(2-3)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("((-58)-9)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-8-5)", "(43)", "((9-4)-3)", "(43)");
                var v = ov.swizzle.gakgb;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("((9-4)-3)", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual("(-8-5)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "", null, "(-67)");
                var v = ov.swizzle.gakga;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-7-3)", null, "8", null);
                var v = ov.swizzle.gakgk;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)-8)", "(-3-1)", "((93)1)", "(-3-1)", "7");
                var v = ov.swizzle.gakb;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((93)1)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-4)", "0", null, "((2-6)5)", "-3");
                var v = ov.swizzle.gakbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((2-6)5)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)3)", null, "9", null, null);
                var v = ov.swizzle.gakbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "-3", "-3", "");
                var v = ov.swizzle.gakbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-76)6)", "((1-9)8)", "(72)", "-8", "((-76)6)");
                var v = ov.swizzle.gakba;
                Assert.AreEqual("((1-9)8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-76)6)", v.z);
                Assert.AreEqual("(72)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "(59)", "((-1-6)-5)", "5");
                var v = ov.swizzle.gakbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-1-6)-5)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "((-7-6)8)", "2", "(5-9)");
                var v = ov.swizzle.gaka;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("((-50)7)", "((46)-2)", "", "7", "(-5-6)");
                var v = ov.swizzle.gakar;
                Assert.AreEqual("((46)-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((-50)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(71)", "", "-6", "((-4-9)-1)", "((-47)3)");
                var v = ov.swizzle.gakag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-4-9)-1)", v.y);
                Assert.AreEqual("((-47)3)", v.z);
                Assert.AreEqual("((-4-9)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-52)", "(3-4)", "(3-4)", "-1", "(-93)");
                var v = ov.swizzle.gakab;
                Assert.AreEqual("(3-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)9)", "(-5-7)", "4", "-4", "");
                var v = ov.swizzle.gakaa;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((74)-8)", "((74)-8)", "", "6", "-3");
                var v = ov.swizzle.gakak;
                Assert.AreEqual("((74)-8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "(8-6)", "((-83)7)", null, null);
                var v = ov.swizzle.gakk;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(74)", "(74)", "((98)4)", "", "((1-4)-8)");
                var v = ov.swizzle.gakkr;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-4)-8)", v.z);
                Assert.AreEqual("((1-4)-8)", v.w);
                Assert.AreEqual("(74)", v.v);
            }
            {
                var ov = new gvec5<string>("((29)6)", "(94)", "-6", "9", "9");
                var v = ov.swizzle.gakkg;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-6)4)", "(89)", "((7-6)4)", "(89)", "((7-6)4)");
                var v = ov.swizzle.gakkb;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((7-6)4)", v.z);
                Assert.AreEqual("((7-6)4)", v.w);
                Assert.AreEqual("((7-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((55)-8)", "((16)9)", "(31)", "-1");
                var v = ov.swizzle.gakka;
                Assert.AreEqual("((55)-8)", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-44)", "((3-3)3)", "(-3-9)", "-7");
                var v = ov.swizzle.gakkk;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((8-4)0)", "7", "((3-7)3)", "(6-3)", null);
                var v = ov.swizzle.gk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec5<string>("(3-1)", "-7", "-7", "((82)9)", "-7");
                var v = ov.swizzle.gkr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(3-1)", v.z);
            }
            {
                var ov = new gvec5<string>("(5-5)", "0", "", "-7", "(-11)");
                var v = ov.swizzle.gkrr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("(5-5)", v.z);
                Assert.AreEqual("(5-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(2-6)", null, "((0-5)4)", "1", "(-2-1)");
                var v = ov.swizzle.gkrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-1)", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", null, null, "(-92)");
                var v = ov.swizzle.gkrrg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "", "(-3-6)", "2");
                var v = ov.swizzle.gkrrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((09)1)", "", null, "(-19)", "(-83)");
                var v = ov.swizzle.gkrra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("((09)1)", v.z);
                Assert.AreEqual("((09)1)", v.w);
                Assert.AreEqual("(-19)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-7)", "-1", "(-22)", "", null);
                var v = ov.swizzle.gkrrk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(42)", "((-6-1)-2)", "-4", "((-6-1)-2)", "-4");
                var v = ov.swizzle.gkrg;
                Assert.AreEqual("((-6-1)-2)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(42)", v.z);
                Assert.AreEqual("((-6-1)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(5-3)", "(69)", "1", "((-86)-5)");
                var v = ov.swizzle.gkrgr;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("((-86)-5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "0", "(2-2)", null);
                var v = ov.swizzle.gkrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "7", "(-3-9)", "", "((65)-2)");
                var v = ov.swizzle.gkrgb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((65)-2)", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", null, "((-30)4)", "1", "((5-9)-9)");
                var v = ov.swizzle.gkrga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-9)-9)", v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "5", "((-97)-7)", "((-97)-7)", "((28)-5)");
                var v = ov.swizzle.gkrgk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((28)-5)", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((28)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(8-6)", "((-30)8)", "((74)-1)", "((98)-3)");
                var v = ov.swizzle.gkrb;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("((98)-3)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-30)8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-3-8)2)", "2", "((-77)5)", "");
                var v = ov.swizzle.gkrbr;
                Assert.AreEqual("((-3-8)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "4", "", "");
                var v = ov.swizzle.gkrbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "((7-8)2)", "2", "(-7-3)");
                var v = ov.swizzle.gkrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((7-8)2)", v.w);
                Assert.AreEqual("((7-8)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-9)-1)", "(-35)", "(-8-3)", "", "2");
                var v = ov.swizzle.gkrba;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((9-9)-1)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)5)", "-1", "((-37)5)", "-1", "((-37)5)");
                var v = ov.swizzle.gkrbk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-37)5)", v.y);
                Assert.AreEqual("((-37)5)", v.z);
                Assert.AreEqual("((-37)5)", v.w);
                Assert.AreEqual("((-37)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(17)", "(39)", "((6-2)3)", "-6", "((9-5)8)");
                var v = ov.swizzle.gkra;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual("((9-5)8)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("2", null, "-7", "(7-1)", "((-7-1)6)");
                var v = ov.swizzle.gkrar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-1)6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(7-1)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(2-9)", "((-86)-1)", "(-7-1)", "(2-9)", "2");
                var v = ov.swizzle.gkrag;
                Assert.AreEqual("((-86)-1)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(2-9)", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("((-86)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-6)1)", "-6", "4", "(-91)", "(-91)");
                var v = ov.swizzle.gkrab;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("((9-6)1)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "(4-3)", "((97)7)", "5");
                var v = ov.swizzle.gkraa;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((97)7)", v.w);
                Assert.AreEqual("((97)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-5)", "5", "((66)0)", "", "((2-5)6)");
                var v = ov.swizzle.gkrak;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((2-5)6)", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((2-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((41)0)", "((41)0)", "((-84)-5)", "(42)", "-5");
                var v = ov.swizzle.gkrk;
                Assert.AreEqual("((41)0)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((41)0)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-4)4)", "5", "(-22)", "", "(-41)");
                var v = ov.swizzle.gkrkr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("((-7-4)4)", v.z);
                Assert.AreEqual("(-41)", v.w);
                Assert.AreEqual("((-7-4)4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((1-6)8)", "(-4-3)", "(71)", "((1-6)8)");
                var v = ov.swizzle.gkrkg;
                Assert.AreEqual("((1-6)8)", v.x);
                Assert.AreEqual("((1-6)8)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((1-6)8)", v.w);
                Assert.AreEqual("((1-6)8)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "6", "((5-1)-5)", "", "((27)9)");
                var v = ov.swizzle.gkrkb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((27)9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((27)9)", v.w);
                Assert.AreEqual("((5-1)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((72)6)", "-2", "4", "", "1");
                var v = ov.swizzle.gkrka;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((72)6)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-56)9)", "(1-9)", "-4", "((-56)9)", "((-56)9)");
                var v = ov.swizzle.gkrkk;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("((-56)9)", v.y);
                Assert.AreEqual("((-56)9)", v.z);
                Assert.AreEqual("((-56)9)", v.w);
                Assert.AreEqual("((-56)9)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-9", "-9", "((66)-7)", "((66)-7)");
                var v = ov.swizzle.gkg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((66)-7)", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec5<string>("((-2-2)-4)", "(8-7)", "(8-7)", "-2", "(94)");
                var v = ov.swizzle.gkgr;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("((-2-2)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((73)2)", "", "((-53)3)", "(-84)", "((73)2)");
                var v = ov.swizzle.gkgrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((73)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((73)2)", v.w);
                Assert.AreEqual("((73)2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "1", "((-60)9)", "0");
                var v = ov.swizzle.gkgrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "((9-3)-4)", "(-7-9)", "", "(-44)");
                var v = ov.swizzle.gkgrb;
                Assert.AreEqual("((9-3)-4)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("((9-3)-4)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "((-7-4)-1)", "8", "((39)-8)", "");
                var v = ov.swizzle.gkgra;
                Assert.AreEqual("((-7-4)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-7-4)-1)", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("((39)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-5", "", "", "2");
                var v = ov.swizzle.gkgrk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "6", "-9", "(5-4)", "(-81)");
                var v = ov.swizzle.gkgg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("(31)", "((-4-5)-7)", "((-1-1)-8)", "5", "5");
                var v = ov.swizzle.gkggr;
                Assert.AreEqual("((-4-5)-7)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-4-5)-7)", v.z);
                Assert.AreEqual("((-4-5)-7)", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "(2-8)", "((8-2)5)", "-3", "((4-3)-7)");
                var v = ov.swizzle.gkggg;
                Assert.AreEqual("(2-8)", v.x);
                Assert.AreEqual("((4-3)-7)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-43)", "0", "((-55)6)", "((0-9)8)", "(-43)");
                var v = ov.swizzle.gkggb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-55)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-1)", "(0-1)", "(0-1)", "4", null);
                var v = ov.swizzle.gkgga;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual("(0-1)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "(-4-5)", "((11)-8)", "(-3-1)", "-9");
                var v = ov.swizzle.gkggk;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("(-4-5)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(6-2)", "((-4-8)-1)", null, "(63)");
                var v = ov.swizzle.gkgb;
                Assert.AreEqual("(6-2)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("((-4-8)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(-81)", "((-28)-2)", "1", "");
                var v = ov.swizzle.gkgbr;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("((-28)-2)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-1-4)", "((-7-9)-7)", "((-6-2)9)", "((-8-9)-5)");
                var v = ov.swizzle.gkgbg;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual("((-8-9)-5)", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("((-7-9)-7)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "(-7-2)", "((-21)-7)", "", "(06)");
                var v = ov.swizzle.gkgbb;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("((-21)-7)", v.w);
                Assert.AreEqual("((-21)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((09)-4)", "(-9-9)", "1", "-8", "((83)-5)");
                var v = ov.swizzle.gkgba;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("((83)-5)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-9)", "(5-4)", "((-56)-4)", "((-3-5)-4)", null);
                var v = ov.swizzle.gkgbk;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("((-56)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-25)3)", "-6", "(-7-6)", null, null);
                var v = ov.swizzle.gkga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-2-9)-1)", "(-34)", "((-2-9)-1)", "(-34)", "(-15)");
                var v = ov.swizzle.gkgar;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("(-34)", v.w);
                Assert.AreEqual("((-2-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-31)-1)", null, "1", null, "(-5-5)");
                var v = ov.swizzle.gkgag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-6-2)", "1", "4", null, "-2");
                var v = ov.swizzle.gkgab;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((0-2)-9)", "((-34)3)", "(-12)", "((-34)3)");
                var v = ov.swizzle.gkgaa;
                Assert.AreEqual("((0-2)-9)", v.x);
                Assert.AreEqual("((-34)3)", v.y);
                Assert.AreEqual("((0-2)-9)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("(-12)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "((6-9)6)", "((-9-1)-4)", "(-69)", "");
                var v = ov.swizzle.gkgak;
                Assert.AreEqual("((6-9)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-9)6)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", null, "((-3-2)-5)", "((1-2)0)", "(-29)");
                var v = ov.swizzle.gkgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-29)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-3)-5)", "", "", "((5-6)5)", "8");
                var v = ov.swizzle.gkgkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((4-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(57)", "(57)", "2", "");
                var v = ov.swizzle.gkgkg;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(57)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(57)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "(10)", "(-5-5)", "", "((-7-9)-5)");
                var v = ov.swizzle.gkgkb;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("((-7-9)-5)", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("((-7-9)-5)", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((2-1)1)", null, "-8", "((7-1)-9)");
                var v = ov.swizzle.gkgka;
                Assert.AreEqual("((2-1)1)", v.x);
                Assert.AreEqual("((7-1)-9)", v.y);
                Assert.AreEqual("((2-1)1)", v.z);
                Assert.AreEqual("((7-1)-9)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", null, "7", "((0-3)-6)", "((-56)-5)");
                var v = ov.swizzle.gkgkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-56)-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-56)-5)", v.w);
                Assert.AreEqual("((-56)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "((-55)4)", "5", "-6", "1");
                var v = ov.swizzle.gkb;
                Assert.AreEqual("((-55)4)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("5", "-8", "((57)2)", "(34)", "(34)");
                var v = ov.swizzle.gkbr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("((57)2)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((-14)-4)", "((-22)-3)", "((-41)4)", "0", "");
                var v = ov.swizzle.gkbrr;
                Assert.AreEqual("((-22)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-41)4)", v.z);
                Assert.AreEqual("((-14)-4)", v.w);
                Assert.AreEqual("((-14)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)3)", "(0-1)", "-8", null, "");
                var v = ov.swizzle.gkbrg;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-9-3)3)", v.w);
                Assert.AreEqual("(0-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-87)", "", "", "((-64)-4)", "(6-3)");
                var v = ov.swizzle.gkbrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-32)-2)", "9", "((4-3)-9)", "((-32)-2)", "(-39)");
                var v = ov.swizzle.gkbra;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("((4-3)-9)", v.z);
                Assert.AreEqual("((-32)-2)", v.w);
                Assert.AreEqual("((-32)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(3-6)", null, "", "-6");
                var v = ov.swizzle.gkbrk;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((66)4)", "", null, null, "9");
                var v = ov.swizzle.gkbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(12)", null, "(-74)", "-6", "((-23)-2)");
                var v = ov.swizzle.gkbgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-23)-2)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "", "(0-4)", "((-4-2)-3)");
                var v = ov.swizzle.gkbgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-4-2)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "(9-9)", "((-94)-8)", "");
                var v = ov.swizzle.gkbgb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-1)-9)", null, "-5", "1", "(7-7)");
                var v = ov.swizzle.gkbga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-8-2)", "", "9", "9");
                var v = ov.swizzle.gkbgk;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)5)", "", null, "((09)-9)", "((09)-9)");
                var v = ov.swizzle.gkbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((09)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((9-9)7)", "4", "8", null, "-1");
                var v = ov.swizzle.gkbbr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((9-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((0-8)-2)", null, "1", "((-9-6)8)");
                var v = ov.swizzle.gkbbg;
                Assert.AreEqual("((0-8)-2)", v.x);
                Assert.AreEqual("((-9-6)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "2", "2", null, "");
                var v = ov.swizzle.gkbbb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((70)-8)", "(-33)", "((70)-8)");
                var v = ov.swizzle.gkbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((70)-8)", v.y);
                Assert.AreEqual("((70)-8)", v.z);
                Assert.AreEqual("((70)-8)", v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)2)", "-4", "(-4-6)", "((3-1)2)", "((3-1)2)");
                var v = ov.swizzle.gkbbk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((3-1)2)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("((3-1)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-5)", "((19)2)", "(4-4)", null, "7");
                var v = ov.swizzle.gkba;
                Assert.AreEqual("((19)2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(4-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((77)9)", "", null, "((77)9)", "((14)-3)");
                var v = ov.swizzle.gkbar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((14)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((77)9)", v.w);
                Assert.AreEqual("((77)9)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-38)8)", null, "((-38)8)", "(-3-2)");
                var v = ov.swizzle.gkbag;
                Assert.AreEqual("((-38)8)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-38)8)", v.w);
                Assert.AreEqual("((-38)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-34)3)", "((-5-2)-8)", "(-87)", "4", "(-87)");
                var v = ov.swizzle.gkbab;
                Assert.AreEqual("((-5-2)-8)", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-6)", "(-3-8)", "((55)5)", "4");
                var v = ov.swizzle.gkbaa;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("((55)5)", v.w);
                Assert.AreEqual("((55)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-3-2)1)", "((0-7)6)", "(43)", null);
                var v = ov.swizzle.gkbak;
                Assert.AreEqual("((-3-2)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-7)6)", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("9", "(92)", "7", "((-8-8)-8)", "((8-7)2)");
                var v = ov.swizzle.gkbk;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("((8-7)2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((8-7)2)", v.w);
            }
            {
                var ov = new gvec5<string>("((83)-6)", "(-42)", "(-41)", "", "");
                var v = ov.swizzle.gkbkr;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((83)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "((-9-6)5)", "2", "-2");
                var v = ov.swizzle.gkbkg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-9-6)5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)-7)", "(-59)", "7", "((7-3)-9)", "((4-4)-7)");
                var v = ov.swizzle.gkbkb;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("((4-4)-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((4-4)-7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((82)6)", "(68)", "-6", "5");
                var v = ov.swizzle.gkbka;
                Assert.AreEqual("((82)6)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-52)-6)", "(37)", "4", "((66)-4)", "5");
                var v = ov.swizzle.gkbkk;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-99)4)", null, "((-99)4)", "-2", null);
                var v = ov.swizzle.gka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-2", v.z);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "3", "(3-4)", "3", "(-3-4)");
                var v = ov.swizzle.gkar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-3-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-5-7)6)", null, "(-11)", "((-5-7)6)", "((-4-4)-3)");
                var v = ov.swizzle.gkarr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-4)-3)", v.y);
                Assert.AreEqual("((-5-7)6)", v.z);
                Assert.AreEqual("((-5-7)6)", v.w);
                Assert.AreEqual("((-5-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((06)-7)", "(-43)", "((5-7)2)", "-2", "((5-7)2)");
                var v = ov.swizzle.gkarg;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("((5-7)2)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((06)-7)", v.w);
                Assert.AreEqual("(-43)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-3)5)", "((9-1)-2)", "(61)", "3", "((9-1)-2)");
                var v = ov.swizzle.gkarb;
                Assert.AreEqual("((9-1)-2)", v.x);
                Assert.AreEqual("((9-1)-2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-5-3)5)", v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec5<string>("(10)", "(-42)", "((6-1)-8)", "(-42)", "(10)");
                var v = ov.swizzle.gkara;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual("(-42)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("((70)0)", "(-7-3)", "", "(-2-6)", "((-39)4)");
                var v = ov.swizzle.gkark;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("((-39)4)", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("((70)0)", v.w);
                Assert.AreEqual("((-39)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)-5)", null, "(-59)", "2", "(09)");
                var v = ov.swizzle.gkag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(9-3)", "(9-3)", "((1-4)-3)", "((1-4)-3)", "((1-4)-3)");
                var v = ov.swizzle.gkagr;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("((1-4)-3)", v.y);
                Assert.AreEqual("((1-4)-3)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((18)-1)", "((18)-1)", "((-7-4)-9)", null, null);
                var v = ov.swizzle.gkagg;
                Assert.AreEqual("((18)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((18)-1)", v.w);
                Assert.AreEqual("((18)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-8-2)", "-3", "((-6-7)-8)", "(-8-2)");
                var v = ov.swizzle.gkagb;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("((-6-7)-8)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((54)-1)", "", "", "((54)-1)", "-7");
                var v = ov.swizzle.gkaga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((54)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((54)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(86)", "(9-3)", "3", "-5", "3");
                var v = ov.swizzle.gkagk;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-6", "((-5-2)1)", "((-5-2)1)", "((-8-6)9)");
                var v = ov.swizzle.gkab;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-8-6)9)", v.y);
                Assert.AreEqual("((-5-2)1)", v.z);
                Assert.AreEqual("((-5-2)1)", v.w);
            }
            {
                var ov = new gvec5<string>("((57)9)", "(10)", "-2", "((57)9)", "((57)9)");
                var v = ov.swizzle.gkabr;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("((57)9)", v.y);
                Assert.AreEqual("((57)9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((57)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", "-9", "", "(4-6)", "(4-6)");
                var v = ov.swizzle.gkabg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual("(4-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "9", "-7", "((1-6)-7)");
                var v = ov.swizzle.gkabb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((1-6)-7)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((14)5)", "-2", "((14)5)", "", "");
                var v = ov.swizzle.gkaba;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((14)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((60)-2)", "((60)-2)", "8", null, "-9");
                var v = ov.swizzle.gkabk;
                Assert.AreEqual("((60)-2)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((83)-3)", "-4", "(5-7)", "(6-6)");
                var v = ov.swizzle.gkaa;
                Assert.AreEqual("((83)-3)", v.x);
                Assert.AreEqual("(6-6)", v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual("(5-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((-9-8)-7)", "(-6-7)", "-2", "(-6-7)", "(36)");
                var v = ov.swizzle.gkaar;
                Assert.AreEqual("(-6-7)", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("((-9-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(04)", "(04)", "(13)", "(13)");
                var v = ov.swizzle.gkaag;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((53)3)", "(-53)", "(9-6)", "(-53)");
                var v = ov.swizzle.gkaab;
                Assert.AreEqual("((53)3)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "((6-4)-2)", "(0-3)", null, "(-25)");
                var v = ov.swizzle.gkaaa;
                Assert.AreEqual("((6-4)-2)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(97)", "((41)3)", "(97)", "", "");
                var v = ov.swizzle.gkaak;
                Assert.AreEqual("((41)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "1", "(-8-7)", "5", "1");
                var v = ov.swizzle.gkak;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("((4-5)4)", "", null, "8", "9");
                var v = ov.swizzle.gkakr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((4-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "9", "((-45)2)", "", "((7-2)1)");
                var v = ov.swizzle.gkakg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((7-2)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-2)1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-41)", "((-6-1)-8)", "(61)", "(61)", "((-6-1)-8)");
                var v = ov.swizzle.gkakb;
                Assert.AreEqual("((-6-1)-8)", v.x);
                Assert.AreEqual("((-6-1)-8)", v.y);
                Assert.AreEqual("(61)", v.z);
                Assert.AreEqual("((-6-1)-8)", v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(65)", "(70)", "", "((-16)-9)");
                var v = ov.swizzle.gkaka;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("((-16)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-16)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)-7)", "-3", "(77)", "(3-5)", null);
                var v = ov.swizzle.gkakk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((1-9)-6)", "6", "((20)-3)", "((1-9)-6)");
                var v = ov.swizzle.gkk;
                Assert.AreEqual("((1-9)-6)", v.x);
                Assert.AreEqual("((1-9)-6)", v.y);
                Assert.AreEqual("((1-9)-6)", v.z);
            }
            {
                var ov = new gvec5<string>("(4-3)", "-4", "0", null, "(-2-2)");
                var v = ov.swizzle.gkkr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("(4-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "(5-4)", "-4", "0", "(-3-7)");
                var v = ov.swizzle.gkkrr;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("(-3-7)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-2)-8)", "(-5-9)", "(24)", "((5-4)4)", "-2");
                var v = ov.swizzle.gkkrg;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-3-2)-8)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-47)", "(-3-2)", "6", "((-93)6)", "((-88)1)");
                var v = ov.swizzle.gkkrb;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("((-88)1)", v.y);
                Assert.AreEqual("((-88)1)", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-87)9)", "5", "((-87)9)", "", null);
                var v = ov.swizzle.gkkra;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-87)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-8)-6)", "((-9-8)-6)", "(5-1)", "7", "((-2-9)6)");
                var v = ov.swizzle.gkkrk;
                Assert.AreEqual("((-9-8)-6)", v.x);
                Assert.AreEqual("((-2-9)6)", v.y);
                Assert.AreEqual("((-2-9)6)", v.z);
                Assert.AreEqual("((-9-8)-6)", v.w);
                Assert.AreEqual("((-2-9)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((35)9)", "((-3-3)-4)", "(-77)", "(3-4)", "7");
                var v = ov.swizzle.gkkg;
                Assert.AreEqual("((-3-3)-4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-3-3)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-3", "", "(-3-6)", "1");
                var v = ov.swizzle.gkkgr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "((3-5)-4)", "((82)-4)", "((82)-4)");
                var v = ov.swizzle.gkkgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((82)-4)", v.y);
                Assert.AreEqual("((82)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "(17)", "(6-2)", "((-6-8)1)", "0");
                var v = ov.swizzle.gkkgb;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("(6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "((3-3)1)", null, "((84)7)");
                var v = ov.swizzle.gkkga;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((84)7)", v.y);
                Assert.AreEqual("((84)7)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "7", "-8", "-2");
                var v = ov.swizzle.gkkgk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "((24)-6)", "(2-4)", "((95)-5)");
                var v = ov.swizzle.gkkb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((95)-5)", v.y);
                Assert.AreEqual("((95)-5)", v.z);
                Assert.AreEqual("((24)-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-39)", "(-18)", "((5-3)-1)", "(-7-7)");
                var v = ov.swizzle.gkkbr;
                Assert.AreEqual("(-39)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "(-2-1)", "(87)", "((50)-5)", "((50)-5)");
                var v = ov.swizzle.gkkbg;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual("((50)-5)", v.y);
                Assert.AreEqual("((50)-5)", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("(-2-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-7)4)", "((-1-7)4)", "", "((-1-7)4)", "(6-5)");
                var v = ov.swizzle.gkkbb;
                Assert.AreEqual("((-1-7)4)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", "-7", "(69)", "", "");
                var v = ov.swizzle.gkkba;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(69)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(3-5)", "((-42)1)", "-6", "(3-5)", "(-49)");
                var v = ov.swizzle.gkkbk;
                Assert.AreEqual("((-42)1)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-60)-4)", "(25)", "-2", "8");
                var v = ov.swizzle.gkka;
                Assert.AreEqual("((-60)-4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("", "8", "", null, null);
                var v = ov.swizzle.gkkar;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "", "(-96)", "(-96)", "7");
                var v = ov.swizzle.gkkag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", "(7-8)", null, "6", "((-6-7)4)");
                var v = ov.swizzle.gkkab;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("((-6-7)4)", v.y);
                Assert.AreEqual("((-6-7)4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-2-4)1)", "1", "(-56)", "1", null);
                var v = ov.swizzle.gkkaa;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-7-5)-7)", "(09)", "0", "(-44)");
                var v = ov.swizzle.gkkak;
                Assert.AreEqual("((-7-5)-7)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("(19)", "(-10)", null, "((-50)-2)", "((-7-5)1)");
                var v = ov.swizzle.gkkk;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("((-7-5)1)", v.y);
                Assert.AreEqual("((-7-5)1)", v.z);
                Assert.AreEqual("((-7-5)1)", v.w);
            }
            {
                var ov = new gvec5<string>("(45)", "((-47)8)", "3", "((-7-7)-3)", "(-67)");
                var v = ov.swizzle.gkkkr;
                Assert.AreEqual("((-47)8)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("(-67)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(69)", "(69)", "((-59)-6)", "((-59)-6)");
                var v = ov.swizzle.gkkkg;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("((-59)-6)", v.y);
                Assert.AreEqual("((-59)-6)", v.z);
                Assert.AreEqual("((-59)-6)", v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(59)", "", "((-21)2)", "(7-8)");
                var v = ov.swizzle.gkkkb;
                Assert.AreEqual("(59)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-64)", "(25)", "(-74)", "-3");
                var v = ov.swizzle.gkkka;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", null, "(-7-7)", "(-54)", "((7-3)1)");
                var v = ov.swizzle.gkkkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-3)1)", v.y);
                Assert.AreEqual("((7-3)1)", v.z);
                Assert.AreEqual("((7-3)1)", v.w);
                Assert.AreEqual("((7-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-4)", "((5-3)-7)", "-4", "(-14)", "8");
                var v = ov.swizzle.br;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(1-4)", v.y);
            }
            {
                var ov = new gvec5<string>("(77)", "((7-5)9)", "-4", "", "((-5-4)2)");
                var v = ov.swizzle.brr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("(77)", v.z);
            }
            {
                var ov = new gvec5<string>("((60)4)", "(20)", null, "((7-5)-9)", "8");
                var v = ov.swizzle.brrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((60)4)", v.y);
                Assert.AreEqual("((60)4)", v.z);
                Assert.AreEqual("((60)4)", v.w);
            }
            {
                var ov = new gvec5<string>("((57)-4)", "(2-9)", "", "((5-1)-2)", "");
                var v = ov.swizzle.brrrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((57)-4)", v.y);
                Assert.AreEqual("((57)-4)", v.z);
                Assert.AreEqual("((57)-4)", v.w);
                Assert.AreEqual("((57)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-81)", "(4-4)", null, "-6");
                var v = ov.swizzle.brrrg;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", "((-9-2)-2)", "(-3-8)", "((-1-9)3)", "6");
                var v = ov.swizzle.brrrb;
                Assert.AreEqual("(-3-8)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-67)-4)", "((-4-4)-1)", "(0-3)", "((-67)-4)");
                var v = ov.swizzle.brrra;
                Assert.AreEqual("((-4-4)-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-8", "((63)-2)", "-8");
                var v = ov.swizzle.brrrk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "(-3-5)", "((-87)5)", "-4");
                var v = ov.swizzle.brrg;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("5", "((7-6)-5)", "((7-6)-5)", "6", "(4-7)");
                var v = ov.swizzle.brrgr;
                Assert.AreEqual("((7-6)-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((7-6)-5)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((08)9)", "-1", "(2-9)", "(12)", "-1");
                var v = ov.swizzle.brrgg;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("((08)9)", v.y);
                Assert.AreEqual("((08)9)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "(-5-3)", "8", "((62)-8)", "8");
                var v = ov.swizzle.brrgb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-2)", "-6", null, "0");
                var v = ov.swizzle.brrga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-60)2)", "((0-3)9)", "-1", "(0-2)", null);
                var v = ov.swizzle.brrgk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-60)2)", v.y);
                Assert.AreEqual("((-60)2)", v.z);
                Assert.AreEqual("((0-3)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "(81)", null, "5", "((-8-4)-9)");
                var v = ov.swizzle.brrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(75)", null, "((-3-8)-8)", "1", "((67)7)");
                var v = ov.swizzle.brrbr;
                Assert.AreEqual("((-3-8)-8)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("((-3-8)-8)", v.w);
                Assert.AreEqual("(75)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)-1)", "(7-3)", "(7-3)", "((-8-6)-1)", "-7");
                var v = ov.swizzle.brrbg;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("((-8-6)-1)", v.y);
                Assert.AreEqual("((-8-6)-1)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("(7-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)0)", "((59)7)", null, "-5", null);
                var v = ov.swizzle.brrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-8)0)", v.y);
                Assert.AreEqual("((7-8)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-73)2)", "(46)", "(-3-1)", "(46)");
                var v = ov.swizzle.brrba;
                Assert.AreEqual("(46)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-2-7)8)", "", "((-9-6)0)", "((-9-6)0)");
                var v = ov.swizzle.brrbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-9-6)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "", "8", "");
                var v = ov.swizzle.brra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-3)-3)", null, "((-7-3)-3)", "((4-4)3)", "(35)");
                var v = ov.swizzle.brrar;
                Assert.AreEqual("((-7-3)-3)", v.x);
                Assert.AreEqual("((-7-3)-3)", v.y);
                Assert.AreEqual("((-7-3)-3)", v.z);
                Assert.AreEqual("((4-4)3)", v.w);
                Assert.AreEqual("((-7-3)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "(2-1)", "", "7", "((3-1)1)");
                var v = ov.swizzle.brrag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(2-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-92)-4)", "(4-2)", "(23)");
                var v = ov.swizzle.brrab;
                Assert.AreEqual("((-92)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("((-92)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-44)5)", null, "1", null);
                var v = ov.swizzle.brraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((4-5)-8)", "((4-5)-8)", "9", null, "((4-5)-8)");
                var v = ov.swizzle.brrak;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((4-5)-8)", v.y);
                Assert.AreEqual("((4-5)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "(0-1)", "-6");
                var v = ov.swizzle.brrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "", "((9-3)-5)", "4", "((-5-6)-6)");
                var v = ov.swizzle.brrkr;
                Assert.AreEqual("((9-3)-5)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-5-6)-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((78)-1)", null, "1", "1", "((-55)-9)");
                var v = ov.swizzle.brrkg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((78)-1)", v.y);
                Assert.AreEqual("((78)-1)", v.z);
                Assert.AreEqual("((-55)-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", "(24)", "((68)8)", "8", "((4-7)0)");
                var v = ov.swizzle.brrkb;
                Assert.AreEqual("((68)8)", v.x);
                Assert.AreEqual("(3-7)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("((4-7)0)", v.w);
                Assert.AreEqual("((68)8)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-4-9)", "(-4-2)", "-3", "((-30)4)");
                var v = ov.swizzle.brrka;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-30)4)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-1-8)-8)", "((-1-8)-8)", "(31)", "(-7-5)");
                var v = ov.swizzle.brrkk;
                Assert.AreEqual("((-1-8)-8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "-7", "-7", "7", null);
                var v = ov.swizzle.brg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>("(-5-3)", null, "-5", "-9", "((-5-2)-8)");
                var v = ov.swizzle.brgr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-71)", "((-7-1)-3)", "((-7-1)-3)", "((-7-1)-3)", "2");
                var v = ov.swizzle.brgrr;
                Assert.AreEqual("((-7-1)-3)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("((-7-1)-3)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-2-9)5)", "((-2-9)5)", "((-2-9)5)", "3");
                var v = ov.swizzle.brgrg;
                Assert.AreEqual("((-2-9)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-9)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-9)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "((0-1)-6)", "((1-6)8)", "9");
                var v = ov.swizzle.brgrb;
                Assert.AreEqual("((0-1)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-1)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-3)-3)", "(0-5)", "0", "((85)2)", "3");
                var v = ov.swizzle.brgra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((1-3)-3)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("((1-3)-3)", v.w);
                Assert.AreEqual("((85)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((82)5)", "-1", "(66)");
                var v = ov.swizzle.brgrk;
                Assert.AreEqual("((82)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(-1-9)", "5", "((-3-4)-2)");
                var v = ov.swizzle.brgg;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-2-6)", "-5", "(-2-6)", "((5-6)-4)");
                var v = ov.swizzle.brggr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "-3", "(-95)", "(-8-8)", "((-16)7)");
                var v = ov.swizzle.brggg;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-95)9)", "((-95)9)", "4", "4", "");
                var v = ov.swizzle.brggb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-95)9)", v.y);
                Assert.AreEqual("((-95)9)", v.z);
                Assert.AreEqual("((-95)9)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", "((53)6)", "(-98)", "-5", "((53)6)");
                var v = ov.swizzle.brgga;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((53)6)", v.z);
                Assert.AreEqual("((53)6)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "((7-2)-6)", "3", "((-8-4)-2)", "3");
                var v = ov.swizzle.brggk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-2)-6)", v.z);
                Assert.AreEqual("((7-2)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-8-4)-4)", "4", null, "((-7-7)-3)");
                var v = ov.swizzle.brgb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-8-4)-4)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("(-5-8)", "-5", "((15)5)", "(-83)", "(-83)");
                var v = ov.swizzle.brgbr;
                Assert.AreEqual("((15)5)", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((15)5)", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-87)5)", "(-71)", "(-25)", "-9");
                var v = ov.swizzle.brgbg;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-87)5)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("((-87)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-99)", "(-99)", null, "(-99)", "((7-4)-7)");
                var v = ov.swizzle.brgbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((1-4)-8)", "(-4-1)", "", "((-9-7)-9)", "(-4-1)");
                var v = ov.swizzle.brgba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-4)-8)", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-9-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)3)", "-7", "-7", "-3", "-9");
                var v = ov.swizzle.brgbk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((4-2)3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "", "(9-1)", "(9-1)");
                var v = ov.swizzle.brga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(9-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(2-8)", null, "5", "2");
                var v = ov.swizzle.brgar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", "(9-4)", "(37)", "-1", "((61)-3)");
                var v = ov.swizzle.brgag;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((19)7)", "2", "((19)7)", "((26)-4)", "(6-5)");
                var v = ov.swizzle.brgab;
                Assert.AreEqual("((19)7)", v.x);
                Assert.AreEqual("((19)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((26)-4)", v.w);
                Assert.AreEqual("((19)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)4)", "(1-1)", "6", "(1-1)", "6");
                var v = ov.swizzle.brgaa;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((9-8)4)", v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", null, null, "((8-5)-2)");
                var v = ov.swizzle.brgak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((8-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(9-2)", "((08)-4)", "-1", "((08)-4)");
                var v = ov.swizzle.brgk;
                Assert.AreEqual("((08)-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("((08)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "(65)", "5", "(23)", "2");
                var v = ov.swizzle.brgkr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(65)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "4", "(22)", "(8-2)", "-3");
                var v = ov.swizzle.brgkg;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(01)", "(84)", "-7", "1");
                var v = ov.swizzle.brgkb;
                Assert.AreEqual("(84)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(01)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(84)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-6)-5)", "(1-3)", "((4-6)-5)", "-3", "-7");
                var v = ov.swizzle.brgka;
                Assert.AreEqual("((4-6)-5)", v.x);
                Assert.AreEqual("((4-6)-5)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-7-1)", "(54)", null, "-3");
                var v = ov.swizzle.brgkk;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-7-1)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((8-1)8)", "((4-2)-8)", "3", "-9");
                var v = ov.swizzle.brb;
                Assert.AreEqual("((4-2)-8)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((4-2)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("((27)-9)", "((38)-2)", "((27)-9)", "((27)-9)", "(7-7)");
                var v = ov.swizzle.brbr;
                Assert.AreEqual("((27)-9)", v.x);
                Assert.AreEqual("((27)-9)", v.y);
                Assert.AreEqual("((27)-9)", v.z);
                Assert.AreEqual("((27)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((23)-5)", "((3-5)-6)", "(-73)", "-5", "");
                var v = ov.swizzle.brbrr;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("((23)-5)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("((23)-5)", v.w);
                Assert.AreEqual("((23)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((91)1)", "((-41)-9)", "5", "(2-5)");
                var v = ov.swizzle.brbrg;
                Assert.AreEqual("((-41)-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-41)-9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((91)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-57)-7)", "((-3-5)6)", "((-3-5)6)", "((93)-7)");
                var v = ov.swizzle.brbrb;
                Assert.AreEqual("((-3-5)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-5)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-3-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-7)-1)", "9", "", "9", "(-69)");
                var v = ov.swizzle.brbra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-7)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-7)-1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-1)", null, "-3", "((-22)1)", "6");
                var v = ov.swizzle.brbrk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "((8-6)-3)", "(-8-8)", "", "-9");
                var v = ov.swizzle.brbg;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("((8-6)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(9-4)", "((-44)7)", "4", "-8");
                var v = ov.swizzle.brbgr;
                Assert.AreEqual("((-44)7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-44)7)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(2-7)", "((2-5)0)", "", "");
                var v = ov.swizzle.brbgg;
                Assert.AreEqual("((2-5)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((2-5)0)", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-66)", "((-72)-7)", "-7", "1");
                var v = ov.swizzle.brbgb;
                Assert.AreEqual("((-72)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-72)-7)", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("((-72)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(2-5)", "(35)", "((8-9)0)", "((-5-3)2)");
                var v = ov.swizzle.brbga;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("((8-9)0)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-2-1)1)", "((-31)6)", "(-1-4)", "(-56)");
                var v = ov.swizzle.brbgk;
                Assert.AreEqual("((-31)6)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-31)6)", v.z);
                Assert.AreEqual("((-2-1)1)", v.w);
                Assert.AreEqual("(-56)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)9)", "0", "((0-1)8)", "(-92)", "-3");
                var v = ov.swizzle.brbb;
                Assert.AreEqual("((0-1)8)", v.x);
                Assert.AreEqual("((-9-3)9)", v.y);
                Assert.AreEqual("((0-1)8)", v.z);
                Assert.AreEqual("((0-1)8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-62)", "", "(-62)", "((41)8)", "");
                var v = ov.swizzle.brbbr;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)9)", "", "((-4-1)-1)", "", "4");
                var v = ov.swizzle.brbbg;
                Assert.AreEqual("((-4-1)-1)", v.x);
                Assert.AreEqual("((1-1)9)", v.y);
                Assert.AreEqual("((-4-1)-1)", v.z);
                Assert.AreEqual("((-4-1)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "(38)", "-9", "(-71)");
                var v = ov.swizzle.brbbb;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("(38)", v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", "4", "((-4-5)-1)", "(-64)", null);
                var v = ov.swizzle.brbba;
                Assert.AreEqual("((-4-5)-1)", v.x);
                Assert.AreEqual("(-64)", v.y);
                Assert.AreEqual("((-4-5)-1)", v.z);
                Assert.AreEqual("((-4-5)-1)", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec5<string>("(-33)", "((-53)-1)", "((-2-1)-5)", "-8", "(-33)");
                var v = ov.swizzle.brbbk;
                Assert.AreEqual("((-2-1)-5)", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("((-2-1)-5)", v.z);
                Assert.AreEqual("((-2-1)-5)", v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-7)", "9", "((-5-5)4)", "((-5-5)4)");
                var v = ov.swizzle.brba;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-5-5)4)", v.w);
            }
            {
                var ov = new gvec5<string>("(38)", "((-3-5)6)", null, "(38)", "-7");
                var v = ov.swizzle.brbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(38)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("(38)", v.v);
            }
            {
                var ov = new gvec5<string>("(-47)", "(7-6)", "(-47)", "(-47)", "(-47)");
                var v = ov.swizzle.brbag;
                Assert.AreEqual("(-47)", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)-6)", "(97)", "-1", "((3-3)-3)", "");
                var v = ov.swizzle.brbab;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((9-1)-6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((3-3)-3)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("4", null, "((-35)-6)", "(-97)", "((-35)-6)");
                var v = ov.swizzle.brbaa;
                Assert.AreEqual("((-35)-6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-35)-6)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "6", "-1", "(-84)", "6");
                var v = ov.swizzle.brbak;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-32)", "3", "((70)0)", "(-32)", "3");
                var v = ov.swizzle.brbk;
                Assert.AreEqual("((70)0)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("((70)0)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-6)7)", "1", "-9", "(-30)", "((-7-6)7)");
                var v = ov.swizzle.brbkr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-7-6)7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-7-6)7)", v.w);
                Assert.AreEqual("((-7-6)7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((8-5)2)", "((-42)7)", null, "((8-5)2)");
                var v = ov.swizzle.brbkg;
                Assert.AreEqual("((-42)7)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-42)7)", v.z);
                Assert.AreEqual("((8-5)2)", v.w);
                Assert.AreEqual("((8-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-4", "3", "((-5-3)-8)");
                var v = ov.swizzle.brbkb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-5-3)-8)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((16)1)", "(38)", "1", "1");
                var v = ov.swizzle.brbka;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-24)", "5", null);
                var v = ov.swizzle.brbkk;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-24)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-9", "", "", "-4");
                var v = ov.swizzle.bra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("5", "(-4-9)", "-1", "(-10)", "((-56)3)");
                var v = ov.swizzle.brar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec5<string>("((97)-5)", "-5", "((-6-1)6)", "((66)1)", "(89)");
                var v = ov.swizzle.brarr;
                Assert.AreEqual("((-6-1)6)", v.x);
                Assert.AreEqual("((97)-5)", v.y);
                Assert.AreEqual("((66)1)", v.z);
                Assert.AreEqual("((97)-5)", v.w);
                Assert.AreEqual("((97)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)3)", null, null, "(-25)", "-6");
                var v = ov.swizzle.brarg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-9)3)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("((-7-9)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "(58)", "(7-4)", "", "((12)9)");
                var v = ov.swizzle.brarb;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", null, "((48)5)", "-1", "");
                var v = ov.swizzle.brara;
                Assert.AreEqual("((48)5)", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "-1", "((12)-3)", "-1", "");
                var v = ov.swizzle.brark;
                Assert.AreEqual("((12)-3)", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-24)8)", "(30)", "(30)", "1", "(-71)");
                var v = ov.swizzle.brag;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("((-24)8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(30)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-68)5)", "(9-4)", "", "(9-4)");
                var v = ov.swizzle.bragr;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-68)5)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((7-1)-8)", null, "", "3");
                var v = ov.swizzle.bragg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-1)-8)", v.w);
                Assert.AreEqual("((7-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-19)", "(-6-4)", "((07)-4)", "");
                var v = ov.swizzle.bragb;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((07)-4)", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-1)", "(-2-3)", "(-2-3)", "(8-1)", "-5");
                var v = ov.swizzle.braga;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-2)", "0", "((57)-3)", null, "(-87)");
                var v = ov.swizzle.bragk;
                Assert.AreEqual("((57)-3)", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "(6-1)", "((43)-8)", "((6-8)9)", "((30)5)");
                var v = ov.swizzle.brab;
                Assert.AreEqual("((43)-8)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("((6-8)9)", v.z);
                Assert.AreEqual("((43)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-4)-7)", "", "((-6-4)-7)", "(11)", "((64)-1)");
                var v = ov.swizzle.brabr;
                Assert.AreEqual("((-6-4)-7)", v.x);
                Assert.AreEqual("((-6-4)-7)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("((-6-4)-7)", v.w);
                Assert.AreEqual("((-6-4)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-4-8)", "", "6", "(5-4)");
                var v = ov.swizzle.brabg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-75)9)", null, "((-75)9)", "4", "4");
                var v = ov.swizzle.brabb;
                Assert.AreEqual("((-75)9)", v.x);
                Assert.AreEqual("((-75)9)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-75)9)", v.w);
                Assert.AreEqual("((-75)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((4-9)6)", null, "-5", "-3");
                var v = ov.swizzle.braba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((03)-7)", "(9-6)", null, "(9-6)", "");
                var v = ov.swizzle.brabk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((03)-7)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-24)", "(43)", "((-15)-8)", "((40)-4)");
                var v = ov.swizzle.braa;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-15)-8)", v.z);
                Assert.AreEqual("((-15)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(-9-4)", "(-9-4)", "(-9-4)");
                var v = ov.swizzle.braar;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "(89)", "(89)", "((-4-5)-3)", "(3-5)");
                var v = ov.swizzle.braag;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((-4-5)-3)", v.z);
                Assert.AreEqual("((-4-5)-3)", v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-6)", "(9-6)", "-6", "(9-6)", "(6-9)");
                var v = ov.swizzle.braab;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(9-6)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "", "0", null);
                var v = ov.swizzle.braaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-5)-5)", null, "", "((-36)-5)", "");
                var v = ov.swizzle.braak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-5)-5)", v.y);
                Assert.AreEqual("((-36)-5)", v.z);
                Assert.AreEqual("((-36)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-45)6)", "", "0", "((4-8)2)", "(2-1)");
                var v = ov.swizzle.brak;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-45)6)", v.y);
                Assert.AreEqual("((4-8)2)", v.z);
                Assert.AreEqual("(2-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(-57)", "4", "");
                var v = ov.swizzle.brakr;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "-1", "-1", "(56)");
                var v = ov.swizzle.brakg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-19)1)", "0", "((-19)1)", "0");
                var v = ov.swizzle.brakb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-19)1)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(0-8)", null, "(-62)", "((51)3)");
                var v = ov.swizzle.braka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("((51)3)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "(-61)", "-8", "(-61)");
                var v = ov.swizzle.brakk;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-61)", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-64)-6)", "(-69)", "((3-1)5)", null);
                var v = ov.swizzle.brk;
                Assert.AreEqual("(-69)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("-1", "5", "(12)", "((-34)6)", "((3-4)1)");
                var v = ov.swizzle.brkr;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((3-4)1)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-29)-8)", "((0-5)-5)", "(74)", "(68)");
                var v = ov.swizzle.brkrr;
                Assert.AreEqual("((0-5)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-2-5)-7)", "-8", "(1-1)", "4", "((-53)0)");
                var v = ov.swizzle.brkrg;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((-2-5)-7)", v.y);
                Assert.AreEqual("((-53)0)", v.z);
                Assert.AreEqual("((-2-5)-7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-96)", "((-63)4)", "(56)", "", null);
                var v = ov.swizzle.brkrb;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("(91)", "", "((7-8)7)", "((11)7)", "4");
                var v = ov.swizzle.brkra;
                Assert.AreEqual("((7-8)7)", v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(91)", v.w);
                Assert.AreEqual("((11)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "((-2-8)1)", "1", "((-40)0)", "(87)");
                var v = ov.swizzle.brkrk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("(87)", v.v);
            }
            {
                var ov = new gvec5<string>("((-19)-9)", "((-19)-9)", "((-1-7)9)", "((31)2)", "-4");
                var v = ov.swizzle.brkg;
                Assert.AreEqual("((-1-7)9)", v.x);
                Assert.AreEqual("((-19)-9)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-19)-9)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "-1", "(-50)", "");
                var v = ov.swizzle.brkgr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "-1", "(-14)", "(-14)", "(-54)");
                var v = ov.swizzle.brkgg;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-9)8)", null, "(-51)", "(-51)", "7");
                var v = ov.swizzle.brkgb;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("((-5-9)8)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("(35)", "8", "(35)", "((-8-4)7)", "(35)");
                var v = ov.swizzle.brkga;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-8-4)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)1)", "7", "((5-4)6)", null, "(-9-6)");
                var v = ov.swizzle.brkgk;
                Assert.AreEqual("((5-4)6)", v.x);
                Assert.AreEqual("((6-5)1)", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-9-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)4)", "-5", "-2", "-5", null);
                var v = ov.swizzle.brkb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-50)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(-7-1)", "(-7-1)", "(3-7)", "((8-3)4)");
                var v = ov.swizzle.brkbr;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((8-3)4)", v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "", "-5", "3", null);
                var v = ov.swizzle.brkbg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)-2)", "7", "", "0", "");
                var v = ov.swizzle.brkbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-84)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-4)", "(-8-2)", "((-37)-4)", "(9-8)", "(73)");
                var v = ov.swizzle.brkba;
                Assert.AreEqual("((-37)-4)", v.x);
                Assert.AreEqual("((-37)-4)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("((-37)-4)", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "7", "((66)-1)", "(82)", "7");
                var v = ov.swizzle.brkbk;
                Assert.AreEqual("((66)-1)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((66)-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "", "(2-5)", null);
                var v = ov.swizzle.brka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(2-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-6)-8)", "(5-9)", "5", "((5-8)-5)", "((13)6)");
                var v = ov.swizzle.brkar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-1-6)-8)", v.y);
                Assert.AreEqual("((13)6)", v.z);
                Assert.AreEqual("((5-8)-5)", v.w);
                Assert.AreEqual("((-1-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "-5", "-8", "-5");
                var v = ov.swizzle.brkag;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-81)-5)", "", "((-54)8)", "(-57)", "((-39)3)");
                var v = ov.swizzle.brkab;
                Assert.AreEqual("((-54)8)", v.x);
                Assert.AreEqual("((-81)-5)", v.y);
                Assert.AreEqual("((-39)3)", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("((-54)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-45)-7)", "((-45)-7)", "((7-8)-8)", "-6", "-6");
                var v = ov.swizzle.brkaa;
                Assert.AreEqual("((7-8)-8)", v.x);
                Assert.AreEqual("((-45)-7)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((22)-2)", "-7", "-4", "(16)");
                var v = ov.swizzle.brkak;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(16)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(16)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-3)0)", "((49)0)", "-2", "(-44)", "(-44)");
                var v = ov.swizzle.brkk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-1-3)0)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("(-44)", v.w);
            }
            {
                var ov = new gvec5<string>("((85)4)", "(0-1)", null, "(7-3)", "(-2-5)");
                var v = ov.swizzle.brkkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((85)4)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("((85)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "(-17)", "-6", "((25)-2)", "-6");
                var v = ov.swizzle.brkkg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(3-9)", "4", "((4-7)4)", "(31)");
                var v = ov.swizzle.brkkb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("(31)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "-9", "(54)", "(70)", "((2-9)4)");
                var v = ov.swizzle.brkka;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("((2-9)4)", v.z);
                Assert.AreEqual("((2-9)4)", v.w);
                Assert.AreEqual("(70)", v.v);
            }
            {
                var ov = new gvec5<string>("(-25)", "(-25)", "", "((59)6)", "(56)");
                var v = ov.swizzle.brkkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)-3)", "", "(0-5)", "((-1-3)-7)", "-7");
                var v = ov.swizzle.bg;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("", v.y);
            }
            {
                var ov = new gvec5<string>("(-43)", "-6", "-6", "((0-9)3)", "5");
                var v = ov.swizzle.bgr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-43)", v.z);
            }
            {
                var ov = new gvec5<string>("(-38)", "4", "(-38)", "(-38)", "((18)2)");
                var v = ov.swizzle.bgrr;
                Assert.AreEqual("(-38)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-38)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-1-1)-9)", "((20)4)", "-2", "");
                var v = ov.swizzle.bgrrr;
                Assert.AreEqual("((20)4)", v.x);
                Assert.AreEqual("((-1-1)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(7-9)", "(89)", "-8", "((82)4)");
                var v = ov.swizzle.bgrrg;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-24)", null, "((-7-9)6)", "((85)8)", "(-42)");
                var v = ov.swizzle.bgrrb;
                Assert.AreEqual("((-7-9)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-24)", v.z);
                Assert.AreEqual("(-24)", v.w);
                Assert.AreEqual("((-7-9)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(76)", "-2", null, "((2-5)4)", "");
                var v = ov.swizzle.bgrra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("((2-5)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-3-4)", "((-5-9)-2)", "5", "((-5-9)-2)");
                var v = ov.swizzle.bgrrk;
                Assert.AreEqual("((-5-9)-2)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-5-9)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "((8-9)-5)", "((-31)-6)", "(-16)");
                var v = ov.swizzle.bgrg;
                Assert.AreEqual("((8-9)-5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("(6-4)", null, "8", "((-25)7)", "-1");
                var v = ov.swizzle.bgrgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "((04)-8)", "(-8-4)", "((04)-8)");
                var v = ov.swizzle.bgrgg;
                Assert.AreEqual("((04)-8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-7-9)", "((-18)-2)", "((-72)-2)", "((08)-5)");
                var v = ov.swizzle.bgrgb;
                Assert.AreEqual("((-18)-2)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("((-18)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "4", "(-7-3)", "4", "((4-7)-5)");
                var v = ov.swizzle.bgrga;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-93)-7)", "(-44)", "8", "2", "");
                var v = ov.swizzle.bgrgk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("((-93)-7)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-9-4)9)", null, null, "-1");
                var v = ov.swizzle.bgrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-4)9)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-32)", "((-8-6)-8)", "((-38)6)", "(-7-1)");
                var v = ov.swizzle.bgrbr;
                Assert.AreEqual("((-8-6)-8)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-6)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-7)", "(-11)", "(-11)", "", "((9-5)-9)");
                var v = ov.swizzle.bgrbg;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-6)", "7", "0", "", "0");
                var v = ov.swizzle.bgrbb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-97)1)", "", "(-29)", "6", "(-6-5)");
                var v = ov.swizzle.bgrba;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-97)1)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "7", "((7-6)4)", "7", "");
                var v = ov.swizzle.bgrbk;
                Assert.AreEqual("((7-6)4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("((7-6)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((2-9)-3)", "(-9-8)", "-7", "8", "8");
                var v = ov.swizzle.bgra;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual("((2-9)-3)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(-4-2)", "((4-3)-6)", "((79)-6)", "(-4-2)");
                var v = ov.swizzle.bgrar;
                Assert.AreEqual("((4-3)-6)", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((79)-6)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-9)4)", "", "-1", "((51)2)", "");
                var v = ov.swizzle.bgrag;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-9)4)", v.z);
                Assert.AreEqual("((51)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "(-88)", "0", "4", null);
                var v = ov.swizzle.bgrab;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-88)", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((93)9)", null, "-1", "", "2");
                var v = ov.swizzle.bgraa;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((93)9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(0-9)", "(0-9)", "-5", "(0-9)", "(7-2)");
                var v = ov.swizzle.bgrak;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("(0-9)", v.w);
                Assert.AreEqual("(7-2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "1", "((-29)-9)", "(-5-2)", "");
                var v = ov.swizzle.bgrk;
                Assert.AreEqual("((-29)-9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(4-1)", "((8-3)9)", null, "((8-3)9)", null);
                var v = ov.swizzle.bgrkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-3)9)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((78)6)", "-8", "", "-8", "0");
                var v = ov.swizzle.bgrkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((78)6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "((9-1)4)", "(-41)", null);
                var v = ov.swizzle.bgrkb;
                Assert.AreEqual("((9-1)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-1)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-40)9)", "((8-9)-9)", null, "(-4-9)", "0");
                var v = ov.swizzle.bgrka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-9)-9)", v.y);
                Assert.AreEqual("((-40)9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-4-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "(-1-6)", "(9-4)", "((-37)-4)", null);
                var v = ov.swizzle.bgrkk;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-8-5)-5)", "((-90)-2)", "", "(55)", "-3");
                var v = ov.swizzle.bgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-90)-2)", v.y);
                Assert.AreEqual("((-90)-2)", v.z);
            }
            {
                var ov = new gvec5<string>("-1", "", "-1", "", "0");
                var v = ov.swizzle.bggr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(17)", null, "-3", "-3");
                var v = ov.swizzle.bggrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((29)8)", "(-2-9)", "(-2-9)", "((29)8)");
                var v = ov.swizzle.bggrg;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("((29)8)", v.y);
                Assert.AreEqual("((29)8)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((29)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((31)2)", "7", "((31)2)", "7");
                var v = ov.swizzle.bggrb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((31)2)", v.y);
                Assert.AreEqual("((31)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((9-9)-6)", "((-6-4)-1)", "((9-9)-6)", "(19)", "-6");
                var v = ov.swizzle.bggra;
                Assert.AreEqual("((9-9)-6)", v.x);
                Assert.AreEqual("((-6-4)-1)", v.y);
                Assert.AreEqual("((-6-4)-1)", v.z);
                Assert.AreEqual("((9-9)-6)", v.w);
                Assert.AreEqual("(19)", v.v);
            }
            {
                var ov = new gvec5<string>("(-27)", "((54)-8)", "(-7-2)", "((-13)5)", "((-13)5)");
                var v = ov.swizzle.bggrk;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("((54)-8)", v.y);
                Assert.AreEqual("((54)-8)", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("((-13)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-10)", "((1-7)-5)", "-1", "(-10)", "3");
                var v = ov.swizzle.bggg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((1-7)-5)", v.y);
                Assert.AreEqual("((1-7)-5)", v.z);
                Assert.AreEqual("((1-7)-5)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-54)", "-1", "", "(-6-3)");
                var v = ov.swizzle.bgggr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-85)7)", "((-85)7)", "((-21)-1)", "((58)-9)");
                var v = ov.swizzle.bgggg;
                Assert.AreEqual("((-85)7)", v.x);
                Assert.AreEqual("((-85)7)", v.y);
                Assert.AreEqual("((-85)7)", v.z);
                Assert.AreEqual("((-85)7)", v.w);
                Assert.AreEqual("((-85)7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "((-97)-6)", "8", "((28)-7)");
                var v = ov.swizzle.bgggb;
                Assert.AreEqual("((-97)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-97)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-25)", "(8-2)", "8", null);
                var v = ov.swizzle.bggga;
                Assert.AreEqual("(8-2)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-7)-7)", "(2-9)", "((38)-2)", "(7-8)", "8");
                var v = ov.swizzle.bgggk;
                Assert.AreEqual("((38)-2)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(2-9)", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", null, "(-9-6)", "((-2-1)3)", "-5");
                var v = ov.swizzle.bggb;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-9-6)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "((-2-7)2)", "((-1-4)-6)", "((5-4)-5)", "9");
                var v = ov.swizzle.bggbr;
                Assert.AreEqual("((-1-4)-6)", v.x);
                Assert.AreEqual("((-2-7)2)", v.y);
                Assert.AreEqual("((-2-7)2)", v.z);
                Assert.AreEqual("((-1-4)-6)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-7)-4)", "", "((-5-8)4)", "(5-8)", "(1-3)");
                var v = ov.swizzle.bggbg;
                Assert.AreEqual("((-5-8)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-8)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(5-8)", "((53)5)", "((-7-8)5)", "(5-6)", "");
                var v = ov.swizzle.bggbb;
                Assert.AreEqual("((-7-8)5)", v.x);
                Assert.AreEqual("((53)5)", v.y);
                Assert.AreEqual("((53)5)", v.z);
                Assert.AreEqual("((-7-8)5)", v.w);
                Assert.AreEqual("((-7-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "((30)-2)", "", "0");
                var v = ov.swizzle.bggba;
                Assert.AreEqual("((30)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((30)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "-2", "(-7-1)", "7");
                var v = ov.swizzle.bggbk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-6-9)-4)", "(-8-3)", "-7", "(-8-3)");
                var v = ov.swizzle.bgga;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((-6-9)-4)", v.y);
                Assert.AreEqual("((-6-9)-4)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("", "((16)-2)", "((83)4)", "(-7-4)", "4");
                var v = ov.swizzle.bggar;
                Assert.AreEqual("((83)4)", v.x);
                Assert.AreEqual("((16)-2)", v.y);
                Assert.AreEqual("((16)-2)", v.z);
                Assert.AreEqual("(-7-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "", null);
                var v = ov.swizzle.bggag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((61)-3)", "((-7-5)2)", "((-7-5)2)", "(-18)", "((61)-3)");
                var v = ov.swizzle.bggab;
                Assert.AreEqual("((-7-5)2)", v.x);
                Assert.AreEqual("((-7-5)2)", v.y);
                Assert.AreEqual("((-7-5)2)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("((-7-5)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(58)", null, "0", "0", "");
                var v = ov.swizzle.bggaa;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(32)", "((-97)-9)", "((-97)-9)", "((-97)-9)", "6");
                var v = ov.swizzle.bggak;
                Assert.AreEqual("((-97)-9)", v.x);
                Assert.AreEqual("((-97)-9)", v.y);
                Assert.AreEqual("((-97)-9)", v.z);
                Assert.AreEqual("((-97)-9)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, null, "-5", null);
                var v = ov.swizzle.bggk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-6-8)0)", "(74)", "", "", "((-6-4)-6)");
                var v = ov.swizzle.bggkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("((-6-4)-6)", v.w);
                Assert.AreEqual("((-6-8)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "((-29)-5)", "(-76)", null, "((-29)-5)");
                var v = ov.swizzle.bggkg;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((-29)-5)", v.y);
                Assert.AreEqual("((-29)-5)", v.z);
                Assert.AreEqual("((-29)-5)", v.w);
                Assert.AreEqual("((-29)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-5)-6)", "(96)", "((-19)8)", "-2", "");
                var v = ov.swizzle.bggkb;
                Assert.AreEqual("((-19)8)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-19)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-87)-5)", "((95)5)", "((95)5)", "-2", "");
                var v = ov.swizzle.bggka;
                Assert.AreEqual("((95)5)", v.x);
                Assert.AreEqual("((95)5)", v.y);
                Assert.AreEqual("((95)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-1)", null, "", "(-74)", "((4-2)2)");
                var v = ov.swizzle.bggkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((4-2)2)", v.w);
                Assert.AreEqual("((4-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", "1", "(-45)", "(28)");
                var v = ov.swizzle.bgb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec5<string>("((74)2)", "((74)2)", "((10)-2)", "((74)2)", "(73)");
                var v = ov.swizzle.bgbr;
                Assert.AreEqual("((10)-2)", v.x);
                Assert.AreEqual("((74)2)", v.y);
                Assert.AreEqual("((10)-2)", v.z);
                Assert.AreEqual("((74)2)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "8", "8", "((3-3)-7)", "(-14)");
                var v = ov.swizzle.bgbrr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(6-3)", "4", "((-2-9)-1)", "((89)-3)", "4");
                var v = ov.swizzle.bgbrg;
                Assert.AreEqual("((-2-9)-1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-2-9)-1)", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-49)-2)", "2", "(-35)", "");
                var v = ov.swizzle.bgbrb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-49)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-56)1)", "((-65)-1)", "-3", "(-4-8)");
                var v = ov.swizzle.bgbra;
                Assert.AreEqual("((-65)-1)", v.x);
                Assert.AreEqual("((-56)1)", v.y);
                Assert.AreEqual("((-65)-1)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(13)", "-4", "(-90)", "(-3-7)", null);
                var v = ov.swizzle.bgbrk;
                Assert.AreEqual("(-90)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-90)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "2", "-3", null, "2");
                var v = ov.swizzle.bgbg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("", "", null, "(15)", "(28)");
                var v = ov.swizzle.bgbgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-90)-7)", "(83)", "(-15)", "(-15)", null);
                var v = ov.swizzle.bgbgg;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("", "8", null, "-1", "-1");
                var v = ov.swizzle.bgbgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-3-5)", "", "((6-6)0)", "-5");
                var v = ov.swizzle.bgbga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("((6-6)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-9)9)", null, "(-7-9)", "-4", "((-43)7)");
                var v = ov.swizzle.bgbgk;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-43)7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((61)-3)", "(-48)", "((85)4)", null);
                var v = ov.swizzle.bgbb;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("((61)-3)", v.y);
                Assert.AreEqual("(-48)", v.z);
                Assert.AreEqual("(-48)", v.w);
            }
            {
                var ov = new gvec5<string>("((-91)6)", "0", "0", "(6-4)", "0");
                var v = ov.swizzle.bgbbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-91)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((0-3)-6)", "((0-3)8)", "((0-3)-6)", "((0-3)8)");
                var v = ov.swizzle.bgbbg;
                Assert.AreEqual("((0-3)8)", v.x);
                Assert.AreEqual("((0-3)-6)", v.y);
                Assert.AreEqual("((0-3)8)", v.z);
                Assert.AreEqual("((0-3)8)", v.w);
                Assert.AreEqual("((0-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(85)", "0", null, "(-4-8)", "(-4-8)");
                var v = ov.swizzle.bgbbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "(-5-2)", null, null, "6");
                var v = ov.swizzle.bgbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "((-97)-7)", "-3", null);
                var v = ov.swizzle.bgbbk;
                Assert.AreEqual("((-97)-7)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-97)-7)", v.z);
                Assert.AreEqual("((-97)-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", "(85)", "((4-2)-3)", "((-5-6)-5)", "(2-4)");
                var v = ov.swizzle.bgba;
                Assert.AreEqual("((4-2)-3)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("((4-2)-3)", v.z);
                Assert.AreEqual("((-5-6)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", null, "(-13)", "(-13)", "(32)");
                var v = ov.swizzle.bgbar;
                Assert.AreEqual("(-13)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-13)", v.z);
                Assert.AreEqual("(-13)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-96)", "(3-3)", "((-56)0)", "", "");
                var v = ov.swizzle.bgbag;
                Assert.AreEqual("((-56)0)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((-56)0)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", null, "((92)-5)", "(-71)");
                var v = ov.swizzle.bgbab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((92)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "(-59)", "(-59)", "-9");
                var v = ov.swizzle.bgbaa;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("(-17)", "((-8-2)2)", "((-8-4)-7)", "", "((-8-4)-7)");
                var v = ov.swizzle.bgbak;
                Assert.AreEqual("((-8-4)-7)", v.x);
                Assert.AreEqual("((-8-2)2)", v.y);
                Assert.AreEqual("((-8-4)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-4)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)1)", "-9", "(-7-5)", null, "(4-5)");
                var v = ov.swizzle.bgbk;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("(4-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((92)-1)", "2", "(40)", "(40)", "-9");
                var v = ov.swizzle.bgbkr;
                Assert.AreEqual("(40)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((92)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "((-93)9)", "(-29)", "(-29)", "(-29)");
                var v = ov.swizzle.bgbkg;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("((-93)9)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("((-93)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", "(30)", "(30)", "((9-1)4)", "(30)");
                var v = ov.swizzle.bgbkb;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("(30)", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "((-24)5)", null, "-2");
                var v = ov.swizzle.bgbka;
                Assert.AreEqual("((-24)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-24)5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", null, "((5-5)8)", "(-4-2)", "-3");
                var v = ov.swizzle.bgbkk;
                Assert.AreEqual("((5-5)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-5)8)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((1-4)-4)", "5", "((89)5)", "((-3-3)5)");
                var v = ov.swizzle.bga;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((1-4)-4)", v.y);
                Assert.AreEqual("((89)5)", v.z);
            }
            {
                var ov = new gvec5<string>("(-5-6)", "((0-2)-6)", "(-5-6)", "((0-2)-6)", "2");
                var v = ov.swizzle.bgar;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual("((0-2)-6)", v.y);
                Assert.AreEqual("((0-2)-6)", v.z);
                Assert.AreEqual("(-5-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(98)", null, "", "1");
                var v = ov.swizzle.bgarr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((34)3)", "(32)", null, "((5-1)-6)", "5");
                var v = ov.swizzle.bgarg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(32)", v.y);
                Assert.AreEqual("((5-1)-6)", v.z);
                Assert.AreEqual("((34)3)", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-2)", "4", "-7", "4", null);
                var v = ov.swizzle.bgarb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((34)7)", "1", "2", "(13)");
                var v = ov.swizzle.bgara;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((34)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((02)6)", null, "(30)", "(-4-5)", null);
                var v = ov.swizzle.bgark;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("((02)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "((50)-2)", "((07)-1)", "((-4-4)-2)");
                var v = ov.swizzle.bgag;
                Assert.AreEqual("((50)-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((07)-1)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(8-1)", "(9-4)", "-7", "-7");
                var v = ov.swizzle.bgagr;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-39)3)", "(-9-7)", "-8", "((80)-8)");
                var v = ov.swizzle.bgagg;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("((-39)3)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-39)3)", v.w);
                Assert.AreEqual("((-39)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(-59)", "(-59)", "-8");
                var v = ov.swizzle.bgagb;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-9)-4)", "((1-3)-5)", null, "(7-1)", "(-68)");
                var v = ov.swizzle.bgaga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((1-3)-5)", v.y);
                Assert.AreEqual("(7-1)", v.z);
                Assert.AreEqual("((1-3)-5)", v.w);
                Assert.AreEqual("(7-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-7-9)", "(-7-9)", "((-70)4)");
                var v = ov.swizzle.bgagk;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-70)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "((08)4)", "(67)", null, "");
                var v = ov.swizzle.bgab;
                Assert.AreEqual("(67)", v.x);
                Assert.AreEqual("((08)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec5<string>("((-59)6)", "(34)", "((-59)6)", "1", "(-6-6)");
                var v = ov.swizzle.bgabr;
                Assert.AreEqual("((-59)6)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-59)6)", v.w);
                Assert.AreEqual("((-59)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-76)", "((8-1)9)", "((8-1)9)", "(-76)");
                var v = ov.swizzle.bgabg;
                Assert.AreEqual("((8-1)9)", v.x);
                Assert.AreEqual("(-76)", v.y);
                Assert.AreEqual("((8-1)9)", v.z);
                Assert.AreEqual("((8-1)9)", v.w);
                Assert.AreEqual("(-76)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-8-7)", "((-74)9)", "((-74)9)", "6");
                var v = ov.swizzle.bgabb;
                Assert.AreEqual("((-74)9)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("((-74)9)", v.z);
                Assert.AreEqual("((-74)9)", v.w);
                Assert.AreEqual("((-74)9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-2-5)-9)", null, "(2-7)", "-8");
                var v = ov.swizzle.bgaba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-2-5)-9)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "(0-2)", "((4-7)4)", "((-97)7)");
                var v = ov.swizzle.bgabk;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((4-7)4)", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("((-97)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-4)", "5", "((66)-3)", "-5", "((66)-3)");
                var v = ov.swizzle.bgaa;
                Assert.AreEqual("((66)-3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((0-3)-1)", "((32)-3)", "-7", "((0-3)-1)");
                var v = ov.swizzle.bgaar;
                Assert.AreEqual("((32)-3)", v.x);
                Assert.AreEqual("((0-3)-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "4", "(0-7)", "((93)1)", "((93)1)");
                var v = ov.swizzle.bgaag;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((93)1)", v.z);
                Assert.AreEqual("((93)1)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "(-4-6)", "9", "9", "");
                var v = ov.swizzle.bgaab;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-1)", "((6-4)-6)", "((1-6)-5)", null, "-3");
                var v = ov.swizzle.bgaaa;
                Assert.AreEqual("((1-6)-5)", v.x);
                Assert.AreEqual("((6-4)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-18)", "((4-2)-6)", "(-18)", null, "(74)");
                var v = ov.swizzle.bgaak;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("((4-2)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(74)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((50)-2)", "((47)-1)", "4", "-6");
                var v = ov.swizzle.bgak;
                Assert.AreEqual("((47)-1)", v.x);
                Assert.AreEqual("((50)-2)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-9-2)5)", "(11)", null, "(11)");
                var v = ov.swizzle.bgakr;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("((-9-2)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-3-3)", "(-9-2)", "2", null);
                var v = ov.swizzle.bgakg;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-3-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(25)", "", "-5", "((-10)-9)");
                var v = ov.swizzle.bgakb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(25)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-10)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((27)-6)", null, "((-1-4)-7)", "(-3-1)");
                var v = ov.swizzle.bgaka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((27)-6)", v.y);
                Assert.AreEqual("((-1-4)-7)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("((-1-4)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "((7-9)3)", null, "((7-9)3)");
                var v = ov.swizzle.bgakk;
                Assert.AreEqual("((7-9)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((7-9)3)", v.w);
                Assert.AreEqual("((7-9)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)0)", "-7", "-7", null, "(-9-5)");
                var v = ov.swizzle.bgk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-9-5)", v.z);
            }
            {
                var ov = new gvec5<string>("((-1-9)1)", "((95)3)", "(-4-7)", "(-4-7)", "-9");
                var v = ov.swizzle.bgkr;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("((95)3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-1-9)1)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(71)", "((-1-7)8)", "4", "8");
                var v = ov.swizzle.bgkrr;
                Assert.AreEqual("((-1-7)8)", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((2-5)7)", "", "(-55)", "((-4-8)7)");
                var v = ov.swizzle.bgkrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((2-5)7)", v.y);
                Assert.AreEqual("((-4-8)7)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((2-5)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((83)-7)", "(0-7)", null, "((91)-8)", "(0-7)");
                var v = ov.swizzle.bgkrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("((83)-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-21)-1)", null, "8", "((8-4)-8)", "");
                var v = ov.swizzle.bgkra;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-21)-1)", v.w);
                Assert.AreEqual("((8-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((16)7)", "2", "", null);
                var v = ov.swizzle.bgkrk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((16)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)-9)", "((74)-4)", "", "7", "-9");
                var v = ov.swizzle.bgkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((74)-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((74)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-8-9)5)", "", "((-8-9)5)", "-1");
                var v = ov.swizzle.bgkgr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-8-9)5)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-8-9)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((1-2)8)", "(-4-7)", "6", "(-4-7)", "");
                var v = ov.swizzle.bgkgg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-1-3)", "((-65)-5)", "((-65)-5)", "1");
                var v = ov.swizzle.bgkgb;
                Assert.AreEqual("((-65)-5)", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("((-65)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-6", "((-8-6)0)", null, "-6");
                var v = ov.swizzle.bgkga;
                Assert.AreEqual("((-8-6)0)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((10)-1)", "(-44)", "(-5-9)", null, "((10)-1)");
                var v = ov.swizzle.bgkgk;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("((10)-1)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("((10)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "((6-1)-5)", "9", "((-4-2)4)", "(90)");
                var v = ov.swizzle.bgkb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((6-1)-5)", v.y);
                Assert.AreEqual("(90)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(03)", "(-68)", "(-68)");
                var v = ov.swizzle.bgkbr;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("(03)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)9)", "", "((7-3)-7)", "8", "");
                var v = ov.swizzle.bgkbg;
                Assert.AreEqual("((7-3)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-3)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "(-77)", "((6-3)-8)", "-6");
                var v = ov.swizzle.bgkbb;
                Assert.AreEqual("(-77)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec5<string>("((54)-7)", "6", "", "-4", "6");
                var v = ov.swizzle.bgkba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "(-7-2)", "(8-2)", "");
                var v = ov.swizzle.bgkbk;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-48)", "((95)1)", "-7", "((-7-5)0)", "");
                var v = ov.swizzle.bgka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((95)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-5)0)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "4", "((-31)5)", "((-54)-4)", "(-38)");
                var v = ov.swizzle.bgkar;
                Assert.AreEqual("((-31)5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("((-54)-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-9)1)", "((-2-9)1)", "((-56)3)", "", "(33)");
                var v = ov.swizzle.bgkag;
                Assert.AreEqual("((-56)3)", v.x);
                Assert.AreEqual("((-2-9)1)", v.y);
                Assert.AreEqual("(33)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-9)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(45)", "(45)", "((6-2)-3)", "(3-4)");
                var v = ov.swizzle.bgkab;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("(3-4)", v.z);
                Assert.AreEqual("((6-2)-3)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "7", "((6-7)-9)", "-3", "((6-7)-9)");
                var v = ov.swizzle.bgkaa;
                Assert.AreEqual("((6-7)-9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((6-7)-9)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-80)", "((9-3)-2)", "(-7-3)", "(-6-9)", "((5-3)-4)");
                var v = ov.swizzle.bgkak;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("((9-3)-2)", v.y);
                Assert.AreEqual("((5-3)-4)", v.z);
                Assert.AreEqual("(-6-9)", v.w);
                Assert.AreEqual("((5-3)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-7)", "(-5-4)", "((63)6)", "((8-5)-2)", "");
                var v = ov.swizzle.bgkk;
                Assert.AreEqual("((63)6)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((9-7)6)", "2", "", null, "(-1-9)");
                var v = ov.swizzle.bgkkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("((9-7)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-9)", "((2-9)-3)", null, "-8", "((2-9)-3)");
                var v = ov.swizzle.bgkkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((2-9)-3)", v.y);
                Assert.AreEqual("((2-9)-3)", v.z);
                Assert.AreEqual("((2-9)-3)", v.w);
                Assert.AreEqual("((2-9)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(6-3)", "3", "(-8-8)", null);
                var v = ov.swizzle.bgkkb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-51)6)", "(-34)", "8", "4", "8");
                var v = ov.swizzle.bgkka;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", null, "8", "", "((-82)-4)");
                var v = ov.swizzle.bgkkk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-82)-4)", v.z);
                Assert.AreEqual("((-82)-4)", v.w);
                Assert.AreEqual("((-82)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-4)", "((-99)-2)", "(-2-1)", "1", "");
                var v = ov.swizzle.bb;
                Assert.AreEqual("(-2-1)", v.x);
                Assert.AreEqual("(-2-1)", v.y);
            }
            {
                var ov = new gvec5<string>(null, "-8", "3", "((-55)-2)", "8");
                var v = ov.swizzle.bbr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("((-27)0)", "", "", "-9", "(-87)");
                var v = ov.swizzle.bbrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-27)0)", v.z);
                Assert.AreEqual("((-27)0)", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "(-12)", "", "((98)-2)", "");
                var v = ov.swizzle.bbrrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-3)", "(-6-3)", "4", "0", "4");
                var v = ov.swizzle.bbrrg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(-6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-9)-1)", null, "((7-9)-1)", "-8", "((57)1)");
                var v = ov.swizzle.bbrrb;
                Assert.AreEqual("((7-9)-1)", v.x);
                Assert.AreEqual("((7-9)-1)", v.y);
                Assert.AreEqual("((7-9)-1)", v.z);
                Assert.AreEqual("((7-9)-1)", v.w);
                Assert.AreEqual("((7-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "8", "(43)", "(6-8)", "(4-3)");
                var v = ov.swizzle.bbrra;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-8)-4)", "-6", "-6", "((-58)8)", "(-5-5)");
                var v = ov.swizzle.bbrrk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-8-8)-4)", v.z);
                Assert.AreEqual("((-8-8)-4)", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)-3)", "((32)-8)", "4", "0", "4");
                var v = ov.swizzle.bbrg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-3-7)-3)", v.z);
                Assert.AreEqual("((32)-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(9-2)", "0", "(9-2)", "((5-9)3)");
                var v = ov.swizzle.bbrgr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-6)", null, "(91)", "8", "");
                var v = ov.swizzle.bbrgg;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(37)", "-4", "-4");
                var v = ov.swizzle.bbrgb;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(37)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)1)", "-3", "(65)", "(-6-9)", "((70)2)");
                var v = ov.swizzle.bbrga;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("((-9-9)1)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-4)", "6", "(-3-7)", "((9-7)-8)", "(1-6)");
                var v = ov.swizzle.bbrgk;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", null, "((67)-9)", null);
                var v = ov.swizzle.bbrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(59)", "", "(2-6)", "((64)7)", "((64)7)");
                var v = ov.swizzle.bbrbr;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(72)", "((0-7)-9)", "", "(-7-1)");
                var v = ov.swizzle.bbrbg;
                Assert.AreEqual("((0-7)-9)", v.x);
                Assert.AreEqual("((0-7)-9)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((0-7)-9)", v.w);
                Assert.AreEqual("(72)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)-3)", "-8", "((6-8)-3)", "-8", "");
                var v = ov.swizzle.bbrbb;
                Assert.AreEqual("((6-8)-3)", v.x);
                Assert.AreEqual("((6-8)-3)", v.y);
                Assert.AreEqual("((6-8)-3)", v.z);
                Assert.AreEqual("((6-8)-3)", v.w);
                Assert.AreEqual("((6-8)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((5-6)1)", "((5-6)1)", "(6-7)", "0");
                var v = ov.swizzle.bbrba;
                Assert.AreEqual("((5-6)1)", v.x);
                Assert.AreEqual("((5-6)1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((5-6)1)", v.w);
                Assert.AreEqual("(6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "((-4-5)-2)", "", null);
                var v = ov.swizzle.bbrbk;
                Assert.AreEqual("((-4-5)-2)", v.x);
                Assert.AreEqual("((-4-5)-2)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-4-5)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(66)", "(66)", "2", null, "2");
                var v = ov.swizzle.bbra;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-3-7)", "8", "-1", "8");
                var v = ov.swizzle.bbrar;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((4-3)-2)", "-4", "6", "", "((-83)0)");
                var v = ov.swizzle.bbrag;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((4-3)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((83)7)", "6", "((65)5)", "((65)5)", "9");
                var v = ov.swizzle.bbrab;
                Assert.AreEqual("((65)5)", v.x);
                Assert.AreEqual("((65)5)", v.y);
                Assert.AreEqual("((83)7)", v.z);
                Assert.AreEqual("((65)5)", v.w);
                Assert.AreEqual("((65)5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "9", null, null, "(-8-4)");
                var v = ov.swizzle.bbraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((36)-8)", "(65)", "((-74)-8)", "(65)", "((36)-8)");
                var v = ov.swizzle.bbrak;
                Assert.AreEqual("((-74)-8)", v.x);
                Assert.AreEqual("((-74)-8)", v.y);
                Assert.AreEqual("((36)-8)", v.z);
                Assert.AreEqual("(65)", v.w);
                Assert.AreEqual("((36)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "8", "((-40)7)", "3", "((1-3)-3)");
                var v = ov.swizzle.bbrk;
                Assert.AreEqual("((-40)7)", v.x);
                Assert.AreEqual("((-40)7)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((1-3)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-57)-6)", "-8", "(7-8)", "((77)-1)", "-2");
                var v = ov.swizzle.bbrkr;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("((-57)-6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-57)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-8-2)-8)", "(-3-1)", "((-17)3)", "");
                var v = ov.swizzle.bbrkg;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-2)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-3)-6)", "((46)-1)", "-9", "(62)", "-9");
                var v = ov.swizzle.bbrkb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-2-3)-6)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("6", "3", "(1-6)", "1", "3");
                var v = ov.swizzle.bbrka;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(1-7)", "((6-1)8)", "", "((3-7)0)", "");
                var v = ov.swizzle.bbrkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "", "((-75)-5)", "(-8-5)", "-5");
                var v = ov.swizzle.bbg;
                Assert.AreEqual("((-75)-5)", v.x);
                Assert.AreEqual("((-75)-5)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((6-7)-2)", "-4", "-9", "(8-3)", "(8-3)");
                var v = ov.swizzle.bbgr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((6-7)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-1)", "(-1-1)", "-8", "(-14)", "((8-4)-5)");
                var v = ov.swizzle.bbgrr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-37)", "", null, "((-42)9)");
                var v = ov.swizzle.bbgrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "((47)-5)", null, "-2", null);
                var v = ov.swizzle.bbgrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((47)-5)", v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(94)", "(94)", "((90)-7)", "(50)");
                var v = ov.swizzle.bbgra;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((90)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "(4-1)", "4", "((17)-5)", null);
                var v = ov.swizzle.bbgrk;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((16)5)", "5", "((8-2)-9)", "1");
                var v = ov.swizzle.bbgg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((16)5)", v.z);
                Assert.AreEqual("((16)5)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-3)", "((-12)1)", "(5-9)", "((-11)2)", "0");
                var v = ov.swizzle.bbggr;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("((-12)1)", v.z);
                Assert.AreEqual("((-12)1)", v.w);
                Assert.AreEqual("(-7-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(55)", null, "((5-6)-2)", "", "-5");
                var v = ov.swizzle.bbggg;
                Assert.AreEqual("((5-6)-2)", v.x);
                Assert.AreEqual("((5-6)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-7-7)", "(-7-7)", "(-93)", "((-73)-1)");
                var v = ov.swizzle.bbggb;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "4", "(-17)", "4", "(7-5)");
                var v = ov.swizzle.bbgga;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "((-31)5)", "((38)8)", "(-46)");
                var v = ov.swizzle.bbggk;
                Assert.AreEqual("((-31)5)", v.x);
                Assert.AreEqual("((-31)5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-46)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-2", "((-2-7)8)", "", "((-2-7)8)");
                var v = ov.swizzle.bbgb;
                Assert.AreEqual("((-2-7)8)", v.x);
                Assert.AreEqual("((-2-7)8)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-2-7)8)", v.w);
            }
            {
                var ov = new gvec5<string>("(8-6)", "((7-8)6)", "", "-8", "0");
                var v = ov.swizzle.bbgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-8)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-7)9)", null, "-7", "", null);
                var v = ov.swizzle.bbgbg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-3-4)1)", "(12)", "", null, "((-4-6)1)");
                var v = ov.swizzle.bbgbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-55)4)", "(-50)", "(46)", "((-55)4)", "7");
                var v = ov.swizzle.bbgba;
                Assert.AreEqual("(46)", v.x);
                Assert.AreEqual("(46)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("((-55)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "((-1-7)-3)", "(-45)", "-6", "-6");
                var v = ov.swizzle.bbgbk;
                Assert.AreEqual("(-45)", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("((-1-7)-3)", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(98)", "((-5-4)-6)", "7", "(71)");
                var v = ov.swizzle.bbga;
                Assert.AreEqual("((-5-4)-6)", v.x);
                Assert.AreEqual("((-5-4)-6)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("", "8", "((68)-1)", "", "-1");
                var v = ov.swizzle.bbgar;
                Assert.AreEqual("((68)-1)", v.x);
                Assert.AreEqual("((68)-1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)-8)", "-3", "-7", "((-3-2)0)", "(72)");
                var v = ov.swizzle.bbgag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-3-2)0)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "0", "(2-7)", "-1", "-1");
                var v = ov.swizzle.bbgab;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(99)", "3", "3", "2");
                var v = ov.swizzle.bbgaa;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-9-8)8)", "(-81)", "7", "");
                var v = ov.swizzle.bbgak;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("((-9-8)8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", null, "((3-4)-2)", "-6", null);
                var v = ov.swizzle.bbgk;
                Assert.AreEqual("((3-4)-2)", v.x);
                Assert.AreEqual("((3-4)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((2-6)-4)", "((2-6)-4)", "((61)7)", "((2-6)-4)", "(3-8)");
                var v = ov.swizzle.bbgkr;
                Assert.AreEqual("((61)7)", v.x);
                Assert.AreEqual("((61)7)", v.y);
                Assert.AreEqual("((2-6)-4)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("((2-6)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-47)", "-8", "-7", "-8", "7");
                var v = ov.swizzle.bbgkg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-37)-3)", "((-37)-3)", "3", "(57)", "((-37)-3)");
                var v = ov.swizzle.bbgkb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-37)-3)", v.z);
                Assert.AreEqual("((-37)-3)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "9", "(04)", "(04)");
                var v = ov.swizzle.bbgka;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(04)", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-44)-6)", "1", "");
                var v = ov.swizzle.bbgkk;
                Assert.AreEqual("((-44)-6)", v.x);
                Assert.AreEqual("((-44)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((6-5)5)", "((-2-7)4)", "(53)", "-5", "-5");
                var v = ov.swizzle.bbb;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("(53)", v.z);
            }
            {
                var ov = new gvec5<string>("(-2-2)", "", "5", "", "(-6-7)");
                var v = ov.swizzle.bbbr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-2-2)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((-9-5)2)", "((97)-5)", "(81)", null);
                var v = ov.swizzle.bbbrr;
                Assert.AreEqual("((97)-5)", v.x);
                Assert.AreEqual("((97)-5)", v.y);
                Assert.AreEqual("((97)-5)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-40)-7)", "-8", "((30)5)", "-8", "-8");
                var v = ov.swizzle.bbbrg;
                Assert.AreEqual("((30)5)", v.x);
                Assert.AreEqual("((30)5)", v.y);
                Assert.AreEqual("((30)5)", v.z);
                Assert.AreEqual("((-40)-7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((32)-9)", "(07)", "(44)", "((32)-9)", "((32)-9)");
                var v = ov.swizzle.bbbrb;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(44)", v.z);
                Assert.AreEqual("((32)-9)", v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-55)", "(5-2)", "9", null);
                var v = ov.swizzle.bbbra;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("(5-2)", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "-8", "5", "7");
                var v = ov.swizzle.bbbrk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((84)3)", "((84)3)", "-4", "(02)", "(-12)");
                var v = ov.swizzle.bbbg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((84)3)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "1", "-8", "((-84)1)", "((11)2)");
                var v = ov.swizzle.bbbgr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-49)", "((-57)1)", "-1", "((-69)-5)", "((-57)1)");
                var v = ov.swizzle.bbbgg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-57)1)", v.w);
                Assert.AreEqual("((-57)1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "3", "((11)-7)", "-1");
                var v = ov.swizzle.bbbgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)7)", "((-7-3)-3)", "", "((-7-3)-3)", "((-7-3)-3)");
                var v = ov.swizzle.bbbga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-3)-3)", v.w);
                Assert.AreEqual("((-7-3)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-8)", "((-6-1)3)", "", "(-9-8)", "4");
                var v = ov.swizzle.bbbgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-1)3)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((21)4)", "((-1-7)-7)", "(-3-6)", null, "-3");
                var v = ov.swizzle.bbbb;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((34)-7)", "8", "4", "(-7-5)");
                var v = ov.swizzle.bbbbr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-13)", null, null, "-1", "");
                var v = ov.swizzle.bbbbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "((44)-5)", "-6", "(27)");
                var v = ov.swizzle.bbbbb;
                Assert.AreEqual("((44)-5)", v.x);
                Assert.AreEqual("((44)-5)", v.y);
                Assert.AreEqual("((44)-5)", v.z);
                Assert.AreEqual("((44)-5)", v.w);
                Assert.AreEqual("((44)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(4-6)", "(3-5)", "(-81)", "8");
                var v = ov.swizzle.bbbba;
                Assert.AreEqual("(3-5)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec5<string>("((-72)8)", "((22)4)", "3", "9", "-8");
                var v = ov.swizzle.bbbbk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "(53)", "((60)-7)", "9", "9");
                var v = ov.swizzle.bbba;
                Assert.AreEqual("((60)-7)", v.x);
                Assert.AreEqual("((60)-7)", v.y);
                Assert.AreEqual("((60)-7)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("((-30)-3)", "(-91)", "((7-1)-8)", "(-91)", "-7");
                var v = ov.swizzle.bbbar;
                Assert.AreEqual("((7-1)-8)", v.x);
                Assert.AreEqual("((7-1)-8)", v.y);
                Assert.AreEqual("((7-1)-8)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("((-30)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-2-4)9)", "0", "((-25)-3)", "-3");
                var v = ov.swizzle.bbbag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-25)-3)", v.w);
                Assert.AreEqual("((-2-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "((-80)-2)", "((-49)6)", null, "(6-9)");
                var v = ov.swizzle.bbbab;
                Assert.AreEqual("((-49)6)", v.x);
                Assert.AreEqual("((-49)6)", v.y);
                Assert.AreEqual("((-49)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-49)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((2-7)-2)", "((2-7)-2)", "((1-2)3)", "(79)");
                var v = ov.swizzle.bbbaa;
                Assert.AreEqual("((2-7)-2)", v.x);
                Assert.AreEqual("((2-7)-2)", v.y);
                Assert.AreEqual("((2-7)-2)", v.z);
                Assert.AreEqual("((1-2)3)", v.w);
                Assert.AreEqual("((1-2)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "((78)8)", "0", "(5-1)", "");
                var v = ov.swizzle.bbbak;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-1)2)", "", "-5", "(57)");
                var v = ov.swizzle.bbbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(57)", v.w);
            }
            {
                var ov = new gvec5<string>("(-66)", "(86)", "", "-6", null);
                var v = ov.swizzle.bbbkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-34)", null, "((4-4)-6)", "-3");
                var v = ov.swizzle.bbbkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-34)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(24)", null, "(-64)", "((-5-3)3)");
                var v = ov.swizzle.bbbkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-5-3)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "-7", "((-6-3)-5)", "(91)", "((-76)4)");
                var v = ov.swizzle.bbbka;
                Assert.AreEqual("((-6-3)-5)", v.x);
                Assert.AreEqual("((-6-3)-5)", v.y);
                Assert.AreEqual("((-6-3)-5)", v.z);
                Assert.AreEqual("((-76)4)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(56)", "", "0", "((4-8)-7)");
                var v = ov.swizzle.bbbkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((4-8)-7)", v.w);
                Assert.AreEqual("((4-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-1)", "(-7-9)", "0", "((5-6)2)", "(3-6)");
                var v = ov.swizzle.bba;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((5-6)2)", v.z);
            }
            {
                var ov = new gvec5<string>("(0-1)", "4", "-1", "((6-6)8)", "");
                var v = ov.swizzle.bbar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((6-6)8)", v.z);
                Assert.AreEqual("(0-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "-6", "(1-7)", "", "-6");
                var v = ov.swizzle.bbarr;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-7", "-7", null, "(-12)");
                var v = ov.swizzle.bbarg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(5-9)", "((05)-5)", "(5-9)", "(2-7)", null);
                var v = ov.swizzle.bbarb;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(5-9)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((3-4)9)", "((-9-5)1)", "(-35)", "(93)");
                var v = ov.swizzle.bbara;
                Assert.AreEqual("((-9-5)1)", v.x);
                Assert.AreEqual("((-9-5)1)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)-8)", "6", "((-74)-8)", "(-44)", "(-44)");
                var v = ov.swizzle.bbark;
                Assert.AreEqual("((-74)-8)", v.x);
                Assert.AreEqual("((-74)-8)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("((-74)-8)", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(20)", "7", "(20)");
                var v = ov.swizzle.bbag;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("9", "-7", "-7", "4", "((72)1)");
                var v = ov.swizzle.bbagr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(10)", "3", "(-4-8)", "0");
                var v = ov.swizzle.bbagg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(10)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((30)0)", "-8", "((6-2)-8)");
                var v = ov.swizzle.bbagb;
                Assert.AreEqual("((30)0)", v.x);
                Assert.AreEqual("((30)0)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((30)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(56)", "2", "((3-3)8)", "-3");
                var v = ov.swizzle.bbaga;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((3-3)8)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("((3-3)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-20)-1)", "((-30)-8)", "-7", "((-30)-8)", "-7");
                var v = ov.swizzle.bbagk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-30)-8)", v.z);
                Assert.AreEqual("((-30)-8)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)0)", "", "-8", "(73)", "(-8-3)");
                var v = ov.swizzle.bbab;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(99)", "(6-2)", "2", "(99)", "((-78)-2)");
                var v = ov.swizzle.bbabr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(99)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)3)", "7", "(94)", null, "(53)");
                var v = ov.swizzle.bbabg;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-4-5)5)", "((17)-2)", "", "");
                var v = ov.swizzle.bbabb;
                Assert.AreEqual("((17)-2)", v.x);
                Assert.AreEqual("((17)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((17)-2)", v.w);
                Assert.AreEqual("((17)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "((-92)-3)", null, "(78)", "7");
                var v = ov.swizzle.bbaba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec5<string>("(-75)", "((-95)-9)", "9", "5", null);
                var v = ov.swizzle.bbabk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "1", "(82)", "(4-6)", "9");
                var v = ov.swizzle.bbaa;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("(4-6)", v.z);
                Assert.AreEqual("(4-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-85)", "((5-2)-2)", "((-1-7)3)", "((-1-7)3)", "");
                var v = ov.swizzle.bbaar;
                Assert.AreEqual("((-1-7)3)", v.x);
                Assert.AreEqual("((-1-7)3)", v.y);
                Assert.AreEqual("((-1-7)3)", v.z);
                Assert.AreEqual("((-1-7)3)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-6)7)", "(92)", "(97)", "((41)8)", null);
                var v = ov.swizzle.bbaag;
                Assert.AreEqual("(97)", v.x);
                Assert.AreEqual("(97)", v.y);
                Assert.AreEqual("((41)8)", v.z);
                Assert.AreEqual("((41)8)", v.w);
                Assert.AreEqual("(92)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "((5-6)1)", null, null);
                var v = ov.swizzle.bbaab;
                Assert.AreEqual("((5-6)1)", v.x);
                Assert.AreEqual("((5-6)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-6)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((1-6)5)", "-1", "-4", "((1-6)5)");
                var v = ov.swizzle.bbaaa;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(5-5)", "9", "((77)7)", "(5-5)", "((77)7)");
                var v = ov.swizzle.bbaak;
                Assert.AreEqual("((77)7)", v.x);
                Assert.AreEqual("((77)7)", v.y);
                Assert.AreEqual("(5-5)", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("((77)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "(-56)", "(-8-9)", "(15)", null);
                var v = ov.swizzle.bbak;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("8", "((05)5)", "6", "((40)-9)", "(0-8)");
                var v = ov.swizzle.bbakr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((40)-9)", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(64)", "((-8-4)-4)", "6", "((-8-4)-4)");
                var v = ov.swizzle.bbakg;
                Assert.AreEqual("((-8-4)-4)", v.x);
                Assert.AreEqual("((-8-4)-4)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-8-4)-4)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-7-2)6)", "(-95)", null);
                var v = ov.swizzle.bbakb;
                Assert.AreEqual("((-7-2)6)", v.x);
                Assert.AreEqual("((-7-2)6)", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-7-2)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-3)-5)", "((50)-5)", null, "5", "2");
                var v = ov.swizzle.bbaka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", null, "-2", "((-9-3)-1)", "");
                var v = ov.swizzle.bbakk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-9-3)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "(51)", "((07)7)", "-1");
                var v = ov.swizzle.bbk;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>("(12)", "((2-2)1)", "7", "-7", "(12)");
                var v = ov.swizzle.bbkr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(12)", v.w);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "(-7-9)", "(-7-9)", "((-40)-2)", "-1");
                var v = ov.swizzle.bbkrr;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-44)-7)", "(-4-6)", "((-44)-7)", "8", "(-65)");
                var v = ov.swizzle.bbkrg;
                Assert.AreEqual("((-44)-7)", v.x);
                Assert.AreEqual("((-44)-7)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("((-44)-7)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-6)0)", "-6", "((-2-6)-8)", "", "(-81)");
                var v = ov.swizzle.bbkrb;
                Assert.AreEqual("((-2-6)-8)", v.x);
                Assert.AreEqual("((-2-6)-8)", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("((1-6)0)", v.w);
                Assert.AreEqual("((-2-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", null, "((-8-2)0)", "(-35)", "((72)-6)");
                var v = ov.swizzle.bbkra;
                Assert.AreEqual("((-8-2)0)", v.x);
                Assert.AreEqual("((-8-2)0)", v.y);
                Assert.AreEqual("((72)-6)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-8)0)", "-1", "-1", "((-79)2)", "");
                var v = ov.swizzle.bbkrk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((1-8)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)3)", "-1", "((8-4)-4)", "((8-4)-4)", "-6");
                var v = ov.swizzle.bbkg;
                Assert.AreEqual("((8-4)-4)", v.x);
                Assert.AreEqual("((8-4)-4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "", "-2", "9", "((1-3)-2)");
                var v = ov.swizzle.bbkgr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((1-3)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "-8", "(93)", "2", "(-8-2)");
                var v = ov.swizzle.bbkgg;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-76)", "1", null, "(-76)", "-6");
                var v = ov.swizzle.bbkgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((8-5)-7)", "6", "-2", "", "-2");
                var v = ov.swizzle.bbkga;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(4-6)", null, "(-19)", "", "((-3-2)2)");
                var v = ov.swizzle.bbkgk;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("((-3-2)2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-3-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((92)6)", "((-52)2)", "(01)", null, null);
                var v = ov.swizzle.bbkb;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(01)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "(2-8)", "(7-3)", "((-8-4)7)", "((-12)-3)");
                var v = ov.swizzle.bbkbr;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("((-12)-3)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "(98)", null, "(3-6)", "((-6-7)-7)");
                var v = ov.swizzle.bbkbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-6-7)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(98)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)-2)", "(79)", "(-66)", "(-66)", "6");
                var v = ov.swizzle.bbkbb;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)-7)", "(0-3)", "9", "((-9-5)-7)", "((3-1)8)");
                var v = ov.swizzle.bbkba;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((3-1)8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-9-5)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", null, null, "((-2-2)-5)", "-3");
                var v = ov.swizzle.bbkbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(9-1)", "((83)0)", "9");
                var v = ov.swizzle.bbka;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((83)0)", v.w);
            }
            {
                var ov = new gvec5<string>("((82)-3)", "(9-9)", "8", "(-5-9)", "(6-7)");
                var v = ov.swizzle.bbkar;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("((82)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-9)", "(-42)", "((52)0)", "(-9-4)", "((-38)-6)");
                var v = ov.swizzle.bbkag;
                Assert.AreEqual("((52)0)", v.x);
                Assert.AreEqual("((52)0)", v.y);
                Assert.AreEqual("((-38)-6)", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("(-42)", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)-6)", "((05)0)", "", "7", "(09)");
                var v = ov.swizzle.bbkab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-54)1)", "6", "", "((1-9)9)", null);
                var v = ov.swizzle.bbkaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((1-9)9)", v.w);
                Assert.AreEqual("((1-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-9)", null, "(6-9)", "((8-9)-1)", "((32)6)");
                var v = ov.swizzle.bbkak;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("((32)6)", v.z);
                Assert.AreEqual("((8-9)-1)", v.w);
                Assert.AreEqual("((32)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "2", "", "2", "(7-4)");
                var v = ov.swizzle.bbkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-4)", v.z);
                Assert.AreEqual("(7-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((18)4)", "((18)4)", "", "((0-7)0)");
                var v = ov.swizzle.bbkkr;
                Assert.AreEqual("((18)4)", v.x);
                Assert.AreEqual("((18)4)", v.y);
                Assert.AreEqual("((0-7)0)", v.z);
                Assert.AreEqual("((0-7)0)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-47)", "(3-3)", "-6", "((3-6)-3)");
                var v = ov.swizzle.bbkkg;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((3-6)-3)", v.z);
                Assert.AreEqual("((3-6)-3)", v.w);
                Assert.AreEqual("(-47)", v.v);
            }
            {
                var ov = new gvec5<string>("(67)", "(67)", "((74)-6)", "", "-4");
                var v = ov.swizzle.bbkkb;
                Assert.AreEqual("((74)-6)", v.x);
                Assert.AreEqual("((74)-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((74)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(58)", "(58)", "(58)", "6");
                var v = ov.swizzle.bbkka;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "(-88)", "", "2");
                var v = ov.swizzle.bbkkk;
                Assert.AreEqual("(-88)", v.x);
                Assert.AreEqual("(-88)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((3-5)-8)", "(-9-9)", "(-9-9)", "3", "(-5-8)");
                var v = ov.swizzle.ba;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("3", v.y);
            }
            {
                var ov = new gvec5<string>("(-6-5)", "", "((7-5)0)", "((81)9)", "(43)");
                var v = ov.swizzle.bar;
                Assert.AreEqual("((7-5)0)", v.x);
                Assert.AreEqual("((81)9)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(9-3)", "(-68)", "((5-8)-1)", "((5-8)-1)");
                var v = ov.swizzle.barr;
                Assert.AreEqual("(-68)", v.x);
                Assert.AreEqual("((5-8)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "(-59)", "((-5-7)-9)", "2", "((4-1)-9)");
                var v = ov.swizzle.barrr;
                Assert.AreEqual("((-5-7)-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-2-7)", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("(-2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-3", null, "", "(-1-6)");
                var v = ov.swizzle.barrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "", "9", "");
                var v = ov.swizzle.barrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-12)-2)", "", "(8-8)", "((-12)-2)", "((-12)-2)");
                var v = ov.swizzle.barra;
                Assert.AreEqual("(8-8)", v.x);
                Assert.AreEqual("((-12)-2)", v.y);
                Assert.AreEqual("((-12)-2)", v.z);
                Assert.AreEqual("((-12)-2)", v.w);
                Assert.AreEqual("((-12)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-1-5)-6)", "6", "(17)", "6");
                var v = ov.swizzle.barrk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-3", "(-15)", "((70)0)", null);
                var v = ov.swizzle.barg;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("((70)0)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("2", "8", "(2-3)", "((-51)-9)", "((4-6)-8)");
                var v = ov.swizzle.bargr;
                Assert.AreEqual("(2-3)", v.x);
                Assert.AreEqual("((-51)-9)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((78)-9)", "(-7-7)", "(45)", "(-7-7)", "(45)");
                var v = ov.swizzle.bargg;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("((78)-9)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "2", "0", "(-3-9)", "");
                var v = ov.swizzle.bargb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-5-7)2)", "((-5-7)2)", "5", "(2-2)");
                var v = ov.swizzle.barga;
                Assert.AreEqual("((-5-7)2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-5-7)2)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-5)", "(7-2)", "(7-2)", "", "7");
                var v = ov.swizzle.bargk;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)9)", "-3", "(-4-6)", "-3", "-1");
                var v = ov.swizzle.barb;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-3-7)9)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(3-9)", "(6-3)", "6", "(23)");
                var v = ov.swizzle.barbr;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "6", "", "-7", "(-7-4)");
                var v = ov.swizzle.barbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((8-6)-5)", "((-98)-6)", "((-98)-6)", "((-98)-6)", "9");
                var v = ov.swizzle.barbb;
                Assert.AreEqual("((-98)-6)", v.x);
                Assert.AreEqual("((-98)-6)", v.y);
                Assert.AreEqual("((8-6)-5)", v.z);
                Assert.AreEqual("((-98)-6)", v.w);
                Assert.AreEqual("((-98)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-7", "((-44)-9)", "(-7-5)", "(76)");
                var v = ov.swizzle.barba;
                Assert.AreEqual("((-44)-9)", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-44)-9)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)6)", "((-6-5)5)", "", "((-6-5)5)", "(9-9)");
                var v = ov.swizzle.barbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-5)5)", v.y);
                Assert.AreEqual("((-9-9)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((0-3)-3)", "((-90)-7)", "((-5-9)-2)", "(86)");
                var v = ov.swizzle.bara;
                Assert.AreEqual("((-90)-7)", v.x);
                Assert.AreEqual("((-5-9)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-5-9)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-16)", "-9", "(-16)", "9", "(-16)");
                var v = ov.swizzle.barar;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(6-3)", null, "((-10)1)", null);
                var v = ov.swizzle.barag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-10)1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-10)1)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((25)4)", "(05)", null, "5");
                var v = ov.swizzle.barab;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-9)", "(73)", "8", "8", "");
                var v = ov.swizzle.baraa;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(12)", null, "-2", "(13)", "((8-3)-2)");
                var v = ov.swizzle.barak;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("((8-3)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-9)-6)", "0", "(88)", "(-82)", "0");
                var v = ov.swizzle.bark;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("((4-9)-6)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(2-4)", "(-2-8)", "(-2-8)", "((26)2)", "0");
                var v = ov.swizzle.barkr;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("((26)2)", v.y);
                Assert.AreEqual("(2-4)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", null, "(1-7)", "-6");
                var v = ov.swizzle.barkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((06)-8)", "((06)-8)", "2", null, "((85)6)");
                var v = ov.swizzle.barkb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((06)-8)", v.z);
                Assert.AreEqual("((85)6)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-2-4)", null, "3", "((7-1)-3)");
                var v = ov.swizzle.barka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((7-1)-3)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "", "6", "(-75)", null);
                var v = ov.swizzle.barkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual("(-7-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-4-3)", "7", "((-5-8)4)", "");
                var v = ov.swizzle.bag;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-5-8)4)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "(62)", "(62)", "((82)-7)", "((-9-7)5)");
                var v = ov.swizzle.bagr;
                Assert.AreEqual("(62)", v.x);
                Assert.AreEqual("((82)-7)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
            }
            {
                var ov = new gvec5<string>("((4-9)5)", "(-8-6)", "(-6-2)", "(-8-6)", "0");
                var v = ov.swizzle.bagrr;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("(-8-6)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("((4-9)5)", v.w);
                Assert.AreEqual("((4-9)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)-8)", "(07)", "", "(29)", "2");
                var v = ov.swizzle.bagrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual("((2-1)-8)", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec5<string>("(95)", "", "((6-8)-9)", "((-3-7)6)", "((-3-7)6)");
                var v = ov.swizzle.bagrb;
                Assert.AreEqual("((6-8)-9)", v.x);
                Assert.AreEqual("((-3-7)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("((6-8)-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-66)-5)", "-8", "(11)", "(11)");
                var v = ov.swizzle.bagra;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("((-66)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "((-87)9)", "(-12)", "((7-6)-9)", "(8-5)");
                var v = ov.swizzle.bagrk;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("((7-6)-9)", v.y);
                Assert.AreEqual("((-87)9)", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "7", "((03)-7)", "7");
                var v = ov.swizzle.bagg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((03)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-2-1)7)", "(-4-9)", "-6", "-6", null);
                var v = ov.swizzle.baggr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual("((-2-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-50)", null, "", "((-5-2)1)");
                var v = ov.swizzle.baggg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(-50)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-1)-3)", "((2-3)9)", "9", "");
                var v = ov.swizzle.baggb;
                Assert.AreEqual("((2-3)9)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-9-1)-3)", v.z);
                Assert.AreEqual("((-9-1)-3)", v.w);
                Assert.AreEqual("((2-3)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-36)3)", "((-36)3)", "((7-7)9)", "((7-7)9)", "((7-7)9)");
                var v = ov.swizzle.bagga;
                Assert.AreEqual("((7-7)9)", v.x);
                Assert.AreEqual("((7-7)9)", v.y);
                Assert.AreEqual("((-36)3)", v.z);
                Assert.AreEqual("((-36)3)", v.w);
                Assert.AreEqual("((7-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)-9)", "(-35)", "", "((-5-1)-9)", "");
                var v = ov.swizzle.baggk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-1)-9)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("(-35)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(68)", "-1", "((25)-8)", "4");
                var v = ov.swizzle.bagb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((25)-8)", v.y);
                Assert.AreEqual("(68)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("((59)7)", "", null, "(-2-8)", "((70)2)");
                var v = ov.swizzle.bagbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((59)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-2)", "", "6", "6", "(-1-2)");
                var v = ov.swizzle.bagbg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-28)", "((-9-7)6)", "-8", "", "6");
                var v = ov.swizzle.bagbb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-7)6)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-53)", "((-89)-6)", "", "4", "6");
                var v = ov.swizzle.bagba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-89)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-51)2)", "((-47)-7)", "4", "((-8-2)6)");
                var v = ov.swizzle.bagbk;
                Assert.AreEqual("((-47)-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-51)2)", v.z);
                Assert.AreEqual("((-47)-7)", v.w);
                Assert.AreEqual("((-8-2)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(1-9)", null, "", "7");
                var v = ov.swizzle.baga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((1-9)7)", "((1-9)-8)", "-7", "0", "(89)");
                var v = ov.swizzle.bagar;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((1-9)-8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((1-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-8)", "", "((-26)-5)", "((-26)-5)", "");
                var v = ov.swizzle.bagag;
                Assert.AreEqual("((-26)-5)", v.x);
                Assert.AreEqual("((-26)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-26)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "((-62)-5)", "4", "(6-5)");
                var v = ov.swizzle.bagab;
                Assert.AreEqual("((-62)-5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-62)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "-9", "((57)3)", "(79)", "((57)3)");
                var v = ov.swizzle.bagaa;
                Assert.AreEqual("((57)3)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)5)", "7", "-9", "(79)", "0");
                var v = ov.swizzle.bagak;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "", "(1-7)", "-5", "-5");
                var v = ov.swizzle.bagk;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "(-8-8)", "((2-2)-3)", null, "((0-2)8)");
                var v = ov.swizzle.bagkr;
                Assert.AreEqual("((2-2)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("((0-2)8)", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "-5", "((-56)6)", "((-1-7)9)");
                var v = ov.swizzle.bagkg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-56)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-7)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-65)9)", "", "((7-5)6)", null, "(-2-4)");
                var v = ov.swizzle.bagkb;
                Assert.AreEqual("((7-5)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("((7-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "((78)-5)", "8", "((78)-5)", "((78)-5)");
                var v = ov.swizzle.bagka;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((78)-5)", v.y);
                Assert.AreEqual("((78)-5)", v.z);
                Assert.AreEqual("((78)-5)", v.w);
                Assert.AreEqual("((78)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "((59)-4)", "(80)", "((59)-4)", "(80)");
                var v = ov.swizzle.bagkk;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("((59)-4)", v.y);
                Assert.AreEqual("((59)-4)", v.z);
                Assert.AreEqual("(80)", v.w);
                Assert.AreEqual("(80)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-59)-9)", "5", "(-54)", "3");
                var v = ov.swizzle.bab;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-54)", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec5<string>("(5-3)", "(4-7)", "(4-7)", null, "((26)4)");
                var v = ov.swizzle.babr;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(4-7)", v.z);
                Assert.AreEqual("(5-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "((-79)4)", "-3", "", "(6-9)");
                var v = ov.swizzle.babrr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-88)-6)", "((-8-3)3)", "-5", null, null);
                var v = ov.swizzle.babrg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-88)-6)", v.w);
                Assert.AreEqual("((-8-3)3)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "2", "(-6-6)", "2", "2");
                var v = ov.swizzle.babrb;
                Assert.AreEqual("(-6-6)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "1", "1", "-7");
                var v = ov.swizzle.babra;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", "-1", "((41)-4)", "", null);
                var v = ov.swizzle.babrk;
                Assert.AreEqual("((41)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((41)-4)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(2-8)", "(4-8)", null, "(73)");
                var v = ov.swizzle.babg;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "", "1", "((09)8)", "1");
                var v = ov.swizzle.babgr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((09)8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(51)", "((14)2)", "-5", "-7", "-7");
                var v = ov.swizzle.babgg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((14)2)", v.w);
                Assert.AreEqual("((14)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-41)", "1", "-4", "(-41)", null);
                var v = ov.swizzle.babgb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "-4", "(-5-1)", null);
                var v = ov.swizzle.babga;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", "((4-1)3)", "((81)3)", "(7-6)", null);
                var v = ov.swizzle.babgk;
                Assert.AreEqual("((81)3)", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("((81)3)", v.z);
                Assert.AreEqual("((4-1)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((97)-7)", "7", "(-8-2)");
                var v = ov.swizzle.babb;
                Assert.AreEqual("((97)-7)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((97)-7)", v.z);
                Assert.AreEqual("((97)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "-9", "0", "0", "0");
                var v = ov.swizzle.babbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-5-8)", "", "-8", "(-4-2)");
                var v = ov.swizzle.babbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-5-8)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-29)4)", "", "6", "((25)-6)");
                var v = ov.swizzle.babbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "", null, "", "((5-2)-3)");
                var v = ov.swizzle.babba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-64)0)", "6", "((-1-9)-2)", "2");
                var v = ov.swizzle.babbk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-1-9)-2)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(-2-4)", "", "", "((-34)-8)");
                var v = ov.swizzle.baba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("", "-6", "(33)", "(-2-4)", "-9");
                var v = ov.swizzle.babar;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("(33)", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "((34)7)", "-5", "((34)7)");
                var v = ov.swizzle.babag;
                Assert.AreEqual("((34)7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((34)7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)3)", "((2-1)3)", "((1-8)-1)", "((2-1)3)", "-8");
                var v = ov.swizzle.babab;
                Assert.AreEqual("((1-8)-1)", v.x);
                Assert.AreEqual("((2-1)3)", v.y);
                Assert.AreEqual("((1-8)-1)", v.z);
                Assert.AreEqual("((2-1)3)", v.w);
                Assert.AreEqual("((1-8)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-1)", "(35)", "(27)", "-2", "((-5-9)-3)");
                var v = ov.swizzle.babaa;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-8)2)", "((-71)1)", "0", "(28)", "((-71)1)");
                var v = ov.swizzle.babak;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(28)", v.w);
                Assert.AreEqual("((-71)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-7)-5)", "((10)5)", "((10)5)", "((10)5)", "2");
                var v = ov.swizzle.babk;
                Assert.AreEqual("((10)5)", v.x);
                Assert.AreEqual("((10)5)", v.y);
                Assert.AreEqual("((10)5)", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>(null, "0", "(7-3)", "(02)", "0");
                var v = ov.swizzle.babkr;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, null, "(-88)", null);
                var v = ov.swizzle.babkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-88)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-5-1)", "(-1-4)", "-5", "((-74)-3)", "9");
                var v = ov.swizzle.babkb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-74)-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-6", "((-73)5)", "(-2-1)", "");
                var v = ov.swizzle.babka;
                Assert.AreEqual("((-73)5)", v.x);
                Assert.AreEqual("(-2-1)", v.y);
                Assert.AreEqual("((-73)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "6", "(-70)", "-1");
                var v = ov.swizzle.babkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-70)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-57)6)", "", "7", "(53)");
                var v = ov.swizzle.baa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((66)-4)", "((66)-4)", "((66)-4)", "(7-8)", "(46)");
                var v = ov.swizzle.baar;
                Assert.AreEqual("((66)-4)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("((66)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(17)", null, "((32)2)", "((-7-5)-9)", "((32)2)");
                var v = ov.swizzle.baarr;
                Assert.AreEqual("((32)2)", v.x);
                Assert.AreEqual("((-7-5)-9)", v.y);
                Assert.AreEqual("((-7-5)-9)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-6)-4)", "(5-9)", "((-3-6)-4)", "((46)-4)", "1");
                var v = ov.swizzle.baarg;
                Assert.AreEqual("((-3-6)-4)", v.x);
                Assert.AreEqual("((46)-4)", v.y);
                Assert.AreEqual("((46)-4)", v.z);
                Assert.AreEqual("((-3-6)-4)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-6)", "", "", "((1-1)-4)", "((1-1)-4)");
                var v = ov.swizzle.baarb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-1)-4)", v.y);
                Assert.AreEqual("((1-1)-4)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "(9-9)", "", "((2-4)6)");
                var v = ov.swizzle.baara;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-1)4)", "(29)", "(-62)", null, "5");
                var v = ov.swizzle.baark;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-5-1)4)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-94)", "(77)", "(77)", "(08)", "(77)");
                var v = ov.swizzle.baag;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("(77)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-6)-8)", "", "(-61)", "((6-6)-8)", "(-60)");
                var v = ov.swizzle.baagr;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("((6-6)-8)", v.y);
                Assert.AreEqual("((6-6)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-6)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "(-1-8)", "(9-9)", "((18)-5)");
                var v = ov.swizzle.baagg;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", "", "(-4-9)", "4", "(2-5)");
                var v = ov.swizzle.baagb;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-4-9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((3-8)6)", "((3-8)6)", "-7", "(7-2)");
                var v = ov.swizzle.baaga;
                Assert.AreEqual("((3-8)6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((3-8)6)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "(41)", "1", "(5-4)");
                var v = ov.swizzle.baagk;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((88)2)", "-3", "((88)2)");
                var v = ov.swizzle.baab;
                Assert.AreEqual("((88)2)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((88)2)", v.w);
            }
            {
                var ov = new gvec5<string>("(39)", "((-60)-1)", "(88)", "", "((-6-8)1)");
                var v = ov.swizzle.baabr;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(88)", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>("(68)", "((7-8)-6)", "((7-8)-6)", null, "");
                var v = ov.swizzle.baabg;
                Assert.AreEqual("((7-8)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((7-8)-6)", v.w);
                Assert.AreEqual("((7-8)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, "((78)-9)", "((49)-7)", "(24)");
                var v = ov.swizzle.baabb;
                Assert.AreEqual("((78)-9)", v.x);
                Assert.AreEqual("((49)-7)", v.y);
                Assert.AreEqual("((49)-7)", v.z);
                Assert.AreEqual("((78)-9)", v.w);
                Assert.AreEqual("((78)-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((3-9)-9)", "-4", "((3-9)-9)");
                var v = ov.swizzle.baaba;
                Assert.AreEqual("((3-9)-9)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((3-9)-9)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)1)", "-8", "(-3-1)", "(-97)", "(28)");
                var v = ov.swizzle.baabk;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-97)", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-5-8)", "(-5-8)", "((6-2)1)", "-4");
                var v = ov.swizzle.baaa;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("((6-2)1)", v.y);
                Assert.AreEqual("((6-2)1)", v.z);
                Assert.AreEqual("((6-2)1)", v.w);
            }
            {
                var ov = new gvec5<string>("(6-1)", "(96)", "9", "-9", "((75)-4)");
                var v = ov.swizzle.baaar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "((-46)6)", "(11)", "-5");
                var v = ov.swizzle.baaag;
                Assert.AreEqual("((-46)6)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", null, "((3-9)-6)", "-3", "((-4-7)-7)");
                var v = ov.swizzle.baaab;
                Assert.AreEqual("((3-9)-6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((3-9)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((36)-5)", "-2", null, null, "6");
                var v = ov.swizzle.baaaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "", null, "(94)", "3");
                var v = ov.swizzle.baaak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(94)", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((29)-1)", "5", "-1", "5", "((-83)5)");
                var v = ov.swizzle.baak;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-83)5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-9)9)", "((-7-9)9)", "", "", "((0-4)-4)");
                var v = ov.swizzle.baakr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((0-4)-4)", v.w);
                Assert.AreEqual("((-7-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-1)", "(-5-1)", "(5-1)", "((95)-1)", null);
                var v = ov.swizzle.baakg;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("((95)-1)", v.y);
                Assert.AreEqual("((95)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(85)", "(85)", "((-97)6)");
                var v = ov.swizzle.baakb;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("(85)", v.z);
                Assert.AreEqual("((-97)6)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "(-18)", "(-1-6)", null, "-1");
                var v = ov.swizzle.baaka;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "", null, "((6-2)-5)");
                var v = ov.swizzle.baakk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((6-2)-5)", v.w);
                Assert.AreEqual("((6-2)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "((66)4)", "-6", "(-7-3)", "((66)4)");
                var v = ov.swizzle.bak;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("((66)4)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "((17)7)", "(66)", null, "(-20)");
                var v = ov.swizzle.bakr;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-2", "-2", null, "((0-4)-2)", "(0-5)");
                var v = ov.swizzle.bakrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-4)-2)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-6)9)", "(-26)", "-8", null);
                var v = ov.swizzle.bakrg;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-6)9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-78)-1)", "(-37)", "-6");
                var v = ov.swizzle.bakrb;
                Assert.AreEqual("((-78)-1)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-78)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)4)", null, "(-24)", "(16)", "((-68)9)");
                var v = ov.swizzle.bakra;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("(16)", v.y);
                Assert.AreEqual("((-68)9)", v.z);
                Assert.AreEqual("((4-8)4)", v.w);
                Assert.AreEqual("(16)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "((-2-4)7)", "", "");
                var v = ov.swizzle.bakrk;
                Assert.AreEqual("((-2-4)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "(4-2)", "(9-2)", "(53)", "-9");
                var v = ov.swizzle.bakg;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(4-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(9-3)", "-7", "6", "(06)", "((52)-1)");
                var v = ov.swizzle.bakgr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("((52)-1)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((48)-5)", "-6", "(50)", "(50)", "((48)-5)");
                var v = ov.swizzle.bakgg;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("((48)-5)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-35)3)", "3", null, "(-7-4)", "5");
                var v = ov.swizzle.bakgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((69)3)", "-7", "(-6-7)", "((47)-5)", "");
                var v = ov.swizzle.bakga;
                Assert.AreEqual("(-6-7)", v.x);
                Assert.AreEqual("((47)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((47)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-6)", "((43)-4)", "(-3-6)", "((78)2)", "((78)2)");
                var v = ov.swizzle.bakgk;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("((78)2)", v.y);
                Assert.AreEqual("((78)2)", v.z);
                Assert.AreEqual("((43)-4)", v.w);
                Assert.AreEqual("((78)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(41)", "(7-3)", "-8", "(-39)", "7");
                var v = ov.swizzle.bakb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>(null, "0", "(-95)", "-5", null);
                var v = ov.swizzle.bakbr;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "-8", "((7-4)-5)", "-7", "(-8-2)");
                var v = ov.swizzle.bakbg;
                Assert.AreEqual("((7-4)-5)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("((7-4)-5)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "-6", "((04)-5)", "");
                var v = ov.swizzle.bakbb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((04)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-61)-9)", "(-3-5)", "(62)", "0");
                var v = ov.swizzle.bakba;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)-1)", "8", "-9", "-9", "-9");
                var v = ov.swizzle.bakbk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-82)-6)", "((0-7)-2)", "-9");
                var v = ov.swizzle.baka;
                Assert.AreEqual("((-82)-6)", v.x);
                Assert.AreEqual("((0-7)-2)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((0-7)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((-2-8)5)", "(75)", "((-50)-6)", "1", "2");
                var v = ov.swizzle.bakar;
                Assert.AreEqual("((-50)-6)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-2-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-63)", null, "((-7-3)9)", "(-2-8)");
                var v = ov.swizzle.bakag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-3)9)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("((-7-3)9)", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("(-60)", "(9-9)", null, "", "1");
                var v = ov.swizzle.bakab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((07)9)", "((07)9)", "(-92)", "6", "((07)9)");
                var v = ov.swizzle.bakaa;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((07)9)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((88)-4)", "((88)-4)", "((-85)0)", "9", "(14)");
                var v = ov.swizzle.bakak;
                Assert.AreEqual("((-85)0)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-44)-2)", null, "(3-2)");
                var v = ov.swizzle.bakk;
                Assert.AreEqual("((-44)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(3-2)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((-8-5)0)", "", "((5-5)1)", null);
                var v = ov.swizzle.bakkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-5)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((13)-5)", "-1", "-1", "7", "(6-3)");
                var v = ov.swizzle.bakkg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "3", null, "(20)");
                var v = ov.swizzle.bakkb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("", "-4", "(1-1)", "((36)9)", "(9-1)");
                var v = ov.swizzle.bakka;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((36)9)", v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("((36)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((90)-4)", "-8", "((5-6)-4)", "4");
                var v = ov.swizzle.bakkk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((5-6)-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-41)", "6", "(-41)", null);
                var v = ov.swizzle.bk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec5<string>(null, null, "((02)-6)", "-5", null);
                var v = ov.swizzle.bkr;
                Assert.AreEqual("((02)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("", "(-6-9)", "((-5-3)6)", "-1", "");
                var v = ov.swizzle.bkrr;
                Assert.AreEqual("((-5-3)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(30)", "", "((2-3)-3)", "(5-3)", "(-7-3)");
                var v = ov.swizzle.bkrrr;
                Assert.AreEqual("((2-3)-3)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("(30)", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-3)-3)", "9", "((6-3)-3)", "((-98)3)", "((-98)3)");
                var v = ov.swizzle.bkrrg;
                Assert.AreEqual("((6-3)-3)", v.x);
                Assert.AreEqual("((-98)3)", v.y);
                Assert.AreEqual("((6-3)-3)", v.z);
                Assert.AreEqual("((6-3)-3)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((8-3)7)", "(24)", "-1", "(24)", "-1");
                var v = ov.swizzle.bkrrb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((8-3)7)", v.z);
                Assert.AreEqual("((8-3)7)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-48)-9)", "((-80)9)", "-4", "-1");
                var v = ov.swizzle.bkrra;
                Assert.AreEqual("((-80)9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-41)7)", "(5-9)", "((12)0)", "((12)0)", null);
                var v = ov.swizzle.bkrrk;
                Assert.AreEqual("((12)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-41)7)", v.z);
                Assert.AreEqual("((-41)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", "(3-7)", "((-6-8)-5)", "-2", "((-33)9)");
                var v = ov.swizzle.bkrg;
                Assert.AreEqual("((-6-8)-5)", v.x);
                Assert.AreEqual("((-33)9)", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(3-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((95)9)", "(-85)", "(8-6)", "((95)9)", "(-85)");
                var v = ov.swizzle.bkrgr;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("(-85)", v.y);
                Assert.AreEqual("((95)9)", v.z);
                Assert.AreEqual("(-85)", v.w);
                Assert.AreEqual("((95)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "((78)4)", "-3", null, "3");
                var v = ov.swizzle.bkrgg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("((78)4)", v.w);
                Assert.AreEqual("((78)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(28)", "", "((-4-5)-1)", "((5-8)2)");
                var v = ov.swizzle.bkrgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-8)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(28)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(16)", "((-2-6)8)", "-1", "-1");
                var v = ov.swizzle.bkrga;
                Assert.AreEqual("((-2-6)8)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(16)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(17)", "(2-3)", "2", "4", "((-9-1)-7)");
                var v = ov.swizzle.bkrgk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-9-1)-7)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual("((-9-1)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(38)", "(1-5)", null, "((-84)2)");
                var v = ov.swizzle.bkrb;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("((-84)2)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(1-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(27)", "8", "-2", "(27)", "((62)-5)");
                var v = ov.swizzle.bkrbr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((62)-5)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec5<string>("((-44)4)", null, null, "(-35)", "(31)");
                var v = ov.swizzle.bkrbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("((-44)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((6-5)-9)", "(-71)", "-7", "(-71)");
                var v = ov.swizzle.bkrbb;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("((29)-3)", "(32)", "(32)", "((29)-3)", null);
                var v = ov.swizzle.bkrba;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((29)-3)", v.z);
                Assert.AreEqual("(32)", v.w);
                Assert.AreEqual("((29)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "0", "0", "(1-7)", "((-1-1)4)");
                var v = ov.swizzle.bkrbk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-1-1)4)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-1-1)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(41)", "-4", "((5-1)5)", "(70)");
                var v = ov.swizzle.bkra;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(70)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((5-1)5)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-2-4)", "3", null, "(-2-4)");
                var v = ov.swizzle.bkrar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-33)-6)", "", "((3-5)-1)", "7", "");
                var v = ov.swizzle.bkrag;
                Assert.AreEqual("((3-5)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-33)-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(2-7)", "(-3-6)", "((4-4)-6)", "((6-7)8)", null);
                var v = ov.swizzle.bkrab;
                Assert.AreEqual("((4-4)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("((6-7)8)", v.w);
                Assert.AreEqual("((4-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-79)0)", "", null, "(4-6)");
                var v = ov.swizzle.bkraa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-24)5)", "", "((9-3)9)", "0", "((9-3)9)");
                var v = ov.swizzle.bkrak;
                Assert.AreEqual("((9-3)9)", v.x);
                Assert.AreEqual("((9-3)9)", v.y);
                Assert.AreEqual("((-24)5)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((9-3)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-68)", "(9-7)", "", "((9-4)1)", "((44)-2)");
                var v = ov.swizzle.bkrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((44)-2)", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("((44)-2)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-2", "(1-8)", null, "");
                var v = ov.swizzle.bkrkr;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-2)", null, "(-6-2)", "(4-7)", "((-9-3)1)");
                var v = ov.swizzle.bkrkg;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("((-9-3)1)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("((-9-3)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "2", "(26)", null);
                var v = ov.swizzle.bkrkb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-8)", "((5-5)-5)", "(6-8)", "-9");
                var v = ov.swizzle.bkrka;
                Assert.AreEqual("((5-5)-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-69)", "(-37)", "6", "((-5-1)8)", "(-69)");
                var v = ov.swizzle.bkrkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("(-69)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-4)-2)", "-5", "", "((8-4)-2)", "(76)");
                var v = ov.swizzle.bkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("-5", v.z);
            }
            {
                var ov = new gvec5<string>("", "((31)-3)", "8", "8", "2");
                var v = ov.swizzle.bkgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((31)-3)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("", "7", "(5-8)", "(-47)", "(-6-7)");
                var v = ov.swizzle.bkgrr;
                Assert.AreEqual("(5-8)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-23)2)", "((3-8)0)", "(-92)", null, null);
                var v = ov.swizzle.bkgrg;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((3-8)0)", v.z);
                Assert.AreEqual("((-23)2)", v.w);
                Assert.AreEqual("((3-8)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)7)", "(19)", "(56)", "", "(56)");
                var v = ov.swizzle.bkgrb;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("((-69)7)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(0-1)", "0", "(0-1)", "(0-1)");
                var v = ov.swizzle.bkgra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(0-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "-3", null, null, "");
                var v = ov.swizzle.bkgrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-21)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "(-55)", "(0-6)", "(-61)");
                var v = ov.swizzle.bkgg;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((5-3)-2)", "(-76)", "((6-3)-5)", "7");
                var v = ov.swizzle.bkggr;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((5-3)-2)", v.z);
                Assert.AreEqual("((5-3)-2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(2-3)", "(-37)", "6", "((-1-2)-3)", null);
                var v = ov.swizzle.bkggg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((29)-3)", "(3-4)", "((-5-5)-5)", "((-5-5)-5)");
                var v = ov.swizzle.bkggb;
                Assert.AreEqual("(3-4)", v.x);
                Assert.AreEqual("((-5-5)-5)", v.y);
                Assert.AreEqual("((29)-3)", v.z);
                Assert.AreEqual("((29)-3)", v.w);
                Assert.AreEqual("(3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "((0-2)5)", "(7-4)", "(7-4)", "((0-2)5)");
                var v = ov.swizzle.bkgga;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("((0-2)5)", v.y);
                Assert.AreEqual("((0-2)5)", v.z);
                Assert.AreEqual("((0-2)5)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-6)", null, "8", "(-13)", null);
                var v = ov.swizzle.bkggk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-3-1)7)", "((25)-6)", "(31)", "((-3-1)7)", "");
                var v = ov.swizzle.bkgb;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((25)-6)", v.z);
                Assert.AreEqual("(31)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "(5-4)", "", "(-8-2)", "((-9-5)-8)");
                var v = ov.swizzle.bkgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-5)-8)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(37)", "((-82)-6)", "((-2-7)-3)", "(37)");
                var v = ov.swizzle.bkgbg;
                Assert.AreEqual("((-82)-6)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((-82)-6)", v.w);
                Assert.AreEqual("(37)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-9)-4)", "(-1-2)", "", "(-1-2)", "4");
                var v = ov.swizzle.bkgbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", null, "", "9", null);
                var v = ov.swizzle.bkgba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "-8", "(-18)", "((-25)-5)");
                var v = ov.swizzle.bkgbk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-25)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-25)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-8)2)", "7", "", "(5-2)", "((44)-2)");
                var v = ov.swizzle.bkga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((44)-2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(5-2)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "1", null, "(-40)", "");
                var v = ov.swizzle.bkgar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((72)-2)", "4", "(-9-8)", "(-28)");
                var v = ov.swizzle.bkgag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("((72)-2)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("((72)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-7)9)", "((02)1)", null, "((45)2)", "(-9-8)");
                var v = ov.swizzle.bkgab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual("((02)1)", v.z);
                Assert.AreEqual("((45)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, "", "", "5");
                var v = ov.swizzle.bkgaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-3)", "((5-7)-8)", "", "2", "9");
                var v = ov.swizzle.bkgak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((5-7)-8)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "((-11)4)", "7", "((79)-2)");
                var v = ov.swizzle.bkgk;
                Assert.AreEqual("((-11)4)", v.x);
                Assert.AreEqual("((79)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((79)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-35)", "(-35)", "((-74)2)", "((-79)-4)", "6");
                var v = ov.swizzle.bkgkr;
                Assert.AreEqual("((-74)2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>("(12)", "-8", "(7-5)", "4", null);
                var v = ov.swizzle.bkgkg;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-6)", null, "8", "((-3-7)6)", "1");
                var v = ov.swizzle.bkgkb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-33)", "-7", null, "((17)6)");
                var v = ov.swizzle.bkgka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((17)6)", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("((17)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-46)4)", "(-22)", null, "((-5-9)-1)");
                var v = ov.swizzle.bkgkk;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("((-5-9)-1)", v.y);
                Assert.AreEqual("((-46)4)", v.z);
                Assert.AreEqual("((-5-9)-1)", v.w);
                Assert.AreEqual("((-5-9)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-72)-4)", "", "(1-9)", "0", "-5");
                var v = ov.swizzle.bkb;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(1-9)", v.z);
            }
            {
                var ov = new gvec5<string>("(67)", "((-2-3)4)", "(67)", "(-64)", "(74)");
                var v = ov.swizzle.bkbr;
                Assert.AreEqual("(67)", v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-98)", "6", "(-67)", null);
                var v = ov.swizzle.bkbrr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-3)", "((4-7)-2)", "((4-7)-2)", "-3", "(3-5)");
                var v = ov.swizzle.bkbrg;
                Assert.AreEqual("((4-7)-2)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("((4-7)-2)", v.z);
                Assert.AreEqual("((61)-3)", v.w);
                Assert.AreEqual("((4-7)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-8)-1)", "(-9-5)", "((-4-8)-1)", "(-9-5)", "");
                var v = ov.swizzle.bkbrb;
                Assert.AreEqual("((-4-8)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-8)-1)", v.z);
                Assert.AreEqual("((-4-8)-1)", v.w);
                Assert.AreEqual("((-4-8)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(20)", "-5", "((59)3)", "((23)-2)", "(9-3)");
                var v = ov.swizzle.bkbra;
                Assert.AreEqual("((59)3)", v.x);
                Assert.AreEqual("(9-3)", v.y);
                Assert.AreEqual("((59)3)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("((23)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "5", "-4", "5", "((-17)-2)");
                var v = ov.swizzle.bkbrk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-17)-2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-17)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((8-7)-9)", "3", "", "3");
                var v = ov.swizzle.bkbg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((8-7)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "(-39)", "((-15)7)", "(83)", "4");
                var v = ov.swizzle.bkbgr;
                Assert.AreEqual("((-15)7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-15)7)", v.z);
                Assert.AreEqual("(-39)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(53)", null, "-7", "", "(-3-8)");
                var v = ov.swizzle.bkbgg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, "(5-6)", null, "");
                var v = ov.swizzle.bkbgb;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(5-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-76)", "((7-4)-5)", "3", null, "4");
                var v = ov.swizzle.bkbga;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((7-4)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-18)", "(1-2)", "(1-2)", "6");
                var v = ov.swizzle.bkbgk;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(1-2)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((90)5)", "((31)0)", "0", "", "((07)-8)");
                var v = ov.swizzle.bkbb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((07)-8)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("(-65)", "", "((-67)1)", "-9", "-9");
                var v = ov.swizzle.bkbbr;
                Assert.AreEqual("((-67)1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-67)1)", v.z);
                Assert.AreEqual("((-67)1)", v.w);
                Assert.AreEqual("(-65)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-2-4)", "((-31)-9)", "6", "-4");
                var v = ov.swizzle.bkbbg;
                Assert.AreEqual("((-31)-9)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-31)-9)", v.z);
                Assert.AreEqual("((-31)-9)", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)3)", "-2", "-3", "(-9-5)", null);
                var v = ov.swizzle.bkbbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)3)", "((-74)3)", "", "((-74)3)", "-7");
                var v = ov.swizzle.bkbba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-74)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-6)2)", "((6-7)-6)", "(45)", "(7-6)", "-1");
                var v = ov.swizzle.bkbbk;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "(12)", "", "((-2-6)1)", "7");
                var v = ov.swizzle.bkba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-2-6)1)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "((96)-3)", "(12)", null, "((8-2)8)");
                var v = ov.swizzle.bkbar;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("((8-2)8)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-4", "", "(-71)", "((-6-2)-4)");
                var v = ov.swizzle.bkbag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-2)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, null, "((11)4)", "");
                var v = ov.swizzle.bkbab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((11)4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-7-6)5)", "(31)", null, "((-89)-9)", "9");
                var v = ov.swizzle.bkbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-89)-9)", v.w);
                Assert.AreEqual("((-89)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)7)", "(8-6)", "((-3-5)4)", "((-1-7)4)", "");
                var v = ov.swizzle.bkbak;
                Assert.AreEqual("((-3-5)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-3-5)4)", v.z);
                Assert.AreEqual("((-1-7)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-3", "((53)1)", "((03)6)", "(-9-3)");
                var v = ov.swizzle.bkbk;
                Assert.AreEqual("((53)1)", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("((53)1)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(-6-9)", "4", "((5-3)-2)", "");
                var v = ov.swizzle.bkbkr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", null, "8", "((-3-2)-9)");
                var v = ov.swizzle.bkbkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-2)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-3-2)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-1-6)-2)", null, "3", null);
                var v = ov.swizzle.bkbkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((39)3)", "(-5-5)", "", "(-5-5)", "(4-1)");
                var v = ov.swizzle.bkbka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(-5-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((58)9)", "(-15)", "((3-8)2)", "-7");
                var v = ov.swizzle.bkbkk;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-7)-7)", "2", "((-10)3)", "1", "");
                var v = ov.swizzle.bka;
                Assert.AreEqual("((-10)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec5<string>("-8", null, "", "-8", "(-84)");
                var v = ov.swizzle.bkar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(98)", "((73)7)", "-5", "-9");
                var v = ov.swizzle.bkarr;
                Assert.AreEqual("((73)7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((11)3)", "(6-8)", "-5", "-5", "(-49)");
                var v = ov.swizzle.bkarg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((11)3)", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "7", "(2-6)", "(3-8)", "");
                var v = ov.swizzle.bkarb;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-8)", "-5", "((09)-1)", "((-16)6)", "(-64)");
                var v = ov.swizzle.bkara;
                Assert.AreEqual("((09)-1)", v.x);
                Assert.AreEqual("(-64)", v.y);
                Assert.AreEqual("((-16)6)", v.z);
                Assert.AreEqual("(-1-8)", v.w);
                Assert.AreEqual("((-16)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-9)0)", null, "(24)", "(24)", "-2");
                var v = ov.swizzle.bkark;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("((-5-9)0)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "((9-6)-4)", "7", "(89)", "7");
                var v = ov.swizzle.bkag;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("((9-6)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(6-3)", "0", "((5-2)5)", null, "6");
                var v = ov.swizzle.bkagr;
                Assert.AreEqual("((5-2)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "7", "-5", "(98)");
                var v = ov.swizzle.bkagg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "5", "(-8-6)", "((3-8)4)", "3");
                var v = ov.swizzle.bkagb;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((3-8)4)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "2", "((-1-7)-9)", "((-1-7)-9)", "");
                var v = ov.swizzle.bkaga;
                Assert.AreEqual("((-1-7)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-1-7)-9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-1-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((51)9)", null, "5", "((43)4)", "((4-9)4)");
                var v = ov.swizzle.bkagk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((4-9)4)", v.y);
                Assert.AreEqual("((43)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-9)4)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-6-6)", "((-2-5)8)", null, "9");
                var v = ov.swizzle.bkab;
                Assert.AreEqual("((-2-5)8)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-2-5)8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "-8", "(74)", "-8", "((37)-1)");
                var v = ov.swizzle.bkabr;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("((37)-1)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(74)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(72)", "-1", "(-34)", "");
                var v = ov.swizzle.bkabg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(72)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", null, "-1", "((-1-9)8)");
                var v = ov.swizzle.bkabb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-1-9)8)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((52)-5)", "((-55)7)", "(3-3)", "((-55)7)");
                var v = ov.swizzle.bkaba;
                Assert.AreEqual("((-55)7)", v.x);
                Assert.AreEqual("((-55)7)", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("((-55)7)", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-6-7)", "9", "((0-6)3)", "(-21)");
                var v = ov.swizzle.bkabk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("((0-6)3)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-7", "", "-7", "-1");
                var v = ov.swizzle.bkaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "(84)", "((-66)3)", "((-66)3)", "-3");
                var v = ov.swizzle.bkaar;
                Assert.AreEqual("((-66)3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-66)3)", v.z);
                Assert.AreEqual("((-66)3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "5", "(3-5)", "((-4-3)-4)");
                var v = ov.swizzle.bkaag;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-4-3)-4)", v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(78)", "", "(-2-5)", "((90)6)", "9");
                var v = ov.swizzle.bkaab;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((90)6)", v.z);
                Assert.AreEqual("((90)6)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "(-1-5)", "((88)-5)", "((88)-5)", "(50)");
                var v = ov.swizzle.bkaaa;
                Assert.AreEqual("((88)-5)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("((88)-5)", v.z);
                Assert.AreEqual("((88)-5)", v.w);
                Assert.AreEqual("((88)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-1)-5)", "(-8-5)", "(87)", "((-9-1)-5)", "(87)");
                var v = ov.swizzle.bkaak;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("((-9-1)-5)", v.z);
                Assert.AreEqual("((-9-1)-5)", v.w);
                Assert.AreEqual("(87)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "", "(-36)", "(34)", "-8");
                var v = ov.swizzle.bkak;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("8", "8", "-7", "((2-4)9)", "-7");
                var v = ov.swizzle.bkakr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((2-4)9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((21)-7)", "1", "1", "((21)-7)");
                var v = ov.swizzle.bkakg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((21)-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((21)-7)", v.w);
                Assert.AreEqual("((21)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)-4)", "((-87)-4)", "(-64)", "0", "");
                var v = ov.swizzle.bkakb;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "4", "9", "9");
                var v = ov.swizzle.bkaka;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((-33)0)", "((-84)-2)", "(-57)", "(-57)", "2");
                var v = ov.swizzle.bkakk;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-57)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "((-8-7)-2)", "(0-4)", "3", "8");
                var v = ov.swizzle.bkk;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
            }
            {
                var ov = new gvec5<string>("(13)", "(13)", "9", "(13)", "((3-9)8)");
                var v = ov.swizzle.bkkr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((3-9)8)", v.y);
                Assert.AreEqual("((3-9)8)", v.z);
                Assert.AreEqual("(13)", v.w);
            }
            {
                var ov = new gvec5<string>("((9-7)2)", "(-2-3)", "-7", "-7", "-4");
                var v = ov.swizzle.bkkrr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((9-7)2)", v.w);
                Assert.AreEqual("((9-7)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-88)-7)", "(98)", "-1", null);
                var v = ov.swizzle.bkkrg;
                Assert.AreEqual("(98)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-88)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(54)", "-1", "(54)", "((-3-7)-8)");
                var v = ov.swizzle.bkkrb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-3-7)-8)", v.y);
                Assert.AreEqual("((-3-7)-8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-14)7)", "1", "1", "((-58)-4)", "(-18)");
                var v = ov.swizzle.bkkra;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("((-14)7)", v.w);
                Assert.AreEqual("((-58)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((1-1)6)", "", "", "((-36)1)");
                var v = ov.swizzle.bkkrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-36)1)", v.y);
                Assert.AreEqual("((-36)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-36)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-30)", "(3-1)", "-5", "((-14)6)", null);
                var v = ov.swizzle.bkkg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(3-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-5-2)2)", "", "8", null, "2");
                var v = ov.swizzle.bkkgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-8-8)6)", "", null, "");
                var v = ov.swizzle.bkkgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-8-8)6)", v.w);
                Assert.AreEqual("((-8-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-3)", "", "", "(-7-1)", "-6");
                var v = ov.swizzle.bkkgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-25)", "((-78)-7)", "(07)", "-1");
                var v = ov.swizzle.bkkga;
                Assert.AreEqual("((-78)-7)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec5<string>("((61)-4)", "((00)6)", "((61)-4)", "((61)-4)", "-8");
                var v = ov.swizzle.bkkgk;
                Assert.AreEqual("((61)-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((00)6)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(3-4)", "0", "((-6-8)5)", null, "((-2-7)6)");
                var v = ov.swizzle.bkkb;
                Assert.AreEqual("((-6-8)5)", v.x);
                Assert.AreEqual("((-2-7)6)", v.y);
                Assert.AreEqual("((-2-7)6)", v.z);
                Assert.AreEqual("((-6-8)5)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "((-7-3)-9)", "(-59)", "-9", "(5-4)");
                var v = ov.swizzle.bkkbr;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((25)-5)", "((2-7)-2)", "((25)-5)", "-3", "(3-4)");
                var v = ov.swizzle.bkkbg;
                Assert.AreEqual("((25)-5)", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual("(3-4)", v.z);
                Assert.AreEqual("((25)-5)", v.w);
                Assert.AreEqual("((2-7)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-47)-6)", "-5", "(1-6)", "7");
                var v = ov.swizzle.bkkbb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)5)", "(-5-8)", "9", "9", "");
                var v = ov.swizzle.bkkba;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("1", null, "(5-3)", "", "((-3-4)6)");
                var v = ov.swizzle.bkkbk;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("((-3-4)6)", v.y);
                Assert.AreEqual("((-3-4)6)", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("((-3-4)6)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(05)", "((-9-5)-4)", "3", "(-28)");
                var v = ov.swizzle.bkka;
                Assert.AreEqual("((-9-5)-4)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("", "5", "5", "-4", "((2-1)2)");
                var v = ov.swizzle.bkkar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((2-1)2)", v.y);
                Assert.AreEqual("((2-1)2)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "9", "7", "9");
                var v = ov.swizzle.bkkag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(92)", null, "", "(92)", "2");
                var v = ov.swizzle.bkkab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((56)2)", "(92)", "((-75)4)", "-4", "((5-2)3)");
                var v = ov.swizzle.bkkaa;
                Assert.AreEqual("((-75)4)", v.x);
                Assert.AreEqual("((5-2)3)", v.y);
                Assert.AreEqual("((5-2)3)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)8)", "-2", "((-1-2)-2)", "((-96)8)", "-2");
                var v = ov.swizzle.bkkak;
                Assert.AreEqual("((-1-2)-2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-96)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-62)", "((61)-8)", "((24)-6)", "");
                var v = ov.swizzle.bkkk;
                Assert.AreEqual("((61)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "7", "7", "(-4-9)", "7");
                var v = ov.swizzle.bkkkr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)-5)", "", "((-29)-2)", "7", "((-4-7)7)");
                var v = ov.swizzle.bkkkg;
                Assert.AreEqual("((-29)-2)", v.x);
                Assert.AreEqual("((-4-7)7)", v.y);
                Assert.AreEqual("((-4-7)7)", v.z);
                Assert.AreEqual("((-4-7)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-69)", "-8", "((81)-5)", "2", null);
                var v = ov.swizzle.bkkkb;
                Assert.AreEqual("((81)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((81)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-71)", "-2", "((-3-9)-9)", "(-71)", "((-7-2)-7)");
                var v = ov.swizzle.bkkka;
                Assert.AreEqual("((-3-9)-9)", v.x);
                Assert.AreEqual("((-7-2)-7)", v.y);
                Assert.AreEqual("((-7-2)-7)", v.z);
                Assert.AreEqual("((-7-2)-7)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", "-5", "9", "5", "9");
                var v = ov.swizzle.bkkkk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((1-8)4)", null, "(4-9)", "(-51)", "((-27)2)");
                var v = ov.swizzle.ar;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("((1-8)4)", v.y);
            }
            {
                var ov = new gvec5<string>("(1-6)", "(95)", "(1-6)", "(91)", null);
                var v = ov.swizzle.arr;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("(1-6)", v.z);
            }
            {
                var ov = new gvec5<string>("1", "(3-3)", "((85)9)", "((6-8)-5)", "-1");
                var v = ov.swizzle.arrr;
                Assert.AreEqual("((6-8)-5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("((6-3)-4)", "((-89)3)", "", "((-42)1)", "2");
                var v = ov.swizzle.arrrr;
                Assert.AreEqual("((-42)1)", v.x);
                Assert.AreEqual("((6-3)-4)", v.y);
                Assert.AreEqual("((6-3)-4)", v.z);
                Assert.AreEqual("((6-3)-4)", v.w);
                Assert.AreEqual("((6-3)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((49)-3)", "-3", "-3", null, "(-50)");
                var v = ov.swizzle.arrrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((49)-3)", v.y);
                Assert.AreEqual("((49)-3)", v.z);
                Assert.AreEqual("((49)-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "((-85)2)", "((5-6)2)", "((5-6)2)");
                var v = ov.swizzle.arrrb;
                Assert.AreEqual("((5-6)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-85)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "7", "(-7-9)", "(54)", "(-7-9)");
                var v = ov.swizzle.arrra;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec5<string>("((08)8)", "(-80)", "-2", "((08)8)", "(-80)");
                var v = ov.swizzle.arrrk;
                Assert.AreEqual("((08)8)", v.x);
                Assert.AreEqual("((08)8)", v.y);
                Assert.AreEqual("((08)8)", v.z);
                Assert.AreEqual("((08)8)", v.w);
                Assert.AreEqual("(-80)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-4", "9", "((2-8)6)", "9");
                var v = ov.swizzle.arrg;
                Assert.AreEqual("((2-8)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("", "", "((17)6)", "((17)6)", "-6");
                var v = ov.swizzle.arrgr;
                Assert.AreEqual("((17)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((5-7)1)", "", "", "((35)-4)");
                var v = ov.swizzle.arrgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((5-7)1)", v.w);
                Assert.AreEqual("((5-7)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-38)", "(-65)", "", "((-78)7)", "-9");
                var v = ov.swizzle.arrgb;
                Assert.AreEqual("((-78)7)", v.x);
                Assert.AreEqual("(-38)", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((7-9)-8)", "(9-2)", "-8", "((9-1)7)");
                var v = ov.swizzle.arrga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((7-9)-8)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-2-6)", "((-67)4)", "(-2-6)", "((0-2)7)");
                var v = ov.swizzle.arrgk;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("((0-2)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "", "(-9-1)", "((-33)7)", "");
                var v = ov.swizzle.arrb;
                Assert.AreEqual("((-33)7)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("(-9-1)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "-6", "9", "(7-8)", "-6");
                var v = ov.swizzle.arrbr;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "((-59)8)", "6", "(-6-7)");
                var v = ov.swizzle.arrbg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-59)8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", "((2-9)-1)", "(-86)", "(-86)", "2");
                var v = ov.swizzle.arrbb;
                Assert.AreEqual("(-86)", v.x);
                Assert.AreEqual("(-86)", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("(-86)", v.w);
                Assert.AreEqual("(-86)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "(2-8)", "(2-8)", "((-4-9)9)", "((-4-9)9)");
                var v = ov.swizzle.arrba;
                Assert.AreEqual("((-4-9)9)", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("((-4-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "4", null, "-1", "((-25)-4)");
                var v = ov.swizzle.arrbk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-25)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "(8-3)", null, "((09)5)", "");
                var v = ov.swizzle.arra;
                Assert.AreEqual("((09)5)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("((09)5)", v.w);
            }
            {
                var ov = new gvec5<string>("(3-2)", "-2", "", "(3-2)", "0");
                var v = ov.swizzle.arrar;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(62)", "7", "(-46)", "(-46)", "(-46)");
                var v = ov.swizzle.arrag;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "-6", "(-53)", "((7-3)-5)", "(-53)");
                var v = ov.swizzle.arrab;
                Assert.AreEqual("((7-3)-5)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("((7-3)-5)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((-9-5)-1)", "((-9-5)-1)", "-5", "");
                var v = ov.swizzle.arraa;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(0-4)", "-3", "-9", "(-56)", "(1-7)");
                var v = ov.swizzle.arrak;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("(0-4)", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("(1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "", "(-5-5)", "1", "((23)-9)");
                var v = ov.swizzle.arrk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((23)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "(-8-7)", "(8-2)", "2", "((83)-6)");
                var v = ov.swizzle.arrkr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((83)-6)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "(-44)", "5", "5");
                var v = ov.swizzle.arrkg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "(-9-7)", "", "(3-2)");
                var v = ov.swizzle.arrkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(71)", "((13)-6)", "(71)", "-5");
                var v = ov.swizzle.arrka;
                Assert.AreEqual("(71)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(71)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", "((98)9)", "-6", "(5-3)", "");
                var v = ov.swizzle.arrkk;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "2", "(-1-3)", "(-67)", "((-76)-3)");
                var v = ov.swizzle.arg;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec5<string>("((4-6)-8)", "", "0", "1", null);
                var v = ov.swizzle.argr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((4-6)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((4-6)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("((49)-5)", "-7", "((-5-3)7)", null, "(8-2)");
                var v = ov.swizzle.argrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((49)-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((49)-5)", v.w);
                Assert.AreEqual("((49)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "((95)2)", "-2", "((8-5)2)");
                var v = ov.swizzle.argrg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "7", "(-4-4)", "(4-1)");
                var v = ov.swizzle.argrb;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-53)", "0", "(-53)", "3");
                var v = ov.swizzle.argra;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("", "8", "((-6-8)-1)", "((-21)-1)", "8");
                var v = ov.swizzle.argrk;
                Assert.AreEqual("((-21)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "-3", "8", "", "8");
                var v = ov.swizzle.argg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(82)", "", "(-6-6)", "((-66)4)");
                var v = ov.swizzle.arggr;
                Assert.AreEqual("(-6-6)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("(82)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(45)", "((-5-9)-8)", "2", "((-5-9)-8)", "(45)");
                var v = ov.swizzle.arggg;
                Assert.AreEqual("((-5-9)-8)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("((-5-9)-8)", v.z);
                Assert.AreEqual("((-5-9)-8)", v.w);
                Assert.AreEqual("((-5-9)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((34)9)", "((34)9)", "((2-9)-4)", "(66)", "(66)");
                var v = ov.swizzle.arggb;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("((34)9)", v.y);
                Assert.AreEqual("((34)9)", v.z);
                Assert.AreEqual("((34)9)", v.w);
                Assert.AreEqual("((2-9)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "1", "((-7-5)6)", "((-7-5)6)", "((-7-4)-2)");
                var v = ov.swizzle.argga;
                Assert.AreEqual("((-7-5)6)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-7-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-3)", "0", "((-77)-5)", "", "0");
                var v = ov.swizzle.arggk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(26)", "", "((-6-4)-6)", "", "8");
                var v = ov.swizzle.argb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(26)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-4)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "", "((18)3)", null, "((5-4)4)");
                var v = ov.swizzle.argbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((18)3)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)-6)", "", "((7-4)-3)", "", "");
                var v = ov.swizzle.argbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-2)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-4)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-1)-7)", "((02)5)", null, "((2-1)-7)");
                var v = ov.swizzle.argbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((2-1)-7)", v.z);
                Assert.AreEqual("((02)5)", v.w);
                Assert.AreEqual("((02)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "(6-3)", "((22)-7)", "((59)-6)");
                var v = ov.swizzle.argba;
                Assert.AreEqual("((22)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("((22)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((77)8)", "((-4-3)-6)", null, "((77)8)", "((-4-3)-6)");
                var v = ov.swizzle.argbk;
                Assert.AreEqual("((77)8)", v.x);
                Assert.AreEqual("((77)8)", v.y);
                Assert.AreEqual("((-4-3)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-4-3)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(41)", "(-64)", "((3-8)-1)", "-5", "((-1-3)-3)");
                var v = ov.swizzle.arga;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("", "(32)", "((-92)7)", "", "1");
                var v = ov.swizzle.argar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", null, "((6-2)-6)", "((-72)2)", "");
                var v = ov.swizzle.argag;
                Assert.AreEqual("((-72)2)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-72)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((03)2)", null, "", "((-8-8)6)", "");
                var v = ov.swizzle.argab;
                Assert.AreEqual("((-8-8)6)", v.x);
                Assert.AreEqual("((03)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-8-8)6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((27)-9)", "(3-5)", "-2", null, "6");
                var v = ov.swizzle.argaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((27)-9)", v.y);
                Assert.AreEqual("(3-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "-5", "-5", "((30)-5)");
                var v = ov.swizzle.argak;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((30)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((29)-4)", "-1", "", "((29)-4)");
                var v = ov.swizzle.argk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((29)-4)", v.z);
                Assert.AreEqual("((29)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", null, "-5", "-5", "((-2-8)4)");
                var v = ov.swizzle.argkr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-2-8)4)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "((9-2)-3)", "(-6-8)", "((0-1)-1)");
                var v = ov.swizzle.argkg;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((0-1)-1)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-5", null, "(-47)", "-9", "-9");
                var v = ov.swizzle.argkb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-47)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "0", null, "0");
                var v = ov.swizzle.argka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-52)-7)", "((-3-1)8)", "(-21)", "((-3-1)8)");
                var v = ov.swizzle.argkk;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-52)-7)", v.z);
                Assert.AreEqual("((-3-1)8)", v.w);
                Assert.AreEqual("((-3-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-8)-3)", "", "((-2-8)-3)", "(1-9)", "((0-7)0)");
                var v = ov.swizzle.arb;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("((-2-8)-3)", v.y);
                Assert.AreEqual("((-2-8)-3)", v.z);
            }
            {
                var ov = new gvec5<string>("((86)3)", "(-74)", "((5-3)-4)", "8", "8");
                var v = ov.swizzle.arbr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((86)3)", v.y);
                Assert.AreEqual("((5-3)-4)", v.z);
                Assert.AreEqual("((86)3)", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-6)-5)", "(80)", "(80)", "((-97)-1)", "((-97)-1)");
                var v = ov.swizzle.arbrr;
                Assert.AreEqual("((-97)-1)", v.x);
                Assert.AreEqual("((-6-6)-5)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("((-6-6)-5)", v.w);
                Assert.AreEqual("((-6-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-5-3)", "-5", "", "((-77)-3)");
                var v = ov.swizzle.arbrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-2)3)", "((2-2)3)", "0", "(-4-6)", "((96)6)");
                var v = ov.swizzle.arbrb;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("((2-2)3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((2-2)3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)5)", "((-87)5)", "(-22)", "", "((97)-3)");
                var v = ov.swizzle.arbra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-8-1)5)", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("((-8-1)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((-23)-2)", "((-45)-5)", "((-45)-5)", "2");
                var v = ov.swizzle.arbrk;
                Assert.AreEqual("((-45)-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-45)-5)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "((6-9)-9)", "8", "8");
                var v = ov.swizzle.arbg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((6-9)-9)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("(20)", "((-6-5)9)", "((-82)7)", "(-1-6)", null);
                var v = ov.swizzle.arbgr;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("((-82)7)", v.z);
                Assert.AreEqual("((-6-5)9)", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "((-94)-6)", "-2", "((0-1)8)");
                var v = ov.swizzle.arbgg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-94)-6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-91)0)", "(-63)", "", "(-63)", "-8");
                var v = ov.swizzle.arbgb;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("((-91)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(68)", "((67)-2)", "(67)", "(68)", "3");
                var v = ov.swizzle.arbga;
                Assert.AreEqual("(68)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("((67)-2)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "((-60)0)", "(24)", "-9", null);
                var v = ov.swizzle.arbgk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("((-60)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(2-7)", "4", null, "4", "((-20)6)");
                var v = ov.swizzle.arbb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "", "((-6-7)6)", "((-9-6)-4)", "");
                var v = ov.swizzle.arbbr;
                Assert.AreEqual("((-9-6)-4)", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("((-6-7)6)", v.z);
                Assert.AreEqual("((-6-7)6)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-5)-8)", "(-8-1)", null, "", "1");
                var v = ov.swizzle.arbbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-5)-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, "-9", "2", null);
                var v = ov.swizzle.arbbb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-4)", "4", "((-6-6)-8)", "((39)-1)", null);
                var v = ov.swizzle.arbba;
                Assert.AreEqual("((39)-1)", v.x);
                Assert.AreEqual("(-5-4)", v.y);
                Assert.AreEqual("((-6-6)-8)", v.z);
                Assert.AreEqual("((-6-6)-8)", v.w);
                Assert.AreEqual("((39)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-3)5)", "-9", "((8-7)2)", "", "8");
                var v = ov.swizzle.arbbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-3)5)", v.y);
                Assert.AreEqual("((8-7)2)", v.z);
                Assert.AreEqual("((8-7)2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-1)-7)", null, "((-1-9)2)", "(-42)");
                var v = ov.swizzle.arba;
                Assert.AreEqual("((-1-9)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-9)2)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "((24)9)", "((24)9)", "(0-9)");
                var v = ov.swizzle.arbar;
                Assert.AreEqual("((24)9)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((24)9)", v.z);
                Assert.AreEqual("((24)9)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-81)", "((-17)-4)", "-1", "((14)2)", "((-26)7)");
                var v = ov.swizzle.arbag;
                Assert.AreEqual("((14)2)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((14)2)", v.w);
                Assert.AreEqual("((-17)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-5)6)", "((-30)-5)", "((-30)-5)", "((-24)-4)", "(-3-2)");
                var v = ov.swizzle.arbab;
                Assert.AreEqual("((-24)-4)", v.x);
                Assert.AreEqual("((-6-5)6)", v.y);
                Assert.AreEqual("((-30)-5)", v.z);
                Assert.AreEqual("((-24)-4)", v.w);
                Assert.AreEqual("((-30)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-6)", "", "(-5-6)", "0", "(-2-7)");
                var v = ov.swizzle.arbaa;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-87)", "((85)-8)", "(-97)", "(7-2)");
                var v = ov.swizzle.arbak;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((85)-8)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("(7-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-5-7)-2)", "((-65)0)", "");
                var v = ov.swizzle.arbk;
                Assert.AreEqual("((-65)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-7)-2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(09)", "-1", "-1", "(-9-6)");
                var v = ov.swizzle.arbkr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((36)-4)", "(-5-7)", "8", "", "(8-8)");
                var v = ov.swizzle.arbkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((36)-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "-1", "(-99)", "(-67)");
                var v = ov.swizzle.arbkb;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-67)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((2-5)2)", "(13)", "((2-5)2)", "(-6-4)", "((-3-2)1)");
                var v = ov.swizzle.arbka;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("((2-5)2)", v.y);
                Assert.AreEqual("((2-5)2)", v.z);
                Assert.AreEqual("((-3-2)1)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)6)", null, "9", "1", "((-42)6)");
                var v = ov.swizzle.arbkk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-42)6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-42)6)", v.w);
                Assert.AreEqual("((-42)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-7", "(92)", "(92)", "-6");
                var v = ov.swizzle.ara;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(92)", v.z);
            }
            {
                var ov = new gvec5<string>("-4", null, "-4", "(8-6)", "6");
                var v = ov.swizzle.arar;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("(3-2)", "(3-2)", "-4", "(3-2)", "(51)");
                var v = ov.swizzle.ararr;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "7", "((-64)-6)", null, "-6");
                var v = ov.swizzle.ararg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-11)", null, "1", "(-3-8)", "1");
                var v = ov.swizzle.ararb;
                Assert.AreEqual("(-3-8)", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "(-8-2)", "9", "9", "4");
                var v = ov.swizzle.arara;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "6", "0", "((0-3)-7)", "(-44)");
                var v = ov.swizzle.arark;
                Assert.AreEqual("((0-3)-7)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((0-3)-7)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", "-6", null, "9", "(1-5)");
                var v = ov.swizzle.arag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("((-37)2)", "(-9-9)", "(-42)", "((-48)8)", "(1-5)");
                var v = ov.swizzle.aragr;
                Assert.AreEqual("((-48)8)", v.x);
                Assert.AreEqual("((-37)2)", v.y);
                Assert.AreEqual("((-48)8)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((-37)2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-1-7)-8)", "(-8-7)", "((-3-6)-8)", "-3");
                var v = ov.swizzle.aragg;
                Assert.AreEqual("((-3-6)-8)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-3-6)-8)", v.z);
                Assert.AreEqual("((-1-7)-8)", v.w);
                Assert.AreEqual("((-1-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "7", "((0-5)7)", "-8");
                var v = ov.swizzle.aragb;
                Assert.AreEqual("((0-5)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-5)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-9)-4)", "", "(-92)", "(-92)", "1");
                var v = ov.swizzle.araga;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((-9-9)-4)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-15)", "((0-5)6)", "((14)-3)", "((14)-3)");
                var v = ov.swizzle.aragk;
                Assert.AreEqual("((14)-3)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((14)-3)", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("((14)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "-7", "", "((-35)-2)");
                var v = ov.swizzle.arab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("((1-2)-4)", "1", "((1-2)-4)", "1", null);
                var v = ov.swizzle.arabr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((1-2)-4)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((1-2)-4)", v.w);
                Assert.AreEqual("((1-2)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "-3", null, "(0-3)");
                var v = ov.swizzle.arabg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-53)", "9", "(88)", "-5", "((3-6)6)");
                var v = ov.swizzle.arabb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(88)", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec5<string>("(91)", "6", "(9-1)", "((0-5)-5)", "((6-4)2)");
                var v = ov.swizzle.araba;
                Assert.AreEqual("((0-5)-5)", v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("((0-5)-5)", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("((0-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-5", "-3", null, "(-70)");
                var v = ov.swizzle.arabk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-8-5)-3)", "((90)-1)", "((90)-1)", "((90)-1)");
                var v = ov.swizzle.araa;
                Assert.AreEqual("((90)-1)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((90)-1)", v.z);
                Assert.AreEqual("((90)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("", null, "", "((-20)-4)", "-8");
                var v = ov.swizzle.araar;
                Assert.AreEqual("((-20)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-20)-4)", v.z);
                Assert.AreEqual("((-20)-4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(53)", "(8-8)", "((43)6)", "(53)");
                var v = ov.swizzle.araag;
                Assert.AreEqual("((43)6)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((43)6)", v.z);
                Assert.AreEqual("((43)6)", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(68)", "6", "(64)", "((-1-3)-2)");
                var v = ov.swizzle.araab;
                Assert.AreEqual("(64)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("(64)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-7)", null, "(37)", "((44)9)", "(-81)");
                var v = ov.swizzle.araaa;
                Assert.AreEqual("((44)9)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("((44)9)", v.z);
                Assert.AreEqual("((44)9)", v.w);
                Assert.AreEqual("((44)9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", null, "5", "(-5-7)");
                var v = ov.swizzle.araak;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((44)-9)", "(-59)", "-9", "((96)8)");
                var v = ov.swizzle.arak;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((96)8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-1-6)", "((3-1)1)", "5", "(-1-6)");
                var v = ov.swizzle.arakr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-1-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(66)", "0", null, null, "-3");
                var v = ov.swizzle.arakg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "4", "(-80)", "((59)5)");
                var v = ov.swizzle.arakb;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-80)", v.z);
                Assert.AreEqual("((59)5)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)-5)", "((-22)2)", "-2", "(3-2)", "1");
                var v = ov.swizzle.araka;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("((-7-4)-5)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((13)7)", null, "-7", "-7");
                var v = ov.swizzle.arakk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((91)7)", "", "-5", "", "");
                var v = ov.swizzle.ark;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((91)7)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("-6", "((21)5)", "(-32)", "((21)5)", "(-99)");
                var v = ov.swizzle.arkr;
                Assert.AreEqual("((21)5)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("(8-4)", "((8-1)-1)", "-9", "7", "-9");
                var v = ov.swizzle.arkrr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "7", "(37)", null, "(37)");
                var v = ov.swizzle.arkrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "((-76)2)", "-4", "(-91)");
                var v = ov.swizzle.arkrb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-76)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-66)4)", "((8-8)-7)", "(53)", "5");
                var v = ov.swizzle.arkra;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "-1", "-1", "(01)");
                var v = ov.swizzle.arkrk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(01)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(01)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "-5", "(-47)", "((2-9)9)", null);
                var v = ov.swizzle.arkg;
                Assert.AreEqual("((2-9)9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("((-6-3)1)", "-6", "", "-6", "(-50)");
                var v = ov.swizzle.arkgr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-6-3)1)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-6-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-91)", "((7-1)-6)", null, "(-91)");
                var v = ov.swizzle.arkgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(8-8)", "4", "5", "7");
                var v = ov.swizzle.arkgb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-4-1)2)", "", "7", "(-8-9)");
                var v = ov.swizzle.arkga;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("((-4-1)2)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-5)-2)", "-3", "((-7-5)-2)", "(-30)", "((-7-5)-2)");
                var v = ov.swizzle.arkgk;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("((-7-5)-2)", v.y);
                Assert.AreEqual("((-7-5)-2)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-7-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "((-5-8)-6)", "6", "((03)6)");
                var v = ov.swizzle.arkb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((03)6)", v.z);
                Assert.AreEqual("((-5-8)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-9)", null, "(85)", null, "");
                var v = ov.swizzle.arkbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(85)", v.w);
                Assert.AreEqual("(-6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-29)", "(44)", "((-7-5)7)", "((-7-5)7)", "-4");
                var v = ov.swizzle.arkbg;
                Assert.AreEqual("((-7-5)7)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-7-5)7)", v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec5<string>("((93)-9)", "(19)", "((-75)-2)", "((-2-2)0)", "(34)");
                var v = ov.swizzle.arkbb;
                Assert.AreEqual("((-2-2)0)", v.x);
                Assert.AreEqual("((93)-9)", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("((-75)-2)", v.w);
                Assert.AreEqual("((-75)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-2)-7)", "7", "((-50)-2)", null, null);
                var v = ov.swizzle.arkba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((1-2)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-50)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", "(-8-4)", "(1-1)", "1");
                var v = ov.swizzle.arkbk;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-8-4)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-10)7)", "-5", "((-86)0)", "((-86)0)", "-1");
                var v = ov.swizzle.arka;
                Assert.AreEqual("((-86)0)", v.x);
                Assert.AreEqual("((-10)7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-86)0)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "(2-8)", "", "9", "9");
                var v = ov.swizzle.arkar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((-43)-3)", "-5", "-5", "2", "((-43)-3)");
                var v = ov.swizzle.arkag;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-43)-3)", v.y);
                Assert.AreEqual("((-43)-3)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "((6-3)-3)", "((8-2)-5)", "");
                var v = ov.swizzle.arkab;
                Assert.AreEqual("((8-2)-5)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((8-2)-5)", v.w);
                Assert.AreEqual("((6-3)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "8", "", "", "((-72)8)");
                var v = ov.swizzle.arkaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual("((-72)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(5-4)", "(5-4)", "((8-6)-3)", null);
                var v = ov.swizzle.arkak;
                Assert.AreEqual("((8-6)-3)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((8-6)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-4-5)", "(-4-5)", "(-41)", "(-41)", "-3");
                var v = ov.swizzle.arkk;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>(null, "8", "(4-6)", "8", "");
                var v = ov.swizzle.arkkr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(53)", "9", "((-3-3)7)", "-9", "(53)");
                var v = ov.swizzle.arkkg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-70)", "((3-7)-1)", null, "-9", "(-70)");
                var v = ov.swizzle.arkkb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-70)", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "(-24)", "-1", "5", "(34)");
                var v = ov.swizzle.arkka;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-6", "-6", "((4-5)-7)", "(-66)");
                var v = ov.swizzle.arkkk;
                Assert.AreEqual("((4-5)-7)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "4", "4", "", "");
                var v = ov.swizzle.ag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
            }
            {
                var ov = new gvec5<string>("((6-7)-9)", "-4", "((6-7)-9)", "", "");
                var v = ov.swizzle.agr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((6-7)-9)", v.z);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "((-30)7)", "(39)", "3", "4");
                var v = ov.swizzle.agrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-30)7)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((16)3)", null, "(70)", "(-3-3)", "((-95)-7)");
                var v = ov.swizzle.agrrr;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((16)3)", v.z);
                Assert.AreEqual("((16)3)", v.w);
                Assert.AreEqual("((16)3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((6-1)3)", "(-5-3)", "(-1-1)", "((95)-6)");
                var v = ov.swizzle.agrrg;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("((6-1)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-1)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "4", "((1-3)4)", "-8", "-8");
                var v = ov.swizzle.agrrb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(-46)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("((1-3)4)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((84)-2)", "4", "(41)", "(41)");
                var v = ov.swizzle.agrra;
                Assert.AreEqual("(41)", v.x);
                Assert.AreEqual("((84)-2)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec5<string>("(14)", "(10)", "((-1-6)9)", "", "4");
                var v = ov.swizzle.agrrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((-4-8)-5)", "(-1-6)", "5");
                var v = ov.swizzle.agrg;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((3-9)8)", "0", "", "(6-9)", "(6-9)");
                var v = ov.swizzle.agrgr;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((3-9)8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((3-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((02)-8)", "(22)", "(22)", "(-82)", "");
                var v = ov.swizzle.agrgg;
                Assert.AreEqual("(-82)", v.x);
                Assert.AreEqual("(22)", v.y);
                Assert.AreEqual("((02)-8)", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-63)", "3", "(-6-4)", "-9");
                var v = ov.swizzle.agrgb;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "((-4-4)9)", "8", "(-8-5)", "((0-2)-7)");
                var v = ov.swizzle.agrga;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("((-4-4)9)", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("((-4-4)9)", v.w);
                Assert.AreEqual("(-8-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((17)0)", "-8", "(4-8)", "9", "(4-8)");
                var v = ov.swizzle.agrgk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((17)0)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((0-8)-4)", "-9", "-6", null);
                var v = ov.swizzle.agrb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((0-8)-4)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>(null, "0", "(03)", "(03)", "(03)");
                var v = ov.swizzle.agrbr;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(03)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "(-44)", "((-7-2)-9)", "(-5-9)", "");
                var v = ov.swizzle.agrbg;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-2)-9)", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "", "(-23)", null, "(-23)");
                var v = ov.swizzle.agrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec5<string>("(43)", "(43)", "((4-1)8)", "((4-1)8)", "4");
                var v = ov.swizzle.agrba;
                Assert.AreEqual("((4-1)8)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("(43)", v.z);
                Assert.AreEqual("((4-1)8)", v.w);
                Assert.AreEqual("((4-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "", "-7", "1", "");
                var v = ov.swizzle.agrbk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-8", "-4", "((-35)-6)", "((91)1)");
                var v = ov.swizzle.agra;
                Assert.AreEqual("((-35)-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-35)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-45)", "(-1-9)", "((97)-5)", "-7", "((-6-9)1)");
                var v = ov.swizzle.agrar;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-45)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec5<string>("(48)", null, "(-7-4)", "(-7-4)", "((98)5)");
                var v = ov.swizzle.agrag;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(-7-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(49)", "((18)-3)", "3", "((49)2)", "((18)-3)");
                var v = ov.swizzle.agrab;
                Assert.AreEqual("((49)2)", v.x);
                Assert.AreEqual("((18)-3)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("((49)2)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("2", "-2", "(-4-3)", "-2", "2");
                var v = ov.swizzle.agraa;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)2)", null, "((-53)7)", null, "(68)");
                var v = ov.swizzle.agrak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-50)2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("((-73)-8)", "((60)-1)", "(50)", "9", "9");
                var v = ov.swizzle.agrk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((60)-1)", v.y);
                Assert.AreEqual("((-73)-8)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("-3", null, "(38)", "(8-3)", "7");
                var v = ov.swizzle.agrkr;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-5)", "((-52)-3)", "(-1-3)", "");
                var v = ov.swizzle.agrkg;
                Assert.AreEqual("(-1-3)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-5-7)", "((2-3)-5)", "(-5-7)", "6");
                var v = ov.swizzle.agrkb;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((2-3)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((05)6)", "(5-6)", null, "-7", "-7");
                var v = ov.swizzle.agrka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("((05)6)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "(3-1)", "((-5-7)-4)", "-4", "((-36)2)");
                var v = ov.swizzle.agrkk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual("((-36)2)", v.w);
                Assert.AreEqual("((-36)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(0-4)", "(98)", null, "");
                var v = ov.swizzle.agg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-4)", v.y);
                Assert.AreEqual("(0-4)", v.z);
            }
            {
                var ov = new gvec5<string>("(-50)", "((84)9)", "((84)9)", null, "0");
                var v = ov.swizzle.aggr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((84)9)", v.y);
                Assert.AreEqual("((84)9)", v.z);
                Assert.AreEqual("(-50)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-4)", "((-6-4)-4)", "((-9-9)3)", "-4", "-6");
                var v = ov.swizzle.aggrr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-6-4)-4)", v.y);
                Assert.AreEqual("((-6-4)-4)", v.z);
                Assert.AreEqual("(-8-4)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "(-1-3)", "(-80)", "(-1-5)", "((-84)7)");
                var v = ov.swizzle.aggrg;
                Assert.AreEqual("(-1-5)", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("(-1-3)", v.z);
                Assert.AreEqual("(-1-5)", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((95)-3)", "", "-5", "(7-3)", "((52)9)");
                var v = ov.swizzle.aggrb;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((95)-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(56)", "((0-8)-4)", "-4", "(56)", null);
                var v = ov.swizzle.aggra;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("((0-8)-4)", v.y);
                Assert.AreEqual("((0-8)-4)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((98)3)", "(-8-6)", "((-9-4)8)", "((18)6)");
                var v = ov.swizzle.aggrk;
                Assert.AreEqual("((-9-4)8)", v.x);
                Assert.AreEqual("((98)3)", v.y);
                Assert.AreEqual("((98)3)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((18)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "-2", "-8", "-8");
                var v = ov.swizzle.aggg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "", "((7-8)-6)", "(12)");
                var v = ov.swizzle.agggr;
                Assert.AreEqual("((7-8)-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-1", null, "7", "7", "((-30)6)");
                var v = ov.swizzle.agggg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "7", "", "-2", "((-58)-3)");
                var v = ov.swizzle.agggb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-2)", "(-8-2)", "((99)-3)", "(-8-2)", "-2");
                var v = ov.swizzle.aggga;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("(-8-2)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)-7)", "", "-4", "((-61)6)", "((-61)6)");
                var v = ov.swizzle.agggk;
                Assert.AreEqual("((-61)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-61)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "", "((8-4)2)", "", "6");
                var v = ov.swizzle.aggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((8-4)2)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "6", "(19)", "9", "((-95)-4)");
                var v = ov.swizzle.aggbr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(19)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-18)", "(4-8)", "(4-8)", "6", "((32)1)");
                var v = ov.swizzle.aggbg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", "-1", "(-7-4)", null, "");
                var v = ov.swizzle.aggbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-7-4)", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((34)-1)", "((-9-8)-4)", null, "((3-1)-8)", "((3-1)-8)");
                var v = ov.swizzle.aggba;
                Assert.AreEqual("((3-1)-8)", v.x);
                Assert.AreEqual("((-9-8)-4)", v.y);
                Assert.AreEqual("((-9-8)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-1)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(31)", "(7-5)", "(31)", "(31)");
                var v = ov.swizzle.aggbk;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("(7-5)", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)9)", "(3-4)", "((4-2)-3)", "-2", "7");
                var v = ov.swizzle.agga;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual("(3-4)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("(6-9)", "(-66)", "4", null, "((-79)-5)");
                var v = ov.swizzle.aggar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "(0-1)", "", "((3-5)-6)");
                var v = ov.swizzle.aggag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(65)", "((-6-9)-3)", "(25)", "(25)", "-6");
                var v = ov.swizzle.aggab;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual("((-6-9)-3)", v.y);
                Assert.AreEqual("((-6-9)-3)", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(40)", "(-35)", "(0-8)", "-5");
                var v = ov.swizzle.aggaa;
                Assert.AreEqual("(0-8)", v.x);
                Assert.AreEqual("(40)", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)3)", "(-6-8)", "(-6-8)", "((-50)3)", "(3-6)");
                var v = ov.swizzle.aggak;
                Assert.AreEqual("((-50)3)", v.x);
                Assert.AreEqual("(-6-8)", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("((-50)3)", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", null, "", "", null);
                var v = ov.swizzle.aggk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-74)8)", "", "", "(5-8)", null);
                var v = ov.swizzle.aggkr;
                Assert.AreEqual("(5-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-74)8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((3-6)0)", "((6-6)5)", null, "((3-6)0)");
                var v = ov.swizzle.aggkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-6)0)", v.y);
                Assert.AreEqual("((3-6)0)", v.z);
                Assert.AreEqual("((3-6)0)", v.w);
                Assert.AreEqual("((3-6)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)7)", "7", "", null, "7");
                var v = ov.swizzle.aggkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(-90)", "(-90)", "-6", "5");
                var v = ov.swizzle.aggka;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("(-90)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(3-6)", "(55)", "3", "(14)");
                var v = ov.swizzle.aggkk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(9-1)", "(3-8)", "-9", "((3-8)-5)");
                var v = ov.swizzle.agb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("(3-8)", v.z);
            }
            {
                var ov = new gvec5<string>("(-96)", "", "7", "-6", "((7-4)4)");
                var v = ov.swizzle.agbr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-96)", v.w);
            }
            {
                var ov = new gvec5<string>("", "5", "", "", "((-4-1)-4)");
                var v = ov.swizzle.agbrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", null, "6", "(28)", "(13)");
                var v = ov.swizzle.agbrg;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(79)", "", "", "((-1-3)7)", "8");
                var v = ov.swizzle.agbrb;
                Assert.AreEqual("((-1-3)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-4", "((-5-6)9)", "(-1-1)", "((-5-6)9)");
                var v = ov.swizzle.agbra;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-5-6)9)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((91)3)", "(74)", "", "((91)3)");
                var v = ov.swizzle.agbrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((91)3)", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((91)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((09)3)", "-7", "7", "((-53)9)", "(-2-4)");
                var v = ov.swizzle.agbg;
                Assert.AreEqual("((-53)9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(2-6)", "(2-6)", "((-16)-2)", "((-88)7)", "(-5-3)");
                var v = ov.swizzle.agbgr;
                Assert.AreEqual("((-88)7)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("((-16)-2)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "6", "(-27)", "-6");
                var v = ov.swizzle.agbgg;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(5-7)", "((49)1)", "", "((36)7)", "((49)1)");
                var v = ov.swizzle.agbgb;
                Assert.AreEqual("((36)7)", v.x);
                Assert.AreEqual("((49)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((49)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)3)", "", "-6", "6", "-7");
                var v = ov.swizzle.agbga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-8)7)", null, "(3-2)", "((-5-8)7)", "-6");
                var v = ov.swizzle.agbgk;
                Assert.AreEqual("((-5-8)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-23)", "(-23)", "-1", "((77)2)", "((-8-5)-9)");
                var v = ov.swizzle.agbb;
                Assert.AreEqual("((77)2)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-5", "((73)-3)", "-7", "(55)");
                var v = ov.swizzle.agbbr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((73)-3)", v.z);
                Assert.AreEqual("((73)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "-2", "(8-5)", "", "(8-5)");
                var v = ov.swizzle.agbbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(8-5)", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("2", "", "", "-3", "");
                var v = ov.swizzle.agbbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "(13)", "((-4-7)0)", "(-48)", null);
                var v = ov.swizzle.agbba;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("((-4-7)0)", v.z);
                Assert.AreEqual("((-4-7)0)", v.w);
                Assert.AreEqual("(-48)", v.v);
            }
            {
                var ov = new gvec5<string>("((93)0)", "(0-5)", "-5", "6", "6");
                var v = ov.swizzle.agbbk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((6-8)2)", "", "(58)", "(-66)", null);
                var v = ov.swizzle.agba;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(-66)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "-2", "((-68)-3)", "(-90)", "-2");
                var v = ov.swizzle.agbar;
                Assert.AreEqual("(-90)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-68)-3)", v.z);
                Assert.AreEqual("(-90)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)9)", "((8-5)-8)", "(-4-6)", "((44)7)", "(-4-6)");
                var v = ov.swizzle.agbag;
                Assert.AreEqual("((44)7)", v.x);
                Assert.AreEqual("((8-5)-8)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("((44)7)", v.w);
                Assert.AreEqual("((8-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-6)2)", "6", "6", "(-5-2)", null);
                var v = ov.swizzle.agbab;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((55)-2)", "6", "(8-6)", "((55)-2)", "6");
                var v = ov.swizzle.agbaa;
                Assert.AreEqual("((55)-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("((55)-2)", v.w);
                Assert.AreEqual("((55)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-9-8)-2)", "", "", "(9-3)");
                var v = ov.swizzle.agbak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-8)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)-8)", "", "((8-1)-2)", "(7-6)", "(7-6)");
                var v = ov.swizzle.agbk;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((8-1)-2)", v.z);
                Assert.AreEqual("(7-6)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(97)", "((53)0)", "0", "(97)");
                var v = ov.swizzle.agbkr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(97)", v.y);
                Assert.AreEqual("((53)0)", v.z);
                Assert.AreEqual("(97)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "-4", null, "", "1");
                var v = ov.swizzle.agbkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "0", "((-7-3)-4)", "((-8-4)-6)", "(-3-5)");
                var v = ov.swizzle.agbkb;
                Assert.AreEqual("((-8-4)-6)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((-7-3)-4)", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("((-7-3)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((64)-1)", "(3-1)", "-7", "((64)-1)");
                var v = ov.swizzle.agbka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((64)-1)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("((64)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)9)", "-4", "(-9-9)", "", "((31)-7)");
                var v = ov.swizzle.agbkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("((31)-7)", v.w);
                Assert.AreEqual("((31)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)2)", "(6-5)", "(47)", "(6-5)", "((-11)2)");
                var v = ov.swizzle.aga;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("(6-5)", v.z);
            }
            {
                var ov = new gvec5<string>("(-8-5)", "(-1-2)", "((42)-1)", "(-8-5)", "(61)");
                var v = ov.swizzle.agar;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(-8-5)", v.z);
                Assert.AreEqual("(-8-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-90)-8)", "2", "(-19)", "(6-9)", "(6-9)");
                var v = ov.swizzle.agarr;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(6-9)", v.z);
                Assert.AreEqual("((-90)-8)", v.w);
                Assert.AreEqual("((-90)-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "((9-1)0)", "((9-1)0)", "");
                var v = ov.swizzle.agarg;
                Assert.AreEqual("((9-1)0)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((9-1)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(80)", "((-29)-7)", "-6", "(80)");
                var v = ov.swizzle.agarb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-29)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(98)", "9", "((95)1)", "0");
                var v = ov.swizzle.agara;
                Assert.AreEqual("((95)1)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("((95)1)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((95)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-1)-8)", "", "(24)", "-8", "((2-5)-5)");
                var v = ov.swizzle.agark;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-7-1)-8)", v.w);
                Assert.AreEqual("((2-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(11)", null, "(-8-6)", "(-43)", "(-43)");
                var v = ov.swizzle.agag;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-14)", "(13)", "((-6-1)-5)", "((-6-1)-5)", "(-14)");
                var v = ov.swizzle.agagr;
                Assert.AreEqual("((-6-1)-5)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("((-6-1)-5)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "((-5-6)-4)", "(96)", "3");
                var v = ov.swizzle.agagg;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "8", "(-1-7)", "1");
                var v = ov.swizzle.agagb;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)-2)", "(-6-1)", "(-23)", "((74)5)", null);
                var v = ov.swizzle.agaga;
                Assert.AreEqual("((74)5)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("((74)5)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("((74)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "(44)", "(-3-2)", "(-3-2)", "((6-8)0)");
                var v = ov.swizzle.agagk;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("((6-8)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(4-3)", "-6", "-5", "(-31)");
                var v = ov.swizzle.agab;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("((8-4)-6)", "-7", "(2-9)", "-1", "-1");
                var v = ov.swizzle.agabr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(2-9)", v.w);
                Assert.AreEqual("((8-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", "", "(4-5)", "(-4-4)", "-8");
                var v = ov.swizzle.agabg;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("(4-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-62)9)", "-2", "-2", "(40)");
                var v = ov.swizzle.agabb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-62)9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "(-2-4)", "-6", null);
                var v = ov.swizzle.agaba;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)-2)", "-1", "-3", "((-7-3)1)", "(-1-3)");
                var v = ov.swizzle.agabk;
                Assert.AreEqual("((-7-3)1)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-7-3)1)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-1-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-2)7)", "(47)", "8", "", "8");
                var v = ov.swizzle.agaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-23)3)", "((8-5)4)", "0", null, "(54)");
                var v = ov.swizzle.agaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-5)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-23)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)-6)", "(-63)", "8", "2", "(6-3)");
                var v = ov.swizzle.agaag;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-63)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((3-7)0)", "6", "(73)", "((-47)2)");
                var v = ov.swizzle.agaab;
                Assert.AreEqual("(73)", v.x);
                Assert.AreEqual("((3-7)0)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((47)-9)", "(21)", "-6", "((-3-9)5)");
                var v = ov.swizzle.agaaa;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((47)-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "", "((-5-8)-8)", "((1-1)3)", "(21)");
                var v = ov.swizzle.agaak;
                Assert.AreEqual("((1-1)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-1)3)", v.z);
                Assert.AreEqual("((1-1)3)", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(52)", "((-38)-5)", "", "((59)4)");
                var v = ov.swizzle.agak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((59)4)", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "((-80)-1)", "((45)1)", "((-80)-1)", null);
                var v = ov.swizzle.agakr;
                Assert.AreEqual("((-80)-1)", v.x);
                Assert.AreEqual("((-80)-1)", v.y);
                Assert.AreEqual("((-80)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("1", "9", "(-42)", "", "9");
                var v = ov.swizzle.agakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "", "8", "8", "(8-1)");
                var v = ov.swizzle.agakb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-4)0)", "(1-1)", "-5", "", "(-72)");
                var v = ov.swizzle.agaka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "", null, "((-3-3)-1)");
                var v = ov.swizzle.agakk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-3-3)-1)", v.w);
                Assert.AreEqual("((-3-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((95)-2)", "((-12)-5)", "8", "6", null);
                var v = ov.swizzle.agk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-12)-5)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>(null, "((02)-8)", "(90)", "((73)9)", null);
                var v = ov.swizzle.agkr;
                Assert.AreEqual("((73)9)", v.x);
                Assert.AreEqual("((02)-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((17)5)", null, "((-36)5)", null, "(0-5)");
                var v = ov.swizzle.agkrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("((17)5)", v.w);
                Assert.AreEqual("((17)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-63)", "((-95)8)", "(05)", "-7", "1");
                var v = ov.swizzle.agkrg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-95)8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-63)", v.w);
                Assert.AreEqual("((-95)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "(78)", "(-16)", "(-82)");
                var v = ov.swizzle.agkrb;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(52)", "((6-5)8)", "-7");
                var v = ov.swizzle.agkra;
                Assert.AreEqual("((6-5)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-5)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-8-6)-2)", "(83)", null, null);
                var v = ov.swizzle.agkrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-8-6)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "(80)", "5", null, "((3-9)-9)");
                var v = ov.swizzle.agkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("((3-9)-9)", v.z);
                Assert.AreEqual("(80)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "", "((3-7)6)", null, "((3-7)6)");
                var v = ov.swizzle.agkgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((3-7)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "3", "-9", "((77)-7)");
                var v = ov.swizzle.agkgg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((77)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((4-8)-8)", "", null, "7", "-7");
                var v = ov.swizzle.agkgb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(0-2)", "", "(0-2)", null, "4");
                var v = ov.swizzle.agkga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)0)", "(7-9)", "", "-6", null);
                var v = ov.swizzle.agkgk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(7-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "((90)-9)", "(02)", "(7-3)", "((-4-6)-9)");
                var v = ov.swizzle.agkb;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("((90)-9)", v.y);
                Assert.AreEqual("((-4-6)-9)", v.z);
                Assert.AreEqual("(02)", v.w);
            }
            {
                var ov = new gvec5<string>("", "5", "(1-8)", "(7-3)", "((-30)2)");
                var v = ov.swizzle.agkbr;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-30)2)", v.z);
                Assert.AreEqual("(1-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "((20)-5)", "8", "((7-8)8)", "((-5-5)-2)");
                var v = ov.swizzle.agkbg;
                Assert.AreEqual("((7-8)8)", v.x);
                Assert.AreEqual("((20)-5)", v.y);
                Assert.AreEqual("((-5-5)-2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((20)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-36)", "", "((-3-3)7)", "(94)", "-1");
                var v = ov.swizzle.agkbb;
                Assert.AreEqual("(94)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-3-3)7)", v.w);
                Assert.AreEqual("((-3-3)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((24)-6)", "3", "-2", "(92)");
                var v = ov.swizzle.agkba;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((24)-6)", v.y);
                Assert.AreEqual("(92)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "(-5-3)", "((3-6)5)", null, "((3-4)1)");
                var v = ov.swizzle.agkbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("((3-4)1)", v.z);
                Assert.AreEqual("((3-6)5)", v.w);
                Assert.AreEqual("((3-4)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(50)", "7", "(50)", "((82)8)");
                var v = ov.swizzle.agka;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("((82)8)", v.z);
                Assert.AreEqual("(50)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "", "(3-4)", "", null);
                var v = ov.swizzle.agkar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "((-66)2)", "0", "-7", "0");
                var v = ov.swizzle.agkag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-66)2)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-66)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((03)-9)", "", "((01)-1)", "((7-9)-5)", "-9");
                var v = ov.swizzle.agkab;
                Assert.AreEqual("((7-9)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((7-9)-5)", v.w);
                Assert.AreEqual("((01)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "(-61)", null, "(-61)");
                var v = ov.swizzle.agkaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((71)9)", "4", "", "((9-7)-5)", "4");
                var v = ov.swizzle.agkak;
                Assert.AreEqual("((9-7)-5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((9-7)-5)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "2", "(3-9)", "", "(3-9)");
                var v = ov.swizzle.agkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(3-9)", v.z);
                Assert.AreEqual("(3-9)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((-9-8)6)", "(5-4)", "-7", "0");
                var v = ov.swizzle.agkkr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-9-8)6)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-8)2)", "(93)", "((-9-8)2)", "(-1-2)", "((-9-8)2)");
                var v = ov.swizzle.agkkg;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("((-9-8)2)", v.z);
                Assert.AreEqual("((-9-8)2)", v.w);
                Assert.AreEqual("(93)", v.v);
            }
            {
                var ov = new gvec5<string>("((-14)1)", "((45)1)", "(-8-2)", "", null);
                var v = ov.swizzle.agkkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((45)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-7)", "", "(-91)", "(-5-7)", "-7");
                var v = ov.swizzle.agkka;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-5-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-86)", "", "0", "((8-7)-9)", "");
                var v = ov.swizzle.agkkk;
                Assert.AreEqual("((8-7)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((55)-5)", "((-1-3)1)", "", "(-7-2)", "(-9-5)");
                var v = ov.swizzle.ab;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("", v.y);
            }
            {
                var ov = new gvec5<string>("-9", "(6-4)", "((77)-4)", "((-59)6)", "((-59)6)");
                var v = ov.swizzle.abr;
                Assert.AreEqual("((-59)6)", v.x);
                Assert.AreEqual("((77)-4)", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec5<string>("", "(43)", "((5-5)2)", "((5-5)2)", "");
                var v = ov.swizzle.abrr;
                Assert.AreEqual("((5-5)2)", v.x);
                Assert.AreEqual("((5-5)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-3-6)2)", "((8-9)4)", "(-1-1)", "((8-9)4)");
                var v = ov.swizzle.abrrr;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("((8-9)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "-2", "8", "((11)-7)");
                var v = ov.swizzle.abrrg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "((-5-4)-9)", "", "5", "5");
                var v = ov.swizzle.abrrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("(2-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-12)", "-3", null, "-3");
                var v = ov.swizzle.abrra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "3", "(49)", "((-2-5)2)", "(49)");
                var v = ov.swizzle.abrrk;
                Assert.AreEqual("((-2-5)2)", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(49)", v.v);
            }
            {
                var ov = new gvec5<string>("((77)-7)", "(-13)", "((85)5)", "((77)-7)", "-4");
                var v = ov.swizzle.abrg;
                Assert.AreEqual("((77)-7)", v.x);
                Assert.AreEqual("((85)5)", v.y);
                Assert.AreEqual("((77)-7)", v.z);
                Assert.AreEqual("(-13)", v.w);
            }
            {
                var ov = new gvec5<string>("((73)3)", "(22)", "((73)3)", "1", null);
                var v = ov.swizzle.abrgr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((73)3)", v.y);
                Assert.AreEqual("((73)3)", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("((73)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-45)6)", "(22)", "((-45)6)", "-2", "6");
                var v = ov.swizzle.abrgg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-45)6)", v.y);
                Assert.AreEqual("((-45)6)", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)-6)", "((5-1)-3)", "(-6-4)", "6", "7");
                var v = ov.swizzle.abrgb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("((12)-6)", v.z);
                Assert.AreEqual("((5-1)-3)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", "7", "7", "((8-3)1)");
                var v = ov.swizzle.abrga;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((8-2)1)", "4", "((8-2)1)", "-9", "(9-7)");
                var v = ov.swizzle.abrgk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((8-2)1)", v.y);
                Assert.AreEqual("((8-2)1)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(9-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "((-24)7)", "((29)-8)", "(50)", "((37)8)");
                var v = ov.swizzle.abrb;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("((29)-8)", v.y);
                Assert.AreEqual("(44)", v.z);
                Assert.AreEqual("((29)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(-1-5)", "(88)", "", "(-7-6)", "(88)");
                var v = ov.swizzle.abrbr;
                Assert.AreEqual("(-7-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-1-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-1)2)", "((-5-8)-4)", "(59)", "(93)", "-1");
                var v = ov.swizzle.abrbg;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("((-1-1)2)", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("((-5-8)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "1", "(-9-8)", "", "5");
                var v = ov.swizzle.abrbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-9-8)", v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-73)", "((-53)1)", "(58)", "(-73)", "4");
                var v = ov.swizzle.abrba;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-2)1)", "2", "((-31)2)", "2", "(-17)");
                var v = ov.swizzle.abrbk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-31)2)", v.y);
                Assert.AreEqual("((1-2)1)", v.z);
                Assert.AreEqual("((-31)2)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-3-2)3)", "((-6-6)8)", "((-3-2)3)", "");
                var v = ov.swizzle.abra;
                Assert.AreEqual("((-3-2)3)", v.x);
                Assert.AreEqual("((-6-6)8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-3-2)3)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "7", "(-55)", "((89)-7)");
                var v = ov.swizzle.abrar;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-55)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-2-9)", "(24)", "(-2-9)", "", "-7");
                var v = ov.swizzle.abrag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, null, "-8", "(-1-4)");
                var v = ov.swizzle.abrab;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "(4-1)", null, "");
                var v = ov.swizzle.abraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-4", "(9-4)", "((3-8)2)", "");
                var v = ov.swizzle.abrak;
                Assert.AreEqual("((3-8)2)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((3-8)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(1-9)", "0", null, "");
                var v = ov.swizzle.abrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("2", "(-2-8)", "((-55)9)", "(53)", "((-11)-3)");
                var v = ov.swizzle.abrkr;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("((-55)9)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-11)-3)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((2-6)4)", "-6", null, "4");
                var v = ov.swizzle.abrkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((2-6)4)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((1-3)1)", "(-6-2)", "(26)", null);
                var v = ov.swizzle.abrkb;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("(-6-2)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-6-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-6)9)", "(6-6)", "", "((46)-2)", "");
                var v = ov.swizzle.abrka;
                Assert.AreEqual("((46)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-6)9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((46)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((44)1)", "((44)1)", "(-66)", "(33)", "(-66)");
                var v = ov.swizzle.abrkk;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual("((44)1)", v.z);
                Assert.AreEqual("(-66)", v.w);
                Assert.AreEqual("(-66)", v.v);
            }
            {
                var ov = new gvec5<string>("((82)1)", "(-2-8)", "-8", "-8", "((-21)-8)");
                var v = ov.swizzle.abg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-2-8)", v.z);
            }
            {
                var ov = new gvec5<string>("((-68)3)", "-7", "((73)3)", "((-68)3)", null);
                var v = ov.swizzle.abgr;
                Assert.AreEqual("((-68)3)", v.x);
                Assert.AreEqual("((73)3)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-68)3)", v.w);
            }
            {
                var ov = new gvec5<string>("(4-6)", "((8-7)0)", "(-50)", "-8", "(-50)");
                var v = ov.swizzle.abgrr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("((8-7)0)", v.z);
                Assert.AreEqual("(4-6)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "(-3-2)", "((51)6)", "((51)6)", "-6");
                var v = ov.swizzle.abgrg;
                Assert.AreEqual("((51)6)", v.x);
                Assert.AreEqual("((51)6)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-4)", "-6", "((95)1)", "((-7-8)0)");
                var v = ov.swizzle.abgrb;
                Assert.AreEqual("((95)1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(7-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "(-2-3)", "0", "((7-2)-1)");
                var v = ov.swizzle.abgra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(9-9)", "-7", "(-2-3)", "");
                var v = ov.swizzle.abgrk;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-18)2)", "(3-3)", "5", "(69)", "8");
                var v = ov.swizzle.abgg;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("(3-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-2)", null, "(-30)", "(-2-2)", "(-7-8)");
                var v = ov.swizzle.abggr;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-3)-9)", "(-1-1)", "(4-2)", "");
                var v = ov.swizzle.abggg;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("((4-3)-9)", v.z);
                Assert.AreEqual("((4-3)-9)", v.w);
                Assert.AreEqual("((4-3)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "(35)", "((-9-1)3)", "((7-2)-4)");
                var v = ov.swizzle.abggb;
                Assert.AreEqual("((-9-1)3)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)-7)", "((-3-4)6)", "(-98)", null, "(4-1)");
                var v = ov.swizzle.abgga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("((-3-4)6)", v.z);
                Assert.AreEqual("((-3-4)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((3-3)8)", "", null, "((60)5)", "(40)");
                var v = ov.swizzle.abggk;
                Assert.AreEqual("((60)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(40)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "((-7-7)-2)", "((-7-7)-2)", "(-7-3)", "(-5-9)");
                var v = ov.swizzle.abgb;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("((-7-7)-2)", v.y);
                Assert.AreEqual("((-7-7)-2)", v.z);
                Assert.AreEqual("((-7-7)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "(-8-6)", "((-8-5)-9)", "((-8-5)-9)", "(26)");
                var v = ov.swizzle.abgbr;
                Assert.AreEqual("((-8-5)-9)", v.x);
                Assert.AreEqual("((-8-5)-9)", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("((-8-5)-9)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "((-78)-2)", "((2-5)-8)", "-5", "((2-5)-8)");
                var v = ov.swizzle.abgbg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((2-5)-8)", v.y);
                Assert.AreEqual("((-78)-2)", v.z);
                Assert.AreEqual("((2-5)-8)", v.w);
                Assert.AreEqual("((-78)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)-3)", "3", "", "((5-2)1)", null);
                var v = ov.swizzle.abgbb;
                Assert.AreEqual("((5-2)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)3)", "-8", "((3-7)-8)", "((3-7)-8)", null);
                var v = ov.swizzle.abgba;
                Assert.AreEqual("((3-7)-8)", v.x);
                Assert.AreEqual("((3-7)-8)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((3-7)-8)", v.w);
                Assert.AreEqual("((3-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-2-5)-3)", "8", "(2-2)", "(21)");
                var v = ov.swizzle.abgbk;
                Assert.AreEqual("(2-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-2-5)-3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "((-15)-5)", "(32)", "((-15)-5)");
                var v = ov.swizzle.abga;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("((-15)-5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(32)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "7", "", "((35)7)", "");
                var v = ov.swizzle.abgar;
                Assert.AreEqual("((35)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((35)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-58)-4)", "(36)", "-6", "", null);
                var v = ov.swizzle.abgag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(36)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-6)", "((-44)6)", "2", "(-7-3)", "-8");
                var v = ov.swizzle.abgab;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-44)6)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("", "(76)", "(5-6)", "((-84)-8)", "(76)");
                var v = ov.swizzle.abgaa;
                Assert.AreEqual("((-84)-8)", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("((-84)-8)", v.w);
                Assert.AreEqual("((-84)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(50)", "(-44)", "7", "((-23)2)", "((4-2)-3)");
                var v = ov.swizzle.abgak;
                Assert.AreEqual("((-23)2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("((-23)2)", v.w);
                Assert.AreEqual("((4-2)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-4)-9)", "((1-4)2)", "-3", null, "((-57)-1)");
                var v = ov.swizzle.abgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((1-4)2)", v.z);
                Assert.AreEqual("((-57)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-7)-9)", "0", "0", "((-7-7)-9)", "((6-9)8)");
                var v = ov.swizzle.abgkr;
                Assert.AreEqual("((-7-7)-9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((6-9)8)", v.w);
                Assert.AreEqual("((-7-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((06)3)", "((-3-7)3)", null, null, "(52)");
                var v = ov.swizzle.abgkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-7)3)", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("((-3-7)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-76)", "(-76)", "((8-8)-3)", "", "((-80)-9)");
                var v = ov.swizzle.abgkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-8)-3)", v.y);
                Assert.AreEqual("(-76)", v.z);
                Assert.AreEqual("((-80)-9)", v.w);
                Assert.AreEqual("((8-8)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-2", "-2", "(-1-9)");
                var v = ov.swizzle.abgka;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((7-1)4)", "(98)", "", "(-6-1)");
                var v = ov.swizzle.abgkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("((7-1)4)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-1)", "9", "", "(-4-6)", "9");
                var v = ov.swizzle.abb;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("((0-1)0)", "", "(-95)", "(-27)", "((0-1)0)");
                var v = ov.swizzle.abbr;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("((0-1)0)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-79)", "-8", "(-22)", "6");
                var v = ov.swizzle.abbrr;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((18)-2)", "((18)-2)", "8", "(9-1)", "8");
                var v = ov.swizzle.abbrg;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((18)-2)", v.w);
                Assert.AreEqual("((18)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-5-9)", "(-37)", "2", "(-37)");
                var v = ov.swizzle.abbrb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-37)", v.v);
            }
            {
                var ov = new gvec5<string>("((09)9)", "((4-3)7)", "0", "((09)9)", "0");
                var v = ov.swizzle.abbra;
                Assert.AreEqual("((09)9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((09)9)", v.w);
                Assert.AreEqual("((09)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-3)", null, "((-85)-8)", "", "((86)-2)");
                var v = ov.swizzle.abbrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-85)-8)", v.y);
                Assert.AreEqual("((-85)-8)", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("((86)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-9)", null, "(-99)", "(0-4)", "-7");
                var v = ov.swizzle.abbg;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(92)", "(-8-2)", "(92)", "((1-2)-6)", "(92)");
                var v = ov.swizzle.abbgr;
                Assert.AreEqual("((1-2)-6)", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual("(92)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(92)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(90)", "(8-7)", null, "7");
                var v = ov.swizzle.abbgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-7)", v.y);
                Assert.AreEqual("(8-7)", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "-9", "-4", "(64)", "-9");
                var v = ov.swizzle.abbgb;
                Assert.AreEqual("(64)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-9)", "(-43)", "((2-7)2)", "-5");
                var v = ov.swizzle.abbga;
                Assert.AreEqual("((2-7)2)", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((2-7)2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-5)", "-5", "((66)-9)", "(-2-2)");
                var v = ov.swizzle.abbgk;
                Assert.AreEqual("((66)-9)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-9-5)", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "-8", "(83)", "2");
                var v = ov.swizzle.abbb;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((14)8)", "((80)9)", "(1-4)", "(21)", "4");
                var v = ov.swizzle.abbbr;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("((14)8)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((1-8)5)", "(-77)", "(-2-2)", "((89)-7)");
                var v = ov.swizzle.abbbg;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-77)", v.y);
                Assert.AreEqual("(-77)", v.z);
                Assert.AreEqual("(-77)", v.w);
                Assert.AreEqual("((1-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "-6", "((-3-8)-2)", "-6", "(60)");
                var v = ov.swizzle.abbbb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-3-8)-2)", v.y);
                Assert.AreEqual("((-3-8)-2)", v.z);
                Assert.AreEqual("((-3-8)-2)", v.w);
                Assert.AreEqual("((-3-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "(9-2)", "", "((08)-6)");
                var v = ov.swizzle.abbba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(9-2)", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(29)", null, "-3", null, "3");
                var v = ov.swizzle.abbbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "(-8-1)", null, "(-94)", null);
                var v = ov.swizzle.abba;
                Assert.AreEqual("(-94)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-94)", v.w);
            }
            {
                var ov = new gvec5<string>("(4-3)", "(14)", "", "", "(4-3)");
                var v = ov.swizzle.abbar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(4-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-29)", "(6-7)", "-7", "-7");
                var v = ov.swizzle.abbag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)6)", "((2-8)-8)", "-2", "6", "((-62)6)");
                var v = ov.swizzle.abbab;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((0-1)1)", "(-37)", "", "(40)", "((4-6)5)");
                var v = ov.swizzle.abbaa;
                Assert.AreEqual("(40)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual("(40)", v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", "(-84)", "((-6-9)7)", "7", "(-84)");
                var v = ov.swizzle.abbak;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-6-9)7)", v.y);
                Assert.AreEqual("((-6-9)7)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-84)", v.v);
            }
            {
                var ov = new gvec5<string>("((67)-2)", "5", "5", null, "2");
                var v = ov.swizzle.abbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("((03)0)", "", "(52)", "(26)", null);
                var v = ov.swizzle.abbkr;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((03)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "(6-6)", "8", "((02)4)", "8");
                var v = ov.swizzle.abbkg;
                Assert.AreEqual("((02)4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-77)", "((28)-4)", "4", "(-77)", "(-3-2)");
                var v = ov.swizzle.abbkb;
                Assert.AreEqual("(-77)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(0-7)", "(0-7)", "-8", "");
                var v = ov.swizzle.abbka;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((77)-2)", "", "(0-8)", null, "(0-8)");
                var v = ov.swizzle.abbkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual("(0-8)", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(0-6)", "((-4-6)7)", "-8", "", "-8");
                var v = ov.swizzle.aba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("-8", "3", null, "(-1-9)", "((-5-4)-3)");
                var v = ov.swizzle.abar;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(62)", "4", "((6-6)-9)", "0", "0");
                var v = ov.swizzle.abarr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((6-6)-9)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(62)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec5<string>("((-25)-7)", "(-2-5)", "(18)", "((33)2)", "(-2-5)");
                var v = ov.swizzle.abarg;
                Assert.AreEqual("((33)2)", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("((33)2)", v.z);
                Assert.AreEqual("((-25)-7)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "(95)", "(6-1)", "-4");
                var v = ov.swizzle.abarb;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(95)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(66)", "5", null, "5");
                var v = ov.swizzle.abara;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-9-2)5)", "0", "-5", "(-4-8)");
                var v = ov.swizzle.abark;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((2-1)-2)", "-4", "", "((2-1)-2)", "((91)-3)");
                var v = ov.swizzle.abag;
                Assert.AreEqual("((2-1)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((2-1)-2)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("((94)-1)", "(80)", "", "9", "9");
                var v = ov.swizzle.abagr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(80)", v.w);
                Assert.AreEqual("((94)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-2)", "0", null, "(-1-4)", "0");
                var v = ov.swizzle.abagg;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "5", "((-8-1)8)", "5", "5");
                var v = ov.swizzle.abagb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-8-1)8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-8-1)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "8", "((80)8)", "(-29)", "((3-1)1)");
                var v = ov.swizzle.abaga;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("((80)8)", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec5<string>("((-20)-6)", "", null, "4", "(2-6)");
                var v = ov.swizzle.abagk;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "3", "((8-7)4)", "((33)9)", "(-3-1)");
                var v = ov.swizzle.abab;
                Assert.AreEqual("((33)9)", v.x);
                Assert.AreEqual("((8-7)4)", v.y);
                Assert.AreEqual("((33)9)", v.z);
                Assert.AreEqual("((8-7)4)", v.w);
            }
            {
                var ov = new gvec5<string>("((72)-4)", "((-4-4)2)", "7", null, null);
                var v = ov.swizzle.ababr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((72)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "7", "7", "", "");
                var v = ov.swizzle.ababg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "(0-5)", "0", "(0-5)");
                var v = ov.swizzle.ababb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(0-1)", "", "(81)", "((04)-2)");
                var v = ov.swizzle.ababa;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(5-7)", "((-12)8)", "-6", "((-12)8)");
                var v = ov.swizzle.ababk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-12)8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-12)8)", v.w);
                Assert.AreEqual("((-12)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((78)4)", "((7-4)5)", "((78)4)", "3", "(47)");
                var v = ov.swizzle.abaa;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((78)4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((-46)8)", "(3-5)", "((-46)8)", "", null);
                var v = ov.swizzle.abaar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-46)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-46)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-1)", "((-57)6)", "-3", "(6-5)", "((-8-9)-3)");
                var v = ov.swizzle.abaag;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("(6-5)", v.w);
                Assert.AreEqual("((-57)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-6)", "(-36)", "(-8-8)", "(-36)", "-9");
                var v = ov.swizzle.abaab;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "((-3-9)9)", "((-3-9)9)");
                var v = ov.swizzle.abaaa;
                Assert.AreEqual("((-3-9)9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-9)9)", v.z);
                Assert.AreEqual("((-3-9)9)", v.w);
                Assert.AreEqual("((-3-9)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-5)-3)", "", "(3-3)", "((-62)-8)", "((08)8)");
                var v = ov.swizzle.abaak;
                Assert.AreEqual("((-62)-8)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((-62)-8)", v.z);
                Assert.AreEqual("((-62)-8)", v.w);
                Assert.AreEqual("((08)8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-51)-6)", "-1", "(75)", "(75)", "((-94)-3)");
                var v = ov.swizzle.abak;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("((-94)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(5-1)", "((84)-4)", "((52)-1)", "((-1-2)-1)", "(5-1)");
                var v = ov.swizzle.abakr;
                Assert.AreEqual("((-1-2)-1)", v.x);
                Assert.AreEqual("((52)-1)", v.y);
                Assert.AreEqual("((-1-2)-1)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-6)-5)", "((-9-6)-5)", "2", "(-22)", "((-9-6)-5)");
                var v = ov.swizzle.abakg;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("((-9-6)-5)", v.w);
                Assert.AreEqual("((-9-6)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-2)", "", "-9", "(8-5)", "(8-5)");
                var v = ov.swizzle.abakb;
                Assert.AreEqual("(8-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(8-5)", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "(4-2)", "-4", "(4-2)");
                var v = ov.swizzle.abaka;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(4-2)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((-93)-1)", "", null, "((76)7)");
                var v = ov.swizzle.abakk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((76)7)", v.w);
                Assert.AreEqual("((76)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-2)-3)", null, "2", "-9", null);
                var v = ov.swizzle.abk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>(null, "-8", "-3", null, "((49)-6)");
                var v = ov.swizzle.abkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((49)-6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(88)", "((-1-9)7)", "((41)-8)", "(04)", "");
                var v = ov.swizzle.abkrr;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("((41)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(88)", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-8-1)", "8", "(-99)", "8");
                var v = ov.swizzle.abkrg;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-8-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-12)", null, "9", "((-4-8)-1)", "6");
                var v = ov.swizzle.abkrb;
                Assert.AreEqual("((-4-8)-1)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)0)", "(-2-4)", "(-2-4)", "((-1-4)0)", null);
                var v = ov.swizzle.abkra;
                Assert.AreEqual("((-1-4)0)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-4)0)", v.w);
                Assert.AreEqual("((-1-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "-9", "((95)-4)", "((-1-5)5)", "-9");
                var v = ov.swizzle.abkrk;
                Assert.AreEqual("((-1-5)5)", v.x);
                Assert.AreEqual("((95)-4)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((3-1)6)", "((3-1)6)", "((1-6)-5)", "(14)", "(14)");
                var v = ov.swizzle.abkg;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("((1-6)-5)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("((3-1)6)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "(1-3)", "", "-8", "(-77)");
                var v = ov.swizzle.abkgr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-77)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((46)7)", "(7-5)", "5", "((46)7)");
                var v = ov.swizzle.abkgg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("((46)7)", v.z);
                Assert.AreEqual("((46)7)", v.w);
                Assert.AreEqual("((46)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-1)2)", "((-4-1)2)", "((-59)-7)", "(73)", "9");
                var v = ov.swizzle.abkgb;
                Assert.AreEqual("(73)", v.x);
                Assert.AreEqual("((-59)-7)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-4-1)2)", v.w);
                Assert.AreEqual("((-59)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(59)", "(59)", "((0-1)4)", "8");
                var v = ov.swizzle.abkga;
                Assert.AreEqual("((0-1)4)", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("((0-1)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-1)1)", null, "", "((-7-8)1)", "(3-7)");
                var v = ov.swizzle.abkgk;
                Assert.AreEqual("((-7-8)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(04)", "((-14)1)", "(-8-1)", "(-8-1)");
                var v = ov.swizzle.abkb;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("((-14)1)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("((-14)1)", v.w);
            }
            {
                var ov = new gvec5<string>("0", "(-97)", "((64)-3)", "((4-2)9)", null);
                var v = ov.swizzle.abkbr;
                Assert.AreEqual("((4-2)9)", v.x);
                Assert.AreEqual("((64)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((64)-3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-20)", "-3", "((-69)0)", "(6-7)");
                var v = ov.swizzle.abkbg;
                Assert.AreEqual("((-69)0)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(6-7)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-20)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-1-7)", "-3", "", "-5");
                var v = ov.swizzle.abkbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-4)-6)", "((44)2)", "((44)2)", "((-4-9)-7)", "-4");
                var v = ov.swizzle.abkba;
                Assert.AreEqual("((-4-9)-7)", v.x);
                Assert.AreEqual("((44)2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((44)2)", v.w);
                Assert.AreEqual("((-4-9)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-9", "(-2-6)", "((01)2)", "((01)2)");
                var v = ov.swizzle.abkbk;
                Assert.AreEqual("((01)2)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("((01)2)", v.z);
                Assert.AreEqual("(-2-6)", v.w);
                Assert.AreEqual("((01)2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "(2-6)", "((3-9)7)", "-8");
                var v = ov.swizzle.abka;
                Assert.AreEqual("((3-9)7)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((3-9)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(92)", "7", "", "((17)7)", "");
                var v = ov.swizzle.abkar;
                Assert.AreEqual("((17)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((17)7)", v.w);
                Assert.AreEqual("(92)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-7-7)", "((-6-2)6)", "(-62)", "8");
                var v = ov.swizzle.abkag;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("((-6-2)6)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "((-6-6)-9)", "4", "(-4-7)");
                var v = ov.swizzle.abkab;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-6-6)-9)", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-6-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-5-3)5)", "(45)", "", "(-5-9)");
                var v = ov.swizzle.abkaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", null, "(8-9)", "(8-9)", "5");
                var v = ov.swizzle.abkak;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(50)", "(50)", "-8", "((98)9)");
                var v = ov.swizzle.abkk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("((98)9)", v.z);
                Assert.AreEqual("((98)9)", v.w);
            }
            {
                var ov = new gvec5<string>("((-17)6)", "(5-6)", "(-7-4)", "7", null);
                var v = ov.swizzle.abkkr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-17)6)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-54)", "((-1-5)-2)", "((40)-5)", "((-1-5)-2)");
                var v = ov.swizzle.abkkg;
                Assert.AreEqual("((40)-5)", v.x);
                Assert.AreEqual("((-1-5)-2)", v.y);
                Assert.AreEqual("((-1-5)-2)", v.z);
                Assert.AreEqual("((-1-5)-2)", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((9-5)0)", "((69)3)", "(-3-5)", null);
                var v = ov.swizzle.abkkb;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("((69)3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((69)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(-91)", "((77)-4)", "(-91)", "((77)-4)");
                var v = ov.swizzle.abkka;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("((77)-4)", v.y);
                Assert.AreEqual("((77)-4)", v.z);
                Assert.AreEqual("((77)-4)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec5<string>("(59)", "((3-1)3)", "((-25)3)", "((-25)3)", "((-25)3)");
                var v = ov.swizzle.abkkk;
                Assert.AreEqual("((-25)3)", v.x);
                Assert.AreEqual("((-25)3)", v.y);
                Assert.AreEqual("((-25)3)", v.z);
                Assert.AreEqual("((-25)3)", v.w);
                Assert.AreEqual("((-25)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-6)", "2", "(67)", "(6-6)");
                var v = ov.swizzle.aa;
                Assert.AreEqual("(67)", v.x);
                Assert.AreEqual("(67)", v.y);
            }
            {
                var ov = new gvec5<string>("4", "2", "((2-5)-5)", "", "((2-5)-5)");
                var v = ov.swizzle.aar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
            }
            {
                var ov = new gvec5<string>("(-1-9)", "(-1-9)", "(54)", "((7-4)4)", null);
                var v = ov.swizzle.aarr;
                Assert.AreEqual("((7-4)4)", v.x);
                Assert.AreEqual("((7-4)4)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(27)", "-1", "((1-5)-7)", "((1-5)-7)", "((1-5)-7)");
                var v = ov.swizzle.aarrr;
                Assert.AreEqual("((1-5)-7)", v.x);
                Assert.AreEqual("((1-5)-7)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec5<string>("((-81)-9)", "", "3", "", "((34)-3)");
                var v = ov.swizzle.aarrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-81)-9)", v.z);
                Assert.AreEqual("((-81)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-72)1)", "((-72)1)", "(-36)", "(3-2)");
                var v = ov.swizzle.aarrb;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-72)1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-4-1)", "1", "6", "((-41)6)");
                var v = ov.swizzle.aarra;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-9-9)-4)", "((4-3)0)", "-3", "-3");
                var v = ov.swizzle.aarrk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((3-6)6)", "(27)", "((3-6)6)", "", null);
                var v = ov.swizzle.aarg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((3-6)6)", v.z);
                Assert.AreEqual("(27)", v.w);
            }
            {
                var ov = new gvec5<string>("-9", "(-2-4)", "9", "-4", null);
                var v = ov.swizzle.aargr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-2-4)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((-84)-8)", "(-14)", "6", "6", "-1");
                var v = ov.swizzle.aargg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-84)-8)", v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("(-14)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "7", "(9-8)", "((5-7)-2)");
                var v = ov.swizzle.aargb;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-3-6)", "1", "3", "3");
                var v = ov.swizzle.aarga;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("3", "-7", "(-6-9)", "3", "(-5-2)");
                var v = ov.swizzle.aargk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "(7-9)", "-3", "-3");
                var v = ov.swizzle.aarb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(7-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(00)", "9", "", "6", "");
                var v = ov.swizzle.aarbr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(00)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-88)-4)", "((-4-3)0)", "((-4-3)0)", "((3-2)1)");
                var v = ov.swizzle.aarbg;
                Assert.AreEqual("((-4-3)0)", v.x);
                Assert.AreEqual("((-4-3)0)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-4-3)0)", v.w);
                Assert.AreEqual("((-88)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-8-5)7)", "-6", "1", "((-8-5)7)");
                var v = ov.swizzle.aarbb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, null, "((5-2)-1)", "((4-4)2)");
                var v = ov.swizzle.aarba;
                Assert.AreEqual("((5-2)-1)", v.x);
                Assert.AreEqual("((5-2)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-2)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)-8)", "((3-5)0)", "((-69)-8)", "", "");
                var v = ov.swizzle.aarbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-69)-8)", v.z);
                Assert.AreEqual("((-69)-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((22)7)", "-4", "", "((-20)-3)", "");
                var v = ov.swizzle.aara;
                Assert.AreEqual("((-20)-3)", v.x);
                Assert.AreEqual("((-20)-3)", v.y);
                Assert.AreEqual("((22)7)", v.z);
                Assert.AreEqual("((-20)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(98)", "5", "(43)", "(9-8)", "((-4-1)2)");
                var v = ov.swizzle.aarar;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("(98)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-40)", "(-5-2)", "5", null);
                var v = ov.swizzle.aarag;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-40)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "(-91)", null, "9", "(-91)");
                var v = ov.swizzle.aarab;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-1-5)9)", "((-1-5)9)", "-3", null, null);
                var v = ov.swizzle.aaraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-1-5)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(5-9)", "-9", "-9", "-4", null);
                var v = ov.swizzle.aarak;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("3", "3", "3", "", "1");
                var v = ov.swizzle.aark;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec5<string>("(64)", "((-11)8)", "3", "3", "");
                var v = ov.swizzle.aarkr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec5<string>("((52)4)", "0", "0", null, null);
                var v = ov.swizzle.aarkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((52)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-59)", "-7", "((-93)-6)", "((4-8)4)");
                var v = ov.swizzle.aarkb;
                Assert.AreEqual("((-93)-6)", v.x);
                Assert.AreEqual("((-93)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((4-8)4)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "7", "6", "7", "7");
                var v = ov.swizzle.aarka;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(3-7)", "9", "((-34)-5)", "(4-1)");
                var v = ov.swizzle.aarkk;
                Assert.AreEqual("((-34)-5)", v.x);
                Assert.AreEqual("((-34)-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(4-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((29)-6)", "2", "-3", "(-9-7)");
                var v = ov.swizzle.aag;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((29)-6)", v.z);
            }
            {
                var ov = new gvec5<string>("(6-1)", "((-97)3)", "(6-1)", "(45)", "-8");
                var v = ov.swizzle.aagr;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("((-97)3)", v.z);
                Assert.AreEqual("(6-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(-46)", "6", "(-97)", "-5", "7");
                var v = ov.swizzle.aagrr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("(-46)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-5", null, "(-6-1)", "(-90)");
                var v = ov.swizzle.aagrg;
                Assert.AreEqual("(-6-1)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(56)", null, "(56)", "((-22)-3)", "(75)");
                var v = ov.swizzle.aagrb;
                Assert.AreEqual("((-22)-3)", v.x);
                Assert.AreEqual("((-22)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "(09)", "(09)", "(7-6)");
                var v = ov.swizzle.aagra;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("(-26)", "((-33)6)", "(-26)", "(-3-6)", "((4-5)9)");
                var v = ov.swizzle.aagrk;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("((-33)6)", v.z);
                Assert.AreEqual("(-26)", v.w);
                Assert.AreEqual("((4-5)9)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "-2", "(-7-9)", "((1-1)0)", "((-8-9)7)");
                var v = ov.swizzle.aagg;
                Assert.AreEqual("((1-1)0)", v.x);
                Assert.AreEqual("((1-1)0)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("6", "((83)-7)", "(-3-5)", "((33)4)", "(-5-1)");
                var v = ov.swizzle.aaggr;
                Assert.AreEqual("((33)4)", v.x);
                Assert.AreEqual("((33)4)", v.y);
                Assert.AreEqual("((83)-7)", v.z);
                Assert.AreEqual("((83)-7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "4", "((28)1)", "", "((28)1)");
                var v = ov.swizzle.aaggg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)-5)", "((-15)-7)", "-6", "(7-5)", "((8-6)-1)");
                var v = ov.swizzle.aaggb;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("((-15)-7)", v.z);
                Assert.AreEqual("((-15)-7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "(4-9)", "((1-4)-8)", "((-10)-3)", "((1-4)-8)");
                var v = ov.swizzle.aagga;
                Assert.AreEqual("((-10)-3)", v.x);
                Assert.AreEqual("((-10)-3)", v.y);
                Assert.AreEqual("(4-9)", v.z);
                Assert.AreEqual("(4-9)", v.w);
                Assert.AreEqual("((-10)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-47)", "((5-6)9)", "", "-3");
                var v = ov.swizzle.aaggk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)0)", "(-75)", "((6-5)-1)", "2", "((-9-3)0)");
                var v = ov.swizzle.aagb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("((6-5)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("((-5-4)6)", "(-84)", "7", "(99)", "7");
                var v = ov.swizzle.aagbr;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((-5-4)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((83)-2)", "-3", "((-28)-9)", "-3", "((19)-2)");
                var v = ov.swizzle.aagbg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-28)-9)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(-65)", "((-9-8)3)", "(-65)", "((-9-8)3)", "((-9-8)3)");
                var v = ov.swizzle.aagbb;
                Assert.AreEqual("((-9-8)3)", v.x);
                Assert.AreEqual("((-9-8)3)", v.y);
                Assert.AreEqual("((-9-8)3)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("(-65)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((6-7)-9)", "-5", "((6-7)-9)", "(57)");
                var v = ov.swizzle.aagba;
                Assert.AreEqual("((6-7)-9)", v.x);
                Assert.AreEqual("((6-7)-9)", v.y);
                Assert.AreEqual("((6-7)-9)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((6-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-59)", "1", "(64)", "(-59)", "(56)");
                var v = ov.swizzle.aagbk;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(64)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-93)", null, "(-48)", "1");
                var v = ov.swizzle.aaga;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-48)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-52)-1)", "8", "(-9-3)", null);
                var v = ov.swizzle.aagar;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("(-9-3)", v.y);
                Assert.AreEqual("((-52)-1)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "-5", "((-5-6)-5)", "2");
                var v = ov.swizzle.aagag;
                Assert.AreEqual("((-5-6)-5)", v.x);
                Assert.AreEqual("((-5-6)-5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-5-6)-5)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(36)", "0", "(-84)", "");
                var v = ov.swizzle.aagab;
                Assert.AreEqual("(-84)", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-13)", "((38)-6)", "(-6-1)", "((07)-1)", "(-4-9)");
                var v = ov.swizzle.aagaa;
                Assert.AreEqual("((07)-1)", v.x);
                Assert.AreEqual("((07)-1)", v.y);
                Assert.AreEqual("((38)-6)", v.z);
                Assert.AreEqual("((07)-1)", v.w);
                Assert.AreEqual("((07)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-64)0)", "((27)-6)", "(-7-1)", "9", "");
                var v = ov.swizzle.aagak;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((27)-6)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-6)", "-2", "", "-1", "(4-1)");
                var v = ov.swizzle.aagk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(4-1)", v.w);
            }
            {
                var ov = new gvec5<string>("-2", "(-11)", "-2", "((-7-5)-9)", "3");
                var v = ov.swizzle.aagkr;
                Assert.AreEqual("((-7-5)-9)", v.x);
                Assert.AreEqual("((-7-5)-9)", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "(28)", "((28)8)", "(15)", "((28)8)");
                var v = ov.swizzle.aagkg;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(28)", v.z);
                Assert.AreEqual("((28)8)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-2", "(3-1)", "(-72)", "((39)-2)");
                var v = ov.swizzle.aagkb;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("(-72)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((39)-2)", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-51)", "((-93)6)", "((4-7)-3)", "(32)");
                var v = ov.swizzle.aagka;
                Assert.AreEqual("((4-7)-3)", v.x);
                Assert.AreEqual("((4-7)-3)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("(32)", v.w);
                Assert.AreEqual("((4-7)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(1-6)", "8", "", "-2");
                var v = ov.swizzle.aagkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)7)", "((7-8)7)", "-2", "(71)", "");
                var v = ov.swizzle.aab;
                Assert.AreEqual("(71)", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("-2", v.z);
            }
            {
                var ov = new gvec5<string>("((-4-3)3)", "-3", "((-15)-1)", "-6", null);
                var v = ov.swizzle.aabr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-15)-1)", v.z);
                Assert.AreEqual("((-4-3)3)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-9)", "(1-6)", "(1-6)", "-8", "-8");
                var v = ov.swizzle.aabrr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("(7-9)", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(8-3)", "((1-5)-1)", "((29)-8)", "");
                var v = ov.swizzle.aabrg;
                Assert.AreEqual("((29)-8)", v.x);
                Assert.AreEqual("((29)-8)", v.y);
                Assert.AreEqual("((1-5)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-5-3)", "-7", "(-23)", "");
                var v = ov.swizzle.aabrb;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(8-8)", "4", "(-8-8)", "-3");
                var v = ov.swizzle.aabra;
                Assert.AreEqual("(-8-8)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((96)9)", "((96)9)", "((4-1)-2)", "((96)9)");
                var v = ov.swizzle.aabrk;
                Assert.AreEqual("((4-1)-2)", v.x);
                Assert.AreEqual("((4-1)-2)", v.y);
                Assert.AreEqual("((96)9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((96)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((9-1)8)", "(5-8)", "(37)", "(-5-8)");
                var v = ov.swizzle.aabg;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("((9-1)8)", v.w);
            }
            {
                var ov = new gvec5<string>("((-57)2)", "((-4-2)3)", "-5", "-5", "");
                var v = ov.swizzle.aabgr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-4-2)3)", v.w);
                Assert.AreEqual("((-57)2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(6-8)", "5", "", "((-19)8)");
                var v = ov.swizzle.aabgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(6-8)", v.w);
                Assert.AreEqual("(6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "3", "(4-3)", "9", "");
                var v = ov.swizzle.aabgb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(4-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "1", "((66)-5)", "1", "(-1-5)");
                var v = ov.swizzle.aabga;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((66)-5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "((7-7)-2)", "6", "", "6");
                var v = ov.swizzle.aabgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((7-7)-2)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-69)7)", "-1", "((-69)7)", "-1", "-5");
                var v = ov.swizzle.aabb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-69)7)", v.z);
                Assert.AreEqual("((-69)7)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-9)", "(04)", "((-9-6)4)", "((-7-1)7)", "((-7-1)7)");
                var v = ov.swizzle.aabbr;
                Assert.AreEqual("((-7-1)7)", v.x);
                Assert.AreEqual("((-7-1)7)", v.y);
                Assert.AreEqual("((-9-6)4)", v.z);
                Assert.AreEqual("((-9-6)4)", v.w);
                Assert.AreEqual("(-8-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-1)", "2", "((64)-4)", "((-27)-2)", "((-27)-2)");
                var v = ov.swizzle.aabbg;
                Assert.AreEqual("((-27)-2)", v.x);
                Assert.AreEqual("((-27)-2)", v.y);
                Assert.AreEqual("((64)-4)", v.z);
                Assert.AreEqual("((64)-4)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((61)-5)", "(94)", "6", "9");
                var v = ov.swizzle.aabbb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(94)", v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec5<string>("((-33)-7)", "((-33)-7)", "(-2-7)", "-4", "6");
                var v = ov.swizzle.aabba;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-2-7)", v.z);
                Assert.AreEqual("(-2-7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-92)", "-2", "((-4-4)0)", "((-57)-6)", "((-57)-6)");
                var v = ov.swizzle.aabbk;
                Assert.AreEqual("((-57)-6)", v.x);
                Assert.AreEqual("((-57)-6)", v.y);
                Assert.AreEqual("((-4-4)0)", v.z);
                Assert.AreEqual("((-4-4)0)", v.w);
                Assert.AreEqual("((-57)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(99)", "((7-7)1)", "(99)", null, "");
                var v = ov.swizzle.aaba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((57)0)", "(-88)", "(-9-6)", "-1", "((57)0)");
                var v = ov.swizzle.aabar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-9-6)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((57)0)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(-3-8)", "(-92)", "(-92)", "1");
                var v = ov.swizzle.aabag;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-6)8)", "((6-7)6)", "((-6-3)6)", "((7-6)8)", "-6");
                var v = ov.swizzle.aabab;
                Assert.AreEqual("((7-6)8)", v.x);
                Assert.AreEqual("((7-6)8)", v.y);
                Assert.AreEqual("((-6-3)6)", v.z);
                Assert.AreEqual("((7-6)8)", v.w);
                Assert.AreEqual("((-6-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "8", "((-91)9)", "7", "1");
                var v = ov.swizzle.aabaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-91)9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "3", "-8", "(-2-4)");
                var v = ov.swizzle.aabak;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-46)9)", "2", "(3-6)", null);
                var v = ov.swizzle.aabk;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((74)-1)", "((57)7)", "((74)-1)", "4", "");
                var v = ov.swizzle.aabkr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((74)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((74)-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(93)", "", "(14)");
                var v = ov.swizzle.aabkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((84)4)", "", null, "", "0");
                var v = ov.swizzle.aabkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((56)8)", "((56)8)", null, "((56)8)", "-7");
                var v = ov.swizzle.aabka;
                Assert.AreEqual("((56)8)", v.x);
                Assert.AreEqual("((56)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((56)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-6)", null, "6", "", "(-8-4)");
                var v = ov.swizzle.aabkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-8-4)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "(05)", "6", "(05)", "((-88)8)");
                var v = ov.swizzle.aaa;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("(05)", v.z);
            }
            {
                var ov = new gvec5<string>("6", "(9-9)", "5", "", "6");
                var v = ov.swizzle.aaar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((8-7)-9)", "-9", "-2", "-2", "((8-7)-9)");
                var v = ov.swizzle.aaarr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((8-7)-9)", v.w);
                Assert.AreEqual("((8-7)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((74)-2)", "((-5-1)1)", "(-69)", "8", "8");
                var v = ov.swizzle.aaarg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((74)-2)", v.w);
                Assert.AreEqual("((-5-1)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)4)", "", "7", "(63)", "((03)-4)");
                var v = ov.swizzle.aaarb;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(63)", v.z);
                Assert.AreEqual("((7-8)4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(1-5)", "(7-3)", "-1", "(7-3)");
                var v = ov.swizzle.aaara;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-68)", "9", "9", "9", "-7");
                var v = ov.swizzle.aaark;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((3-3)-7)", null, "((-9-4)4)");
                var v = ov.swizzle.aaag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-30)0)", "-6", "-8", "", "(-8-4)");
                var v = ov.swizzle.aaagr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-30)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-5)-1)", "(33)", "(56)", "((-7-9)3)", "((-3-5)-1)");
                var v = ov.swizzle.aaagg;
                Assert.AreEqual("((-7-9)3)", v.x);
                Assert.AreEqual("((-7-9)3)", v.y);
                Assert.AreEqual("((-7-9)3)", v.z);
                Assert.AreEqual("(33)", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-6)", "((-2-1)1)", "(-6-8)", "((-1-6)1)", "-6");
                var v = ov.swizzle.aaagb;
                Assert.AreEqual("((-1-6)1)", v.x);
                Assert.AreEqual("((-1-6)1)", v.y);
                Assert.AreEqual("((-1-6)1)", v.z);
                Assert.AreEqual("((-2-1)1)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-5)", null, "", "((44)0)", "(2-4)");
                var v = ov.swizzle.aaaga;
                Assert.AreEqual("((44)0)", v.x);
                Assert.AreEqual("((44)0)", v.y);
                Assert.AreEqual("((44)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((44)0)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(0-2)", "((31)-2)", "-1");
                var v = ov.swizzle.aaagk;
                Assert.AreEqual("((31)-2)", v.x);
                Assert.AreEqual("((31)-2)", v.y);
                Assert.AreEqual("((31)-2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(2-3)", "-2", "-4", "(-87)");
                var v = ov.swizzle.aaab;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-3)", "((42)-9)", null, "6", "(-2-3)");
                var v = ov.swizzle.aaabr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-9)", null, "5", "5", "");
                var v = ov.swizzle.aaabg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((70)-1)", "", "-1", "-5", null);
                var v = ov.swizzle.aaabb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(6-8)", "(-4-8)", "(-4-8)", "8", "-3");
                var v = ov.swizzle.aaaba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-2)", "-7", null, "((6-2)-6)");
                var v = ov.swizzle.aaabk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((6-2)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, null, null, "(7-5)");
                var v = ov.swizzle.aaaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-6-2)-9)", "1", "4", "1", "((-6-2)-9)");
                var v = ov.swizzle.aaaar;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-6-2)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-74)9)", "(35)", "(35)", "(35)", "(0-2)");
                var v = ov.swizzle.aaaag;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(22)", "(56)", "(-2-2)", "0");
                var v = ov.swizzle.aaaab;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-3)", "((-1-8)9)", null, "(-7-8)", null);
                var v = ov.swizzle.aaaaa;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(00)", "-1", "((9-2)-6)", "((41)-5)");
                var v = ov.swizzle.aaaak;
                Assert.AreEqual("((9-2)-6)", v.x);
                Assert.AreEqual("((9-2)-6)", v.y);
                Assert.AreEqual("((9-2)-6)", v.z);
                Assert.AreEqual("((9-2)-6)", v.w);
                Assert.AreEqual("((41)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-8-5)", "(6-4)", "1", "(-8-5)");
                var v = ov.swizzle.aaak;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-8-5)", v.w);
            }
            {
                var ov = new gvec5<string>("(8-6)", "0", "(32)", "((-44)0)", "((-92)7)");
                var v = ov.swizzle.aaakr;
                Assert.AreEqual("((-44)0)", v.x);
                Assert.AreEqual("((-44)0)", v.y);
                Assert.AreEqual("((-44)0)", v.z);
                Assert.AreEqual("((-92)7)", v.w);
                Assert.AreEqual("(8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)2)", "((-57)8)", "((-7-4)2)", null, "((9-5)-5)");
                var v = ov.swizzle.aaakg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-5)-5)", v.w);
                Assert.AreEqual("((-57)8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-7)5)", "(-44)", "-8", "(9-5)");
                var v = ov.swizzle.aaakb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(9-5)", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((93)-6)", "", "(-9-4)", "0");
                var v = ov.swizzle.aaaka;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)1)", "-2", "((-5-7)-2)", "((1-5)1)", "(66)");
                var v = ov.swizzle.aaakk;
                Assert.AreEqual("((1-5)1)", v.x);
                Assert.AreEqual("((1-5)1)", v.y);
                Assert.AreEqual("((1-5)1)", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-7)-4)", "7", "(-6-4)", null, "(-6-4)");
                var v = ov.swizzle.aak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-6-4)", v.z);
            }
            {
                var ov = new gvec5<string>("((-48)-9)", null, null, "((-51)3)", "0");
                var v = ov.swizzle.aakr;
                Assert.AreEqual("((-51)3)", v.x);
                Assert.AreEqual("((-51)3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-48)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("(-33)", "(-77)", "1", null, "(-77)");
                var v = ov.swizzle.aakrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-77)", v.z);
                Assert.AreEqual("(-33)", v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec5<string>("(23)", "((-63)6)", "", "-1", "(0-5)");
                var v = ov.swizzle.aakrg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("((-63)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "3", "3", "(-18)", "(14)");
                var v = ov.swizzle.aakrb;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("(-18)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-78)7)", "-2", "-8", "-2", "(79)");
                var v = ov.swizzle.aakra;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("((-78)7)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((09)4)", "(-3-9)", "(60)", "8", "");
                var v = ov.swizzle.aakrk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((09)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((4-2)-7)", "-7", "6", null);
                var v = ov.swizzle.aakg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((4-2)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-9)", "((88)3)", "-5", "2", "");
                var v = ov.swizzle.aakgr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((88)3)", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((79)-3)", "((-33)8)", "((-33)8)", "-3", "(-7-8)");
                var v = ov.swizzle.aakgg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-7-8)", v.z);
                Assert.AreEqual("((-33)8)", v.w);
                Assert.AreEqual("((-33)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-23)", "-5", "-5", "(-23)", "(18)");
                var v = ov.swizzle.aakgb;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(52)", "((0-2)5)", "((8-1)-2)", "6", "((-50)6)");
                var v = ov.swizzle.aakga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-50)6)", v.z);
                Assert.AreEqual("((0-2)5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-3", "((-5-9)9)", "(-98)", "0");
                var v = ov.swizzle.aakgk;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-4)-8)", "7", "", "(-87)", "");
                var v = ov.swizzle.aakb;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "8", "((0-7)-3)", "-6", "-6");
                var v = ov.swizzle.aakbr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((0-7)-3)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)9)", "-6", "0", "(-37)", "(-2-8)");
                var v = ov.swizzle.aakbg;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((65)-9)", "-7", "(-57)", null, null);
                var v = ov.swizzle.aakbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("(-57)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "(-4-6)", "((27)-5)", "0", "((27)-5)");
                var v = ov.swizzle.aakba;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((27)-5)", v.z);
                Assert.AreEqual("((27)-5)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-3-3)1)", "-2", "-2", "((-3-3)1)");
                var v = ov.swizzle.aakbk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-3)1)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-3-3)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-2)", "(-4-3)", "5", "-7", "((55)-2)");
                var v = ov.swizzle.aaka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((55)-2)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("((13)8)", null, "0", "(3-7)", "(-55)");
                var v = ov.swizzle.aakar;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("(3-7)", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual("((13)8)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(34)", "", "(-46)", "((1-5)7)");
                var v = ov.swizzle.aakag;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("(-46)", v.y);
                Assert.AreEqual("((1-5)7)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "(-8-9)", "(-83)", "5", "-3");
                var v = ov.swizzle.aakab;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(54)", "-7", "((61)-4)", "(-75)");
                var v = ov.swizzle.aakaa;
                Assert.AreEqual("((61)-4)", v.x);
                Assert.AreEqual("((61)-4)", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("((61)-4)", v.w);
                Assert.AreEqual("((61)-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(01)", "((-8-2)6)", "(01)", "-3");
                var v = ov.swizzle.aakak;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((17)-2)", "((17)-2)", "", "(-3-4)");
                var v = ov.swizzle.aakk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("(-3-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(68)", "-7", "(08)", "((-38)5)", "-7");
                var v = ov.swizzle.aakkr;
                Assert.AreEqual("((-38)5)", v.x);
                Assert.AreEqual("((-38)5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-5-4)-6)", "-7", "(-28)", "-7");
                var v = ov.swizzle.aakkg;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-5-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(-2-8)", null, "((-84)-4)", "(-2-8)");
                var v = ov.swizzle.aakkb;
                Assert.AreEqual("((-84)-4)", v.x);
                Assert.AreEqual("((-84)-4)", v.y);
                Assert.AreEqual("(-2-8)", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "((42)2)", "(-6-1)", "0", "");
                var v = ov.swizzle.aakka;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", "6", "6", "((-36)-7)", "((-62)6)");
                var v = ov.swizzle.aakkk;
                Assert.AreEqual("((-36)-7)", v.x);
                Assert.AreEqual("((-36)-7)", v.y);
                Assert.AreEqual("((-62)6)", v.z);
                Assert.AreEqual("((-62)6)", v.w);
                Assert.AreEqual("((-62)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(31)", "((-6-2)-7)", "-6", null, "(-7-2)");
                var v = ov.swizzle.ak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-2)", v.y);
            }
            {
                var ov = new gvec5<string>("(-4-4)", "(1-1)", null, "(1-1)", "((-2-9)-3)");
                var v = ov.swizzle.akr;
                Assert.AreEqual("(1-1)", v.x);
                Assert.AreEqual("((-2-9)-3)", v.y);
                Assert.AreEqual("(-4-4)", v.z);
            }
            {
                var ov = new gvec5<string>("", "(1-7)", "-2", "((-63)0)", null);
                var v = ov.swizzle.akrr;
                Assert.AreEqual("((-63)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((50)0)", "(-6-8)", "((50)0)", "((-65)0)", "");
                var v = ov.swizzle.akrrr;
                Assert.AreEqual("((-65)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((50)0)", v.z);
                Assert.AreEqual("((50)0)", v.w);
                Assert.AreEqual("((50)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-9)1)", "((-16)8)", "(-9-4)", "-7", null);
                var v = ov.swizzle.akrrg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-8-9)1)", v.z);
                Assert.AreEqual("((-8-9)1)", v.w);
                Assert.AreEqual("((-16)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(55)", "(55)", "5", "(55)", "(29)");
                var v = ov.swizzle.akrrb;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-88)-9)", null, "((-2-4)-6)", null, "(-89)");
                var v = ov.swizzle.akrra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("((-88)-9)", v.z);
                Assert.AreEqual("((-88)-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(95)", "(-58)", "5", "-8", "");
                var v = ov.swizzle.akrrk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(95)", v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((7-5)2)", "", null, "(43)", "-6");
                var v = ov.swizzle.akrg;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((7-5)2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((2-2)4)", "((-16)4)", "", "2", "(-31)");
                var v = ov.swizzle.akrgr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("((2-2)4)", v.z);
                Assert.AreEqual("((-16)4)", v.w);
                Assert.AreEqual("((2-2)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((14)2)", null, "(-19)", "-8", "((0-6)-4)");
                var v = ov.swizzle.akrgg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((0-6)-4)", v.y);
                Assert.AreEqual("((14)2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "(96)", "((-31)-8)", "((9-1)-9)");
                var v = ov.swizzle.akrgb;
                Assert.AreEqual("((-31)-8)", v.x);
                Assert.AreEqual("((9-1)-9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((0-4)-4)", "4", "((0-4)-4)", null);
                var v = ov.swizzle.akrga;
                Assert.AreEqual("((0-4)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((0-4)-4)", v.w);
                Assert.AreEqual("((0-4)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((-39)-9)", "", "(-19)", "");
                var v = ov.swizzle.akrgk;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-39)-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)8)", "((-8-6)-6)", "-3", "-3", null);
                var v = ov.swizzle.akrb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-7-3)8)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("", "-3", "((-38)-6)", "0", "-3");
                var v = ov.swizzle.akrbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-38)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((99)-4)", null, "1", "(-66)");
                var v = ov.swizzle.akrbg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-66)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((99)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "(19)", "", null);
                var v = ov.swizzle.akrbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(19)", v.w);
                Assert.AreEqual("(19)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "(1-7)", "(-7-5)", "((22)-4)");
                var v = ov.swizzle.akrba;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("((22)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-7)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-64)-3)", null, "(-77)", "4");
                var v = ov.swizzle.akrbk;
                Assert.AreEqual("(-77)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((34)-2)", "((-2-3)7)", "9", "(6-8)", "((-2-3)7)");
                var v = ov.swizzle.akra;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("((-2-3)7)", v.y);
                Assert.AreEqual("((34)-2)", v.z);
                Assert.AreEqual("(6-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(7-6)", "(-85)", "-7", null, "");
                var v = ov.swizzle.akrar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(7-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(95)", "-6", "", "((77)6)");
                var v = ov.swizzle.akrag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((77)6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(95)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-24)0)", "(-4-3)", "((-65)-1)", "((0-9)8)");
                var v = ov.swizzle.akrab;
                Assert.AreEqual("((-65)-1)", v.x);
                Assert.AreEqual("((0-9)8)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-65)-1)", v.w);
                Assert.AreEqual("(-4-3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((67)5)", "((67)5)", "((67)5)", "6");
                var v = ov.swizzle.akraa;
                Assert.AreEqual("((67)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((67)5)", v.w);
                Assert.AreEqual("((67)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((98)0)", "(-6-7)", "(-6-7)", "(-5-7)", "(-6-7)");
                var v = ov.swizzle.akrak;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("((98)0)", v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", "(11)", "", "((-4-6)1)", "(11)");
                var v = ov.swizzle.akrk;
                Assert.AreEqual("((-4-6)1)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(11)", v.w);
            }
            {
                var ov = new gvec5<string>("2", "((-4-9)8)", "0", "((-5-3)-9)", "((4-1)-3)");
                var v = ov.swizzle.akrkr;
                Assert.AreEqual("((-5-3)-9)", v.x);
                Assert.AreEqual("((4-1)-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((4-1)-3)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((51)4)", "(9-3)", "2", "((51)4)");
                var v = ov.swizzle.akrkg;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((51)4)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((51)4)", v.w);
                Assert.AreEqual("((51)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(64)", "((76)8)", "-8", "(07)");
                var v = ov.swizzle.akrkb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(07)", v.w);
                Assert.AreEqual("((76)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", null, "((-8-8)8)", "");
                var v = ov.swizzle.akrka;
                Assert.AreEqual("((-8-8)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-8-8)8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "", "((92)-9)", "-2", "3");
                var v = ov.swizzle.akrkk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-6-9)2)", null, "-4", "((51)1)");
                var v = ov.swizzle.akg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((51)1)", v.y);
                Assert.AreEqual("((-6-9)2)", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-4", "((-7-5)-5)", "", "((-7-5)-5)");
                var v = ov.swizzle.akgr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-5)-5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("1", "((-2-6)0)", "1", null, "1");
                var v = ov.swizzle.akgrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-2-6)0)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-2-4)-6)", "", "", "(42)");
                var v = ov.swizzle.akgrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("((-2-4)-6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-2-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((0-1)-7)", "", "((47)-7)", null);
                var v = ov.swizzle.akgrb;
                Assert.AreEqual("((47)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-1)-7)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(1-8)", null, "5", "", "((-83)1)");
                var v = ov.swizzle.akgra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-83)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((3-6)-8)", "((3-6)-8)", "", "(7-5)");
                var v = ov.swizzle.akgrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("((3-6)-8)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(7-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(76)", null, "(09)", "9");
                var v = ov.swizzle.akgg;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("(76)", v.w);
            }
            {
                var ov = new gvec5<string>("(-22)", "(-40)", "0", null, "-9");
                var v = ov.swizzle.akggr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(5-2)", "", "((96)-6)", "");
                var v = ov.swizzle.akggg;
                Assert.AreEqual("((96)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual("(5-2)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-7)-4)", "(7-7)", "", "(7-7)", "-9");
                var v = ov.swizzle.akggb;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-5)", "", "(31)", "", "(31)");
                var v = ov.swizzle.akgga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-53)", "(9-9)", "3", "(-53)");
                var v = ov.swizzle.akggk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("(-53)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec5<string>("(-52)", "-6", "4", "-6", null);
                var v = ov.swizzle.akgb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("", "((-32)2)", "(-6-9)", "-7", "-1");
                var v = ov.swizzle.akgbr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-32)2)", v.z);
                Assert.AreEqual("(-6-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "(6-6)", null, null, "7");
                var v = ov.swizzle.akgbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(8-6)", "1", "(-28)", "1");
                var v = ov.swizzle.akgbb;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "((-2-5)-9)", "((2-4)-3)", "0");
                var v = ov.swizzle.akgba;
                Assert.AreEqual("((2-4)-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-2-5)-9)", v.w);
                Assert.AreEqual("((2-4)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((94)-9)", "", "(-33)", "(-4-9)", "-1");
                var v = ov.swizzle.akgbk;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-33)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", "", "-6", "3", null);
                var v = ov.swizzle.akga;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-56)-6)", "4", "4", "((-12)-1)");
                var v = ov.swizzle.akgar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-12)-1)", v.y);
                Assert.AreEqual("((-56)-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(48)", "4", "4");
                var v = ov.swizzle.akgag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((7-1)-1)", "((7-1)-1)", "(-44)", "6");
                var v = ov.swizzle.akgab;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((7-1)-1)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("((7-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(71)", "((9-5)-9)", "(97)", "");
                var v = ov.swizzle.akgaa;
                Assert.AreEqual("(97)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(71)", v.z);
                Assert.AreEqual("(97)", v.w);
                Assert.AreEqual("(97)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", null, "(-7-5)", "((-10)-8)");
                var v = ov.swizzle.akgak;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("((-10)-8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("((-10)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-7)-9)", "((-8-9)5)", "((-48)6)", "-1", "(51)");
                var v = ov.swizzle.akgk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("((-8-9)5)", v.z);
                Assert.AreEqual("(51)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((79)3)", "", "", "(-7-5)");
                var v = ov.swizzle.akgkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("((79)3)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((70)3)", "-1", null, "((80)7)", "0");
                var v = ov.swizzle.akgkg;
                Assert.AreEqual("((80)7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-83)-6)", "(14)", "((-83)-6)", "", "-1");
                var v = ov.swizzle.akgkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-83)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-5)", "((1-6)5)", "6", "3", "(9-4)");
                var v = ov.swizzle.akgka;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("((1-6)5)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-9)-3)", "-3", "-3", "7", "7");
                var v = ov.swizzle.akgkk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("-6", null, "(80)", null, "6");
                var v = ov.swizzle.akb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(80)", v.z);
            }
            {
                var ov = new gvec5<string>("-7", "-7", null, "-7", null);
                var v = ov.swizzle.akbr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("(-51)", "(-51)", "((38)4)", "-5", "((-11)1)");
                var v = ov.swizzle.akbrr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-11)1)", v.y);
                Assert.AreEqual("((38)4)", v.z);
                Assert.AreEqual("(-51)", v.w);
                Assert.AreEqual("(-51)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((23)1)", "((45)-8)", "(-1-7)", "");
                var v = ov.swizzle.akbrg;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((45)-8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((23)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(14)", "-5", null, null);
                var v = ov.swizzle.akbrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(7-3)", "(7-3)", "((-3-5)-9)", "-3", "((0-9)6)");
                var v = ov.swizzle.akbra;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((0-9)6)", v.y);
                Assert.AreEqual("((-3-5)-9)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(9-3)", "3", "((-5-2)-8)", "((-20)-2)", "(-20)");
                var v = ov.swizzle.akbrk;
                Assert.AreEqual("((-20)-2)", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("((-5-2)-8)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("(-20)", v.v);
            }
            {
                var ov = new gvec5<string>("((74)-1)", "-7", "((74)-1)", null, "((2-9)6)");
                var v = ov.swizzle.akbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((2-9)6)", v.y);
                Assert.AreEqual("((74)-1)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec5<string>("", "((42)-5)", "", "(-78)", "((54)-5)");
                var v = ov.swizzle.akbgr;
                Assert.AreEqual("(-78)", v.x);
                Assert.AreEqual("((54)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((42)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "-3", "9", "9", "9");
                var v = ov.swizzle.akbgg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "9", "((-2-6)4)", "(-1-4)");
                var v = ov.swizzle.akbgb;
                Assert.AreEqual("((-2-6)4)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "((5-1)-4)", "(8-4)", "(8-4)");
                var v = ov.swizzle.akbga;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("((5-1)-4)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((2-6)9)", null, "(-1-6)", "(-1-6)");
                var v = ov.swizzle.akbgk;
                Assert.AreEqual("(-1-6)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((2-6)9)", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-53)", "(51)", "((-5-3)4)", "8", "((-5-3)4)");
                var v = ov.swizzle.akbb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-5-3)4)", v.y);
                Assert.AreEqual("((-5-3)4)", v.z);
                Assert.AreEqual("((-5-3)4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-27)4)", null, "(9-6)", "((-27)4)", "(2-5)");
                var v = ov.swizzle.akbbr;
                Assert.AreEqual("((-27)4)", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual("((-27)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)2)", "((-7-2)2)", "8", null, "");
                var v = ov.swizzle.akbbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-7-2)2)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(86)", "(6-4)", "(6-4)", "");
                var v = ov.swizzle.akbbb;
                Assert.AreEqual("(6-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual("(6-4)", v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-79)", "(-79)", "((58)-7)", "(-2-6)", "(-62)");
                var v = ov.swizzle.akbba;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("((58)-7)", v.z);
                Assert.AreEqual("((58)-7)", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((23)2)", "((23)2)", "((-91)-9)", "-4", "(85)");
                var v = ov.swizzle.akbbk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("((-91)-9)", v.z);
                Assert.AreEqual("((-91)-9)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-1)2)", "((25)-5)", "-9", "((2-2)2)", "((-8-1)2)");
                var v = ov.swizzle.akba;
                Assert.AreEqual("((2-2)2)", v.x);
                Assert.AreEqual("((-8-1)2)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((2-2)2)", v.w);
            }
            {
                var ov = new gvec5<string>("(4-7)", "((-15)-1)", "-4", "(4-7)", "((8-4)6)");
                var v = ov.swizzle.akbar;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual("((8-4)6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(4-7)", v.w);
                Assert.AreEqual("(4-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-7)", "(11)", "(11)", "(70)", "(70)");
                var v = ov.swizzle.akbag;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("(70)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "(59)", "-8", null);
                var v = ov.swizzle.akbab;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-9)-2)", "2", "2", "(-36)", "((-3-9)-7)");
                var v = ov.swizzle.akbaa;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("((-3-9)-7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((3-7)-2)", "(50)", "((3-7)-2)", "1");
                var v = ov.swizzle.akbak;
                Assert.AreEqual("((3-7)-2)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("((3-7)-2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "((70)-2)", "", "(-8-1)", "(8-5)");
                var v = ov.swizzle.akbk;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(8-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-4-6)2)", "0", "((-4-6)2)", "((12)0)", "((12)0)");
                var v = ov.swizzle.akbkr;
                Assert.AreEqual("((12)0)", v.x);
                Assert.AreEqual("((12)0)", v.y);
                Assert.AreEqual("((-4-6)2)", v.z);
                Assert.AreEqual("((12)0)", v.w);
                Assert.AreEqual("((-4-6)2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-1-2)", "(62)", "-9", "((49)-5)");
                var v = ov.swizzle.akbkg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((49)-5)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("((49)-5)", v.w);
                Assert.AreEqual("(-1-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "-9", "((-7-4)-2)", "((9-7)3)");
                var v = ov.swizzle.akbkb;
                Assert.AreEqual("((-7-4)-2)", v.x);
                Assert.AreEqual("((9-7)3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((9-7)3)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((78)4)", "(-52)", "", "-3", "((91)7)");
                var v = ov.swizzle.akbka;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((91)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((91)7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(9-2)", "(-3-7)", "((57)-3)", "(9-2)");
                var v = ov.swizzle.akbkk;
                Assert.AreEqual("((57)-3)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(-3-7)", v.z);
                Assert.AreEqual("(9-2)", v.w);
                Assert.AreEqual("(9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((41)3)", "0", "7", "7");
                var v = ov.swizzle.aka;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("", "(-71)", "((1-6)-4)", "0", "0");
                var v = ov.swizzle.akar;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-73)", "((-17)-5)", "-6", "-6", "((00)5)");
                var v = ov.swizzle.akarr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((00)5)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-2)9)", null, "(-91)", "(-91)", "(-3-4)");
                var v = ov.swizzle.akarg;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("((0-2)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "5", "2", "1", null);
                var v = ov.swizzle.akarb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "(-9-5)", "8", "((-4-5)9)");
                var v = ov.swizzle.akara;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-4-5)9)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "(-6-2)", "((50)-9)", "((56)-8)", "((50)-9)");
                var v = ov.swizzle.akark;
                Assert.AreEqual("((56)-8)", v.x);
                Assert.AreEqual("((50)-9)", v.y);
                Assert.AreEqual("((56)-8)", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("((50)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-3", "((47)-6)", "-3", "(53)");
                var v = ov.swizzle.akag;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("", "-1", "((-92)-6)", "-9", "0");
                var v = ov.swizzle.akagr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "(-9-6)", "9", "9");
                var v = ov.swizzle.akagg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-30)", "4", "((-17)-8)", "(63)", "(63)");
                var v = ov.swizzle.akagb;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(63)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-17)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(38)", "4", "4", "((-4-4)-6)", "-1");
                var v = ov.swizzle.akaga;
                Assert.AreEqual("((-4-4)-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-4-4)-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-4-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(0-2)", "((-1-8)8)", "7", "((99)-6)");
                var v = ov.swizzle.akagk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((99)-6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("((99)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "(5-4)", "", "((-6-2)-1)", "(5-4)");
                var v = ov.swizzle.akab;
                Assert.AreEqual("((-6-2)-1)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("((-6-2)-1)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("", "(-51)", "(-51)", "-7", "((7-7)4)");
                var v = ov.swizzle.akabr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((7-7)4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-51)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "((5-1)-3)", "((-66)-7)", "(4-6)");
                var v = ov.swizzle.akabg;
                Assert.AreEqual("((-66)-7)", v.x);
                Assert.AreEqual("(4-6)", v.y);
                Assert.AreEqual("((-66)-7)", v.z);
                Assert.AreEqual("((5-1)-3)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(41)", "((-49)-4)", "", "(14)", "-6");
                var v = ov.swizzle.akabb;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-7)0)", null, "", "((-6-3)-7)", "-7");
                var v = ov.swizzle.akaba;
                Assert.AreEqual("((-6-3)-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-6-3)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-6-3)-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-93)-3)", "(7-4)", "0", "-3");
                var v = ov.swizzle.akabk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(7-4)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(18)", "((-86)-9)", "-7", "(91)", "((-38)0)");
                var v = ov.swizzle.akaa;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("((-38)0)", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("(91)", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-7)-4)", "", "((72)-4)", "((-7-7)-4)", "((-7-1)7)");
                var v = ov.swizzle.akaar;
                Assert.AreEqual("((-7-7)-4)", v.x);
                Assert.AreEqual("((-7-1)7)", v.y);
                Assert.AreEqual("((-7-7)-4)", v.z);
                Assert.AreEqual("((-7-7)-4)", v.w);
                Assert.AreEqual("((-7-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-82)-8)", null, "", null, "((0-1)-7)");
                var v = ov.swizzle.akaag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-1)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-3-3)-9)", null, "((7-9)1)", null);
                var v = ov.swizzle.akaab;
                Assert.AreEqual("((7-9)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-9)1)", v.z);
                Assert.AreEqual("((7-9)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-3", "((-5-1)4)", "0", null, "");
                var v = ov.swizzle.akaaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-1-3)1)", "-8", "(-17)", "(2-6)");
                var v = ov.swizzle.akaak;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-7)", null, "((3-7)0)", "((-21)5)", "-3");
                var v = ov.swizzle.akak;
                Assert.AreEqual("((-21)5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-21)5)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "", "((-30)8)", "(-8-7)", "-5");
                var v = ov.swizzle.akakr;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "(-69)", "(-69)", "((-6-6)-5)");
                var v = ov.swizzle.akakg;
                Assert.AreEqual("(-69)", v.x);
                Assert.AreEqual("((-6-6)-5)", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("((-6-6)-5)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-5)-8)", "((8-7)9)", "-3", "((8-7)9)", "-6");
                var v = ov.swizzle.akakb;
                Assert.AreEqual("((8-7)9)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((8-7)9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("9", "9", "((-5-8)-3)", "-9", "5");
                var v = ov.swizzle.akaka;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "((-87)5)", "(88)", "((33)0)", "");
                var v = ov.swizzle.akakk;
                Assert.AreEqual("((33)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((33)0)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "((-7-9)-2)", "-4", null, "((-7-7)7)");
                var v = ov.swizzle.akk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-7)7)", v.y);
                Assert.AreEqual("((-7-7)7)", v.z);
            }
            {
                var ov = new gvec5<string>("7", "(13)", "(13)", "((-2-2)-4)", "-9");
                var v = ov.swizzle.akkr;
                Assert.AreEqual("((-2-2)-4)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "(-6-5)", "((37)-9)", "(-50)", "((37)-9)");
                var v = ov.swizzle.akkrr;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("((37)-9)", v.y);
                Assert.AreEqual("((37)-9)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(07)", "9", "-5", "((-9-8)-4)", "(-6-1)");
                var v = ov.swizzle.akkrg;
                Assert.AreEqual("((-9-8)-4)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("(07)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-1)-2)", "((-3-1)-2)", "(-9-2)", "9", "(26)");
                var v = ov.swizzle.akkrb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(26)", v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("((-3-1)-2)", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((91)1)", null, "((-5-7)-1)", "(-2-2)");
                var v = ov.swizzle.akkra;
                Assert.AreEqual("((-5-7)-1)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-5-7)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "6", null, "6");
                var v = ov.swizzle.akkrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-8)5)", "", "(-1-1)", "(-1-1)", "");
                var v = ov.swizzle.akkg;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((5-4)-6)", null, "-8", "(-2-6)", "");
                var v = ov.swizzle.akkgr;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-4)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(1-6)", "-4", null, "-4");
                var v = ov.swizzle.akkgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((5-4)-6)", null, "((-91)1)", null, "(87)");
                var v = ov.swizzle.akkgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-91)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-7)2)", "9", null, "9", "((02)-5)");
                var v = ov.swizzle.akkga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((02)-5)", v.y);
                Assert.AreEqual("((02)-5)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-68)", "8", null, "", "");
                var v = ov.swizzle.akkgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "((7-8)0)", "-5", "((6-8)0)");
                var v = ov.swizzle.akkb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((6-8)0)", v.y);
                Assert.AreEqual("((6-8)0)", v.z);
                Assert.AreEqual("((7-8)0)", v.w);
            }
            {
                var ov = new gvec5<string>("", "5", "((1-3)5)", "-5", "-5");
                var v = ov.swizzle.akkbr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((1-3)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-4)3)", null, "((-1-4)3)", "-9", "5");
                var v = ov.swizzle.akkbg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-1-4)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((49)-2)", "-6", "", "(70)", null);
                var v = ov.swizzle.akkbb;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((2-6)7)", "(5-6)", "-1", "((-73)0)");
                var v = ov.swizzle.akkba;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-73)0)", v.y);
                Assert.AreEqual("((-73)0)", v.z);
                Assert.AreEqual("(5-6)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(86)", "((76)-5)", "-9", "9", "-9");
                var v = ov.swizzle.akkbk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(5-2)", "", "", "-8", "6");
                var v = ov.swizzle.akka;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("(11)", "6", "6", null, "((-3-7)-5)");
                var v = ov.swizzle.akkar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-7)-5)", v.y);
                Assert.AreEqual("((-3-7)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec5<string>("((10)2)", "(4-9)", "0", "0", "6");
                var v = ov.swizzle.akkag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(4-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "6", "(-4-8)", null, "-6");
                var v = ov.swizzle.akkab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-35)-4)", "", "7", "");
                var v = ov.swizzle.akkaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-2-2)-1)", "(-96)", "((-10)1)", "(93)");
                var v = ov.swizzle.akkak;
                Assert.AreEqual("((-10)1)", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("((-10)1)", v.w);
                Assert.AreEqual("(93)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "7", "7", "(-91)", "((4-3)-3)");
                var v = ov.swizzle.akkk;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("((4-3)-3)", v.y);
                Assert.AreEqual("((4-3)-3)", v.z);
                Assert.AreEqual("((4-3)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("(-6-6)", null, "(-4-5)", "", "((-15)-5)");
                var v = ov.swizzle.akkkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-15)-5)", v.y);
                Assert.AreEqual("((-15)-5)", v.z);
                Assert.AreEqual("((-15)-5)", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-72)-5)", "1", "1", "(-1-8)", null);
                var v = ov.swizzle.akkkg;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(38)", null, "(-1-7)", "(-50)", "(38)");
                var v = ov.swizzle.akkkb;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(38)", v.y);
                Assert.AreEqual("(38)", v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-4)", "9", "((16)-3)", "((16)-3)", "(5-4)");
                var v = ov.swizzle.akkka;
                Assert.AreEqual("((16)-3)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual("((16)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-7)", null, "((8-5)-1)", "(-9-9)", "-7");
                var v = ov.swizzle.akkkk;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(71)", "(2-8)", "(2-8)", "6");
                var v = ov.swizzle.kr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("9", v.y);
            }
            {
                var ov = new gvec5<string>("-1", "0", null, null, "(12)");
                var v = ov.swizzle.krr;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>("8", "-3", "-3", "8", "((92)-5)");
                var v = ov.swizzle.krrr;
                Assert.AreEqual("((92)-5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((1-5)7)", "(1-4)", "1", "(8-1)", "(1-4)");
                var v = ov.swizzle.krrrr;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual("((1-5)7)", v.y);
                Assert.AreEqual("((1-5)7)", v.z);
                Assert.AreEqual("((1-5)7)", v.w);
                Assert.AreEqual("((1-5)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-2)", "((-60)8)", "-1", "(-6-4)", "-2");
                var v = ov.swizzle.krrrg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("((-60)8)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((3-5)2)", "5", "((3-5)2)", "(-8-5)");
                var v = ov.swizzle.krrrb;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-7-8)6)", "((-18)2)", "(91)", "((45)-2)");
                var v = ov.swizzle.krrra;
                Assert.AreEqual("((45)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec5<string>("((82)6)", "((82)6)", "((-60)-7)", "(-30)", "(-8-3)");
                var v = ov.swizzle.krrrk;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((82)6)", v.y);
                Assert.AreEqual("((82)6)", v.z);
                Assert.AreEqual("((82)6)", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "-9", "", "((-3-2)-7)", null);
                var v = ov.swizzle.krrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "((-7-1)-4)", "((9-9)2)", "-4");
                var v = ov.swizzle.krrgr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(5-5)", null, null, null);
                var v = ov.swizzle.krrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("(5-5)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-83)-4)", "7", "((3-6)6)", "(4-4)");
                var v = ov.swizzle.krrgb;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-83)-4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(7-2)", "-8", "6", "((-3-9)5)", "-8");
                var v = ov.swizzle.krrga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-3-9)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-6)", "9", "", "9", "((2-7)9)");
                var v = ov.swizzle.krrgk;
                Assert.AreEqual("((2-7)9)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((2-7)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-80)-9)", "(-4-3)", "-8", "-6", "-8");
                var v = ov.swizzle.krrb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-80)-9)", v.y);
                Assert.AreEqual("((-80)-9)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((-32)9)", "", null, "((-54)0)", "-2");
                var v = ov.swizzle.krrbr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-32)9)", v.y);
                Assert.AreEqual("((-32)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-32)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-15)9)", "(33)", "(33)", "((-1-9)1)", "((-15)9)");
                var v = ov.swizzle.krrbg;
                Assert.AreEqual("((-15)9)", v.x);
                Assert.AreEqual("((-15)9)", v.y);
                Assert.AreEqual("((-15)9)", v.z);
                Assert.AreEqual("(33)", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-4)", null, "((6-7)-7)", "-8", "-6");
                var v = ov.swizzle.krrbb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("((6-7)-7)", v.w);
                Assert.AreEqual("((6-7)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(-83)", "", "", "(-83)");
                var v = ov.swizzle.krrba;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((69)1)", "((08)-4)", "((-6-5)-1)", "(-3-8)", "7");
                var v = ov.swizzle.krrbk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((69)1)", v.y);
                Assert.AreEqual("((69)1)", v.z);
                Assert.AreEqual("((-6-5)-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-54)-4)", "((-54)-4)", "((-54)-4)", "((-54)-4)", "((-79)-4)");
                var v = ov.swizzle.krra;
                Assert.AreEqual("((-79)-4)", v.x);
                Assert.AreEqual("((-54)-4)", v.y);
                Assert.AreEqual("((-54)-4)", v.z);
                Assert.AreEqual("((-54)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(-45)", "((-5-9)-9)", "(5-5)", "((-90)4)");
                var v = ov.swizzle.krrar;
                Assert.AreEqual("((-90)4)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((38)-9)", "(35)", "1", "((22)-3)", null);
                var v = ov.swizzle.krrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((38)-9)", v.y);
                Assert.AreEqual("((38)-9)", v.z);
                Assert.AreEqual("((22)-3)", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-97)8)", "(-2-4)", "((-94)-3)", "(10)");
                var v = ov.swizzle.krrab;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-94)-3)", v.w);
                Assert.AreEqual("(-2-4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "((-9-7)-5)", "-2", "(-64)");
                var v = ov.swizzle.krraa;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)0)", "((6-9)0)", "((6-9)0)", "-2", "-2");
                var v = ov.swizzle.krrak;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((6-9)0)", v.y);
                Assert.AreEqual("((6-9)0)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "5", "(-1-7)", "((-79)-2)");
                var v = ov.swizzle.krrk;
                Assert.AreEqual("((-79)-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-79)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "", "", "((73)-6)", "(3-2)");
                var v = ov.swizzle.krrkr;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-65)-2)", "((-7-8)-7)", "0", "", "");
                var v = ov.swizzle.krrkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-65)-2)", v.y);
                Assert.AreEqual("((-65)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-7-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(47)", "2", null, "(0-6)", "-5");
                var v = ov.swizzle.krrkb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-7-4)4)", "((-1-7)4)", "", "(-3-3)");
                var v = ov.swizzle.krrka;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-3-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "-8", "((-72)4)", "", "-9");
                var v = ov.swizzle.krrkk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("((58)7)", "(37)", null, "3", "(37)");
                var v = ov.swizzle.krg;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("((58)7)", v.y);
                Assert.AreEqual("(37)", v.z);
            }
            {
                var ov = new gvec5<string>(null, null, "(4-7)", "(4-7)", "-4");
                var v = ov.swizzle.krgr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-9-3)3)", "3", "6", "3", "(-26)");
                var v = ov.swizzle.krgrr;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("((-9-3)3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-9-3)3)", v.w);
                Assert.AreEqual("((-9-3)3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-6", "(1-3)", "((-88)-8)", null);
                var v = ov.swizzle.krgrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(7-4)", "(7-4)", "-3", "((-22)2)");
                var v = ov.swizzle.krgrb;
                Assert.AreEqual("((-22)2)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(7-4)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "(-40)", "(-40)", "((-3-2)-3)");
                var v = ov.swizzle.krgra;
                Assert.AreEqual("((-3-2)-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-40)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-6", "-7", "1");
                var v = ov.swizzle.krgrk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(89)", "(88)", "-1", "(88)", "(88)");
                var v = ov.swizzle.krgg;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("(88)", v.z);
                Assert.AreEqual("(88)", v.w);
            }
            {
                var ov = new gvec5<string>("(58)", "(58)", "(58)", null, "-7");
                var v = ov.swizzle.krggr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "", "(-59)", "((-40)3)");
                var v = ov.swizzle.krggg;
                Assert.AreEqual("((-40)3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", null, "((-61)4)", "2", "(-59)");
                var v = ov.swizzle.krggb;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-61)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((28)4)", "", "0", "0", "1");
                var v = ov.swizzle.krgga;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((28)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "((-4-5)-8)", "((-4-5)-8)", "(-6-4)");
                var v = ov.swizzle.krggk;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((-66)3)", "9", "(00)", "(06)");
                var v = ov.swizzle.krgb;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-66)3)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec5<string>("(-73)", "(-5-2)", "((6-2)-8)", "-9", "(-5-2)");
                var v = ov.swizzle.krgbr;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("((6-2)-8)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec5<string>("((-16)3)", "((-16)3)", "((42)-9)", "3", "");
                var v = ov.swizzle.krgbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-16)3)", v.y);
                Assert.AreEqual("((-16)3)", v.z);
                Assert.AreEqual("((42)-9)", v.w);
                Assert.AreEqual("((-16)3)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "((95)-9)", "8", "");
                var v = ov.swizzle.krgbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((95)-9)", v.w);
                Assert.AreEqual("((95)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-8)", "(30)", "-4", "((-9-1)-9)", "-9");
                var v = ov.swizzle.krgba;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-2-8)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-9-1)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-93)9)", "((-4-2)-6)", null, "((-93)9)", "(51)");
                var v = ov.swizzle.krgbk;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("((-93)9)", v.y);
                Assert.AreEqual("((-4-2)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)1)", null, "-9", "((6-5)-8)", "-4");
                var v = ov.swizzle.krga;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((1-5)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((6-5)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("(67)", "((-43)6)", null, "((-4-9)2)", "(7-4)");
                var v = ov.swizzle.krgar;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("((-43)6)", v.z);
                Assert.AreEqual("((-4-9)2)", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "4", "((69)-4)", "0");
                var v = ov.swizzle.krgag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((69)-4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "((6-9)3)", "8", "((6-9)3)", "((-71)8)");
                var v = ov.swizzle.krgab;
                Assert.AreEqual("((-71)8)", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual("((6-9)3)", v.z);
                Assert.AreEqual("((6-9)3)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(21)", "-3", "-3", "((41)-2)", null);
                var v = ov.swizzle.krgaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((41)-2)", v.w);
                Assert.AreEqual("((41)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((-8-8)-4)", "(-93)", "", "(-93)");
                var v = ov.swizzle.krgak;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-8-8)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "6", "((73)-8)", "3", "-5");
                var v = ov.swizzle.krgk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("(4-8)", "(4-8)", "(02)", "((-36)-7)", null);
                var v = ov.swizzle.krgkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", null, "", "(-6-4)", "((91)-5)");
                var v = ov.swizzle.krgkg;
                Assert.AreEqual("((91)-5)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((91)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-55)", "((-53)9)", "-6", "6", "((-53)9)");
                var v = ov.swizzle.krgkb;
                Assert.AreEqual("((-53)9)", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("((-53)9)", v.z);
                Assert.AreEqual("((-53)9)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "(-8-7)", "(-8-7)", "(-8-7)", "(-6-3)");
                var v = ov.swizzle.krgka;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-60)", "(-4-5)", "(-60)", "(-60)", "((65)-7)");
                var v = ov.swizzle.krgkk;
                Assert.AreEqual("((65)-7)", v.x);
                Assert.AreEqual("(-60)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("((65)-7)", v.w);
                Assert.AreEqual("((65)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "9", "-3", "-3", "(-82)");
                var v = ov.swizzle.krb;
                Assert.AreEqual("(-82)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
            }
            {
                var ov = new gvec5<string>("((-4-6)-3)", "", "(-97)", "-8", null);
                var v = ov.swizzle.krbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-6)-3)", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual("((-4-6)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "((-64)8)", "((01)-4)", "((01)-4)", "");
                var v = ov.swizzle.krbrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((01)-4)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("5", null, "-8", "(-98)", "(-5-1)");
                var v = ov.swizzle.krbrg;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-5-2)-8)", "(13)", "(-67)", "-2", "(63)");
                var v = ov.swizzle.krbrb;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("((-5-2)-8)", v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("((-5-2)-8)", v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "3", "(-7-6)", "((-23)-8)", null);
                var v = ov.swizzle.krbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-6)", v.y);
                Assert.AreEqual("(-7-6)", v.z);
                Assert.AreEqual("(-7-6)", v.w);
                Assert.AreEqual("((-23)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((74)-9)", "(72)", "((-7-7)4)", "(86)");
                var v = ov.swizzle.krbrk;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-1)", "3", "(-9-1)", "(48)", null);
                var v = ov.swizzle.krbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("(-9-1)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("((-67)-9)", "((02)-4)", "", "3", "(-43)");
                var v = ov.swizzle.krbgr;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("((-67)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((02)-4)", v.w);
                Assert.AreEqual("((-67)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((73)-6)", "-5", null, "");
                var v = ov.swizzle.krbgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((73)-6)", v.w);
                Assert.AreEqual("((73)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(75)", "(75)", "((-9-3)6)", "(-2-6)");
                var v = ov.swizzle.krbgb;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual("(75)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-40)", "-5", "(-7-5)", "2");
                var v = ov.swizzle.krbga;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((2-3)-5)", "(-4-7)", "(-2-6)", "(52)");
                var v = ov.swizzle.krbgk;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("((2-3)-5)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>("", null, "", "0", "((4-8)-5)");
                var v = ov.swizzle.krbb;
                Assert.AreEqual("((4-8)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-88)-1)", "((3-8)2)", "-1", "((3-8)2)");
                var v = ov.swizzle.krbbr;
                Assert.AreEqual("((3-8)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((3-8)2)", v.z);
                Assert.AreEqual("((3-8)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(72)", "(-8-6)", "4", "(72)", "-2");
                var v = ov.swizzle.krbbg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(72)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "9", "(-8-1)", "((-43)-3)", "((-43)-3)");
                var v = ov.swizzle.krbbb;
                Assert.AreEqual("((-43)-3)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("(-8-1)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((59)-7)", "7", "(9-8)", "6");
                var v = ov.swizzle.krbba;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((1-5)-2)", "", "6", "-1");
                var v = ov.swizzle.krbbk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("((8-3)-5)", "(-9-3)", "((02)-5)", "(3-6)", "-5");
                var v = ov.swizzle.krba;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((8-3)-5)", v.y);
                Assert.AreEqual("((02)-5)", v.z);
                Assert.AreEqual("(3-6)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "(2-2)", "1", "((5-5)-2)", "(2-6)");
                var v = ov.swizzle.krbar;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((5-5)-2)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(81)", "((-8-4)5)", "(-97)", "((-8-4)5)");
                var v = ov.swizzle.krbag;
                Assert.AreEqual("((-8-4)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-8-4)5)", v.z);
                Assert.AreEqual("(-97)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-98)", "(-98)", "((4-9)-4)", "-7");
                var v = ov.swizzle.krbab;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("((4-9)-4)", v.w);
                Assert.AreEqual("(-98)", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-4)", "-3", "(-2-4)", null, "(-96)");
                var v = ov.swizzle.krbaa;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("(-2-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-24)", "(2-6)", "4", null, "((6-3)-9)");
                var v = ov.swizzle.krbak;
                Assert.AreEqual("((6-3)-9)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-3)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-5)", "6", null, "((-2-3)-5)", "(3-9)");
                var v = ov.swizzle.krbk;
                Assert.AreEqual("(3-9)", v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(3-9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((88)-9)", "((38)-1)", "(-6-2)", "(-52)");
                var v = ov.swizzle.krbkr;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((38)-1)", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "(-25)", "((5-2)-8)", "((9-5)5)");
                var v = ov.swizzle.krbkg;
                Assert.AreEqual("((9-5)5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("((9-5)5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("6", "-2", "(20)", null, "((5-4)9)");
                var v = ov.swizzle.krbkb;
                Assert.AreEqual("((5-4)9)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("((5-4)9)", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(99)", "-2", "((0-1)-5)", "((-83)-9)");
                var v = ov.swizzle.krbka;
                Assert.AreEqual("((-83)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-83)-9)", v.w);
                Assert.AreEqual("((0-1)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-2)", "2", "-2", "((-34)-9)", "-2");
                var v = ov.swizzle.krbkk;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((62)-6)", "((62)-6)", "((6-1)7)", "(8-8)");
                var v = ov.swizzle.kra;
                Assert.AreEqual("(8-8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((6-1)7)", v.z);
            }
            {
                var ov = new gvec5<string>("4", "", "(-4-1)", "(85)", "3");
                var v = ov.swizzle.krar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(85)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>("8", "((0-7)1)", "(-49)", "((-68)-5)", "((4-5)3)");
                var v = ov.swizzle.krarr;
                Assert.AreEqual("((4-5)3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-68)-5)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-7", "(-30)", "(-7-4)");
                var v = ov.swizzle.krarg;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-5-8)-2)", null, "((-97)6)");
                var v = ov.swizzle.krarb;
                Assert.AreEqual("((-97)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, null, "((99)5)", "2");
                var v = ov.swizzle.krara;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((99)5)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((99)5)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "", "((-35)-7)", "7", "((4-1)-7)");
                var v = ov.swizzle.krark;
                Assert.AreEqual("((4-1)-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((4-1)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-21)", "((1-3)-7)", "((-2-1)8)", "((-2-1)8)", "(-21)");
                var v = ov.swizzle.krag;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("(-21)", v.y);
                Assert.AreEqual("((-2-1)8)", v.z);
                Assert.AreEqual("((1-3)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("((-45)-1)", "((-56)5)", "(-58)", "((-3-2)4)", "(-58)");
                var v = ov.swizzle.kragr;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((-45)-1)", v.y);
                Assert.AreEqual("((-3-2)4)", v.z);
                Assert.AreEqual("((-56)5)", v.w);
                Assert.AreEqual("((-45)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((-86)3)", "((-86)3)", "(-88)", "");
                var v = ov.swizzle.kragg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-88)", v.z);
                Assert.AreEqual("((-86)3)", v.w);
                Assert.AreEqual("((-86)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "(-5-9)", "((97)1)", "(1-5)", "(1-5)");
                var v = ov.swizzle.kragb;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("(-5-9)", v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("(-5-9)", v.w);
                Assert.AreEqual("((97)1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-12)", "((0-5)-1)", "((61)-2)", "");
                var v = ov.swizzle.kraga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((61)-2)", v.z);
                Assert.AreEqual("(-12)", v.w);
                Assert.AreEqual("((61)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", null, "((18)9)", "(-49)");
                var v = ov.swizzle.kragk;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((18)9)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("(12)", "(12)", "((-79)8)", "(12)", "(-9-3)");
                var v = ov.swizzle.krab;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("((-79)8)", v.w);
            }
            {
                var ov = new gvec5<string>("(31)", "", "(92)", "((8-9)-3)", "-6");
                var v = ov.swizzle.krabr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("((8-9)-3)", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("(31)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-5)", "((-36)6)", "-1", "((-62)-5)", "((-48)5)");
                var v = ov.swizzle.krabg;
                Assert.AreEqual("((-48)5)", v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual("((-62)-5)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-36)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(66)", "((-1-6)5)", null, "3");
                var v = ov.swizzle.krabb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-6)5)", v.w);
                Assert.AreEqual("((-1-6)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-12)-1)", "", "((39)6)", "((28)5)");
                var v = ov.swizzle.kraba;
                Assert.AreEqual("((28)5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((39)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((39)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "-6", "((48)1)", "(-4-4)", "(-7-8)");
                var v = ov.swizzle.krabk;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("((48)1)", v.w);
                Assert.AreEqual("(-7-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-22)", "((25)-9)", "7", "-8", null);
                var v = ov.swizzle.kraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-22)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("((49)0)", null, "(2-8)", "(-46)", null);
                var v = ov.swizzle.kraar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((49)0)", v.y);
                Assert.AreEqual("(-46)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("((49)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-1)", "-5", "", "8", "(3-7)");
                var v = ov.swizzle.kraag;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(33)", "(-85)", "", "(-85)");
                var v = ov.swizzle.kraab;
                Assert.AreEqual("(-85)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(43)", "((-8-3)4)", "4", "(43)");
                var v = ov.swizzle.kraaa;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((6-2)-6)", "((6-2)-6)", "0", "(09)");
                var v = ov.swizzle.kraak;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-40)-1)", "((-5-8)-8)", "(-6-1)", "-5");
                var v = ov.swizzle.krak;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-6-1)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec5<string>("-3", null, null, "", "4");
                var v = ov.swizzle.krakr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "(59)", "((1-2)-8)", "8", "");
                var v = ov.swizzle.krakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec5<string>("((12)2)", "(4-6)", "((-82)-7)", "7", "");
                var v = ov.swizzle.krakb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((12)2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-82)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-73)", "(-3-6)", "1", "(-2-8)");
                var v = ov.swizzle.kraka;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((97)-8)", "(48)", "(-6-6)", "(7-4)");
                var v = ov.swizzle.krakk;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual("(7-4)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "(-7-1)", "(-7-1)", "0");
                var v = ov.swizzle.krk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("0", v.z);
            }
            {
                var ov = new gvec5<string>("((07)-3)", "", "(67)", "((-61)1)", "-3");
                var v = ov.swizzle.krkr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((07)-3)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((07)-3)", v.w);
            }
            {
                var ov = new gvec5<string>("1", "(-45)", "((45)-2)", "((-3-7)0)", "(7-2)");
                var v = ov.swizzle.krkrr;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-66)5)", "(-50)", null, "(-50)", "(3-4)");
                var v = ov.swizzle.krkrg;
                Assert.AreEqual("(3-4)", v.x);
                Assert.AreEqual("((-66)5)", v.y);
                Assert.AreEqual("(3-4)", v.z);
                Assert.AreEqual("((-66)5)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-1)", "(2-7)", "1", "((-62)9)", "0");
                var v = ov.swizzle.krkrb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-63)-2)", "-9", "-9", "(95)", "-9");
                var v = ov.swizzle.krkra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-63)-2)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-63)-2)", v.w);
                Assert.AreEqual("(95)", v.v);
            }
            {
                var ov = new gvec5<string>("((-79)-1)", "6", "6", null, "(-92)");
                var v = ov.swizzle.krkrk;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("((-79)-1)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("((-79)-1)", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(-5-3)", "2", "((00)5)", "(-5-3)");
                var v = ov.swizzle.krkg;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("(-5-3)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "", "", "(-8-8)", "(-6-3)");
                var v = ov.swizzle.krkgr;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(2-7)", "(2-7)", null, "-2");
                var v = ov.swizzle.krkgg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-96)6)", "(-15)", "(-15)", "((-1-6)7)", "((2-6)-4)");
                var v = ov.swizzle.krkgb;
                Assert.AreEqual("((2-6)-4)", v.x);
                Assert.AreEqual("((-96)6)", v.y);
                Assert.AreEqual("((2-6)-4)", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("(-93)", "(-3-7)", "((-9-4)6)", "-7", "(-93)");
                var v = ov.swizzle.krkga;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-3-7)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((54)-7)", "", "9", "((31)7)", "(17)");
                var v = ov.swizzle.krkgk;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("((54)-7)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("(63)", "", "(10)", "(10)", "1");
                var v = ov.swizzle.krkb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(10)", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(80)", "8", "((-18)-9)");
                var v = ov.swizzle.krkbr;
                Assert.AreEqual("((-18)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-18)-9)", v.z);
                Assert.AreEqual("(80)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-7", "((52)-1)", null, null);
                var v = ov.swizzle.krkbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((52)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("((-77)-8)", "", "(7-2)", "(96)", "(7-2)");
                var v = ov.swizzle.krkbb;
                Assert.AreEqual("(7-2)", v.x);
                Assert.AreEqual("((-77)-8)", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("(7-2)", v.w);
                Assert.AreEqual("(7-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(06)", "((-5-9)1)", "6", "-4");
                var v = ov.swizzle.krkba;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-5-9)1)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-83)", "((-2-9)-3)", "", "(-83)", "(-79)");
                var v = ov.swizzle.krkbk;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual("(-83)", v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-79)", v.v);
            }
            {
                var ov = new gvec5<string>("(87)", "-8", "((4-1)0)", "4", "((50)3)");
                var v = ov.swizzle.krka;
                Assert.AreEqual("((50)3)", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("((50)3)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec5<string>(null, null, "(5-5)", "1", "");
                var v = ov.swizzle.krkar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((6-2)-4)", "3", "(2-2)", "((6-2)-4)", "3");
                var v = ov.swizzle.krkag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((6-2)-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((6-2)-4)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(85)", "((91)0)", "-5", null, "(32)");
                var v = ov.swizzle.krkab;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("(32)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(6-4)", "((-17)-9)", "((-6-8)-6)", "8", "((-17)-9)");
                var v = ov.swizzle.krkaa;
                Assert.AreEqual("((-17)-9)", v.x);
                Assert.AreEqual("(6-4)", v.y);
                Assert.AreEqual("((-17)-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-47)-6)", "-9", "((-15)3)", "8", "((-47)-6)");
                var v = ov.swizzle.krkak;
                Assert.AreEqual("((-47)-6)", v.x);
                Assert.AreEqual("((-47)-6)", v.y);
                Assert.AreEqual("((-47)-6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-47)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-27)0)", "(07)", null, null, "6");
                var v = ov.swizzle.krkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-27)0)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>(null, "1", "((8-4)8)", "((-3-2)-4)", "7");
                var v = ov.swizzle.krkkr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "", "", "0", "(-3-1)");
                var v = ov.swizzle.krkkg;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "(9-7)", "8", "((-45)0)");
                var v = ov.swizzle.krkkb;
                Assert.AreEqual("((-45)0)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-45)0)", v.z);
                Assert.AreEqual("((-45)0)", v.w);
                Assert.AreEqual("(9-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(40)", "6", "-1", "0", "6");
                var v = ov.swizzle.krkka;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(40)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((5-6)2)", "((4-2)9)", "(14)", "(14)", "((-8-6)6)");
                var v = ov.swizzle.krkkk;
                Assert.AreEqual("((-8-6)6)", v.x);
                Assert.AreEqual("((5-6)2)", v.y);
                Assert.AreEqual("((-8-6)6)", v.z);
                Assert.AreEqual("((-8-6)6)", v.w);
                Assert.AreEqual("((-8-6)6)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-82)", "(-82)", "1", "((07)-3)");
                var v = ov.swizzle.kg;
                Assert.AreEqual("((07)-3)", v.x);
                Assert.AreEqual("(-82)", v.y);
            }
            {
                var ov = new gvec5<string>("(-83)", "((-2-1)9)", "((1-9)-9)", "((1-9)-9)", "((-9-3)-5)");
                var v = ov.swizzle.kgr;
                Assert.AreEqual("((-9-3)-5)", v.x);
                Assert.AreEqual("((-2-1)9)", v.y);
                Assert.AreEqual("(-83)", v.z);
            }
            {
                var ov = new gvec5<string>("(-28)", "((12)-6)", null, null, "(-28)");
                var v = ov.swizzle.kgrr;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("((12)-6)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(-28)", v.w);
            }
            {
                var ov = new gvec5<string>("(1-7)", "(5-5)", "(1-7)", "(5-5)", null);
                var v = ov.swizzle.kgrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("(1-7)", v.w);
                Assert.AreEqual("(1-7)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-5-2)", "(-5-2)", "0", "0");
                var v = ov.swizzle.kgrrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "((7-8)6)", "((7-8)6)", "((0-6)0)", "(-2-2)");
                var v = ov.swizzle.kgrrb;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("((7-8)6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((7-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-5)", "9", "((-6-2)9)", "((31)-6)", "2");
                var v = ov.swizzle.kgrra;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(5-5)", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("((31)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", null, "-1", "((-30)7)", null);
                var v = ov.swizzle.kgrrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "(2-6)", null, "(2-6)", "7");
                var v = ov.swizzle.kgrg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(2-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "(-71)", "(0-9)", "((3-1)7)", "((-26)8)");
                var v = ov.swizzle.kgrgr;
                Assert.AreEqual("((-26)8)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-65)", "-4", "(8-9)", null, "((39)2)");
                var v = ov.swizzle.kgrgg;
                Assert.AreEqual("((39)2)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(38)", "-2", "(38)", "((16)4)");
                var v = ov.swizzle.kgrgb;
                Assert.AreEqual("((16)4)", v.x);
                Assert.AreEqual("(38)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(38)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(1-1)", "(-82)", "0", "-4");
                var v = ov.swizzle.kgrga;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(1-1)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-5)9)", "-6", "(-5-7)", "(72)", "");
                var v = ov.swizzle.kgrgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-4-5)9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-2)", "(87)", "(63)", "4", "((7-5)-8)");
                var v = ov.swizzle.kgrb;
                Assert.AreEqual("((7-5)-8)", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("(63)", v.w);
            }
            {
                var ov = new gvec5<string>("((-48)6)", null, "-9", "((1-6)-2)", "(77)");
                var v = ov.swizzle.kgrbr;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-48)6)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-48)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-8)6)", null, "((-3-8)6)", "(23)", "((1-2)8)");
                var v = ov.swizzle.kgrbg;
                Assert.AreEqual("((1-2)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-8)6)", v.z);
                Assert.AreEqual("((-3-8)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-8", "(8-3)", "-8", null, null);
                var v = ov.swizzle.kgrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(8-2)", "1", "(-49)", "((-33)-8)");
                var v = ov.swizzle.kgrba;
                Assert.AreEqual("((-33)-8)", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec5<string>("((-28)-1)", "((-20)3)", "(-5-8)", "(84)", "((-20)3)");
                var v = ov.swizzle.kgrbk;
                Assert.AreEqual("((-20)3)", v.x);
                Assert.AreEqual("((-20)3)", v.y);
                Assert.AreEqual("((-28)-1)", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("((-20)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-97)", "5", "((6-6)-9)", null, "5");
                var v = ov.swizzle.kgra;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(7-7)", "((5-5)-4)", "0", "((-71)-3)", "-1");
                var v = ov.swizzle.kgrar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((5-5)-4)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("((-71)-3)", v.w);
                Assert.AreEqual("(7-7)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-8", "-8", "5", "((48)6)");
                var v = ov.swizzle.kgrag;
                Assert.AreEqual("((48)6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((1-5)1)", null, "((23)2)", "((89)0)", null);
                var v = ov.swizzle.kgrab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((1-5)1)", v.z);
                Assert.AreEqual("((89)0)", v.w);
                Assert.AreEqual("((23)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-1)-4)", "", "-5", "(-1-4)", "-5");
                var v = ov.swizzle.kgraa;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-1)-4)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "-2", "((3-7)3)", "-2", "");
                var v = ov.swizzle.kgrak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", "2", "-5", "-5", "((5-2)-2)");
                var v = ov.swizzle.kgrk;
                Assert.AreEqual("((5-2)-2)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("((5-2)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-9)", null, "4", "(-2-9)", "");
                var v = ov.swizzle.kgrkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "((-37)0)", "-5", "((49)-7)", "((-37)0)");
                var v = ov.swizzle.kgrkg;
                Assert.AreEqual("((-37)0)", v.x);
                Assert.AreEqual("((-37)0)", v.y);
                Assert.AreEqual("(4-2)", v.z);
                Assert.AreEqual("((-37)0)", v.w);
                Assert.AreEqual("((-37)0)", v.v);
            }
            {
                var ov = new gvec5<string>("(73)", "(4-7)", "2", "(4-7)", "-2");
                var v = ov.swizzle.kgrkb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(4-7)", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "((4-7)3)", "(53)", "-6");
                var v = ov.swizzle.kgrka;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec5<string>("((53)0)", "(-59)", "((53)0)", "((-4-7)-1)", "-8");
                var v = ov.swizzle.kgrkk;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("((53)0)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-51)8)", "-1", "((7-5)-4)", "(-3-5)", "5");
                var v = ov.swizzle.kgg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec5<string>(null, "", "(05)", "8", "((48)3)");
                var v = ov.swizzle.kggr;
                Assert.AreEqual("((48)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((88)5)", "((-73)1)", "(05)", "9", null);
                var v = ov.swizzle.kggrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-73)1)", v.y);
                Assert.AreEqual("((-73)1)", v.z);
                Assert.AreEqual("((88)5)", v.w);
                Assert.AreEqual("((88)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-7)-5)", "(8-2)", "(8-3)", "-8", "((4-7)-5)");
                var v = ov.swizzle.kggrg;
                Assert.AreEqual("((4-7)-5)", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("((4-7)-5)", v.w);
                Assert.AreEqual("(8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", null, "((-52)-2)", "(96)", "-1");
                var v = ov.swizzle.kggrb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-52)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(83)", "((00)-8)", "", "((59)1)");
                var v = ov.swizzle.kggra;
                Assert.AreEqual("((59)1)", v.x);
                Assert.AreEqual("(83)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "7", "-7", "((-3-1)2)", "((-9-7)5)");
                var v = ov.swizzle.kggrk;
                Assert.AreEqual("((-9-7)5)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((-9-7)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(9-8)", "-3", "((6-7)-3)", "-3", "(6-8)");
                var v = ov.swizzle.kggg;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("((-45)5)", "-3", null, "(-83)", "(9-5)");
                var v = ov.swizzle.kgggr;
                Assert.AreEqual("(9-5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-45)5)", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((-60)-4)", "((61)-8)", "9");
                var v = ov.swizzle.kgggg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", "(2-4)", "((-80)4)", "(-54)", "5");
                var v = ov.swizzle.kgggb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(2-4)", v.y);
                Assert.AreEqual("(2-4)", v.z);
                Assert.AreEqual("(2-4)", v.w);
                Assert.AreEqual("((-80)4)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-4", "", "((9-8)-4)", "-4");
                var v = ov.swizzle.kggga;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((9-8)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "2", "0", "((-3-8)-2)", "(-4-5)");
                var v = ov.swizzle.kgggk;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", null, "-9", "(-61)");
                var v = ov.swizzle.kggb;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(4-5)", "(4-5)", "6", "((7-3)7)", "0");
                var v = ov.swizzle.kggbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("(4-5)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(4-5)", v.v);
            }
            {
                var ov = new gvec5<string>("6", null, "((45)1)", "-8", "6");
                var v = ov.swizzle.kggbg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((45)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(0-2)", "(0-2)", "(0-2)", "((13)-5)");
                var v = ov.swizzle.kggbb;
                Assert.AreEqual("((13)-5)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-56)5)", "((-5-5)7)", "((2-1)-5)", "((2-1)-5)", "-4");
                var v = ov.swizzle.kggba;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-5-5)7)", v.y);
                Assert.AreEqual("((-5-5)7)", v.z);
                Assert.AreEqual("((2-1)-5)", v.w);
                Assert.AreEqual("((2-1)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "((61)-9)", "-8", "8", "-5");
                var v = ov.swizzle.kggbk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((61)-9)", v.y);
                Assert.AreEqual("((61)-9)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-9-8)-2)", "(-12)", "((-9-8)-2)", "3");
                var v = ov.swizzle.kgga;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-9-8)-2)", v.y);
                Assert.AreEqual("((-9-8)-2)", v.z);
                Assert.AreEqual("((-9-8)-2)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-8-3)", "((49)-6)", "(52)", "3");
                var v = ov.swizzle.kggar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-4", "((-44)0)", "((6-3)-6)", null);
                var v = ov.swizzle.kggag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((6-3)-6)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((42)-7)", "", "(-36)", "1", "((42)-7)");
                var v = ov.swizzle.kggab;
                Assert.AreEqual("((42)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-6)", "", "", "((-18)1)", "5");
                var v = ov.swizzle.kggaa;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-18)1)", v.w);
                Assert.AreEqual("((-18)1)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "", "((-5-8)6)", "-9");
                var v = ov.swizzle.kggak;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-5-8)6)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>(null, "0", "(-86)", "0", "((-2-4)0)");
                var v = ov.swizzle.kggk;
                Assert.AreEqual("((-2-4)0)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-2-4)0)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "4", null, "(-20)", "4");
                var v = ov.swizzle.kggkr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(-13)", null, "((6-5)-1)", "((6-5)-1)", null);
                var v = ov.swizzle.kggkg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "((-7-6)5)", "", "(0-2)", "2");
                var v = ov.swizzle.kggkb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-7-6)5)", v.y);
                Assert.AreEqual("((-7-6)5)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "((-8-1)-9)", "((-8-1)-9)", null, null);
                var v = ov.swizzle.kggka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-8-1)-9)", v.y);
                Assert.AreEqual("((-8-1)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-1-7)", "((-19)-4)", "((59)8)", "-5", "-5");
                var v = ov.swizzle.kggkk;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-19)-4)", v.y);
                Assert.AreEqual("((-19)-4)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("(-95)", "((-91)6)", "((69)6)", null, "(-9-7)");
                var v = ov.swizzle.kgb;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("((-91)6)", v.y);
                Assert.AreEqual("((69)6)", v.z);
            }
            {
                var ov = new gvec5<string>("(6-2)", "((-88)-6)", "6", "((-88)-6)", "((-88)-6)");
                var v = ov.swizzle.kgbr;
                Assert.AreEqual("((-88)-6)", v.x);
                Assert.AreEqual("((-88)-6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(6-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-60)", "1", "((-43)2)", "1", "");
                var v = ov.swizzle.kgbrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-43)2)", v.z);
                Assert.AreEqual("(-60)", v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((42)3)", "", "((-84)9)", "-2");
                var v = ov.swizzle.kgbrg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((42)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((42)3)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "2", "(-93)", "(24)", "-5");
                var v = ov.swizzle.kgbrb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("((87)-4)", "(-43)", "5", null, "7");
                var v = ov.swizzle.kgbra;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((87)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(89)", null, "(89)", "(89)");
                var v = ov.swizzle.kgbrk;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec5<string>("(45)", "((58)-7)", "(-97)", null, "");
                var v = ov.swizzle.kgbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((58)-7)", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual("((58)-7)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((0-2)3)", "7", "-9", "(44)");
                var v = ov.swizzle.kgbgr;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("((0-2)3)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((0-2)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-2-7)", "8", "8", "(-5-5)", "8");
                var v = ov.swizzle.kgbgg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-8)-5)", "3", "", "(14)", "((-4-8)-5)");
                var v = ov.swizzle.kgbgb;
                Assert.AreEqual("((-4-8)-5)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", null, "", "(01)", "(-98)");
                var v = ov.swizzle.kgbga;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(01)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-2)5)", "(3-5)", "(-10)", "((-7-2)5)", "");
                var v = ov.swizzle.kgbgk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((8-1)1)", "-2", "", "(39)", "((8-1)1)");
                var v = ov.swizzle.kgbb;
                Assert.AreEqual("((8-1)1)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "", "-2", null, null);
                var v = ov.swizzle.kgbbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(-5-3)", null, "", "(-5-3)");
                var v = ov.swizzle.kgbbg;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "-3", "(99)", "", "(4-7)");
                var v = ov.swizzle.kgbbb;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(99)", v.z);
                Assert.AreEqual("(99)", v.w);
                Assert.AreEqual("(99)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(-50)", "(-10)", "((58)-9)", null);
                var v = ov.swizzle.kgbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("((58)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-42)-7)", "5", "", "((-16)-8)", "((-42)-7)");
                var v = ov.swizzle.kgbbk;
                Assert.AreEqual("((-42)-7)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-42)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((4-5)5)", "((4-5)5)", "7", "2");
                var v = ov.swizzle.kgba;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((4-5)5)", v.y);
                Assert.AreEqual("((4-5)5)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("((8-1)-1)", "", "(-8-4)", "(9-9)", "((-81)-5)");
                var v = ov.swizzle.kgbar;
                Assert.AreEqual("((-81)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("(9-9)", v.w);
                Assert.AreEqual("((8-1)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-6)-6)", "3", "-3", "4", "(-99)");
                var v = ov.swizzle.kgbag;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-50)6)", "(-37)", "((6-8)-7)", "", "-6");
                var v = ov.swizzle.kgbab;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("((6-8)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((6-8)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-3)-5)", "-1", "(-52)", "6", null);
                var v = ov.swizzle.kgbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("(-34)", "-9", "-9", "(-34)", "((1-9)8)");
                var v = ov.swizzle.kgbak;
                Assert.AreEqual("((1-9)8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-34)", v.w);
                Assert.AreEqual("((1-9)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", "-5", null, "1", "((-3-7)-1)");
                var v = ov.swizzle.kgbk;
                Assert.AreEqual("((-3-7)-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-3-7)-1)", v.w);
            }
            {
                var ov = new gvec5<string>("6", "(0-6)", "(0-6)", "", "6");
                var v = ov.swizzle.kgbkr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "((83)7)", "(-8-6)", "((83)7)");
                var v = ov.swizzle.kgbkg;
                Assert.AreEqual("((83)7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((83)7)", v.z);
                Assert.AreEqual("((83)7)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(52)", "((-52)1)", null, null);
                var v = ov.swizzle.kgbkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("((-52)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-52)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-6)", "((48)2)", "-1", "((48)2)", null);
                var v = ov.swizzle.kgbka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((48)2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((48)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-38)-9)", "-9", "((-7-7)-9)", "(-72)", "");
                var v = ov.swizzle.kgbkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-7-7)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-6)", "(95)", "(-4-6)", "(95)", "(7-6)");
                var v = ov.swizzle.kga;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("(95)", v.z);
            }
            {
                var ov = new gvec5<string>("((92)-4)", null, "", "-9", "");
                var v = ov.swizzle.kgar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((92)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(65)", "((-48)2)", null, "2", "(65)");
                var v = ov.swizzle.kgarr;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("((-48)2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(65)", v.w);
                Assert.AreEqual("(65)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", null, "(-33)", "6");
                var v = ov.swizzle.kgarg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", null, "(-7-7)", "");
                var v = ov.swizzle.kgarb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(44)", "9", "((9-7)0)", "", "((9-7)0)");
                var v = ov.swizzle.kgara;
                Assert.AreEqual("((9-7)0)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-50)3)", "(1-3)", "-8", "-8");
                var v = ov.swizzle.kgark;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-50)3)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((57)-1)", "", "", "((-50)-4)", "5");
                var v = ov.swizzle.kgag;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-50)-4)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-5)", "(-9-5)", "", "(-9-5)", "(-9-5)");
                var v = ov.swizzle.kgagr;
                Assert.AreEqual("(-9-5)", v.x);
                Assert.AreEqual("(-9-5)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("(-9-5)", v.w);
                Assert.AreEqual("(-9-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", null, null, "((8-2)-6)");
                var v = ov.swizzle.kgagg;
                Assert.AreEqual("((8-2)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(81)", "", "", "((0-8)-9)", "((0-8)-9)");
                var v = ov.swizzle.kgagb;
                Assert.AreEqual("((0-8)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((0-8)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("", "((49)0)", "(83)", "(6-3)", "");
                var v = ov.swizzle.kgaga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((49)0)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("((49)0)", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(6-8)", "", "((-8-5)-5)", "7");
                var v = ov.swizzle.kgagk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(6-8)", v.y);
                Assert.AreEqual("((-8-5)-5)", v.z);
                Assert.AreEqual("(6-8)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(-1-4)", "-7", null, "((0-9)-8)", "((13)8)");
                var v = ov.swizzle.kgab;
                Assert.AreEqual("((13)8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((0-9)-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-90)", "((-1-7)0)", "((-1-7)0)", "", "6");
                var v = ov.swizzle.kgabr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((-1-7)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-1-7)0)", v.w);
                Assert.AreEqual("(-90)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-2-3)", "-6", "((-6-2)-5)");
                var v = ov.swizzle.kgabg;
                Assert.AreEqual("((-6-2)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", null, "8", "(5-9)");
                var v = ov.swizzle.kgabb;
                Assert.AreEqual("(5-9)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((02)2)", "(-6-3)", null, "-9", "-3");
                var v = ov.swizzle.kgaba;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(-85)", null, null, null, "((-62)-5)");
                var v = ov.swizzle.kgabk;
                Assert.AreEqual("((-62)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-62)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-9)", "(-9-9)", null, null);
                var v = ov.swizzle.kgaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-2", "(48)", null, "(87)", null);
                var v = ov.swizzle.kgaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-1-9)7)", "(2-2)", "", "");
                var v = ov.swizzle.kgaag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-1-9)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-1-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>("6", null, "(8-9)", null, null);
                var v = ov.swizzle.kgaab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(8-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-2-9)-5)", "((44)4)", "(4-4)");
                var v = ov.swizzle.kgaaa;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((44)4)", v.z);
                Assert.AreEqual("((44)4)", v.w);
                Assert.AreEqual("((44)4)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(5-2)", "((-64)7)", "(-2-1)", "(5-2)");
                var v = ov.swizzle.kgaak;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("(5-2)", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((-9-6)-5)", "((8-9)2)", "-2", "");
                var v = ov.swizzle.kgak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-6)-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("2", "(25)", "8", "((-57)1)", "(-65)");
                var v = ov.swizzle.kgakr;
                Assert.AreEqual("(-65)", v.x);
                Assert.AreEqual("(25)", v.y);
                Assert.AreEqual("((-57)1)", v.z);
                Assert.AreEqual("(-65)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-89)-4)", "((-37)2)", null, "(-15)", "");
                var v = ov.swizzle.kgakg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-37)2)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-37)2)", v.v);
            }
            {
                var ov = new gvec5<string>("(8-8)", "6", "0", "0", "((-5-7)4)");
                var v = ov.swizzle.kgakb;
                Assert.AreEqual("((-5-7)4)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-5-7)4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("5", "((4-1)-5)", "(41)", "(0-6)", "8");
                var v = ov.swizzle.kgaka;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((4-1)-5)", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(0-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((79)-4)", "8", "-9", "((79)-4)", "((-5-3)5)");
                var v = ov.swizzle.kgakk;
                Assert.AreEqual("((-5-3)5)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((79)-4)", v.z);
                Assert.AreEqual("((-5-3)5)", v.w);
                Assert.AreEqual("((-5-3)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((56)6)", "((56)6)", "7", "((-7-9)2)", "7");
                var v = ov.swizzle.kgk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((56)6)", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>("((-89)-6)", "((91)-1)", "((-89)-6)", "3", "((91)-1)");
                var v = ov.swizzle.kgkr;
                Assert.AreEqual("((91)-1)", v.x);
                Assert.AreEqual("((91)-1)", v.y);
                Assert.AreEqual("((91)-1)", v.z);
                Assert.AreEqual("((-89)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "((-8-1)-4)", "(78)", "(4-1)", "(4-1)");
                var v = ov.swizzle.kgkrr;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("((-8-1)-4)", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "-3", "(-31)", "(-8-8)", "((04)3)");
                var v = ov.swizzle.kgkrg;
                Assert.AreEqual("((04)3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((04)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-2-8)5)", "(2-8)", "(47)", "");
                var v = ov.swizzle.kgkrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-8)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(0-6)", null, "-4", "-4");
                var v = ov.swizzle.kgkra;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((6-9)8)", "6", "((6-9)8)", "((-32)-9)", "(96)");
                var v = ov.swizzle.kgkrk;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("((6-9)8)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("((37)3)", "-3", "((-5-4)-8)", "((-45)4)", "(-33)");
                var v = ov.swizzle.kgkg;
                Assert.AreEqual("(-33)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("((6-5)-8)", "4", "((6-5)-8)", "(-1-9)", null);
                var v = ov.swizzle.kgkgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((6-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-1)", "-8", "(-42)", "((-8-4)-8)", "((-64)2)");
                var v = ov.swizzle.kgkgg;
                Assert.AreEqual("((-64)2)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-64)2)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-7)", "(-8-7)", null, "(-8-7)", "");
                var v = ov.swizzle.kgkgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((55)7)", "(2-5)", "", "((4-8)3)", "((4-8)3)");
                var v = ov.swizzle.kgkga;
                Assert.AreEqual("((4-8)3)", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("((4-8)3)", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("((4-8)3)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-7-3)", "(-9-2)", "(17)", "(-9-2)");
                var v = ov.swizzle.kgkgk;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-7-3)", v.y);
                Assert.AreEqual("(-9-2)", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("(-9-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "0", "((06)3)", "-9", "7");
                var v = ov.swizzle.kgkb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((06)3)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(6-8)", "((-10)8)", "-4", "");
                var v = ov.swizzle.kgkbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(6-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-10)8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-3-4)-9)", "-4", "((-95)-4)", null);
                var v = ov.swizzle.kgkbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-4)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-3-4)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)2)", "(-7-6)", "(-7-6)", null, "((-94)2)");
                var v = ov.swizzle.kgkbb;
                Assert.AreEqual("((-94)2)", v.x);
                Assert.AreEqual("(-7-6)", v.y);
                Assert.AreEqual("((-94)2)", v.z);
                Assert.AreEqual("(-7-6)", v.w);
                Assert.AreEqual("(-7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(79)", "", "(17)", "4");
                var v = ov.swizzle.kgkba;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "-5", "(-2-5)", "-4");
                var v = ov.swizzle.kgkbk;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "(23)", null, "((-51)7)");
                var v = ov.swizzle.kgka;
                Assert.AreEqual("((-51)7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-51)7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-31)5)", "(-5-8)", "(82)", "9", "((-31)5)");
                var v = ov.swizzle.kgkar;
                Assert.AreEqual("((-31)5)", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("((-31)5)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-31)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-6)-6)", "(-9-5)", "", "((-43)3)", null);
                var v = ov.swizzle.kgkag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-43)3)", v.w);
                Assert.AreEqual("(-9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((1-9)1)", "(-7-6)", "2", "2");
                var v = ov.swizzle.kgkab;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((1-9)1)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-44)", "(75)", "((-8-2)-5)", "(-44)", "(75)");
                var v = ov.swizzle.kgkaa;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((46)6)", "((-26)7)", "3", "((9-4)-5)");
                var v = ov.swizzle.kgkak;
                Assert.AreEqual("((9-4)-5)", v.x);
                Assert.AreEqual("((46)6)", v.y);
                Assert.AreEqual("((9-4)-5)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((9-4)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((2-6)-3)", "0", "0", null);
                var v = ov.swizzle.kgkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((2-6)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(-38)", "1", "1", "((0-2)2)", "");
                var v = ov.swizzle.kgkkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-38)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(3-1)", "(82)", "-5", "-5");
                var v = ov.swizzle.kgkkg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(5-6)", "(5-6)", "((-69)-8)", "", "-6");
                var v = ov.swizzle.kgkkb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-69)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(6-2)", "(6-2)", "-5", "((62)4)", "");
                var v = ov.swizzle.kgkka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((62)4)", v.v);
            }
            {
                var ov = new gvec5<string>("((33)-9)", null, "((84)5)", "((84)5)", "-6");
                var v = ov.swizzle.kgkkk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", null, null, "(45)", "(3-3)");
                var v = ov.swizzle.kb;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec5<string>("((-82)-8)", "(-22)", null, "(-22)", "-5");
                var v = ov.swizzle.kbr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-82)-8)", v.z);
            }
            {
                var ov = new gvec5<string>("(5-4)", "-2", null, "(-36)", "((2-6)-7)");
                var v = ov.swizzle.kbrr;
                Assert.AreEqual("((2-6)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(5-4)", v.w);
            }
            {
                var ov = new gvec5<string>("((-79)1)", "(94)", "8", "1", "3");
                var v = ov.swizzle.kbrrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-79)1)", v.z);
                Assert.AreEqual("((-79)1)", v.w);
                Assert.AreEqual("((-79)1)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "8", "((-62)-2)", "((-62)-2)", "(-43)");
                var v = ov.swizzle.kbrrg;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("((-62)-2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(34)", "-7", "", "(87)");
                var v = ov.swizzle.kbrrb;
                Assert.AreEqual("(87)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-9-5)", "(52)", "(-9-5)", "((7-1)4)");
                var v = ov.swizzle.kbrra;
                Assert.AreEqual("((7-1)4)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((-64)-3)", "(04)", "", "3", "((-5-1)-4)");
                var v = ov.swizzle.kbrrk;
                Assert.AreEqual("((-5-1)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-64)-3)", v.z);
                Assert.AreEqual("((-64)-3)", v.w);
                Assert.AreEqual("((-5-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(64)", "(50)", "0", "(-2-4)");
                var v = ov.swizzle.kbrg;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(64)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(5-5)", "(5-5)", "((0-1)-9)", "(5-5)");
                var v = ov.swizzle.kbrgr;
                Assert.AreEqual("(5-5)", v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-2)", null, "4", "((8-3)-5)", "(69)");
                var v = ov.swizzle.kbrgg;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((5-5)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("2", "((6-7)5)", "", "((6-7)5)", "((04)-7)");
                var v = ov.swizzle.kbrgb;
                Assert.AreEqual("((04)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((6-7)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(6-4)", null, "(6-4)", "3", "((6-1)1)");
                var v = ov.swizzle.kbrga;
                Assert.AreEqual("((6-1)1)", v.x);
                Assert.AreEqual("(6-4)", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)-3)", "-3", "((9-1)-3)", "((-2-1)-1)", null);
                var v = ov.swizzle.kbrgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((9-1)-3)", v.y);
                Assert.AreEqual("((9-1)-3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "9", "((8-3)0)", "((73)-3)", "-5");
                var v = ov.swizzle.kbrb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((8-3)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((8-3)0)", v.w);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "-8", null, "((88)4)", "(-35)");
                var v = ov.swizzle.kbrbr;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((65)-8)", "-9", "(22)", "((65)-8)", "(22)");
                var v = ov.swizzle.kbrbg;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(22)", v.y);
                Assert.AreEqual("((65)-8)", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("(36)", "((3-1)7)", "((3-1)7)", "(-83)", "((3-1)7)");
                var v = ov.swizzle.kbrbb;
                Assert.AreEqual("((3-1)7)", v.x);
                Assert.AreEqual("((3-1)7)", v.y);
                Assert.AreEqual("(36)", v.z);
                Assert.AreEqual("((3-1)7)", v.w);
                Assert.AreEqual("((3-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-62)7)", "", "6", "7", "");
                var v = ov.swizzle.kbrba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-62)7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((5-1)-6)", "2", "(4-5)", "-3", null);
                var v = ov.swizzle.kbrbk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("((5-1)-6)", v.z);
                Assert.AreEqual("(4-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-26)-9)", "((-26)-9)", "((3-5)-3)", "0", "(9-9)");
                var v = ov.swizzle.kbra;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("((3-5)-3)", v.y);
                Assert.AreEqual("((-26)-9)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("((-33)1)", "", "2", null, "(-2-6)");
                var v = ov.swizzle.kbrar;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-33)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-33)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "((-34)-1)", "2", "((-34)-1)", "((83)3)");
                var v = ov.swizzle.kbrag;
                Assert.AreEqual("((83)3)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("((-34)-1)", v.w);
                Assert.AreEqual("((-34)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(27)", null, "(-1-8)", "4", "4");
                var v = ov.swizzle.kbrab;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((-56)2)", "(-6-1)", "(-6-1)", "-2", "(54)");
                var v = ov.swizzle.kbraa;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("((-56)2)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "((-53)-5)", "-1", "((-3-8)-2)");
                var v = ov.swizzle.kbrak;
                Assert.AreEqual("((-3-8)-2)", v.x);
                Assert.AreEqual("((-53)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-3-8)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-48)4)", "3", "", "3", null);
                var v = ov.swizzle.kbrk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-48)4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>(null, "((09)-1)", "", "(0-8)", "(0-8)");
                var v = ov.swizzle.kbrkr;
                Assert.AreEqual("(0-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", null, "((-53)-4)", "(14)", "((27)2)");
                var v = ov.swizzle.kbrkg;
                Assert.AreEqual("((27)2)", v.x);
                Assert.AreEqual("((-53)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((27)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(32)", "-6", "-6", "4");
                var v = ov.swizzle.kbrkb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-3)6)", "8", "(9-8)", "((-8-6)1)", "8");
                var v = ov.swizzle.kbrka;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("((-7-3)6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-8-6)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-26)-3)", "(4-7)", "((70)-9)", "((-6-2)-4)", "3");
                var v = ov.swizzle.kbrkk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((70)-9)", v.y);
                Assert.AreEqual("((-26)-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(05)", null, "-5", "(05)", "((-67)1)");
                var v = ov.swizzle.kbg;
                Assert.AreEqual("((-67)1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("(-64)", null, "(4-4)", "(18)", "8");
                var v = ov.swizzle.kbgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-64)", v.w);
            }
            {
                var ov = new gvec5<string>("((6-5)6)", "", "6", "(-39)", "6");
                var v = ov.swizzle.kbgrr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-5)6)", v.w);
                Assert.AreEqual("((6-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((0-5)-8)", "-2", "((2-8)-7)", "(21)");
                var v = ov.swizzle.kbgrg;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((0-5)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((0-5)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-3)", "((-4-6)-4)", "8", null, "(-56)");
                var v = ov.swizzle.kbgrb;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-4-6)-4)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((1-4)-8)", "5", "(74)", "((1-4)-8)", null);
                var v = ov.swizzle.kbgra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((1-4)-8)", v.w);
                Assert.AreEqual("((1-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "((-3-9)6)", "((-3-9)6)", "((-68)8)", "-3");
                var v = ov.swizzle.kbgrk;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-3-9)6)", v.y);
                Assert.AreEqual("((-3-9)6)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(1-8)", "-7", "((7-2)-1)", "(1-8)");
                var v = ov.swizzle.kbgg;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(1-8)", v.z);
                Assert.AreEqual("(1-8)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "1", null, "((-6-4)-3)", "((9-5)-1)");
                var v = ov.swizzle.kbggr;
                Assert.AreEqual("((9-5)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-6)", "7", "((-94)6)", "(-8-6)", "7");
                var v = ov.swizzle.kbggg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-94)6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("", "((1-4)-8)", "((1-4)-8)", "2", "");
                var v = ov.swizzle.kbggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-4)-8)", v.y);
                Assert.AreEqual("((1-4)-8)", v.z);
                Assert.AreEqual("((1-4)-8)", v.w);
                Assert.AreEqual("((1-4)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "-2", "((3-3)-2)", "(-54)");
                var v = ov.swizzle.kbgga;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((3-3)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-9)", "5", "(-3-9)", "((-83)-9)", "5");
                var v = ov.swizzle.kbggk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "-8", "((-49)2)", "(31)");
                var v = ov.swizzle.kbgb;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec5<string>("0", "-8", "((-69)0)", "((-69)0)", "0");
                var v = ov.swizzle.kbgbr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((-69)0)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-69)0)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(9-4)", "(-5-6)", "", "(9-4)", "((7-9)9)");
                var v = ov.swizzle.kbgbg;
                Assert.AreEqual("((7-9)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(-36)", "((8-9)7)", null, "9");
                var v = ov.swizzle.kbgbb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((8-9)7)", v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual("((8-9)7)", v.w);
                Assert.AreEqual("((8-9)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "7", "((68)3)", "((68)3)", null);
                var v = ov.swizzle.kbgba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((68)3)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((68)3)", v.w);
                Assert.AreEqual("((68)3)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "(-9-9)", "((-1-2)9)", "2");
                var v = ov.swizzle.kbgbk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-9-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("(4-2)", "-5", "", "(-24)", "((-6-1)-6)");
                var v = ov.swizzle.kbga;
                Assert.AreEqual("((-6-1)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-24)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((44)-1)", "((35)4)", "", "(0-6)");
                var v = ov.swizzle.kbgar;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual("((35)4)", v.y);
                Assert.AreEqual("((44)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("0", "1", "(-12)", "1", "(6-3)");
                var v = ov.swizzle.kbgag;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("(-12)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((58)-4)", "((0-5)-5)", "((-7-4)9)", null, "(85)");
                var v = ov.swizzle.kbgab;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("((-7-4)9)", v.y);
                Assert.AreEqual("((0-5)-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-7-4)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((42)-4)", "((4-5)-1)", "(79)", "8", "6");
                var v = ov.swizzle.kbgaa;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("((4-5)-1)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-8-1)", "((-8-5)6)", "(45)", "(45)");
                var v = ov.swizzle.kbgak;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("((-8-5)6)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "(-15)", "", "(-15)");
                var v = ov.swizzle.kbgk;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-15)", v.w);
            }
            {
                var ov = new gvec5<string>("(61)", "((-58)0)", "((-2-3)-3)", "(61)", null);
                var v = ov.swizzle.kbgkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-2-3)-3)", v.y);
                Assert.AreEqual("((-58)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "8", "(-39)", "-9", "");
                var v = ov.swizzle.kbgkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("0", null, "((-4-6)-9)", "(28)", "(36)");
                var v = ov.swizzle.kbgkb;
                Assert.AreEqual("(36)", v.x);
                Assert.AreEqual("((-4-6)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("((-4-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(83)", "2", "((-6-7)0)", "2", "");
                var v = ov.swizzle.kbgka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-7)0)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-24)6)", "(-85)", "-2", null, "7");
                var v = ov.swizzle.kbgkk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-85)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(15)", "(15)", "-2", "-2", "-2");
                var v = ov.swizzle.kbb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
            }
            {
                var ov = new gvec5<string>("", "(-28)", "(-28)", "((4-2)7)", "(-8-2)");
                var v = ov.swizzle.kbbr;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("2", "2", "((78)1)", "((-9-7)5)", "((78)1)");
                var v = ov.swizzle.kbbrr;
                Assert.AreEqual("((78)1)", v.x);
                Assert.AreEqual("((78)1)", v.y);
                Assert.AreEqual("((78)1)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "((-7-3)-8)", "(-5-5)", "(-24)", null);
                var v = ov.swizzle.kbbrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-5)", v.y);
                Assert.AreEqual("(-5-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-7-3)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-3)", "", "((14)5)", "-6", null);
                var v = ov.swizzle.kbbrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((14)5)", v.y);
                Assert.AreEqual("((14)5)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("((14)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-2)7)", "3", "-8", "-8", "((9-2)7)");
                var v = ov.swizzle.kbbra;
                Assert.AreEqual("((9-2)7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((9-2)7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("(76)", "(1-2)", "(3-2)", "-9", "(1-2)");
                var v = ov.swizzle.kbbrk;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("(1-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(19)", "((-63)-8)", "(19)", "((68)-9)", "((-63)-8)");
                var v = ov.swizzle.kbbg;
                Assert.AreEqual("((-63)-8)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("((-63)-8)", v.w);
            }
            {
                var ov = new gvec5<string>("", "((23)-7)", "((23)-7)", "(25)", "((23)-7)");
                var v = ov.swizzle.kbbgr;
                Assert.AreEqual("((23)-7)", v.x);
                Assert.AreEqual("((23)-7)", v.y);
                Assert.AreEqual("((23)-7)", v.z);
                Assert.AreEqual("((23)-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((72)-8)", "((72)-8)", "4", "3", "(57)");
                var v = ov.swizzle.kbbgg;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((72)-8)", v.w);
                Assert.AreEqual("((72)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "(52)", "((-62)2)", "((-62)2)");
                var v = ov.swizzle.kbbgb;
                Assert.AreEqual("((-62)2)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-88)", null, "-2");
                var v = ov.swizzle.kbbga;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-88)", v.y);
                Assert.AreEqual("(-88)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", "((-50)-5)", "((00)9)", "(-56)", null);
                var v = ov.swizzle.kbbgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((00)9)", v.y);
                Assert.AreEqual("((00)9)", v.z);
                Assert.AreEqual("((-50)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "-6", "-6", "((-18)9)", "((-18)9)");
                var v = ov.swizzle.kbbb;
                Assert.AreEqual("((-18)9)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("((-7-1)-2)", "6", "6", null, "(7-4)");
                var v = ov.swizzle.kbbbr;
                Assert.AreEqual("(7-4)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-7-1)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "((5-5)-2)", "(08)", "(08)", "((-7-7)4)");
                var v = ov.swizzle.kbbbg;
                Assert.AreEqual("((-7-7)4)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((5-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)6)", null, "-7", "(1-5)", "-7");
                var v = ov.swizzle.kbbbb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(10)", "((7-3)-2)", "((1-3)7)", "((7-3)-2)", "5");
                var v = ov.swizzle.kbbba;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((1-3)7)", v.y);
                Assert.AreEqual("((1-3)7)", v.z);
                Assert.AreEqual("((1-3)7)", v.w);
                Assert.AreEqual("((7-3)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-8", "((82)-5)", "(30)", "-8", "((40)9)");
                var v = ov.swizzle.kbbbk;
                Assert.AreEqual("((40)9)", v.x);
                Assert.AreEqual("(30)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("(30)", v.w);
                Assert.AreEqual("((40)9)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "-3", null, "((-8-4)7)");
                var v = ov.swizzle.kbba;
                Assert.AreEqual("((-8-4)7)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-9", "(84)", "(7-9)", "", "((-3-5)6)");
                var v = ov.swizzle.kbbar;
                Assert.AreEqual("((-3-5)6)", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("(7-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("9", "0", "((-3-2)3)", "((-3-2)3)", "(-6-5)");
                var v = ov.swizzle.kbbag;
                Assert.AreEqual("(-6-5)", v.x);
                Assert.AreEqual("((-3-2)3)", v.y);
                Assert.AreEqual("((-3-2)3)", v.z);
                Assert.AreEqual("((-3-2)3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(31)", null, "((77)1)", "((-40)-4)", "7");
                var v = ov.swizzle.kbbab;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((77)1)", v.y);
                Assert.AreEqual("((77)1)", v.z);
                Assert.AreEqual("((-40)-4)", v.w);
                Assert.AreEqual("((77)1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)1)", "0", "-1", "((-19)6)", "((-19)6)");
                var v = ov.swizzle.kbbaa;
                Assert.AreEqual("((-19)6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-19)6)", v.w);
                Assert.AreEqual("((-19)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "1", "-6", "(32)");
                var v = ov.swizzle.kbbak;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec5<string>("((50)3)", "((50)3)", "(-6-7)", "((-93)-9)", "7");
                var v = ov.swizzle.kbbk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("", "((4-7)1)", "((-35)9)", "(-13)", "1");
                var v = ov.swizzle.kbbkr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-35)9)", v.y);
                Assert.AreEqual("((-35)9)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-96)-3)", "", "-1", "1");
                var v = ov.swizzle.kbbkg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-96)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((47)-2)", "((-5-2)-3)", "((47)-2)", "(7-3)", "");
                var v = ov.swizzle.kbbkb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((47)-2)", v.y);
                Assert.AreEqual("((47)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((47)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((25)-5)", "((4-6)-4)", "(14)", "7", "(14)");
                var v = ov.swizzle.kbbka;
                Assert.AreEqual("(14)", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("(14)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(34)", "-5", "4", "4", "((-87)6)");
                var v = ov.swizzle.kbbkk;
                Assert.AreEqual("((-87)6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-87)6)", v.w);
                Assert.AreEqual("((-87)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-4)-9)", "9", "9", null, "((-95)7)");
                var v = ov.swizzle.kba;
                Assert.AreEqual("((-95)7)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("((09)0)", "9", "(01)", "9", "");
                var v = ov.swizzle.kbar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(01)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((09)0)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "(-5-8)", "((5-8)4)", "((5-8)4)", "-5");
                var v = ov.swizzle.kbarr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((5-8)4)", v.y);
                Assert.AreEqual("((5-8)4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(96)", "(96)", null, "((-9-9)9)");
                var v = ov.swizzle.kbarg;
                Assert.AreEqual("((-9-9)9)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec5<string>("((51)1)", "", "-7", "9", "9");
                var v = ov.swizzle.kbarb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((51)1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("", "(7-3)", "(7-3)", "(7-3)", "((9-1)5)");
                var v = ov.swizzle.kbara;
                Assert.AreEqual("((9-1)5)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(7-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-4)", "", "-2", "((2-4)9)", "-8");
                var v = ov.swizzle.kbark;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((2-4)9)", v.z);
                Assert.AreEqual("(-9-4)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("6", "", "(0-8)", "(-3-8)", "((0-5)-3)");
                var v = ov.swizzle.kbag;
                Assert.AreEqual("((0-5)-3)", v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("4", "(83)", "((58)1)", "((-66)2)", "((58)1)");
                var v = ov.swizzle.kbagr;
                Assert.AreEqual("((58)1)", v.x);
                Assert.AreEqual("((58)1)", v.y);
                Assert.AreEqual("((-66)2)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((-98)1)", "8", "(-16)", null, "((-98)1)");
                var v = ov.swizzle.kbagg;
                Assert.AreEqual("((-98)1)", v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((43)-9)", "((43)-9)", "(-22)", "7", "(-50)");
                var v = ov.swizzle.kbagb;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(-22)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((43)-9)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-7)5)", "1", "((42)-2)", "1", null);
                var v = ov.swizzle.kbaga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((42)-2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-3-2)", "(3-4)", "(-3-2)", "2");
                var v = ov.swizzle.kbagk;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)1)", null, "6", "", "-9");
                var v = ov.swizzle.kbab;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "7", "7", "-3", "(93)");
                var v = ov.swizzle.kbabr;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("", "((0-4)-5)", "(5-7)", "((0-4)-5)", "-7");
                var v = ov.swizzle.kbabg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(5-7)", v.y);
                Assert.AreEqual("((0-4)-5)", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual("((0-4)-5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((07)5)", "9", "((03)8)");
                var v = ov.swizzle.kbabb;
                Assert.AreEqual("((03)8)", v.x);
                Assert.AreEqual("((07)5)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((07)5)", v.w);
                Assert.AreEqual("((07)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-9)", "((-6-6)4)", "9", "(-1-1)", "(-1-1)");
                var v = ov.swizzle.kbaba;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-5", "(-72)", "((-7-7)-8)", "((-7-7)-8)");
                var v = ov.swizzle.kbabk;
                Assert.AreEqual("((-7-7)-8)", v.x);
                Assert.AreEqual("(-72)", v.y);
                Assert.AreEqual("((-7-7)-8)", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("((-7-7)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("((47)-5)", "((1-7)-1)", "((-9-7)2)", "(1-8)", "(1-8)");
                var v = ov.swizzle.kbaa;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("((-9-7)2)", v.y);
                Assert.AreEqual("(1-8)", v.z);
                Assert.AreEqual("(1-8)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "((7-4)7)", "(-1-1)", "-3", "-3");
                var v = ov.swizzle.kbaar;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-5)8)", "(05)", "-2", "(-1-6)", "-8");
                var v = ov.swizzle.kbaag;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("(-1-6)", v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((-4-7)-4)", "(-3-6)", "-7");
                var v = ov.swizzle.kbaab;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-4-7)-4)", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual("((-4-7)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "", "(-81)", "((-26)-9)", "7");
                var v = ov.swizzle.kbaaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("((-26)-9)", v.z);
                Assert.AreEqual("((-26)-9)", v.w);
                Assert.AreEqual("((-26)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(3-8)", "4", "", "(4-1)", "((2-8)6)");
                var v = ov.swizzle.kbaak;
                Assert.AreEqual("((2-8)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(4-1)", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("((2-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-91)", "6", "3", "3", "");
                var v = ov.swizzle.kbak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("(2-7)", "7", "-5", "((52)-7)", "((2-6)6)");
                var v = ov.swizzle.kbakr;
                Assert.AreEqual("((2-6)6)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((52)-7)", v.z);
                Assert.AreEqual("((2-6)6)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "-1", "((-48)-6)", "-1", "(-59)");
                var v = ov.swizzle.kbakg;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("((-48)-6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(-4-1)", "", "(-4-1)", null);
                var v = ov.swizzle.kbakb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((46)6)", "-1", "((46)6)", "((46)6)", "");
                var v = ov.swizzle.kbaka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((46)6)", v.y);
                Assert.AreEqual("((46)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((46)6)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "", "((4-5)6)", "-7", "0");
                var v = ov.swizzle.kbakk;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((4-5)6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(50)", "(65)", "((72)5)", "-7");
                var v = ov.swizzle.kbk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec5<string>(null, "(33)", "-3", "((24)-8)", "-1");
                var v = ov.swizzle.kbkr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((-7-2)-2)", "(5-3)", "((-7-2)-2)", "(5-3)", "(5-3)");
                var v = ov.swizzle.kbkrr;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("((-7-2)-2)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("((-7-2)-2)", v.w);
                Assert.AreEqual("((-7-2)-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-6", "-6", "((56)0)", "(9-1)");
                var v = ov.swizzle.kbkrg;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((5-2)1)", null, "(-62)", "((-4-7)9)", "1");
                var v = ov.swizzle.kbkrb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((5-2)1)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "8", "", "8", "((97)4)");
                var v = ov.swizzle.kbkra;
                Assert.AreEqual("((97)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((97)4)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "8", "(-84)", "", "(8-2)");
                var v = ov.swizzle.kbkrk;
                Assert.AreEqual("(8-2)", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(8-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((-11)-9)", "((-11)-9)", "((96)0)", "1", "(4-3)");
                var v = ov.swizzle.kbkg;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("((96)0)", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("((-11)-9)", v.w);
            }
            {
                var ov = new gvec5<string>("", "(4-5)", "4", "((05)5)", "1");
                var v = ov.swizzle.kbkgr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(4-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-6-8)", "((-3-8)-2)", null, "((-3-8)-2)");
                var v = ov.swizzle.kbkgg;
                Assert.AreEqual("((-3-8)-2)", v.x);
                Assert.AreEqual("((-3-8)-2)", v.y);
                Assert.AreEqual("((-3-8)-2)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(35)", "-6", null, "-8", "2");
                var v = ov.swizzle.kbkgb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", null, "-5", "((3-6)0)");
                var v = ov.swizzle.kbkga;
                Assert.AreEqual("((3-6)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((3-6)0)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("", "-8", "((29)8)", "(39)", "5");
                var v = ov.swizzle.kbkgk;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((29)8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-5)", "5", "(-5-6)", "(-5-6)", "-7");
                var v = ov.swizzle.kbkb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-5-6)", v.w);
            }
            {
                var ov = new gvec5<string>(null, "((-1-5)-8)", null, "(-15)", "(-4-6)");
                var v = ov.swizzle.kbkbr;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-73)-9)", "((-73)-9)", "-6", "(-8-9)");
                var v = ov.swizzle.kbkbg;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("((-73)-9)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("((-73)-9)", v.w);
                Assert.AreEqual("((-73)-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-48)", "(-48)", "3", "(-48)");
                var v = ov.swizzle.kbkbb;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("(-48)", v.z);
                Assert.AreEqual("(-48)", v.w);
                Assert.AreEqual("(-48)", v.v);
            }
            {
                var ov = new gvec5<string>("(48)", "1", null, "(-96)", "1");
                var v = ov.swizzle.kbkba;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", null, "(2-5)", "((-94)-4)", "");
                var v = ov.swizzle.kbkbk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("4", "-1", "-1", "(4-4)", "(-54)");
                var v = ov.swizzle.kbka;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual("(4-4)", v.w);
            }
            {
                var ov = new gvec5<string>("4", "((-14)-9)", null, "", "6");
                var v = ov.swizzle.kbkar;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("(2-4)", "((7-1)5)", "((48)0)", "(-23)", "3");
                var v = ov.swizzle.kbkag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((48)0)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("((7-1)5)", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "(9-3)", "(24)", "(9-3)", "7");
                var v = ov.swizzle.kbkab;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(24)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "2", "((-77)-5)", "((-77)-5)", "2");
                var v = ov.swizzle.kbkaa;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-77)-5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-77)-5)", v.w);
                Assert.AreEqual("((-77)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("((4-4)-9)", "(-7-8)", null, null, "((92)6)");
                var v = ov.swizzle.kbkak;
                Assert.AreEqual("((92)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((92)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((92)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-45)-3)", "-7", "(-69)", "", "((8-8)4)");
                var v = ov.swizzle.kbkk;
                Assert.AreEqual("((8-8)4)", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("((8-8)4)", v.z);
                Assert.AreEqual("((8-8)4)", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-7)", null, "(-2-7)", "-3", "(18)");
                var v = ov.swizzle.kbkkr;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("(-2-7)", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("(18)", v.w);
                Assert.AreEqual("(-2-7)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((33)-7)", "((-57)7)", "-3", "((-67)5)");
                var v = ov.swizzle.kbkkg;
                Assert.AreEqual("((-67)5)", v.x);
                Assert.AreEqual("((-57)7)", v.y);
                Assert.AreEqual("((-67)5)", v.z);
                Assert.AreEqual("((-67)5)", v.w);
                Assert.AreEqual("((33)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((62)9)", "((-6-6)9)", "((9-2)7)", "7", "((-6-6)9)");
                var v = ov.swizzle.kbkkb;
                Assert.AreEqual("((-6-6)9)", v.x);
                Assert.AreEqual("((9-2)7)", v.y);
                Assert.AreEqual("((-6-6)9)", v.z);
                Assert.AreEqual("((-6-6)9)", v.w);
                Assert.AreEqual("((9-2)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((1-8)0)", "((-18)-2)", null, "(-3-6)", "(-40)");
                var v = ov.swizzle.kbkka;
                Assert.AreEqual("(-40)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("(-3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "0", "1", "(-1-7)", "(-9-9)");
                var v = ov.swizzle.kbkkk;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("(-9-9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "-1", "(1-3)", "8", "");
                var v = ov.swizzle.ka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
            }
            {
                var ov = new gvec5<string>("7", "", "", "(90)", "(61)");
                var v = ov.swizzle.kar;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("7", v.z);
            }
            {
                var ov = new gvec5<string>(null, "((-9-8)4)", "-9", "(-9-2)", "(1-4)");
                var v = ov.swizzle.karr;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>(null, "((81)0)", "(52)", "(7-2)", "((5-6)4)");
                var v = ov.swizzle.karrr;
                Assert.AreEqual("((5-6)4)", v.x);
                Assert.AreEqual("(7-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-5", "(-9-5)", "2", null, "-5");
                var v = ov.swizzle.karrg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-9-5)", v.v);
            }
            {
                var ov = new gvec5<string>("5", "", "(-2-8)", "((5-8)7)", "-4");
                var v = ov.swizzle.karrb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((5-8)7)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-2-8)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "(4-7)", "(4-7)", "-8", "((-64)1)");
                var v = ov.swizzle.karra;
                Assert.AreEqual("((-64)1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "((61)0)", "-4", "(23)");
                var v = ov.swizzle.karrk;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(23)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "((-23)1)", "(0-5)", "(49)");
                var v = ov.swizzle.karg;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "-5", "(42)", "((-1-6)2)", "((-1-2)6)");
                var v = ov.swizzle.kargr;
                Assert.AreEqual("((-1-2)6)", v.x);
                Assert.AreEqual("((-1-6)2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "-7", "-6", "(2-1)", "(-4-8)");
                var v = ov.swizzle.kargg;
                Assert.AreEqual("(-4-8)", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(86)", "(-39)", "", "3");
                var v = ov.swizzle.kargb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("(-39)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "((-78)-6)", "((-80)-5)", "", "((-80)-5)");
                var v = ov.swizzle.karga;
                Assert.AreEqual("((-80)-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-78)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((7-4)-4)", "(-3-6)", "(-58)", "8", null);
                var v = ov.swizzle.kargk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((7-4)-4)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-97)", "(-97)", "(-97)", "6", "(-97)");
                var v = ov.swizzle.karb;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual("(-97)", v.w);
            }
            {
                var ov = new gvec5<string>("-4", "(5-6)", "(5-2)", "((4-4)2)", "-4");
                var v = ov.swizzle.karbr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((4-4)2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(5-2)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("7", "(42)", "(63)", "((7-3)8)", "(42)");
                var v = ov.swizzle.karbg;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("((7-3)8)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(63)", v.w);
                Assert.AreEqual("(42)", v.v);
            }
            {
                var ov = new gvec5<string>("(-8-8)", "1", "-4", "(-8-8)", "((-8-6)4)");
                var v = ov.swizzle.karbb;
                Assert.AreEqual("((-8-6)4)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("3", "0", "-9", null, "-9");
                var v = ov.swizzle.karba;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-7-2)", "((2-4)-2)", "", "((2-4)-2)", "-6");
                var v = ov.swizzle.karbk;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((2-4)-2)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("0", "-9", "(-8-3)", "0", "((54)7)");
                var v = ov.swizzle.kara;
                Assert.AreEqual("((54)7)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>("((98)2)", "5", "((7-6)8)", "(5-5)", "5");
                var v = ov.swizzle.karar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("((98)2)", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual("((98)2)", v.v);
            }
            {
                var ov = new gvec5<string>("((07)-9)", "(47)", "(47)", "(2-8)", "-3");
                var v = ov.swizzle.karag;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("((07)-9)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((70)-2)", "((-5-5)-9)", "((8-9)-5)", null);
                var v = ov.swizzle.karab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-9)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((8-9)-5)", v.w);
                Assert.AreEqual("((-5-5)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-2-2)0)", "((04)7)", "((04)7)", "((13)4)");
                var v = ov.swizzle.karaa;
                Assert.AreEqual("((13)4)", v.x);
                Assert.AreEqual("((04)7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((04)7)", v.w);
                Assert.AreEqual("((04)7)", v.v);
            }
            {
                var ov = new gvec5<string>("2", "(33)", "((0-9)7)", "(89)", null);
                var v = ov.swizzle.karak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-56)", "-7", "(-73)", null, "-6");
                var v = ov.swizzle.kark;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-56)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("(20)", "(7-3)", null, null, null);
                var v = ov.swizzle.karkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-5)-8)", "(9-1)", "(9-1)", "((16)3)", "((-2-5)-8)");
                var v = ov.swizzle.karkg;
                Assert.AreEqual("((-2-5)-8)", v.x);
                Assert.AreEqual("((16)3)", v.y);
                Assert.AreEqual("((-2-5)-8)", v.z);
                Assert.AreEqual("((-2-5)-8)", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "1", "((-54)9)", null, "-4");
                var v = ov.swizzle.karkb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-54)9)", v.v);
            }
            {
                var ov = new gvec5<string>("(24)", "(7-6)", "", "", "");
                var v = ov.swizzle.karka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(24)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-90)", "-9", "((2-4)6)", "(73)", "((-2-5)5)");
                var v = ov.swizzle.karkk;
                Assert.AreEqual("((-2-5)5)", v.x);
                Assert.AreEqual("(73)", v.y);
                Assert.AreEqual("(-90)", v.z);
                Assert.AreEqual("((-2-5)5)", v.w);
                Assert.AreEqual("((-2-5)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(67)", "(21)", "", "9");
                var v = ov.swizzle.kag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(67)", v.z);
            }
            {
                var ov = new gvec5<string>("(6-4)", "((-85)-3)", "(-3-3)", "((-38)-3)", "5");
                var v = ov.swizzle.kagr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-38)-3)", v.y);
                Assert.AreEqual("((-85)-3)", v.z);
                Assert.AreEqual("(6-4)", v.w);
            }
            {
                var ov = new gvec5<string>("-3", "-3", "(8-9)", "7", "((72)9)");
                var v = ov.swizzle.kagrr;
                Assert.AreEqual("((72)9)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", null, "-4", "((23)4)", "-4");
                var v = ov.swizzle.kagrg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((23)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("4", "(95)", "(95)", null, "");
                var v = ov.swizzle.kagrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(95)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(95)", v.v);
            }
            {
                var ov = new gvec5<string>("((-71)1)", "(37)", null, null, "");
                var v = ov.swizzle.kagra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual("((-71)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "-8", "0", "0", "((36)0)");
                var v = ov.swizzle.kagrk;
                Assert.AreEqual("((36)0)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((36)0)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)-7)", "(5-2)", "((1-3)7)", "((-23)4)", "");
                var v = ov.swizzle.kagg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-23)4)", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual("(5-2)", v.w);
            }
            {
                var ov = new gvec5<string>("((8-6)-9)", "2", "(4-8)", "(-6-3)", "((03)4)");
                var v = ov.swizzle.kaggr;
                Assert.AreEqual("((03)4)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((8-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((47)-6)", null, "((47)-6)", "(-53)", "(-53)");
                var v = ov.swizzle.kaggg;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", null, "((-2-9)-7)", "((-2-9)-7)", "((-1-1)-7)");
                var v = ov.swizzle.kaggb;
                Assert.AreEqual("((-1-1)-7)", v.x);
                Assert.AreEqual("((-2-9)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-2-9)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-1-9)", "(3-9)", "8", "9");
                var v = ov.swizzle.kagga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((-64)-6)", "-8", "", "7", "-1");
                var v = ov.swizzle.kaggk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("8", "", "8", null, "((16)7)");
                var v = ov.swizzle.kagb;
                Assert.AreEqual("((16)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("(-2-2)", "((-3-1)-5)", "7", "(96)", "7");
                var v = ov.swizzle.kagbr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("((-3-1)-5)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec5<string>("((9-8)-6)", "((-4-2)-7)", "((-3-3)-3)", "(-3-5)", "6");
                var v = ov.swizzle.kagbg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("((-4-2)-7)", v.z);
                Assert.AreEqual("((-3-3)-3)", v.w);
                Assert.AreEqual("((-4-2)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-91)0)", null, "", "0", "0");
                var v = ov.swizzle.kagbb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-8)", "-6", "(4-1)", "((4-3)6)", "(4-1)");
                var v = ov.swizzle.kagba;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("((4-3)6)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("((4-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-1", "(69)", "(69)", "((0-3)6)");
                var v = ov.swizzle.kagbk;
                Assert.AreEqual("((0-3)6)", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(69)", v.w);
                Assert.AreEqual("((0-3)6)", v.v);
            }
            {
                var ov = new gvec5<string>("6", "(2-7)", null, "(54)", "6");
                var v = ov.swizzle.kaga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(54)", v.w);
            }
            {
                var ov = new gvec5<string>("-8", "((-2-8)-7)", "(6-3)", "-8", "-1");
                var v = ov.swizzle.kagar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-2-8)-7)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((78)-3)", "7", "-6", "((-83)9)", "(-21)");
                var v = ov.swizzle.kagag;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("((-83)9)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-83)9)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((3-2)-7)", "(3-2)", "((3-2)-7)", "4");
                var v = ov.swizzle.kagab;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((3-2)-7)", v.y);
                Assert.AreEqual("((3-2)-7)", v.z);
                Assert.AreEqual("((3-2)-7)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-53)9)", "9", "((-26)-5)", "(3-6)");
                var v = ov.swizzle.kagaa;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("((-26)-5)", v.y);
                Assert.AreEqual("((-53)9)", v.z);
                Assert.AreEqual("((-26)-5)", v.w);
                Assert.AreEqual("((-26)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(-54)", "0", "(-54)", "0", "((9-8)5)");
                var v = ov.swizzle.kagak;
                Assert.AreEqual("((9-8)5)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((9-8)5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "((9-7)-5)", "(9-4)", "((9-7)-5)");
                var v = ov.swizzle.kagk;
                Assert.AreEqual("((9-7)-5)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((9-7)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-80)3)", "5", "(68)", "", null);
                var v = ov.swizzle.kagkr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-80)3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-87)", "(0-9)", "6", "3", "-2");
                var v = ov.swizzle.kagkg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "9", "8", "((-98)6)", "((5-4)2)");
                var v = ov.swizzle.kagkb;
                Assert.AreEqual("((5-4)2)", v.x);
                Assert.AreEqual("((-98)6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((5-4)2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("((3-4)8)", "((-94)9)", "-7", "(-6-1)", "-7");
                var v = ov.swizzle.kagka;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("((-94)9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-6-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-7)", "7", "((1-1)-6)", "-7", null);
                var v = ov.swizzle.kagkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "((5-5)-4)", "((44)7)", "-5", "");
                var v = ov.swizzle.kab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((44)7)", v.z);
            }
            {
                var ov = new gvec5<string>("((87)-4)", "(7-9)", "(29)", "-9", null);
                var v = ov.swizzle.kabr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("((87)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("", "7", "", "2", null);
                var v = ov.swizzle.kabrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-40)5)", "0", "((5-6)6)", "0");
                var v = ov.swizzle.kabrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((5-6)6)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-40)5)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-82)6)", "", "", "(-10)");
                var v = ov.swizzle.kabrb;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("8", null, "(18)", "-3", null);
                var v = ov.swizzle.kabra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("", "(67)", "(67)", "((12)-8)", "");
                var v = ov.swizzle.kabrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((12)-8)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((0-5)-1)", "7", "", "", "");
                var v = ov.swizzle.kabg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("((-53)-3)", "(-11)", "((4-5)0)", "9", "(-11)");
                var v = ov.swizzle.kabgr;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((4-5)0)", v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("((-53)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-1)", "1", "((-5-8)-4)", "((-5-8)-4)", "");
                var v = ov.swizzle.kabgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-8)-4)", v.y);
                Assert.AreEqual("((-5-8)-4)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("6", "6", "((-6-1)7)", "(-2-5)", "6");
                var v = ov.swizzle.kabgb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("((-6-1)7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-6-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-5)", "(-36)", "", "(-24)", "");
                var v = ov.swizzle.kabga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("(-24)", v.v);
            }
            {
                var ov = new gvec5<string>("(-53)", "(83)", "((-44)3)", "(-53)", "(83)");
                var v = ov.swizzle.kabgk;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("((-44)3)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-59)-3)", "7", "(41)", "((-93)-2)");
                var v = ov.swizzle.kabb;
                Assert.AreEqual("((-93)-2)", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("0", "((45)-6)", null, "0", null);
                var v = ov.swizzle.kabbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "(29)", "1", "-9", "-9");
                var v = ov.swizzle.kabbg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("(-87)", "((-6-9)-7)", null, "((63)-9)", "((-6-9)-7)");
                var v = ov.swizzle.kabbb;
                Assert.AreEqual("((-6-9)-7)", v.x);
                Assert.AreEqual("((63)-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-72)", "((-27)1)", "((9-6)-1)", null, "((-27)1)");
                var v = ov.swizzle.kabba;
                Assert.AreEqual("((-27)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-6)-1)", v.z);
                Assert.AreEqual("((9-6)-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((-3-7)2)", "", "(2-4)", "(7-5)", "(2-4)");
                var v = ov.swizzle.kabbk;
                Assert.AreEqual("(2-4)", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("(2-4)", v.z);
                Assert.AreEqual("(2-4)", v.w);
                Assert.AreEqual("(2-4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((4-5)6)", "3", "3", "(-2-6)");
                var v = ov.swizzle.kaba;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec5<string>("1", "((-7-9)-1)", "-6", "", "((-7-9)-1)");
                var v = ov.swizzle.kabar;
                Assert.AreEqual("((-7-9)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(00)", "((35)-3)", "(-21)", "((98)-8)", "3");
                var v = ov.swizzle.kabag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((98)-8)", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("((98)-8)", v.w);
                Assert.AreEqual("((35)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((16)8)", "0", "0", "((16)8)");
                var v = ov.swizzle.kabab;
                Assert.AreEqual("((16)8)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-7-1)", "7", "7", "(-7-1)", "7");
                var v = ov.swizzle.kabaa;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", null, "-4", "(-45)", "((-75)-4)");
                var v = ov.swizzle.kabak;
                Assert.AreEqual("((-75)-4)", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("((-75)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)-6)", null, "7", "((0-3)-6)", "");
                var v = ov.swizzle.kabk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-3)-6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-50)", "(-8-1)", "(-8-1)", "((-71)-3)");
                var v = ov.swizzle.kabkr;
                Assert.AreEqual("((-71)-3)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("((-71)-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("", "(-96)", "(-1-6)", "(-96)", "((-33)4)");
                var v = ov.swizzle.kabkg;
                Assert.AreEqual("((-33)4)", v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("((-33)4)", v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "((-9-8)7)", "((1-9)-8)", "(55)", "((-9-8)7)");
                var v = ov.swizzle.kabkb;
                Assert.AreEqual("((-9-8)7)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("((1-9)-8)", v.z);
                Assert.AreEqual("((-9-8)7)", v.w);
                Assert.AreEqual("((1-9)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-22)-4)", "-3", null, null);
                var v = ov.swizzle.kabka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-4)", null, "6", "((9-4)-2)");
                var v = ov.swizzle.kabkk;
                Assert.AreEqual("((9-4)-2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-4)-2)", v.w);
                Assert.AreEqual("((9-4)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", null, "((61)-5)", "(6-2)", "-2");
                var v = ov.swizzle.kaa;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(6-2)", v.z);
            }
            {
                var ov = new gvec5<string>("(-47)", "(54)", "", "2", "9");
                var v = ov.swizzle.kaar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-47)", v.w);
            }
            {
                var ov = new gvec5<string>("((07)9)", "((07)9)", "-2", "((-2-4)8)", "");
                var v = ov.swizzle.kaarr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-4)8)", v.y);
                Assert.AreEqual("((-2-4)8)", v.z);
                Assert.AreEqual("((07)9)", v.w);
                Assert.AreEqual("((07)9)", v.v);
            }
            {
                var ov = new gvec5<string>("((-40)6)", "2", "((-8-7)-8)", "(-52)", null);
                var v = ov.swizzle.kaarg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("((-40)6)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "-6", "-2", "((38)-7)", "((-54)1)");
                var v = ov.swizzle.kaarb;
                Assert.AreEqual("((-54)1)", v.x);
                Assert.AreEqual("((38)-7)", v.y);
                Assert.AreEqual("((38)-7)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-4)-1)", "((-5-9)-2)", "(-7-5)", "(-7-5)", "((-5-4)-1)");
                var v = ov.swizzle.kaara;
                Assert.AreEqual("((-5-4)-1)", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("(-7-5)", v.z);
                Assert.AreEqual("((-5-4)-1)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-1)", "((-7-1)-1)", "", "", null);
                var v = ov.swizzle.kaark;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("1", "(8-9)", "((7-5)-6)", "(8-9)", "-2");
                var v = ov.swizzle.kaag;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("(8-9)", v.z);
                Assert.AreEqual("(8-9)", v.w);
            }
            {
                var ov = new gvec5<string>("5", "3", "3", "(6-3)", "(6-3)");
                var v = ov.swizzle.kaagr;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-8)-1)", "-8", "(46)", "-8", "((-31)0)");
                var v = ov.swizzle.kaagg;
                Assert.AreEqual("((-31)0)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>(null, "6", "-6", "((-12)-3)", "");
                var v = ov.swizzle.kaagb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-12)-3)", v.y);
                Assert.AreEqual("((-12)-3)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("(-46)", "", "((-5-1)3)", "((8-5)-7)", "6");
                var v = ov.swizzle.kaaga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((8-5)-7)", v.y);
                Assert.AreEqual("((8-5)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((8-5)-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-4)", "(79)", "((72)8)", "(-3-4)", "((-31)-1)");
                var v = ov.swizzle.kaagk;
                Assert.AreEqual("((-31)-1)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("((-31)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("2", null, "-3", "4", "((-3-5)-1)");
                var v = ov.swizzle.kaab;
                Assert.AreEqual("((-3-5)-1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec5<string>("", "((20)0)", "7", "1", "((20)0)");
                var v = ov.swizzle.kaabr;
                Assert.AreEqual("((20)0)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-5-6)", "((0-1)5)", null, "", "((0-1)5)");
                var v = ov.swizzle.kaabg;
                Assert.AreEqual("((0-1)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-1)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "3", "(75)", "((-3-5)0)");
                var v = ov.swizzle.kaabb;
                Assert.AreEqual("((-3-5)0)", v.x);
                Assert.AreEqual("(75)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(9-8)", "((-24)4)", "(2-7)", "(9-8)");
                var v = ov.swizzle.kaaba;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("((-24)4)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-67)-1)", "((-67)-1)", "(08)", "(08)", "-1");
                var v = ov.swizzle.kaabk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("(-37)", "(40)", "(-80)", "8", "((-6-1)7)");
                var v = ov.swizzle.kaaa;
                Assert.AreEqual("((-6-1)7)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>(null, "(-80)", "0", "((97)0)", "0");
                var v = ov.swizzle.kaaar;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((97)0)", v.y);
                Assert.AreEqual("((97)0)", v.z);
                Assert.AreEqual("((97)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(94)", "(07)", "(07)", "-8", "(9-2)");
                var v = ov.swizzle.kaaag;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((-27)5)", "(-82)", "((6-6)2)", "((6-6)2)");
                var v = ov.swizzle.kaaab;
                Assert.AreEqual("((6-6)2)", v.x);
                Assert.AreEqual("((6-6)2)", v.y);
                Assert.AreEqual("((6-6)2)", v.z);
                Assert.AreEqual("((6-6)2)", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "", "((60)-2)", "(02)", "(03)");
                var v = ov.swizzle.kaaaa;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("(02)", v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec5<string>("((46)9)", "((46)9)", "((69)5)", "((-71)9)", null);
                var v = ov.swizzle.kaaak;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-71)9)", v.y);
                Assert.AreEqual("((-71)9)", v.z);
                Assert.AreEqual("((-71)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((06)-6)", "-6", "4", "(-14)", "-6");
                var v = ov.swizzle.kaak;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-14)", v.y);
                Assert.AreEqual("(-14)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec5<string>("(-93)", "-4", "((-78)-2)", "((-29)-9)", "((-78)-2)");
                var v = ov.swizzle.kaakr;
                Assert.AreEqual("((-78)-2)", v.x);
                Assert.AreEqual("((-29)-9)", v.y);
                Assert.AreEqual("((-29)-9)", v.z);
                Assert.AreEqual("((-78)-2)", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec5<string>("", "1", "8", "(71)", "((7-8)-6)");
                var v = ov.swizzle.kaakg;
                Assert.AreEqual("((7-8)-6)", v.x);
                Assert.AreEqual("(71)", v.y);
                Assert.AreEqual("(71)", v.z);
                Assert.AreEqual("((7-8)-6)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-9)-2)", "9", "(-8-8)", "(-51)", "((1-1)-4)");
                var v = ov.swizzle.kaakb;
                Assert.AreEqual("((1-1)-4)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("((1-1)-4)", v.w);
                Assert.AreEqual("(-8-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-84)", null, "5", "5", "5");
                var v = ov.swizzle.kaaka;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>("", "(0-3)", "-6", null, "7");
                var v = ov.swizzle.kaakk;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((-3-5)0)", "(-5-6)", "((-3-5)0)", "", "");
                var v = ov.swizzle.kak;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec5<string>("(9-1)", null, null, "(2-8)", "5");
                var v = ov.swizzle.kakr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(2-8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(9-1)", v.w);
            }
            {
                var ov = new gvec5<string>("(22)", "(3-2)", "-7", "(-5-9)", null);
                var v = ov.swizzle.kakrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-9)", null, null, "(29)", "7");
                var v = ov.swizzle.kakrg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((5-5)-2)", "((-7-7)2)", "((5-5)-2)", "((-7-7)2)", "-3");
                var v = ov.swizzle.kakrb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-7-7)2)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((5-5)-2)", v.w);
                Assert.AreEqual("((5-5)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("3", null, "((94)5)", "(1-6)", "3");
                var v = ov.swizzle.kakra;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", "", "-2", "(-97)");
                var v = ov.swizzle.kakrk;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-97)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((5-5)-6)", null, "(-6-1)", null);
                var v = ov.swizzle.kakg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((5-5)-6)", v.w);
            }
            {
                var ov = new gvec5<string>("(4-9)", null, "(4-9)", "((-1-3)-2)", "-2");
                var v = ov.swizzle.kakgr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-1-3)-2)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(4-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(56)", "-4", "-4", "2");
                var v = ov.swizzle.kakgg;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec5<string>("((16)-7)", "", null, "(4-7)", "(4-7)");
                var v = ov.swizzle.kakgb;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual("(4-7)", v.y);
                Assert.AreEqual("(4-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-6", "((-9-6)0)", "", "((-5-6)5)", "5");
                var v = ov.swizzle.kakga;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-5-6)5)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-9-6)0)", v.w);
                Assert.AreEqual("((-5-6)5)", v.v);
            }
            {
                var ov = new gvec5<string>("((35)-4)", "0", "0", "((8-9)0)", "((6-7)7)");
                var v = ov.swizzle.kakgk;
                Assert.AreEqual("((6-7)7)", v.x);
                Assert.AreEqual("((8-9)0)", v.y);
                Assert.AreEqual("((6-7)7)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((6-7)7)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((9-8)8)", "", null, "(81)");
                var v = ov.swizzle.kakb;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("0", "(80)", "", "(80)", "(80)");
                var v = ov.swizzle.kakbr;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("", "", "((92)-6)", "4", "(51)");
                var v = ov.swizzle.kakbg;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(51)", v.z);
                Assert.AreEqual("((92)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(84)", "((-44)7)", "-1", "(59)", "");
                var v = ov.swizzle.kakbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-9-8)", "", "((-67)7)", "((09)7)");
                var v = ov.swizzle.kakba;
                Assert.AreEqual("((09)7)", v.x);
                Assert.AreEqual("((-67)7)", v.y);
                Assert.AreEqual("((09)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-67)7)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(-4-7)", "((-5-2)3)", "((-3-4)3)", "3");
                var v = ov.swizzle.kakbk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-3-4)3)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-5-2)3)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("3", "(8-3)", "", "((74)-4)", "2");
                var v = ov.swizzle.kaka;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((74)-4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((74)-4)", v.w);
            }
            {
                var ov = new gvec5<string>("(1-1)", "((-63)0)", "5", "-7", "(1-6)");
                var v = ov.swizzle.kakar;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(1-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)-3)", "((-7-3)-1)", "-6", "((37)3)", "-8");
                var v = ov.swizzle.kakag;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((37)3)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((37)3)", v.w);
                Assert.AreEqual("((-7-3)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "(-3-5)", "", "(51)", "(9-9)");
                var v = ov.swizzle.kakab;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("(51)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-6-1)", "(-6-1)", "((-46)-7)", null, "((-46)-7)");
                var v = ov.swizzle.kakaa;
                Assert.AreEqual("((-46)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-46)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("-4", "", "(26)", "(-6-6)", "((-52)9)");
                var v = ov.swizzle.kakak;
                Assert.AreEqual("((-52)9)", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("((-52)9)", v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual("((-52)9)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(07)", "7", "7", "-1");
                var v = ov.swizzle.kakk;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec5<string>("8", "8", null, "8", "(-87)");
                var v = ov.swizzle.kakkr;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("(-87)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("1", "1", null, "((36)1)", "1");
                var v = ov.swizzle.kakkg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((36)1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((41)6)", "9", "((41)6)", "", "9");
                var v = ov.swizzle.kakkb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((41)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((91)-9)", "(7-2)", "(58)", "((91)-9)", "(7-7)");
                var v = ov.swizzle.kakka;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("((91)-9)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("((91)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(9-6)", "(9-6)", "((-7-7)-7)", "");
                var v = ov.swizzle.kakkk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-7)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("(-68)", "(4-7)", "((-28)-2)", "((21)5)", "((21)5)");
                var v = ov.swizzle.kk;
                Assert.AreEqual("((21)5)", v.x);
                Assert.AreEqual("((21)5)", v.y);
            }
            {
                var ov = new gvec5<string>("(4-2)", "6", "(0-1)", "(0-1)", "(0-1)");
                var v = ov.swizzle.kkr;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(4-2)", v.z);
            }
            {
                var ov = new gvec5<string>("7", "-1", "((-52)-2)", "((7-6)-4)", "");
                var v = ov.swizzle.kkrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec5<string>("(-35)", "(-35)", "((-87)1)", "-2", "(19)");
                var v = ov.swizzle.kkrrr;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual("(-35)", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((-79)-2)", "-3", null, "-3");
                var v = ov.swizzle.kkrrg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-79)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(-67)", "((-77)0)", "", "((-77)0)", null);
                var v = ov.swizzle.kkrrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-67)", v.z);
                Assert.AreEqual("(-67)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "(-32)", "(6-4)", "-3");
                var v = ov.swizzle.kkrra;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "6", "", "(1-2)", "3");
                var v = ov.swizzle.kkrrk;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>(null, "2", "((1-7)6)", "((-1-7)0)", "");
                var v = ov.swizzle.kkrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec5<string>("", "((50)9)", "((26)7)", "0", "((-5-4)2)");
                var v = ov.swizzle.kkrgr;
                Assert.AreEqual("((-5-4)2)", v.x);
                Assert.AreEqual("((-5-4)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((50)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-17)", null, "", "");
                var v = ov.swizzle.kkrgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "0", null, "(-9-5)", "(2-6)");
                var v = ov.swizzle.kkrgb;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-8-3)", "((78)7)", "((00)-4)", "-1", "((78)7)");
                var v = ov.swizzle.kkrga;
                Assert.AreEqual("((78)7)", v.x);
                Assert.AreEqual("((78)7)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("((78)7)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("4", "((2-7)4)", "((-2-1)6)", "", "(-80)");
                var v = ov.swizzle.kkrgk;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("(-80)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((2-7)4)", v.w);
                Assert.AreEqual("(-80)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "((-8-4)9)", "6", "(36)", "(-91)");
                var v = ov.swizzle.kkrb;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec5<string>("((-17)-1)", "1", "((-17)-1)", "", "-2");
                var v = ov.swizzle.kkrbr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-17)-1)", v.z);
                Assert.AreEqual("((-17)-1)", v.w);
                Assert.AreEqual("((-17)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "(0-9)", "-8", "((-4-5)4)", "(-36)");
                var v = ov.swizzle.kkrbg;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(0-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(1-7)", "(22)", "((9-8)6)", "1", "6");
                var v = ov.swizzle.kkrbb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("((9-8)6)", v.w);
                Assert.AreEqual("((9-8)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(4-4)", "(09)", "((-3-2)-3)", "((-7-6)-9)", "((-3-2)-3)");
                var v = ov.swizzle.kkrba;
                Assert.AreEqual("((-3-2)-3)", v.x);
                Assert.AreEqual("((-3-2)-3)", v.y);
                Assert.AreEqual("(4-4)", v.z);
                Assert.AreEqual("((-3-2)-3)", v.w);
                Assert.AreEqual("((-7-6)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "-2", "((-56)-3)", "6", "-7");
                var v = ov.swizzle.kkrbk;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-56)-3)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-7)", "((-2-6)-7)", "(-9-7)", "8", "(-7-4)");
                var v = ov.swizzle.kkra;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-5)3)", "8", null, "8", "9");
                var v = ov.swizzle.kkrar;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-1-5)3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-1-5)3)", v.v);
            }
            {
                var ov = new gvec5<string>("((44)6)", "(-86)", null, "((1-1)7)", null);
                var v = ov.swizzle.kkrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((44)6)", v.z);
                Assert.AreEqual("((1-1)7)", v.w);
                Assert.AreEqual("(-86)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-5-9)-5)", "((-3-1)7)", "((-86)3)", "7");
                var v = ov.swizzle.kkrab;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-86)3)", v.w);
                Assert.AreEqual("((-3-1)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((-75)3)", "-8", "(-8-3)", "(-3-4)", "(-3-4)");
                var v = ov.swizzle.kkraa;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("((-75)3)", v.z);
                Assert.AreEqual("(-3-4)", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((52)4)", "(82)", "(82)", "((89)-4)", "5");
                var v = ov.swizzle.kkrak;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((52)4)", v.z);
                Assert.AreEqual("((89)-4)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec5<string>(null, "((90)7)", "", "3", "");
                var v = ov.swizzle.kkrk;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((-25)6)", "", "((-7-6)-9)", null, "");
                var v = ov.swizzle.kkrkr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-25)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-25)6)", v.v);
            }
            {
                var ov = new gvec5<string>("(-40)", "(47)", "((0-7)-3)", "((-8-5)8)", "-7");
                var v = ov.swizzle.kkrkg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec5<string>("(75)", "5", "(-2-3)", "(-3-5)", "5");
                var v = ov.swizzle.kkrkb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((-4-8)-4)", "", "((09)1)", "(-59)", "");
                var v = ov.swizzle.kkrka;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-8)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec5<string>("", "-9", "", "", "(-19)");
                var v = ov.swizzle.kkrkk;
                Assert.AreEqual("(-19)", v.x);
                Assert.AreEqual("(-19)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-19)", v.w);
                Assert.AreEqual("(-19)", v.v);
            }
            {
                var ov = new gvec5<string>("((19)-4)", null, "((19)-4)", "3", "");
                var v = ov.swizzle.kkg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec5<string>("0", "-8", "(2-5)", "-1", null);
                var v = ov.swizzle.kkgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec5<string>(null, "-5", "8", "((94)0)", "");
                var v = ov.swizzle.kkgrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((78)-1)", "4", "(-4-8)", "2", "-5");
                var v = ov.swizzle.kkgrg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((78)-1)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec5<string>("((0-9)-5)", "(-9-7)", "-6", "(7-2)", "((0-9)-5)");
                var v = ov.swizzle.kkgrb;
                Assert.AreEqual("((0-9)-5)", v.x);
                Assert.AreEqual("((0-9)-5)", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("((0-9)-5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "0", "(5-1)", "((-5-4)0)", "0");
                var v = ov.swizzle.kkgra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-5-4)0)", v.v);
            }
            {
                var ov = new gvec5<string>("4", "(-3-2)", "4", "", "((-7-7)8)");
                var v = ov.swizzle.kkgrk;
                Assert.AreEqual("((-7-7)8)", v.x);
                Assert.AreEqual("((-7-7)8)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-7-7)8)", v.v);
            }
            {
                var ov = new gvec5<string>("(-88)", "((5-1)5)", "(-3-1)", "((5-1)5)", "");
                var v = ov.swizzle.kkgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((5-1)5)", v.z);
                Assert.AreEqual("((5-1)5)", v.w);
            }
            {
                var ov = new gvec5<string>("-6", "(-78)", "(-7-5)", "((-91)9)", "(9-2)");
                var v = ov.swizzle.kkggr;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(9-2)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("((28)1)", "", "(43)", "((2-7)-4)", "((28)1)");
                var v = ov.swizzle.kkggg;
                Assert.AreEqual("((28)1)", v.x);
                Assert.AreEqual("((28)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("-6", "(09)", "((90)-6)", "((-3-6)-2)", "");
                var v = ov.swizzle.kkggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("(09)", v.w);
                Assert.AreEqual("((90)-6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-10)", null, "((-6-3)-9)", "(-9-1)");
                var v = ov.swizzle.kkgga;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("(-9-1)", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("((-6-3)-9)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "", "-6", "((-5-2)9)", "9");
                var v = ov.swizzle.kkggk;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-78)", "((-3-6)-3)", "(-78)", "-9", null);
                var v = ov.swizzle.kkgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-6)-3)", v.z);
                Assert.AreEqual("(-78)", v.w);
            }
            {
                var ov = new gvec5<string>("(-87)", "1", "-4", null, "(-87)");
                var v = ov.swizzle.kkgbr;
                Assert.AreEqual("(-87)", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec5<string>("-7", "((00)-8)", "(-56)", "(-56)", "((00)-8)");
                var v = ov.swizzle.kkgbg;
                Assert.AreEqual("((00)-8)", v.x);
                Assert.AreEqual("((00)-8)", v.y);
                Assert.AreEqual("((00)-8)", v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("((00)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("(85)", null, "-7", "((4-7)-7)", "(-8-3)");
                var v = ov.swizzle.kkgbb;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("(93)", "-2", "((-5-7)-5)", "-8", "(93)");
                var v = ov.swizzle.kkgba;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-5-7)-5)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec5<string>("((-9-4)8)", "((-9-4)8)", "((1-7)-3)", "((-9-2)6)", "(-30)");
                var v = ov.swizzle.kkgbk;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("((-9-4)8)", v.z);
                Assert.AreEqual("((1-7)-3)", v.w);
                Assert.AreEqual("(-30)", v.v);
            }
            {
                var ov = new gvec5<string>("", "8", null, null, "((08)5)");
                var v = ov.swizzle.kkga;
                Assert.AreEqual("((08)5)", v.x);
                Assert.AreEqual("((08)5)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("(1-6)", "((63)-8)", "((63)-8)", "((63)-8)", "((-6-1)6)");
                var v = ov.swizzle.kkgar;
                Assert.AreEqual("((-6-1)6)", v.x);
                Assert.AreEqual("((-6-1)6)", v.y);
                Assert.AreEqual("((63)-8)", v.z);
                Assert.AreEqual("((63)-8)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-7-9)8)", "6", "(-29)", "4", "((0-8)7)");
                var v = ov.swizzle.kkgag;
                Assert.AreEqual("((0-8)7)", v.x);
                Assert.AreEqual("((0-8)7)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-96)", "(99)", "(99)", "-7");
                var v = ov.swizzle.kkgab;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual("(99)", v.w);
                Assert.AreEqual("(99)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)4)", "-4", "", "-4", "");
                var v = ov.swizzle.kkgaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "((-9-5)-2)", "-2", "0");
                var v = ov.swizzle.kkgak;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("(-41)", "((-3-8)-6)", "(63)", "", null);
                var v = ov.swizzle.kkgk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-8)-6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("1", "((51)4)", "", "(27)", "(27)");
                var v = ov.swizzle.kkgkr;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("((51)4)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(80)", "(-6-9)", "(80)", "((30)-4)", "((30)-4)");
                var v = ov.swizzle.kkgkg;
                Assert.AreEqual("((30)-4)", v.x);
                Assert.AreEqual("((30)-4)", v.y);
                Assert.AreEqual("(-6-9)", v.z);
                Assert.AreEqual("((30)-4)", v.w);
                Assert.AreEqual("(-6-9)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "", "(0-7)", "((48)7)", "(5-6)");
                var v = ov.swizzle.kkgkb;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-6)", v.w);
                Assert.AreEqual("(0-7)", v.v);
            }
            {
                var ov = new gvec5<string>("(01)", "((64)-9)", "(-94)", "((-37)-9)", "-1");
                var v = ov.swizzle.kkgka;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((64)-9)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-37)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(-72)", "", "(-72)", "((-3-9)1)", null);
                var v = ov.swizzle.kkgkk;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((5-3)7)", "(-1-5)", "(-1-5)", "(-9-5)", "((5-3)7)");
                var v = ov.swizzle.kkb;
                Assert.AreEqual("((5-3)7)", v.x);
                Assert.AreEqual("((5-3)7)", v.y);
                Assert.AreEqual("(-1-5)", v.z);
            }
            {
                var ov = new gvec5<string>("((-73)-5)", "", "(-47)", null, "((-5-4)4)");
                var v = ov.swizzle.kkbr;
                Assert.AreEqual("((-5-4)4)", v.x);
                Assert.AreEqual("((-5-4)4)", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("((-73)-5)", v.w);
            }
            {
                var ov = new gvec5<string>("((-1-5)-5)", "(6-4)", "", "((-1-5)-5)", "(-3-5)");
                var v = ov.swizzle.kkbrr;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-1-5)-5)", v.w);
                Assert.AreEqual("((-1-5)-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-3", "-3", null, "((21)-1)", "3");
                var v = ov.swizzle.kkbrg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec5<string>("(1-5)", null, "-6", "-6", "");
                var v = ov.swizzle.kkbrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(1-5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(88)", "((36)2)", "7", null);
                var v = ov.swizzle.kkbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((36)2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("((34)9)", null, "((34)9)", "(-2-5)", "(-2-5)");
                var v = ov.swizzle.kkbrk;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("((34)9)", v.z);
                Assert.AreEqual("((34)9)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "(-9-7)", "9", "(68)", null);
                var v = ov.swizzle.kkbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-9-7)", v.w);
            }
            {
                var ov = new gvec5<string>("-5", "5", "-5", "3", "5");
                var v = ov.swizzle.kkbgr;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((4-6)3)", "(-2-3)", "1", "", "((-86)8)");
                var v = ov.swizzle.kkbgg;
                Assert.AreEqual("((-86)8)", v.x);
                Assert.AreEqual("((-86)8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("(-2-3)", v.v);
            }
            {
                var ov = new gvec5<string>("((0-3)0)", null, "(3-6)", "-2", "-2");
                var v = ov.swizzle.kkbgb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-9", "", "", "((57)5)", "((3-6)-9)");
                var v = ov.swizzle.kkbga;
                Assert.AreEqual("((3-6)-9)", v.x);
                Assert.AreEqual("((3-6)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((57)5)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "(-6-1)", "((-7-7)9)", "((-7-7)9)", "1");
                var v = ov.swizzle.kkbgk;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-7-7)9)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((3-3)-3)", "(89)", "((-47)6)", "-3", "((3-3)-3)");
                var v = ov.swizzle.kkbb;
                Assert.AreEqual("((3-3)-3)", v.x);
                Assert.AreEqual("((3-3)-3)", v.y);
                Assert.AreEqual("((-47)6)", v.z);
                Assert.AreEqual("((-47)6)", v.w);
            }
            {
                var ov = new gvec5<string>("-1", "-1", "((21)1)", "(64)", "((2-7)-2)");
                var v = ov.swizzle.kkbbr;
                Assert.AreEqual("((2-7)-2)", v.x);
                Assert.AreEqual("((2-7)-2)", v.y);
                Assert.AreEqual("((21)1)", v.z);
                Assert.AreEqual("((21)1)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec5<string>("", "((6-7)4)", "1", "((6-7)4)", "((89)-8)");
                var v = ov.swizzle.kkbbg;
                Assert.AreEqual("((89)-8)", v.x);
                Assert.AreEqual("((89)-8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((6-7)4)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(-13)", "", "6", "((4-8)5)");
                var v = ov.swizzle.kkbbb;
                Assert.AreEqual("((4-8)5)", v.x);
                Assert.AreEqual("((4-8)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec5<string>("((-1-9)7)", "-5", "((-1-9)7)", null, "((2-5)-8)");
                var v = ov.swizzle.kkbba;
                Assert.AreEqual("((2-5)-8)", v.x);
                Assert.AreEqual("((2-5)-8)", v.y);
                Assert.AreEqual("((-1-9)7)", v.z);
                Assert.AreEqual("((-1-9)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("(-64)", "((-3-5)4)", "((1-6)-3)", "6", "((1-6)-3)");
                var v = ov.swizzle.kkbbk;
                Assert.AreEqual("((1-6)-3)", v.x);
                Assert.AreEqual("((1-6)-3)", v.y);
                Assert.AreEqual("((1-6)-3)", v.z);
                Assert.AreEqual("((1-6)-3)", v.w);
                Assert.AreEqual("((1-6)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((-5-5)-9)", "(0-2)", "((-78)-2)", null);
                var v = ov.swizzle.kkba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((-78)-2)", v.w);
            }
            {
                var ov = new gvec5<string>("(-15)", "-8", "-3", "((-21)3)", null);
                var v = ov.swizzle.kkbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-21)3)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-8)7)", "((7-8)7)", "((9-9)-8)", "-6", "3");
                var v = ov.swizzle.kkbag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((9-9)-8)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((7-8)7)", v.v);
            }
            {
                var ov = new gvec5<string>("((7-3)9)", "((-49)9)", "1", "((7-3)9)", "((-98)4)");
                var v = ov.swizzle.kkbab;
                Assert.AreEqual("((-98)4)", v.x);
                Assert.AreEqual("((-98)4)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((7-3)9)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("(3-7)", "9", "", "((-16)-4)", "((-5-6)6)");
                var v = ov.swizzle.kkbaa;
                Assert.AreEqual("((-5-6)6)", v.x);
                Assert.AreEqual("((-5-6)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-16)-4)", v.w);
                Assert.AreEqual("((-16)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "", "((33)-9)", "-2", "-4");
                var v = ov.swizzle.kkbak;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((33)-9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("((1-1)-3)", "(4-3)", "-9", "((-64)4)", "(4-3)");
                var v = ov.swizzle.kkbk;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(4-3)", v.w);
            }
            {
                var ov = new gvec5<string>("((31)3)", "((-13)-1)", "-8", "(-1-9)", "(35)");
                var v = ov.swizzle.kkbkr;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("((31)3)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "0", "(-73)", "-1", "((76)-2)");
                var v = ov.swizzle.kkbkg;
                Assert.AreEqual("((76)-2)", v.x);
                Assert.AreEqual("((76)-2)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("((76)-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((40)0)", "4", "-2", "((0-7)5)", "(-25)");
                var v = ov.swizzle.kkbkb;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec5<string>("((45)-8)", "((21)-6)", "(58)", "((45)-8)", "(58)");
                var v = ov.swizzle.kkbka;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("((45)-8)", v.v);
            }
            {
                var ov = new gvec5<string>("7", "((04)4)", null, "((50)4)", "((-7-5)-3)");
                var v = ov.swizzle.kkbkk;
                Assert.AreEqual("((-7-5)-3)", v.x);
                Assert.AreEqual("((-7-5)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-5)-3)", v.w);
                Assert.AreEqual("((-7-5)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("0", "7", null, "9", "7");
                var v = ov.swizzle.kka;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("9", v.z);
            }
            {
                var ov = new gvec5<string>(null, "-6", "((-8-1)4)", "1", "((-8-1)4)");
                var v = ov.swizzle.kkar;
                Assert.AreEqual("((-8-1)4)", v.x);
                Assert.AreEqual("((-8-1)4)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("((81)-1)", "(3-4)", "3", "(87)", "(-46)");
                var v = ov.swizzle.kkarr;
                Assert.AreEqual("(-46)", v.x);
                Assert.AreEqual("(-46)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("((81)-1)", v.w);
                Assert.AreEqual("((81)-1)", v.v);
            }
            {
                var ov = new gvec5<string>("((-6-4)5)", "(68)", "-6", null, "");
                var v = ov.swizzle.kkarg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-6-4)5)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec5<string>("((3-9)0)", "((-57)-5)", "((67)-6)", "-7", "");
                var v = ov.swizzle.kkarb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((3-9)0)", v.w);
                Assert.AreEqual("((67)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("-2", "(8-3)", "((-91)2)", "((65)-9)", "9");
                var v = ov.swizzle.kkara;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((65)-9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((65)-9)", v.v);
            }
            {
                var ov = new gvec5<string>("(02)", "(6-3)", "((-76)1)", "(17)", "((-76)1)");
                var v = ov.swizzle.kkark;
                Assert.AreEqual("((-76)1)", v.x);
                Assert.AreEqual("((-76)1)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(02)", v.w);
                Assert.AreEqual("((-76)1)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-5)", "(21)", "9", "((3-8)1)", "3");
                var v = ov.swizzle.kkag;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((3-8)1)", v.z);
                Assert.AreEqual("(21)", v.w);
            }
            {
                var ov = new gvec5<string>("9", "-7", "((04)-7)", "(-15)", "-7");
                var v = ov.swizzle.kkagr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-4-8)", "3", null, "((-12)-8)", "7");
                var v = ov.swizzle.kkagg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-12)-8)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-2)", "((07)0)", "((12)0)", "((12)0)", "(95)");
                var v = ov.swizzle.kkagb;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("((12)0)", v.z);
                Assert.AreEqual("((07)0)", v.w);
                Assert.AreEqual("((12)0)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-6-2)", "((-8-3)4)", "2", "((-8-3)4)");
                var v = ov.swizzle.kkaga;
                Assert.AreEqual("((-8-3)4)", v.x);
                Assert.AreEqual("((-8-3)4)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("((1-8)-8)", "6", "(2-1)", "((30)-1)", "-9");
                var v = ov.swizzle.kkagk;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((30)-1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "(9-4)", "(12)", "", "8");
                var v = ov.swizzle.kkab;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(12)", v.w);
            }
            {
                var ov = new gvec5<string>("((-36)2)", "(-38)", "-2", "1", "((-36)2)");
                var v = ov.swizzle.kkabr;
                Assert.AreEqual("((-36)2)", v.x);
                Assert.AreEqual("((-36)2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-36)2)", v.v);
            }
            {
                var ov = new gvec5<string>("8", "(2-9)", "(36)", "(-9-5)", "((4-2)-4)");
                var v = ov.swizzle.kkabg;
                Assert.AreEqual("((4-2)-4)", v.x);
                Assert.AreEqual("((4-2)-4)", v.y);
                Assert.AreEqual("(-9-5)", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("(2-9)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((45)3)", "3", "((5-3)1)", "(7-3)");
                var v = ov.swizzle.kkabb;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("((5-3)1)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(4-6)", null, "2", "9", "2");
                var v = ov.swizzle.kkaba;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec5<string>("(-93)", "", "(20)", "", "((24)-2)");
                var v = ov.swizzle.kkabk;
                Assert.AreEqual("((24)-2)", v.x);
                Assert.AreEqual("((24)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("((24)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("", "(23)", "(-72)", "((7-4)9)", "(7-9)");
                var v = ov.swizzle.kkaa;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("((7-4)9)", v.z);
                Assert.AreEqual("((7-4)9)", v.w);
            }
            {
                var ov = new gvec5<string>("8", "", "((-57)-9)", "((-47)-1)", "");
                var v = ov.swizzle.kkaar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-47)-1)", v.z);
                Assert.AreEqual("((-47)-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("(-9-9)", "((1-8)-3)", "((-65)-9)", "", "(43)");
                var v = ov.swizzle.kkaag;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("(43)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-8)-3)", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "((4-3)-4)", "((4-3)-4)", "((4-3)-4)", "(-67)");
                var v = ov.swizzle.kkaab;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("((4-3)-4)", v.z);
                Assert.AreEqual("((4-3)-4)", v.w);
                Assert.AreEqual("((4-3)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("-5", "((-16)-6)", "-2", "(-7-9)", "((2-8)2)");
                var v = ov.swizzle.kkaaa;
                Assert.AreEqual("((2-8)2)", v.x);
                Assert.AreEqual("((2-8)2)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec5<string>("((6-3)-5)", "((3-5)3)", "((3-5)3)", "((-4-3)-5)", "(4-4)");
                var v = ov.swizzle.kkaak;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual("((-4-3)-5)", v.z);
                Assert.AreEqual("((-4-3)-5)", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-4)", "((-9-5)6)", "((-9-5)6)", null, "((-9-5)6)");
                var v = ov.swizzle.kkak;
                Assert.AreEqual("((-9-5)6)", v.x);
                Assert.AreEqual("((-9-5)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-5)6)", v.w);
            }
            {
                var ov = new gvec5<string>("(-9-8)", "6", "7", "(-9-8)", "((-42)-1)");
                var v = ov.swizzle.kkakr;
                Assert.AreEqual("((-42)-1)", v.x);
                Assert.AreEqual("((-42)-1)", v.y);
                Assert.AreEqual("(-9-8)", v.z);
                Assert.AreEqual("((-42)-1)", v.w);
                Assert.AreEqual("(-9-8)", v.v);
            }
            {
                var ov = new gvec5<string>("3", "((06)8)", "6", null, "((06)8)");
                var v = ov.swizzle.kkakg;
                Assert.AreEqual("((06)8)", v.x);
                Assert.AreEqual("((06)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((06)8)", v.w);
                Assert.AreEqual("((06)8)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "4", "-5", "((-1-3)-3)", "((-1-3)-3)");
                var v = ov.swizzle.kkakb;
                Assert.AreEqual("((-1-3)-3)", v.x);
                Assert.AreEqual("((-1-3)-3)", v.y);
                Assert.AreEqual("((-1-3)-3)", v.z);
                Assert.AreEqual("((-1-3)-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec5<string>("((9-1)5)", "-4", "-7", "(-68)", "-4");
                var v = ov.swizzle.kkaka;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-68)", v.v);
            }
            {
                var ov = new gvec5<string>("((85)-2)", "", "8", "(-3-1)", "((85)-2)");
                var v = ov.swizzle.kkakk;
                Assert.AreEqual("((85)-2)", v.x);
                Assert.AreEqual("((85)-2)", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("((85)-2)", v.w);
                Assert.AreEqual("((85)-2)", v.v);
            }
            {
                var ov = new gvec5<string>("(7-8)", "((24)1)", "6", "(7-8)", "6");
                var v = ov.swizzle.kkk;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
            }
            {
                var ov = new gvec5<string>(null, "((-88)2)", "((-88)2)", "2", "1");
                var v = ov.swizzle.kkkr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec5<string>("-7", "3", "-7", "(6-4)", "3");
                var v = ov.swizzle.kkkrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec5<string>("-4", "-4", "((1-8)-3)", "((1-8)-3)", "(46)");
                var v = ov.swizzle.kkkrg;
                Assert.AreEqual("(46)", v.x);
                Assert.AreEqual("(46)", v.y);
                Assert.AreEqual("(46)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec5<string>("(-3-9)", "((-3-4)-1)", "7", "(90)", "((-3-4)-1)");
                var v = ov.swizzle.kkkrb;
                Assert.AreEqual("((-3-4)-1)", v.x);
                Assert.AreEqual("((-3-4)-1)", v.y);
                Assert.AreEqual("((-3-4)-1)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("(7-6)", "(83)", "(7-6)", "(83)", "4");
                var v = ov.swizzle.kkkra;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("(83)", v.v);
            }
            {
                var ov = new gvec5<string>("(-15)", "(-15)", "(06)", "(24)", "(-15)");
                var v = ov.swizzle.kkkrk;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "-2", null, "-2", "1");
                var v = ov.swizzle.kkkg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec5<string>("(-90)", "((8-8)-5)", "-6", "-6", "((04)-3)");
                var v = ov.swizzle.kkkgr;
                Assert.AreEqual("((04)-3)", v.x);
                Assert.AreEqual("((04)-3)", v.y);
                Assert.AreEqual("((04)-3)", v.z);
                Assert.AreEqual("((8-8)-5)", v.w);
                Assert.AreEqual("(-90)", v.v);
            }
            {
                var ov = new gvec5<string>(null, null, "-5", "(46)", "(1-7)");
                var v = ov.swizzle.kkkgg;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec5<string>("((15)8)", "((6-6)-1)", "0", "(-92)", "2");
                var v = ov.swizzle.kkkgb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((6-6)-1)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec5<string>("((67)-6)", "(2-7)", "(-1-5)", "((-4-1)-4)", null);
                var v = ov.swizzle.kkkga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("((-4-1)-4)", v.v);
            }
            {
                var ov = new gvec5<string>("((-8-4)-3)", "(-6-3)", "(-6-3)", null, "(-3-1)");
                var v = ov.swizzle.kkkgk;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec5<string>("(99)", null, "", null, "((62)1)");
                var v = ov.swizzle.kkkb;
                Assert.AreEqual("((62)1)", v.x);
                Assert.AreEqual("((62)1)", v.y);
                Assert.AreEqual("((62)1)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec5<string>("((9-6)-6)", "7", "8", null, "7");
                var v = ov.swizzle.kkkbr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((9-6)-6)", v.v);
            }
            {
                var ov = new gvec5<string>("9", "((37)4)", "9", "-7", "((-3-6)-8)");
                var v = ov.swizzle.kkkbg;
                Assert.AreEqual("((-3-6)-8)", v.x);
                Assert.AreEqual("((-3-6)-8)", v.y);
                Assert.AreEqual("((-3-6)-8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((37)4)", v.v);
            }
            {
                var ov = new gvec5<string>("(92)", "1", "1", "(53)", "1");
                var v = ov.swizzle.kkkbb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec5<string>("((-2-1)-2)", "((-4-7)-5)", "(0-4)", "7", "");
                var v = ov.swizzle.kkkba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec5<string>("5", "(-19)", "((9-2)-1)", "", "8");
                var v = ov.swizzle.kkkbk;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((9-2)-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec5<string>("", "((22)3)", "-5", "-9", "-9");
                var v = ov.swizzle.kkka;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec5<string>("(39)", "((-7-7)-1)", "-9", "(39)", "((-7-7)-1)");
                var v = ov.swizzle.kkkar;
                Assert.AreEqual("((-7-7)-1)", v.x);
                Assert.AreEqual("((-7-7)-1)", v.y);
                Assert.AreEqual("((-7-7)-1)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("(39)", v.v);
            }
            {
                var ov = new gvec5<string>("", "((-65)5)", "9", null, "((-98)-4)");
                var v = ov.swizzle.kkkag;
                Assert.AreEqual("((-98)-4)", v.x);
                Assert.AreEqual("((-98)-4)", v.y);
                Assert.AreEqual("((-98)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-65)5)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(-4-1)", "(29)", null, "((8-9)9)");
                var v = ov.swizzle.kkkab;
                Assert.AreEqual("((8-9)9)", v.x);
                Assert.AreEqual("((8-9)9)", v.y);
                Assert.AreEqual("((8-9)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec5<string>("1", "((-41)-8)", "(2-4)", "2", "2");
                var v = ov.swizzle.kkkaa;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec5<string>("-1", "", "(13)", "-5", "((-24)7)");
                var v = ov.swizzle.kkkak;
                Assert.AreEqual("((-24)7)", v.x);
                Assert.AreEqual("((-24)7)", v.y);
                Assert.AreEqual("((-24)7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-24)7)", v.v);
            }
            {
                var ov = new gvec5<string>("(2-8)", "-5", "", null, "((5-9)8)");
                var v = ov.swizzle.kkkk;
                Assert.AreEqual("((5-9)8)", v.x);
                Assert.AreEqual("((5-9)8)", v.y);
                Assert.AreEqual("((5-9)8)", v.z);
                Assert.AreEqual("((5-9)8)", v.w);
            }
            {
                var ov = new gvec5<string>("3", "(6-3)", "(6-3)", "((-34)-3)", "((-65)5)");
                var v = ov.swizzle.kkkkr;
                Assert.AreEqual("((-65)5)", v.x);
                Assert.AreEqual("((-65)5)", v.y);
                Assert.AreEqual("((-65)5)", v.z);
                Assert.AreEqual("((-65)5)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec5<string>("(1-3)", "((-17)6)", null, "((79)0)", "-3");
                var v = ov.swizzle.kkkkg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-17)6)", v.v);
            }
            {
                var ov = new gvec5<string>(null, "(7-6)", "(7-6)", "-8", null);
                var v = ov.swizzle.kkkkb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(7-6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-5-7)5)", "5", "((96)-2)", "((9-5)6)", null);
                var v = ov.swizzle.kkkka;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((9-5)6)", v.v);
            }
            {
                var ov = new gvec5<string>("((-60)6)", "-1", "0", "3", "((12)-1)");
                var v = ov.swizzle.kkkkk;
                Assert.AreEqual("((12)-1)", v.x);
                Assert.AreEqual("((12)-1)", v.y);
                Assert.AreEqual("((12)-1)", v.z);
                Assert.AreEqual("((12)-1)", v.w);
                Assert.AreEqual("((12)-1)", v.v);
            }
        }

        [Test]
        public void InlineXYZW()
        {
            {
                var v0 = new gvec5<string>("-6", "((1-7)-7)", null, "", "((61)-6)");
                var v1 = new gvec2<string>("5", null);
                var v2 = v0.xy;
                v0.xy = v1;
                var v3 = v0.xy;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("5", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("((61)-6)", v0.v);
            
                Assert.AreEqual("-6", v2.x);
                Assert.AreEqual("((1-7)-7)", v2.y);
            }
            {
                var v0 = new gvec5<string>("(-9-2)", "(-9-2)", "((56)-8)", "-6", "-6");
                var v1 = new gvec2<string>("((-2-2)8)", "-8");
                var v2 = v0.xz;
                v0.xz = v1;
                var v3 = v0.xz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-2-2)8)", v0.x);
                Assert.AreEqual("(-9-2)", v0.y);
                Assert.AreEqual("-8", v0.z);
                Assert.AreEqual("-6", v0.w);
                Assert.AreEqual("-6", v0.v);
            
                Assert.AreEqual("(-9-2)", v2.x);
                Assert.AreEqual("((56)-8)", v2.y);
            }
            {
                var v0 = new gvec5<string>("(41)", "5", "-9", "(8-3)", "");
                var v1 = new gvec2<string>("6", "((-46)7)");
                var v2 = v0.yz;
                v0.yz = v1;
                var v3 = v0.yz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(41)", v0.x);
                Assert.AreEqual("6", v0.y);
                Assert.AreEqual("((-46)7)", v0.z);
                Assert.AreEqual("(8-3)", v0.w);
                Assert.AreEqual("", v0.v);
            
                Assert.AreEqual("5", v2.x);
                Assert.AreEqual("-9", v2.y);
            }
            {
                var v0 = new gvec5<string>("((24)0)", "-7", "3", "(0-5)", "(78)");
                var v1 = new gvec3<string>("-8", "-8", "((-4-8)5)");
                var v2 = v0.xyz;
                v0.xyz = v1;
                var v3 = v0.xyz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-8", v0.x);
                Assert.AreEqual("-8", v0.y);
                Assert.AreEqual("((-4-8)5)", v0.z);
                Assert.AreEqual("(0-5)", v0.w);
                Assert.AreEqual("(78)", v0.v);
            
                Assert.AreEqual("((24)0)", v2.x);
                Assert.AreEqual("-7", v2.y);
                Assert.AreEqual("3", v2.z);
            }
            {
                var v0 = new gvec5<string>("0", null, "", "(4-2)", "(38)");
                var v1 = new gvec2<string>("(-5-6)", "((1-3)0)");
                var v2 = v0.xw;
                v0.xw = v1;
                var v3 = v0.xw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-5-6)", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("", v0.z);
                Assert.AreEqual("((1-3)0)", v0.w);
                Assert.AreEqual("(38)", v0.v);
            
                Assert.AreEqual("0", v2.x);
                Assert.AreEqual("(4-2)", v2.y);
            }
            {
                var v0 = new gvec5<string>("", "(-86)", "", "6", "5");
                var v1 = new gvec2<string>("(8-9)", "");
                var v2 = v0.yw;
                v0.yw = v1;
                var v3 = v0.yw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("(8-9)", v0.y);
                Assert.AreEqual("", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("5", v0.v);
            
                Assert.AreEqual("(-86)", v2.x);
                Assert.AreEqual("6", v2.y);
            }
            {
                var v0 = new gvec5<string>("", "(-8-9)", "(-8-9)", "-8", "5");
                var v1 = new gvec3<string>("-3", "(10)", "-2");
                var v2 = v0.xyw;
                v0.xyw = v1;
                var v3 = v0.xyw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-3", v0.x);
                Assert.AreEqual("(10)", v0.y);
                Assert.AreEqual("(-8-9)", v0.z);
                Assert.AreEqual("-2", v0.w);
                Assert.AreEqual("5", v0.v);
            
                Assert.AreEqual("", v2.x);
                Assert.AreEqual("(-8-9)", v2.y);
                Assert.AreEqual("-8", v2.z);
            }
            {
                var v0 = new gvec5<string>(null, "(34)", "((5-2)-7)", "((-98)-6)", "8");
                var v1 = new gvec2<string>("6", "-1");
                var v2 = v0.zw;
                v0.zw = v1;
                var v3 = v0.zw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("(34)", v0.y);
                Assert.AreEqual("6", v0.z);
                Assert.AreEqual("-1", v0.w);
                Assert.AreEqual("8", v0.v);
            
                Assert.AreEqual("((5-2)-7)", v2.x);
                Assert.AreEqual("((-98)-6)", v2.y);
            }
            {
                var v0 = new gvec5<string>("-6", "9", "", "(-21)", "-9");
                var v1 = new gvec3<string>("6", "(-4-4)", "6");
                var v2 = v0.xzw;
                v0.xzw = v1;
                var v3 = v0.xzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("6", v0.x);
                Assert.AreEqual("9", v0.y);
                Assert.AreEqual("(-4-4)", v0.z);
                Assert.AreEqual("6", v0.w);
                Assert.AreEqual("-9", v0.v);
            
                Assert.AreEqual("-6", v2.x);
                Assert.AreEqual("", v2.y);
                Assert.AreEqual("(-21)", v2.z);
            }
            {
                var v0 = new gvec5<string>("((-39)-7)", "((-81)7)", "3", null, "-5");
                var v1 = new gvec3<string>("((-90)-2)", "((-53)0)", "((41)3)");
                var v2 = v0.yzw;
                v0.yzw = v1;
                var v3 = v0.yzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-39)-7)", v0.x);
                Assert.AreEqual("((-90)-2)", v0.y);
                Assert.AreEqual("((-53)0)", v0.z);
                Assert.AreEqual("((41)3)", v0.w);
                Assert.AreEqual("-5", v0.v);
            
                Assert.AreEqual("((-81)7)", v2.x);
                Assert.AreEqual("3", v2.y);
                Assert.AreEqual(null, v2.z);
            }
            {
                var v0 = new gvec5<string>(null, null, "((-8-4)-4)", "((-19)-2)", "((-19)-2)");
                var v1 = new gvec4<string>("(-1-6)", "8", null, "(4-8)");
                var v2 = v0.xyzw;
                v0.xyzw = v1;
                var v3 = v0.xyzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-1-6)", v0.x);
                Assert.AreEqual("8", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("(4-8)", v0.w);
                Assert.AreEqual("((-19)-2)", v0.v);
            
                Assert.AreEqual(null, v2.x);
                Assert.AreEqual(null, v2.y);
                Assert.AreEqual("((-8-4)-4)", v2.z);
                Assert.AreEqual("((-19)-2)", v2.w);
            }
            {
                var v0 = new gvec5<string>("3", "((-92)4)", "(5-2)", "", null);
                var v1 = new gvec2<string>("-5", "-5");
                var v2 = v0.xv;
                v0.xv = v1;
                var v3 = v0.xv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-5", v0.x);
                Assert.AreEqual("((-92)4)", v0.y);
                Assert.AreEqual("(5-2)", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("-5", v0.v);
            
                Assert.AreEqual("3", v2.x);
                Assert.AreEqual(null, v2.y);
            }
            {
                var v0 = new gvec5<string>("((-85)-3)", "((-85)-3)", "(5-4)", "-8", "((-85)-3)");
                var v1 = new gvec2<string>("((-4-7)2)", "9");
                var v2 = v0.yv;
                v0.yv = v1;
                var v3 = v0.yv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-85)-3)", v0.x);
                Assert.AreEqual("((-4-7)2)", v0.y);
                Assert.AreEqual("(5-4)", v0.z);
                Assert.AreEqual("-8", v0.w);
                Assert.AreEqual("9", v0.v);
            
                Assert.AreEqual("((-85)-3)", v2.x);
                Assert.AreEqual("((-85)-3)", v2.y);
            }
            {
                var v0 = new gvec5<string>("(-2-4)", "", null, "-3", "(30)");
                var v1 = new gvec3<string>("(-83)", "(07)", "((3-6)7)");
                var v2 = v0.xyv;
                v0.xyv = v1;
                var v3 = v0.xyv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-83)", v0.x);
                Assert.AreEqual("(07)", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("-3", v0.w);
                Assert.AreEqual("((3-6)7)", v0.v);
            
                Assert.AreEqual("(-2-4)", v2.x);
                Assert.AreEqual("", v2.y);
                Assert.AreEqual("(30)", v2.z);
            }
            {
                var v0 = new gvec5<string>("((-84)-7)", null, "(16)", "((12)4)", "9");
                var v1 = new gvec2<string>("8", "((-3-9)5)");
                var v2 = v0.zv;
                v0.zv = v1;
                var v3 = v0.zv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-84)-7)", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("8", v0.z);
                Assert.AreEqual("((12)4)", v0.w);
                Assert.AreEqual("((-3-9)5)", v0.v);
            
                Assert.AreEqual("(16)", v2.x);
                Assert.AreEqual("9", v2.y);
            }
            {
                var v0 = new gvec5<string>("-4", "-1", "((-9-7)2)", "(5-2)", "((-9-7)2)");
                var v1 = new gvec3<string>("", "(0-5)", "9");
                var v2 = v0.xzv;
                v0.xzv = v1;
                var v3 = v0.xzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("-1", v0.y);
                Assert.AreEqual("(0-5)", v0.z);
                Assert.AreEqual("(5-2)", v0.w);
                Assert.AreEqual("9", v0.v);
            
                Assert.AreEqual("-4", v2.x);
                Assert.AreEqual("((-9-7)2)", v2.y);
                Assert.AreEqual("((-9-7)2)", v2.z);
            }
            {
                var v0 = new gvec5<string>("(-6-3)", "-4", "-3", "", "1");
                var v1 = new gvec3<string>("3", "((-2-8)-5)", "(11)");
                var v2 = v0.yzv;
                v0.yzv = v1;
                var v3 = v0.yzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-6-3)", v0.x);
                Assert.AreEqual("3", v0.y);
                Assert.AreEqual("((-2-8)-5)", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("(11)", v0.v);
            
                Assert.AreEqual("-4", v2.x);
                Assert.AreEqual("-3", v2.y);
                Assert.AreEqual("1", v2.z);
            }
            {
                var v0 = new gvec5<string>("((01)6)", "((-14)-9)", "(27)", "((-14)-9)", "-5");
                var v1 = new gvec4<string>("((47)1)", "((87)-6)", null, "((87)-6)");
                var v2 = v0.xyzv;
                v0.xyzv = v1;
                var v3 = v0.xyzv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((47)1)", v0.x);
                Assert.AreEqual("((87)-6)", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("((-14)-9)", v0.w);
                Assert.AreEqual("((87)-6)", v0.v);
            
                Assert.AreEqual("((01)6)", v2.x);
                Assert.AreEqual("((-14)-9)", v2.y);
                Assert.AreEqual("(27)", v2.z);
                Assert.AreEqual("-5", v2.w);
            }
            {
                var v0 = new gvec5<string>("", "((00)9)", "-1", "-1", "");
                var v1 = new gvec2<string>("((03)6)", "-2");
                var v2 = v0.wv;
                v0.wv = v1;
                var v3 = v0.wv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("((00)9)", v0.y);
                Assert.AreEqual("-1", v0.z);
                Assert.AreEqual("((03)6)", v0.w);
                Assert.AreEqual("-2", v0.v);
            
                Assert.AreEqual("-1", v2.x);
                Assert.AreEqual("", v2.y);
            }
            {
                var v0 = new gvec5<string>("((53)-1)", "7", "(-6-1)", "", null);
                var v1 = new gvec3<string>("((-91)2)", null, "((-91)2)");
                var v2 = v0.xwv;
                v0.xwv = v1;
                var v3 = v0.xwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-91)2)", v0.x);
                Assert.AreEqual("7", v0.y);
                Assert.AreEqual("(-6-1)", v0.z);
                Assert.AreEqual(null, v0.w);
                Assert.AreEqual("((-91)2)", v0.v);
            
                Assert.AreEqual("((53)-1)", v2.x);
                Assert.AreEqual("", v2.y);
                Assert.AreEqual(null, v2.z);
            }
            {
                var v0 = new gvec5<string>(null, "(38)", "((-52)5)", "((3-2)2)", "((-52)5)");
                var v1 = new gvec3<string>("-6", "-6", "-8");
                var v2 = v0.ywv;
                v0.ywv = v1;
                var v3 = v0.ywv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("-6", v0.y);
                Assert.AreEqual("((-52)5)", v0.z);
                Assert.AreEqual("-6", v0.w);
                Assert.AreEqual("-8", v0.v);
            
                Assert.AreEqual("(38)", v2.x);
                Assert.AreEqual("((3-2)2)", v2.y);
                Assert.AreEqual("((-52)5)", v2.z);
            }
            {
                var v0 = new gvec5<string>("-7", "", "(-29)", "-7", "-7");
                var v1 = new gvec4<string>("(73)", "((-1-8)7)", "(8-8)", "(8-8)");
                var v2 = v0.xywv;
                v0.xywv = v1;
                var v3 = v0.xywv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(73)", v0.x);
                Assert.AreEqual("((-1-8)7)", v0.y);
                Assert.AreEqual("(-29)", v0.z);
                Assert.AreEqual("(8-8)", v0.w);
                Assert.AreEqual("(8-8)", v0.v);
            
                Assert.AreEqual("-7", v2.x);
                Assert.AreEqual("", v2.y);
                Assert.AreEqual("-7", v2.z);
                Assert.AreEqual("-7", v2.w);
            }
            {
                var v0 = new gvec5<string>(null, "-1", "(46)", "(-29)", "((35)0)");
                var v1 = new gvec3<string>("((45)9)", "4", null);
                var v2 = v0.zwv;
                v0.zwv = v1;
                var v3 = v0.zwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("-1", v0.y);
                Assert.AreEqual("((45)9)", v0.z);
                Assert.AreEqual("4", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("(46)", v2.x);
                Assert.AreEqual("(-29)", v2.y);
                Assert.AreEqual("((35)0)", v2.z);
            }
            {
                var v0 = new gvec5<string>("(4-8)", null, "(-7-2)", "", "((93)5)");
                var v1 = new gvec4<string>("((-47)9)", "((1-6)-1)", "4", null);
                var v2 = v0.xzwv;
                v0.xzwv = v1;
                var v3 = v0.xzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-47)9)", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("((1-6)-1)", v0.z);
                Assert.AreEqual("4", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("(4-8)", v2.x);
                Assert.AreEqual("(-7-2)", v2.y);
                Assert.AreEqual("", v2.z);
                Assert.AreEqual("((93)5)", v2.w);
            }
            {
                var v0 = new gvec5<string>("(-6-8)", "-3", "((8-1)-9)", "((-6-5)1)", "(-6-8)");
                var v1 = new gvec4<string>("(23)", "((-5-3)1)", "(7-1)", null);
                var v2 = v0.yzwv;
                v0.yzwv = v1;
                var v3 = v0.yzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-6-8)", v0.x);
                Assert.AreEqual("(23)", v0.y);
                Assert.AreEqual("((-5-3)1)", v0.z);
                Assert.AreEqual("(7-1)", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("-3", v2.x);
                Assert.AreEqual("((8-1)-9)", v2.y);
                Assert.AreEqual("((-6-5)1)", v2.z);
                Assert.AreEqual("(-6-8)", v2.w);
            }
            {
                var v0 = new gvec5<string>("(18)", "(51)", "(51)", "6", "((3-9)4)");
                var v1 = new gvec5<string>("", "(-97)", "(30)", "((-8-4)4)", null);
                var v2 = v0.xyzwv;
                v0.xyzwv = v1;
                var v3 = v0.xyzwv;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("(-97)", v0.y);
                Assert.AreEqual("(30)", v0.z);
                Assert.AreEqual("((-8-4)4)", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("(18)", v2.x);
                Assert.AreEqual("(51)", v2.y);
                Assert.AreEqual("(51)", v2.z);
                Assert.AreEqual("6", v2.w);
                Assert.AreEqual("((3-9)4)", v2.v);
            }
        }

        [Test]
        public void InlineRGBA()
        {
            {
                var v0 = new gvec5<string>("-7", "-6", "((1-2)-8)", "((1-2)-8)", "5");
                var v1 = null;
                var v2 = v0.r;
                v0.r = v1;
                var v3 = v0.r;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("-6", v0.y);
                Assert.AreEqual("((1-2)-8)", v0.z);
                Assert.AreEqual("((1-2)-8)", v0.w);
                Assert.AreEqual("5", v0.v);
            
                Assert.AreEqual("-7", v2);
            }
            {
                var v0 = new gvec5<string>("", "((-1-7)-6)", "((-1-7)-6)", "((85)-9)", "((9-2)-1)");
                var v1 = "((3-8)1)";
                var v2 = v0.g;
                v0.g = v1;
                var v3 = v0.g;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("((3-8)1)", v0.y);
                Assert.AreEqual("((-1-7)-6)", v0.z);
                Assert.AreEqual("((85)-9)", v0.w);
                Assert.AreEqual("((9-2)-1)", v0.v);
            
                Assert.AreEqual("((-1-7)-6)", v2);
            }
            {
                var v0 = new gvec5<string>("(-8-4)", null, null, "((-19)-9)", "(-91)");
                var v1 = new gvec2<string>("-3", "-3");
                var v2 = v0.rg;
                v0.rg = v1;
                var v3 = v0.rg;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-3", v0.x);
                Assert.AreEqual("-3", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("((-19)-9)", v0.w);
                Assert.AreEqual("(-91)", v0.v);
            
                Assert.AreEqual("(-8-4)", v2.x);
                Assert.AreEqual(null, v2.y);
            }
            {
                var v0 = new gvec5<string>("-1", "1", "((-83)-1)", "((-6-6)-7)", "6");
                var v1 = "8";
                var v2 = v0.b;
                v0.b = v1;
                var v3 = v0.b;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-1", v0.x);
                Assert.AreEqual("1", v0.y);
                Assert.AreEqual("8", v0.z);
                Assert.AreEqual("((-6-6)-7)", v0.w);
                Assert.AreEqual("6", v0.v);
            
                Assert.AreEqual("((-83)-1)", v2);
            }
            {
                var v0 = new gvec5<string>("", "", "((-2-4)6)", "2", "(-2-5)");
                var v1 = new gvec2<string>("((-39)-9)", "-4");
                var v2 = v0.rb;
                v0.rb = v1;
                var v3 = v0.rb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-39)-9)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("-4", v0.z);
                Assert.AreEqual("2", v0.w);
                Assert.AreEqual("(-2-5)", v0.v);
            
                Assert.AreEqual("", v2.x);
                Assert.AreEqual("((-2-4)6)", v2.y);
            }
            {
                var v0 = new gvec5<string>("", "((-3-4)-7)", "-5", "-5", null);
                var v1 = new gvec2<string>("", null);
                var v2 = v0.gb;
                v0.gb = v1;
                var v3 = v0.gb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("-5", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("((-3-4)-7)", v2.x);
                Assert.AreEqual("-5", v2.y);
            }
            {
                var v0 = new gvec5<string>("((2-5)-5)", "(40)", null, "3", "(40)");
                var v1 = new gvec3<string>("((69)-4)", "-8", "((69)-4)");
                var v2 = v0.rgb;
                v0.rgb = v1;
                var v3 = v0.rgb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((69)-4)", v0.x);
                Assert.AreEqual("-8", v0.y);
                Assert.AreEqual("((69)-4)", v0.z);
                Assert.AreEqual("3", v0.w);
                Assert.AreEqual("(40)", v0.v);
            
                Assert.AreEqual("((2-5)-5)", v2.x);
                Assert.AreEqual("(40)", v2.y);
                Assert.AreEqual(null, v2.z);
            }
            {
                var v0 = new gvec5<string>("3", "5", "(28)", "(3-2)", "((4-9)8)");
                var v1 = "3";
                var v2 = v0.a;
                v0.a = v1;
                var v3 = v0.a;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("3", v0.x);
                Assert.AreEqual("5", v0.y);
                Assert.AreEqual("(28)", v0.z);
                Assert.AreEqual("3", v0.w);
                Assert.AreEqual("((4-9)8)", v0.v);
            
                Assert.AreEqual("(3-2)", v2);
            }
            {
                var v0 = new gvec5<string>("1", "(09)", "1", "0", "2");
                var v1 = new gvec2<string>("((37)-6)", null);
                var v2 = v0.ra;
                v0.ra = v1;
                var v3 = v0.ra;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((37)-6)", v0.x);
                Assert.AreEqual("(09)", v0.y);
                Assert.AreEqual("1", v0.z);
                Assert.AreEqual(null, v0.w);
                Assert.AreEqual("2", v0.v);
            
                Assert.AreEqual("1", v2.x);
                Assert.AreEqual("0", v2.y);
            }
            {
                var v0 = new gvec5<string>("(3-6)", "(9-7)", "(3-6)", "(-9-6)", "(9-7)");
                var v1 = new gvec2<string>("(0-1)", "(3-3)");
                var v2 = v0.ga;
                v0.ga = v1;
                var v3 = v0.ga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(3-6)", v0.x);
                Assert.AreEqual("(0-1)", v0.y);
                Assert.AreEqual("(3-6)", v0.z);
                Assert.AreEqual("(3-3)", v0.w);
                Assert.AreEqual("(9-7)", v0.v);
            
                Assert.AreEqual("(9-7)", v2.x);
                Assert.AreEqual("(-9-6)", v2.y);
            }
            {
                var v0 = new gvec5<string>("1", "7", "(-24)", "(-24)", "((25)-3)");
                var v1 = new gvec3<string>("(1-1)", "", "(-1-4)");
                var v2 = v0.rga;
                v0.rga = v1;
                var v3 = v0.rga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(1-1)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("(-24)", v0.z);
                Assert.AreEqual("(-1-4)", v0.w);
                Assert.AreEqual("((25)-3)", v0.v);
            
                Assert.AreEqual("1", v2.x);
                Assert.AreEqual("7", v2.y);
                Assert.AreEqual("(-24)", v2.z);
            }
            {
                var v0 = new gvec5<string>("3", "((98)9)", "", "(-6-7)", "(-47)");
                var v1 = new gvec2<string>("(-6-5)", "((9-3)5)");
                var v2 = v0.ba;
                v0.ba = v1;
                var v3 = v0.ba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("3", v0.x);
                Assert.AreEqual("((98)9)", v0.y);
                Assert.AreEqual("(-6-5)", v0.z);
                Assert.AreEqual("((9-3)5)", v0.w);
                Assert.AreEqual("(-47)", v0.v);
            
                Assert.AreEqual("", v2.x);
                Assert.AreEqual("(-6-7)", v2.y);
            }
            {
                var v0 = new gvec5<string>("0", "(66)", "0", "", "(15)");
                var v1 = new gvec3<string>("-8", null, "");
                var v2 = v0.rba;
                v0.rba = v1;
                var v3 = v0.rba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-8", v0.x);
                Assert.AreEqual("(66)", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("(15)", v0.v);
            
                Assert.AreEqual("0", v2.x);
                Assert.AreEqual("0", v2.y);
                Assert.AreEqual("", v2.z);
            }
            {
                var v0 = new gvec5<string>(null, "((1-8)4)", "-7", "", "(95)");
                var v1 = new gvec3<string>(null, "-1", "");
                var v2 = v0.gba;
                v0.gba = v1;
                var v3 = v0.gba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("-1", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("(95)", v0.v);
            
                Assert.AreEqual("((1-8)4)", v2.x);
                Assert.AreEqual("-7", v2.y);
                Assert.AreEqual("", v2.z);
            }
            {
                var v0 = new gvec5<string>("((2-3)-2)", "6", "", "(3-4)", "((-4-4)5)");
                var v1 = new gvec4<string>("((-33)1)", "(15)", "((07)4)", "(88)");
                var v2 = v0.rgba;
                v0.rgba = v1;
                var v3 = v0.rgba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-33)1)", v0.x);
                Assert.AreEqual("(15)", v0.y);
                Assert.AreEqual("((07)4)", v0.z);
                Assert.AreEqual("(88)", v0.w);
                Assert.AreEqual("((-4-4)5)", v0.v);
            
                Assert.AreEqual("((2-3)-2)", v2.x);
                Assert.AreEqual("6", v2.y);
                Assert.AreEqual("", v2.z);
                Assert.AreEqual("(3-4)", v2.w);
            }
            {
                var v0 = new gvec5<string>("((01)9)", "((-92)-5)", "3", "((01)9)", null);
                var v1 = null;
                var v2 = v0.k;
                v0.k = v1;
                var v3 = v0.k;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((01)9)", v0.x);
                Assert.AreEqual("((-92)-5)", v0.y);
                Assert.AreEqual("3", v0.z);
                Assert.AreEqual("((01)9)", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual(null, v2);
            }
            {
                var v0 = new gvec5<string>("(4-6)", "-3", null, "((36)5)", "-2");
                var v1 = new gvec2<string>("((-1-4)-1)", "");
                var v2 = v0.rk;
                v0.rk = v1;
                var v3 = v0.rk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-1-4)-1)", v0.x);
                Assert.AreEqual("-3", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("((36)5)", v0.w);
                Assert.AreEqual("", v0.v);
            
                Assert.AreEqual("(4-6)", v2.x);
                Assert.AreEqual("-2", v2.y);
            }
            {
                var v0 = new gvec5<string>("(9-3)", "((81)-9)", "(32)", "(9-3)", "-9");
                var v1 = new gvec2<string>("(30)", "((25)6)");
                var v2 = v0.gk;
                v0.gk = v1;
                var v3 = v0.gk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(9-3)", v0.x);
                Assert.AreEqual("(30)", v0.y);
                Assert.AreEqual("(32)", v0.z);
                Assert.AreEqual("(9-3)", v0.w);
                Assert.AreEqual("((25)6)", v0.v);
            
                Assert.AreEqual("((81)-9)", v2.x);
                Assert.AreEqual("-9", v2.y);
            }
            {
                var v0 = new gvec5<string>("((-8-9)-5)", null, null, "(-22)", "1");
                var v1 = new gvec3<string>("", "-7", "2");
                var v2 = v0.rgk;
                v0.rgk = v1;
                var v3 = v0.rgk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("-7", v0.y);
                Assert.AreEqual(null, v0.z);
                Assert.AreEqual("(-22)", v0.w);
                Assert.AreEqual("2", v0.v);
            
                Assert.AreEqual("((-8-9)-5)", v2.x);
                Assert.AreEqual(null, v2.y);
                Assert.AreEqual("1", v2.z);
            }
            {
                var v0 = new gvec5<string>("2", "(3-6)", "(-2-3)", "(-59)", "7");
                var v1 = new gvec2<string>("((-59)-5)", "((6-7)5)");
                var v2 = v0.bk;
                v0.bk = v1;
                var v3 = v0.bk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("2", v0.x);
                Assert.AreEqual("(3-6)", v0.y);
                Assert.AreEqual("((-59)-5)", v0.z);
                Assert.AreEqual("(-59)", v0.w);
                Assert.AreEqual("((6-7)5)", v0.v);
            
                Assert.AreEqual("(-2-3)", v2.x);
                Assert.AreEqual("7", v2.y);
            }
            {
                var v0 = new gvec5<string>("((-7-3)2)", "(06)", "6", "(06)", "((6-2)-7)");
                var v1 = new gvec3<string>("(-78)", "((-77)-9)", "");
                var v2 = v0.rbk;
                v0.rbk = v1;
                var v3 = v0.rbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-78)", v0.x);
                Assert.AreEqual("(06)", v0.y);
                Assert.AreEqual("((-77)-9)", v0.z);
                Assert.AreEqual("(06)", v0.w);
                Assert.AreEqual("", v0.v);
            
                Assert.AreEqual("((-7-3)2)", v2.x);
                Assert.AreEqual("6", v2.y);
                Assert.AreEqual("((6-2)-7)", v2.z);
            }
            {
                var v0 = new gvec5<string>("(-8-8)", "((-2-2)-3)", "((-2-2)-3)", "", "2");
                var v1 = new gvec3<string>("((-12)4)", "((-94)-3)", null);
                var v2 = v0.gbk;
                v0.gbk = v1;
                var v3 = v0.gbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-8-8)", v0.x);
                Assert.AreEqual("((-12)4)", v0.y);
                Assert.AreEqual("((-94)-3)", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual(null, v0.v);
            
                Assert.AreEqual("((-2-2)-3)", v2.x);
                Assert.AreEqual("((-2-2)-3)", v2.y);
                Assert.AreEqual("2", v2.z);
            }
            {
                var v0 = new gvec5<string>("2", "2", "(1-5)", "(1-5)", "((4-3)0)");
                var v1 = new gvec4<string>("(2-4)", "((23)8)", "((-2-9)-4)", "-7");
                var v2 = v0.rgbk;
                v0.rgbk = v1;
                var v3 = v0.rgbk;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(2-4)", v0.x);
                Assert.AreEqual("((23)8)", v0.y);
                Assert.AreEqual("((-2-9)-4)", v0.z);
                Assert.AreEqual("(1-5)", v0.w);
                Assert.AreEqual("-7", v0.v);
            
                Assert.AreEqual("2", v2.x);
                Assert.AreEqual("2", v2.y);
                Assert.AreEqual("(1-5)", v2.z);
                Assert.AreEqual("((4-3)0)", v2.w);
            }
            {
                var v0 = new gvec5<string>("-7", "((-94)2)", "(-33)", "(-62)", "((4-7)-9)");
                var v1 = new gvec2<string>("((7-9)-5)", "((8-1)-4)");
                var v2 = v0.ak;
                v0.ak = v1;
                var v3 = v0.ak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-7", v0.x);
                Assert.AreEqual("((-94)2)", v0.y);
                Assert.AreEqual("(-33)", v0.z);
                Assert.AreEqual("((7-9)-5)", v0.w);
                Assert.AreEqual("((8-1)-4)", v0.v);
            
                Assert.AreEqual("(-62)", v2.x);
                Assert.AreEqual("((4-7)-9)", v2.y);
            }
            {
                var v0 = new gvec5<string>("", "(7-4)", "", "(-6-2)", "");
                var v1 = new gvec3<string>("-2", "(3-5)", "(3-5)");
                var v2 = v0.rak;
                v0.rak = v1;
                var v3 = v0.rak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-2", v0.x);
                Assert.AreEqual("(7-4)", v0.y);
                Assert.AreEqual("", v0.z);
                Assert.AreEqual("(3-5)", v0.w);
                Assert.AreEqual("(3-5)", v0.v);
            
                Assert.AreEqual("", v2.x);
                Assert.AreEqual("(-6-2)", v2.y);
                Assert.AreEqual("", v2.z);
            }
            {
                var v0 = new gvec5<string>("4", "((-48)-7)", "-4", "-4", "(21)");
                var v1 = new gvec3<string>("((66)4)", "", "0");
                var v2 = v0.gak;
                v0.gak = v1;
                var v3 = v0.gak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("4", v0.x);
                Assert.AreEqual("((66)4)", v0.y);
                Assert.AreEqual("-4", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("0", v0.v);
            
                Assert.AreEqual("((-48)-7)", v2.x);
                Assert.AreEqual("-4", v2.y);
                Assert.AreEqual("(21)", v2.z);
            }
            {
                var v0 = new gvec5<string>("2", null, "((4-6)8)", "(-9-8)", "((04)5)");
                var v1 = new gvec4<string>("8", "((2-9)8)", "((-21)-9)", "((-2-2)0)");
                var v2 = v0.rgak;
                v0.rgak = v1;
                var v3 = v0.rgak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("8", v0.x);
                Assert.AreEqual("((2-9)8)", v0.y);
                Assert.AreEqual("((4-6)8)", v0.z);
                Assert.AreEqual("((-21)-9)", v0.w);
                Assert.AreEqual("((-2-2)0)", v0.v);
            
                Assert.AreEqual("2", v2.x);
                Assert.AreEqual(null, v2.y);
                Assert.AreEqual("(-9-8)", v2.z);
                Assert.AreEqual("((04)5)", v2.w);
            }
            {
                var v0 = new gvec5<string>("3", "(-72)", "3", "8", "-8");
                var v1 = new gvec3<string>("-1", "-1", "-1");
                var v2 = v0.bak;
                v0.bak = v1;
                var v3 = v0.bak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("3", v0.x);
                Assert.AreEqual("(-72)", v0.y);
                Assert.AreEqual("-1", v0.z);
                Assert.AreEqual("-1", v0.w);
                Assert.AreEqual("-1", v0.v);
            
                Assert.AreEqual("3", v2.x);
                Assert.AreEqual("8", v2.y);
                Assert.AreEqual("-8", v2.z);
            }
            {
                var v0 = new gvec5<string>("(44)", "(07)", "((3-8)-6)", "(44)", null);
                var v1 = new gvec4<string>("", "4", "", "(-57)");
                var v2 = v0.rbak;
                v0.rbak = v1;
                var v3 = v0.rbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("(07)", v0.y);
                Assert.AreEqual("4", v0.z);
                Assert.AreEqual("", v0.w);
                Assert.AreEqual("(-57)", v0.v);
            
                Assert.AreEqual("(44)", v2.x);
                Assert.AreEqual("((3-8)-6)", v2.y);
                Assert.AreEqual("(44)", v2.z);
                Assert.AreEqual(null, v2.w);
            }
            {
                var v0 = new gvec5<string>("-1", "(2-1)", "-1", "5", "(-55)");
                var v1 = new gvec4<string>("((-9-3)3)", "((97)-9)", "-1", "((-9-3)3)");
                var v2 = v0.gbak;
                v0.gbak = v1;
                var v3 = v0.gbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-1", v0.x);
                Assert.AreEqual("((-9-3)3)", v0.y);
                Assert.AreEqual("((97)-9)", v0.z);
                Assert.AreEqual("-1", v0.w);
                Assert.AreEqual("((-9-3)3)", v0.v);
            
                Assert.AreEqual("(2-1)", v2.x);
                Assert.AreEqual("-1", v2.y);
                Assert.AreEqual("5", v2.z);
                Assert.AreEqual("(-55)", v2.w);
            }
            {
                var v0 = new gvec5<string>("(65)", "-5", "((0-5)8)", "", "((0-5)8)");
                var v1 = new gvec5<string>("8", "((1-7)6)", "(-18)", "((41)6)", "-8");
                var v2 = v0.rgbak;
                v0.rgbak = v1;
                var v3 = v0.rgbak;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("8", v0.x);
                Assert.AreEqual("((1-7)6)", v0.y);
                Assert.AreEqual("(-18)", v0.z);
                Assert.AreEqual("((41)6)", v0.w);
                Assert.AreEqual("-8", v0.v);
            
                Assert.AreEqual("(65)", v2.x);
                Assert.AreEqual("-5", v2.y);
                Assert.AreEqual("((0-5)8)", v2.z);
                Assert.AreEqual("", v2.w);
                Assert.AreEqual("((0-5)8)", v2.v);
            }
        }

    }
}
