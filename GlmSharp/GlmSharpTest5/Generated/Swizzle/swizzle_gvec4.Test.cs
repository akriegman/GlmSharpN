using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Numerics;
using System.Linq;
using NUnit.Framework;
using Newtonsoft.Json;
using GlmSharp;

// ReSharper disable InconsistentNaming

namespace GlmSharpTest.Generated.Swizzle
{
    [TestFixture]
    public class TSwizzleVec4Test
    {

        [Test]
        public void xyzwvuts()
        {
            {
                var ov = new gvec4<string>("-3", "((-61)6)", "(-6-6)", "((23)8)");
                var v = ov.swizzle.xx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
            }
            {
                var ov = new gvec4<string>("(03)", "", "((88)-7)", "(-1-7)");
                var v = ov.swizzle.xxx;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("(03)", v.z);
            }
            {
                var ov = new gvec4<string>("((-61)0)", "(8-4)", "(-66)", "(-66)");
                var v = ov.swizzle.xxxx;
                Assert.AreEqual("((-61)0)", v.x);
                Assert.AreEqual("((-61)0)", v.y);
                Assert.AreEqual("((-61)0)", v.z);
                Assert.AreEqual("((-61)0)", v.w);
            }
            {
                var ov = new gvec4<string>("3", "4", "(6-2)", null);
                var v = ov.swizzle.xxxxx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((0-4)-6)", "", "(-49)");
                var v = ov.swizzle.xxxxy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((0-4)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((13)-2)", "((8-7)-4)", "(-4-5)", "-1");
                var v = ov.swizzle.xxxxz;
                Assert.AreEqual("((13)-2)", v.x);
                Assert.AreEqual("((13)-2)", v.y);
                Assert.AreEqual("((13)-2)", v.z);
                Assert.AreEqual("((13)-2)", v.w);
                Assert.AreEqual("(-4-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-7)-4)", "((4-9)-9)", "((4-7)-4)", "((4-9)-9)");
                var v = ov.swizzle.xxxxw;
                Assert.AreEqual("((4-7)-4)", v.x);
                Assert.AreEqual("((4-7)-4)", v.y);
                Assert.AreEqual("((4-7)-4)", v.z);
                Assert.AreEqual("((4-7)-4)", v.w);
                Assert.AreEqual("((4-9)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(20)", "((-50)3)", "-5", "((1-5)2)");
                var v = ov.swizzle.xxxy;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(20)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("((-50)3)", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-7)-7)", "((-7-7)-7)", "((-58)0)", "");
                var v = ov.swizzle.xxxyx;
                Assert.AreEqual("((-7-7)-7)", v.x);
                Assert.AreEqual("((-7-7)-7)", v.y);
                Assert.AreEqual("((-7-7)-7)", v.z);
                Assert.AreEqual("((-7-7)-7)", v.w);
                Assert.AreEqual("((-7-7)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-8)-8)", null, "((-3-3)-5)", "");
                var v = ov.swizzle.xxxyy;
                Assert.AreEqual("((3-8)-8)", v.x);
                Assert.AreEqual("((3-8)-8)", v.y);
                Assert.AreEqual("((3-8)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("2", "6", "6", "((42)-1)");
                var v = ov.swizzle.xxxyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((-31)7)", "8", "((-1-2)-2)", "(-75)");
                var v = ov.swizzle.xxxyw;
                Assert.AreEqual("((-31)7)", v.x);
                Assert.AreEqual("((-31)7)", v.y);
                Assert.AreEqual("((-31)7)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-75)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "", "(-8-2)", "3");
                var v = ov.swizzle.xxxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-8-2)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "((-1-4)-1)", "-4", "((-1-4)-1)");
                var v = ov.swizzle.xxxzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-4)2)", "2", "(3-4)", "");
                var v = ov.swizzle.xxxzy;
                Assert.AreEqual("((-5-4)2)", v.x);
                Assert.AreEqual("((-5-4)2)", v.y);
                Assert.AreEqual("((-5-4)2)", v.z);
                Assert.AreEqual("(3-4)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("2", "8", null, "8");
                var v = ov.swizzle.xxxzz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "-2", "(4-5)");
                var v = ov.swizzle.xxxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(4-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-5)-6)", "(60)", "8", "((5-5)-6)");
                var v = ov.swizzle.xxxw;
                Assert.AreEqual("((5-5)-6)", v.x);
                Assert.AreEqual("((5-5)-6)", v.y);
                Assert.AreEqual("((5-5)-6)", v.z);
                Assert.AreEqual("((5-5)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("3", "-9", null, "((-8-1)8)");
                var v = ov.swizzle.xxxwx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-8-1)8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-3)-3)", "((-91)2)", "((80)-5)", "");
                var v = ov.swizzle.xxxwy;
                Assert.AreEqual("((-9-3)-3)", v.x);
                Assert.AreEqual("((-9-3)-3)", v.y);
                Assert.AreEqual("((-9-3)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-91)2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-6", "((4-4)9)", "((4-4)9)");
                var v = ov.swizzle.xxxwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((4-4)9)", v.w);
                Assert.AreEqual("((4-4)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(45)", "(1-1)", "(45)", "(45)");
                var v = ov.swizzle.xxxww;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", null, "-2", null);
                var v = ov.swizzle.xxy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("", "5", "5", "3");
                var v = ov.swizzle.xxyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(-27)", "", "(3-3)", "(-53)");
                var v = ov.swizzle.xxyxx;
                Assert.AreEqual("(-27)", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("(-27)", v.v);
            }
            {
                var ov = new gvec4<string>("(-42)", null, "-4", "-4");
                var v = ov.swizzle.xxyxy;
                Assert.AreEqual("(-42)", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(17)", null, "((-63)-7)", "");
                var v = ov.swizzle.xxyxz;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("((-63)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-1)6)", "-1", "((56)1)", "((56)1)");
                var v = ov.swizzle.xxyxw;
                Assert.AreEqual("((-8-1)6)", v.x);
                Assert.AreEqual("((-8-1)6)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-8-1)6)", v.w);
                Assert.AreEqual("((56)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((0-7)3)", "((0-7)3)", "(66)");
                var v = ov.swizzle.xxyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((0-7)3)", v.z);
                Assert.AreEqual("((0-7)3)", v.w);
            }
            {
                var ov = new gvec4<string>("((5-6)5)", "", "", "(02)");
                var v = ov.swizzle.xxyyx;
                Assert.AreEqual("((5-6)5)", v.x);
                Assert.AreEqual("((5-6)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((5-6)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((64)-1)", "(-6-2)", "((-3-1)-7)", "((64)-1)");
                var v = ov.swizzle.xxyyy;
                Assert.AreEqual("((64)-1)", v.x);
                Assert.AreEqual("((64)-1)", v.y);
                Assert.AreEqual("(-6-2)", v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual("(-6-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-9)", "8", "-7", null);
                var v = ov.swizzle.xxyyz;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("(6-9)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((35)-5)", "8", "((1-2)-5)", "((35)-5)");
                var v = ov.swizzle.xxyyw;
                Assert.AreEqual("((35)-5)", v.x);
                Assert.AreEqual("((35)-5)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((35)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-3)2)", "3", "(31)", "-6");
                var v = ov.swizzle.xxyz;
                Assert.AreEqual("((8-3)2)", v.x);
                Assert.AreEqual("((8-3)2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(31)", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "-8", "3", "(8-3)");
                var v = ov.swizzle.xxyzx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>(null, "8", "(-2-9)", "(-2-9)");
                var v = ov.swizzle.xxyzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)-2)", "((37)-3)", "((09)6)", "");
                var v = ov.swizzle.xxyzz;
                Assert.AreEqual("((-2-4)-2)", v.x);
                Assert.AreEqual("((-2-4)-2)", v.y);
                Assert.AreEqual("((37)-3)", v.z);
                Assert.AreEqual("((09)6)", v.w);
                Assert.AreEqual("((09)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "(-74)", "(-74)", "-1");
                var v = ov.swizzle.xxyzw;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((2-8)-2)", "((2-8)-2)");
                var v = ov.swizzle.xxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((2-8)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("-7", "-7", "-1", null);
                var v = ov.swizzle.xxywx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(37)", "(-13)", "(-13)", "-5");
                var v = ov.swizzle.xxywy;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("(-13)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-13)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(29)", "((37)6)", "((37)6)");
                var v = ov.swizzle.xxywz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("((37)6)", v.w);
                Assert.AreEqual("((37)6)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "", "((37)1)", "-6");
                var v = ov.swizzle.xxyww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "(01)", "-4", "-4");
                var v = ov.swizzle.xxz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec4<string>("(-3-4)", "6", "((-6-9)-1)", "((-3-7)4)");
                var v = ov.swizzle.xxzx;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("((-6-9)-1)", v.z);
                Assert.AreEqual("(-3-4)", v.w);
            }
            {
                var ov = new gvec4<string>("-7", "((62)0)", "-1", "4");
                var v = ov.swizzle.xxzxx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "(86)", "(86)");
                var v = ov.swizzle.xxzxy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(3-3)", null);
                var v = ov.swizzle.xxzxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-1)", "(5-1)", "(5-1)", "(5-1)");
                var v = ov.swizzle.xxzxw;
                Assert.AreEqual("(5-1)", v.x);
                Assert.AreEqual("(5-1)", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("(5-1)", v.w);
                Assert.AreEqual("(5-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((-8-6)-4)", "(67)");
                var v = ov.swizzle.xxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-6)-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(0-7)", "-8", "((2-5)8)", "");
                var v = ov.swizzle.xxzyx;
                Assert.AreEqual("(0-7)", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("((2-5)8)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(0-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-9)-1)", "(-99)", "(-5-8)", "(-5-8)");
                var v = ov.swizzle.xxzyy;
                Assert.AreEqual("((-3-9)-1)", v.x);
                Assert.AreEqual("((-3-9)-1)", v.y);
                Assert.AreEqual("(-5-8)", v.z);
                Assert.AreEqual("(-99)", v.w);
                Assert.AreEqual("(-99)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(1-3)", "", "((-6-6)-9)");
                var v = ov.swizzle.xxzyz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(-8-6)", "(-98)", "3");
                var v = ov.swizzle.xxzyw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-70)1)", "-8", "((-70)-8)");
                var v = ov.swizzle.xxzz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>("2", "((-49)7)", "((-49)7)", "(3-7)");
                var v = ov.swizzle.xxzzx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-49)7)", v.z);
                Assert.AreEqual("((-49)7)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("2", "9", "((-9-2)-9)", "((5-1)3)");
                var v = ov.swizzle.xxzzy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-9-2)-9)", v.z);
                Assert.AreEqual("((-9-2)-9)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("", "(21)", "((-1-5)2)", null);
                var v = ov.swizzle.xxzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-1-5)2)", v.z);
                Assert.AreEqual("((-1-5)2)", v.w);
                Assert.AreEqual("((-1-5)2)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(5-2)", "(5-2)", "(5-2)");
                var v = ov.swizzle.xxzzw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(5-2)", v.z);
                Assert.AreEqual("(5-2)", v.w);
                Assert.AreEqual("(5-2)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(-31)", "5", "3");
                var v = ov.swizzle.xxzw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec4<string>("(11)", "((2-8)-3)", "", "(11)");
                var v = ov.swizzle.xxzwx;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(3-2)", "((-67)7)", "(-22)");
                var v = ov.swizzle.xxzwy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-67)7)", v.z);
                Assert.AreEqual("(-22)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-4)-5)", "-3", "6", "((-5-4)-5)");
                var v = ov.swizzle.xxzwz;
                Assert.AreEqual("((-5-4)-5)", v.x);
                Assert.AreEqual("((-5-4)-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-5-4)-5)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((44)-3)", "7", "(-35)", null);
                var v = ov.swizzle.xxzww;
                Assert.AreEqual("((44)-3)", v.x);
                Assert.AreEqual("((44)-3)", v.y);
                Assert.AreEqual("(-35)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("7", "-5", null, "(8-6)");
                var v = ov.swizzle.xxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(8-6)", v.z);
            }
            {
                var ov = new gvec4<string>(null, "", "((18)1)", "(-49)");
                var v = ov.swizzle.xxwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((9-6)5)", "-2", "((-9-3)-2)", "((9-6)5)");
                var v = ov.swizzle.xxwxx;
                Assert.AreEqual("((9-6)5)", v.x);
                Assert.AreEqual("((9-6)5)", v.y);
                Assert.AreEqual("((9-6)5)", v.z);
                Assert.AreEqual("((9-6)5)", v.w);
                Assert.AreEqual("((9-6)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)-5)", null, "-7", null);
                var v = ov.swizzle.xxwxy;
                Assert.AreEqual("((-87)-5)", v.x);
                Assert.AreEqual("((-87)-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-87)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-4-9)9)", "(8-5)", "((34)9)", "");
                var v = ov.swizzle.xxwxz;
                Assert.AreEqual("((-4-9)9)", v.x);
                Assert.AreEqual("((-4-9)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-4-9)9)", v.w);
                Assert.AreEqual("((34)9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-73)-6)", "1", "((-73)-6)");
                var v = ov.swizzle.xxwxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-73)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-73)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(88)", "2", "2", "7");
                var v = ov.swizzle.xxwy;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec4<string>("((5-7)7)", "0", "", "0");
                var v = ov.swizzle.xxwyx;
                Assert.AreEqual("((5-7)7)", v.x);
                Assert.AreEqual("((5-7)7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((5-7)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-57)", "(-7-3)", "((07)6)", "-6");
                var v = ov.swizzle.xxwyy;
                Assert.AreEqual("(-57)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-7-3)", v.w);
                Assert.AreEqual("(-7-3)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", null, "-9", "(-60)");
                var v = ov.swizzle.xxwyz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "7", "7", "((07)8)");
                var v = ov.swizzle.xxwyw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((07)8)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((07)8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-34)-1)", "(-97)", "((-9-7)-1)", "(-99)");
                var v = ov.swizzle.xxwz;
                Assert.AreEqual("((-34)-1)", v.x);
                Assert.AreEqual("((-34)-1)", v.y);
                Assert.AreEqual("(-99)", v.z);
                Assert.AreEqual("((-9-7)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("5", null, "(-3-1)", "(-3-1)");
                var v = ov.swizzle.xxwzx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-6", null, "(27)", "((-59)-2)");
                var v = ov.swizzle.xxwzy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-59)-2)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((-98)8)", "((-37)5)");
                var v = ov.swizzle.xxwzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-37)5)", v.z);
                Assert.AreEqual("((-98)8)", v.w);
                Assert.AreEqual("((-98)8)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "2", "((82)8)", "2");
                var v = ov.swizzle.xxwzw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((82)8)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-4)-5)", "6", "", "(2-7)");
                var v = ov.swizzle.xxww;
                Assert.AreEqual("((-4-4)-5)", v.x);
                Assert.AreEqual("((-4-4)-5)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(2-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-6)", "((8-9)-3)", "((50)7)", "(2-8)");
                var v = ov.swizzle.xxwwx;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "((-45)7)", "-7", "-3");
                var v = ov.swizzle.xxwwy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-45)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((02)-7)", "9", "(1-6)", "(-4-5)");
                var v = ov.swizzle.xxwwz;
                Assert.AreEqual("((02)-7)", v.x);
                Assert.AreEqual("((02)-7)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("(-4-5)", v.w);
                Assert.AreEqual("(1-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "6", "(-82)", "1");
                var v = ov.swizzle.xxwww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-59)-8)", null, "-7");
                var v = ov.swizzle.xy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-59)-8)", v.y);
            }
            {
                var ov = new gvec4<string>("-1", "((9-7)-7)", null, "-2");
                var v = ov.swizzle.xyx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((9-7)-7)", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec4<string>("(-7-7)", "((-7-5)-2)", "((-4-8)5)", "((-7-5)-2)");
                var v = ov.swizzle.xyxx;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("((-7-5)-2)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((17)-9)", "((17)-9)", "(23)");
                var v = ov.swizzle.xyxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((17)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((72)5)", "-2");
                var v = ov.swizzle.xyxxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-76)-1)", "((-76)-1)", "0");
                var v = ov.swizzle.xyxxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-76)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-76)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-9)-7)", "7", "(-4-3)", "-7");
                var v = ov.swizzle.xyxxw;
                Assert.AreEqual("((-1-9)-7)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-1-9)-7)", v.z);
                Assert.AreEqual("((-1-9)-7)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "5", "((-5-5)-2)", null);
                var v = ov.swizzle.xyxy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("-5", "-5", "(-96)", "");
                var v = ov.swizzle.xyxyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(75)", "(-5-2)", "", "(-88)");
                var v = ov.swizzle.xyxyy;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "", "-5");
                var v = ov.swizzle.xyxyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((7-9)-8)", "((-97)0)", "", "((7-9)-8)");
                var v = ov.swizzle.xyxyw;
                Assert.AreEqual("((7-9)-8)", v.x);
                Assert.AreEqual("((-97)0)", v.y);
                Assert.AreEqual("((7-9)-8)", v.z);
                Assert.AreEqual("((-97)0)", v.w);
                Assert.AreEqual("((7-9)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((32)4)", "((-4-3)-5)", "9", "(40)");
                var v = ov.swizzle.xyxz;
                Assert.AreEqual("((32)4)", v.x);
                Assert.AreEqual("((-4-3)-5)", v.y);
                Assert.AreEqual("((32)4)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("8", "((35)-7)", "((-6-3)8)", "((3-7)4)");
                var v = ov.swizzle.xyxzx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((35)-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-6-3)8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(86)", "((-7-7)-5)", "((-7-7)-5)", "(86)");
                var v = ov.swizzle.xyxzy;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("((-7-7)-5)", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("((-7-7)-5)", v.w);
                Assert.AreEqual("((-7-7)-5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((7-3)8)", "(-4-7)", "-7");
                var v = ov.swizzle.xyxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-3)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-4-7)", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "5", "((-43)-9)", "5");
                var v = ov.swizzle.xyxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-43)-9)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-2)", "((60)9)", "(72)", "((60)9)");
                var v = ov.swizzle.xyxw;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("((60)9)", v.y);
                Assert.AreEqual("(-6-2)", v.z);
                Assert.AreEqual("((60)9)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "(-37)", "(-1-2)", "-5");
                var v = ov.swizzle.xyxwx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "-8", "8");
                var v = ov.swizzle.xyxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-5-5)", "((07)9)", "", null);
                var v = ov.swizzle.xyxwz;
                Assert.AreEqual("(-5-5)", v.x);
                Assert.AreEqual("((07)9)", v.y);
                Assert.AreEqual("(-5-5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(96)", "-9", "");
                var v = ov.swizzle.xyxww;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((3-4)4)", "((3-4)4)", "7", "(93)");
                var v = ov.swizzle.xyy;
                Assert.AreEqual("((3-4)4)", v.x);
                Assert.AreEqual("((3-4)4)", v.y);
                Assert.AreEqual("((3-4)4)", v.z);
            }
            {
                var ov = new gvec4<string>("-3", "-5", "((5-6)-6)", "((5-6)-6)");
                var v = ov.swizzle.xyyx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("5", "2", "(-38)", null);
                var v = ov.swizzle.xyyxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-8)-8)", "(03)", "(23)", null);
                var v = ov.swizzle.xyyxy;
                Assert.AreEqual("((-9-8)-8)", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("((-9-8)-8)", v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec4<string>("((75)6)", "-6", "(55)", "-6");
                var v = ov.swizzle.xyyxz;
                Assert.AreEqual("((75)6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((75)6)", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((1-4)7)", "((03)-3)", "((64)6)");
                var v = ov.swizzle.xyyxw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((1-4)7)", v.y);
                Assert.AreEqual("((1-4)7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((64)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(4-2)", "(6-2)", "((-72)8)", null);
                var v = ov.swizzle.xyyy;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("(6-2)", v.z);
                Assert.AreEqual("(6-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(55)", "-7", "((-82)4)", "(33)");
                var v = ov.swizzle.xyyyx;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec4<string>("3", null, "", "3");
                var v = ov.swizzle.xyyyy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "6", "(-15)", "1");
                var v = ov.swizzle.xyyyz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec4<string>("((53)-6)", "5", "5", "((6-4)7)");
                var v = ov.swizzle.xyyyw;
                Assert.AreEqual("((53)-6)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((6-4)7)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "1", "(2-5)", "(2-5)");
                var v = ov.swizzle.xyyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(2-5)", v.w);
            }
            {
                var ov = new gvec4<string>("(-12)", "((44)-4)", "-2", "");
                var v = ov.swizzle.xyyzx;
                Assert.AreEqual("(-12)", v.x);
                Assert.AreEqual("((44)-4)", v.y);
                Assert.AreEqual("((44)-4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-12)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-1)-5)", "(0-6)", "7", "");
                var v = ov.swizzle.xyyzy;
                Assert.AreEqual("((-3-1)-5)", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(0-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "5", "(-28)", "-7");
                var v = ov.swizzle.xyyzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-7)-4)", "(60)", "(-8-3)", "-3");
                var v = ov.swizzle.xyyzw;
                Assert.AreEqual("((-8-7)-4)", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-2)", "(-3-2)", "-9", "((46)-6)");
                var v = ov.swizzle.xyyw;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("((46)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("-3", "0", "", "((9-8)4)");
                var v = ov.swizzle.xyywx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((9-8)4)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((-9-3)4)", "((13)6)", "-9");
                var v = ov.swizzle.xyywy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-9-3)4)", v.y);
                Assert.AreEqual("((-9-3)4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-9-3)4)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(-5-2)", "2", "((5-1)5)");
                var v = ov.swizzle.xyywz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("((5-1)5)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-80)", "-5", "(48)", "((-23)0)");
                var v = ov.swizzle.xyyww;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((-23)0)", v.w);
                Assert.AreEqual("((-23)0)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-1)5)", "((66)8)", "-4", "");
                var v = ov.swizzle.xyz;
                Assert.AreEqual("((9-1)5)", v.x);
                Assert.AreEqual("((66)8)", v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec4<string>("-7", "", "-6", "");
                var v = ov.swizzle.xyzx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-85)-4)", "((-85)-4)", null);
                var v = ov.swizzle.xyzxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-85)-4)", v.y);
                Assert.AreEqual("((-85)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", "((01)5)", "((2-7)-4)");
                var v = ov.swizzle.xyzxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((01)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(79)", "((16)-8)", "((16)-8)", "((5-2)7)");
                var v = ov.swizzle.xyzxz;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("((16)-8)", v.y);
                Assert.AreEqual("((16)-8)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("((16)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-3)8)", "(3-6)", "", "((-9-9)-4)");
                var v = ov.swizzle.xyzxw;
                Assert.AreEqual("((-8-3)8)", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-8-3)8)", v.w);
                Assert.AreEqual("((-9-9)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "", "(-4-2)", "(-45)");
                var v = ov.swizzle.xyzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((12)-3)", "(3-5)", "(-65)", "((1-7)-4)");
                var v = ov.swizzle.xyzyx;
                Assert.AreEqual("((12)-3)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual("((12)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((8-4)3)", "2", "2");
                var v = ov.swizzle.xyzyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((8-4)3)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((8-4)3)", v.w);
                Assert.AreEqual("((8-4)3)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "-3", "1", "(-1-8)");
                var v = ov.swizzle.xyzyz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "((-77)-9)", "5", "(1-3)");
                var v = ov.swizzle.xyzyw;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("((-77)-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-77)-9)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-2", "5", "((9-3)-1)");
                var v = ov.swizzle.xyzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-7)", "(-33)", "((-7-2)-9)", "(31)");
                var v = ov.swizzle.xyzzx;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("((-7-2)-9)", v.z);
                Assert.AreEqual("((-7-2)-9)", v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-69)", "((0-2)-9)", "(8-9)");
                var v = ov.swizzle.xyzzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("((0-2)-9)", v.z);
                Assert.AreEqual("((0-2)-9)", v.w);
                Assert.AreEqual("(-69)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(5-9)", "(-6-3)");
                var v = ov.swizzle.xyzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("(5-9)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((14)8)", "(9-1)", "");
                var v = ov.swizzle.xyzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((14)8)", v.y);
                Assert.AreEqual("(9-1)", v.z);
                Assert.AreEqual("(9-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-41)", "-8", "((-25)-3)", "(9-2)");
                var v = ov.swizzle.xyzw;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-25)-3)", v.z);
                Assert.AreEqual("(9-2)", v.w);
            }
            {
                var ov = new gvec4<string>("", "9", "((-34)3)", "(0-7)");
                var v = ov.swizzle.xyzwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-34)3)", v.z);
                Assert.AreEqual("(0-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)1)", "((0-2)-1)", "1", "(23)");
                var v = ov.swizzle.xyzwy;
                Assert.AreEqual("((-2-5)1)", v.x);
                Assert.AreEqual("((0-2)-1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(23)", v.w);
                Assert.AreEqual("((0-2)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-10)0)", "1", "(-5-9)", "((-14)1)");
                var v = ov.swizzle.xyzwz;
                Assert.AreEqual("((-10)0)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(-5-9)", v.z);
                Assert.AreEqual("((-14)1)", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(61)", "((-63)0)", "((-63)0)", "7");
                var v = ov.swizzle.xyzww;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual("((-63)0)", v.y);
                Assert.AreEqual("((-63)0)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-49)", "6", "2", "((-88)4)");
                var v = ov.swizzle.xyw;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-88)4)", v.z);
            }
            {
                var ov = new gvec4<string>("-2", "((-19)3)", "-2", "(-74)");
                var v = ov.swizzle.xywx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-19)3)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec4<string>("(52)", "(-36)", "", "");
                var v = ov.swizzle.xywxx;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("(52)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-8)", "((12)-8)", null, "3");
                var v = ov.swizzle.xywxy;
                Assert.AreEqual("(2-8)", v.x);
                Assert.AreEqual("((12)-8)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("((12)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "", "8", "((43)8)");
                var v = ov.swizzle.xywxz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((43)8)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "(64)", "(26)");
                var v = ov.swizzle.xywxw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(26)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(26)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-2)", "-5", null, "0");
                var v = ov.swizzle.xywy;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("(62)", "(62)", "6", "");
                var v = ov.swizzle.xywyx;
                Assert.AreEqual("(62)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(62)", v.w);
                Assert.AreEqual("(62)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-6)-6)", "9", "4", null);
                var v = ov.swizzle.xywyy;
                Assert.AreEqual("((3-6)-6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("-3", null, "-4", "9");
                var v = ov.swizzle.xywyz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(4-7)", null, "-6", "-8");
                var v = ov.swizzle.xywyw;
                Assert.AreEqual("(4-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("((-31)-7)", "(-6-1)", "5", "");
                var v = ov.swizzle.xywz;
                Assert.AreEqual("((-31)-7)", v.x);
                Assert.AreEqual("(-6-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>(null, null, "(57)", "9");
                var v = ov.swizzle.xywzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(57)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-91)7)", "((0-9)4)", "");
                var v = ov.swizzle.xywzy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-91)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((0-9)4)", v.w);
                Assert.AreEqual("((-91)7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-2", "((-55)7)", "((-55)7)");
                var v = ov.swizzle.xywzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-55)7)", v.z);
                Assert.AreEqual("((-55)7)", v.w);
                Assert.AreEqual("((-55)7)", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "(37)", "((94)-9)");
                var v = ov.swizzle.xywzw;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((94)-9)", v.z);
                Assert.AreEqual("(37)", v.w);
                Assert.AreEqual("((94)-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((3-6)3)", "(77)", "((3-6)3)");
                var v = ov.swizzle.xyww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-6)3)", v.y);
                Assert.AreEqual("((3-6)3)", v.z);
                Assert.AreEqual("((3-6)3)", v.w);
            }
            {
                var ov = new gvec4<string>("((-58)9)", "(-50)", "(-3-1)", null);
                var v = ov.swizzle.xywwx;
                Assert.AreEqual("((-58)9)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-58)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((-3-6)7)", "(00)", "8");
                var v = ov.swizzle.xywwy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-3-6)7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-3-6)7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "1", "2", "((-3-8)0)");
                var v = ov.swizzle.xywwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-3-8)0)", v.z);
                Assert.AreEqual("((-3-8)0)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((45)8)", "((45)8)", "(-23)", "(0-3)");
                var v = ov.swizzle.xywww;
                Assert.AreEqual("((45)8)", v.x);
                Assert.AreEqual("((45)8)", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("(0-3)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-59)", "(-59)", "(-59)", "-7");
                var v = ov.swizzle.xz;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(-59)", v.y);
            }
            {
                var ov = new gvec4<string>("-1", "(-64)", "((-74)1)", "(-64)");
                var v = ov.swizzle.xzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-74)1)", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec4<string>(null, null, "0", "(78)");
                var v = ov.swizzle.xzxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-6-3)", "", "(-82)", "(-6-3)");
                var v = ov.swizzle.xzxxx;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(-6-3)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "-8", "(3-5)", "-4");
                var v = ov.swizzle.xzxxy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-99)8)", "(-50)", "(-47)");
                var v = ov.swizzle.xzxxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "8", "-8", "-8");
                var v = ov.swizzle.xzxxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-83)", "((17)5)", "((17)5)");
                var v = ov.swizzle.xzxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((17)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-83)", v.w);
            }
            {
                var ov = new gvec4<string>("((26)-9)", "8", null, "8");
                var v = ov.swizzle.xzxyx;
                Assert.AreEqual("((26)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((26)-9)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((26)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-32)", "", "", null);
                var v = ov.swizzle.xzxyy;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-6)-4)", "(8-2)", "((-3-6)-4)", "");
                var v = ov.swizzle.xzxyz;
                Assert.AreEqual("((-3-6)-4)", v.x);
                Assert.AreEqual("((-3-6)-4)", v.y);
                Assert.AreEqual("((-3-6)-4)", v.z);
                Assert.AreEqual("(8-2)", v.w);
                Assert.AreEqual("((-3-6)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-71)6)", "((-71)6)", "9", "(12)");
                var v = ov.swizzle.xzxyw;
                Assert.AreEqual("((-71)6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-71)6)", v.z);
                Assert.AreEqual("((-71)6)", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec4<string>("((-19)5)", "(-73)", "(-73)", "-7");
                var v = ov.swizzle.xzxz;
                Assert.AreEqual("((-19)5)", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("((-19)5)", v.z);
                Assert.AreEqual("(-73)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((5-3)0)", "((5-3)0)", "(5-8)");
                var v = ov.swizzle.xzxzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((5-3)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((5-3)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-20)", "(7-6)", "3");
                var v = ov.swizzle.xzxzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("(-20)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-79)", "3", "-2");
                var v = ov.swizzle.xzxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((-85)7)", "((-5-3)-6)", "((-5-3)-6)");
                var v = ov.swizzle.xzxzw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-5-3)-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-5-3)-6)", v.w);
                Assert.AreEqual("((-5-3)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", null, "(-30)", null);
                var v = ov.swizzle.xzxw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-7", "((86)-7)", "((-30)-1)", "((-30)-1)");
                var v = ov.swizzle.xzxwx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-30)-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-30)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((61)-5)", "((61)-5)");
                var v = ov.swizzle.xzxwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((61)-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((61)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(5-1)", "((3-3)-1)", "((-5-9)0)");
                var v = ov.swizzle.xzxwz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((3-3)-1)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-5-9)0)", v.w);
                Assert.AreEqual("((3-3)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(-8-6)", "(-8-6)", "3");
                var v = ov.swizzle.xzxww;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-8-6)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-1)-2)", null, "(3-4)", "");
                var v = ov.swizzle.xzy;
                Assert.AreEqual("((-6-1)-2)", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("((2-9)6)", "", "", "4");
                var v = ov.swizzle.xzyx;
                Assert.AreEqual("((2-9)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((2-9)6)", v.w);
            }
            {
                var ov = new gvec4<string>("((-83)7)", "(-66)", null, "((-5-1)-1)");
                var v = ov.swizzle.xzyxx;
                Assert.AreEqual("((-83)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("((-83)7)", v.w);
                Assert.AreEqual("((-83)7)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "", "((90)0)", "((52)-6)");
                var v = ov.swizzle.xzyxy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((90)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(53)", "", null);
                var v = ov.swizzle.xzyxz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-9)-7)", null, "-7", "-7");
                var v = ov.swizzle.xzyxw;
                Assert.AreEqual("((-7-9)-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-9)-7)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>(null, "0", "", "((5-7)4)");
                var v = ov.swizzle.xzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("8", "((24)-6)", "((0-2)-9)", "");
                var v = ov.swizzle.xzyyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((0-2)-9)", v.y);
                Assert.AreEqual("((24)-6)", v.z);
                Assert.AreEqual("((24)-6)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-8)", "(91)", "((-9-1)7)", "");
                var v = ov.swizzle.xzyyy;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("((-9-1)7)", v.y);
                Assert.AreEqual("(91)", v.z);
                Assert.AreEqual("(91)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-36)9)", "", "2");
                var v = ov.swizzle.xzyyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-36)9)", v.z);
                Assert.AreEqual("((-36)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-17)-5)", "4", "((-11)7)", null);
                var v = ov.swizzle.xzyyw;
                Assert.AreEqual("((-17)-5)", v.x);
                Assert.AreEqual("((-11)7)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-62)-2)", "((0-8)-3)", "8", "(41)");
                var v = ov.swizzle.xzyz;
                Assert.AreEqual("((-62)-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((0-8)-3)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec4<string>("", "(7-7)", "(7-7)", null);
                var v = ov.swizzle.xzyzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("1", "5", "((29)5)", null);
                var v = ov.swizzle.xzyzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((29)5)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((29)5)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-9)-4)", null, "((-1-9)1)", "((-1-9)1)");
                var v = ov.swizzle.xzyzz;
                Assert.AreEqual("((-3-9)-4)", v.x);
                Assert.AreEqual("((-1-9)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-9)1)", v.w);
                Assert.AreEqual("((-1-9)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-76)", "(-76)", null);
                var v = ov.swizzle.xzyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-76)", v.y);
                Assert.AreEqual("(-76)", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-55)", "-2", "((8-3)9)", "((67)-7)");
                var v = ov.swizzle.xzyw;
                Assert.AreEqual("(-55)", v.x);
                Assert.AreEqual("((8-3)9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((67)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("7", "((00)-6)", "7", "((00)-6)");
                var v = ov.swizzle.xzywx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((00)-6)", v.z);
                Assert.AreEqual("((00)-6)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((-39)-6)", "-9", "(0-9)", null);
                var v = ov.swizzle.xzywy;
                Assert.AreEqual("((-39)-6)", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((08)0)", "2", "(55)");
                var v = ov.swizzle.xzywz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((08)0)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(93)", "1", "0", "0");
                var v = ov.swizzle.xzyww;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((83)-6)", "(-33)", "-1");
                var v = ov.swizzle.xzz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("(-33)", v.z);
            }
            {
                var ov = new gvec4<string>("-2", "-2", "-2", "(4-1)");
                var v = ov.swizzle.xzzx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "5", "(-5-3)", "((-2-8)0)");
                var v = ov.swizzle.xzzxx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((1-6)4)", "-3", "(82)", "-5");
                var v = ov.swizzle.xzzxy;
                Assert.AreEqual("((1-6)4)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("((1-6)4)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-1)", "-5", "-5", null);
                var v = ov.swizzle.xzzxz;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("((21)6)", "", "(3-1)", "(-82)");
                var v = ov.swizzle.xzzxw;
                Assert.AreEqual("((21)6)", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("((21)6)", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec4<string>("((55)1)", null, null, "(-41)");
                var v = ov.swizzle.xzzy;
                Assert.AreEqual("((55)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-6", "-3", "((53)-4)", null);
                var v = ov.swizzle.xzzyx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((53)-4)", v.y);
                Assert.AreEqual("((53)-4)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-7)", "(-15)", "5", "((-59)-9)");
                var v = ov.swizzle.xzzyy;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-15)", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "", "(-9-7)", "((4-8)2)");
                var v = ov.swizzle.xzzyz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "3", "(5-9)", "4");
                var v = ov.swizzle.xzzyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("6", "7", "6", "6");
                var v = ov.swizzle.xzzz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("((19)-3)", "(8-4)", "", "((-4-1)0)");
                var v = ov.swizzle.xzzzx;
                Assert.AreEqual("((19)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((19)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-46)-2)", "(90)", null, "((-46)-2)");
                var v = ov.swizzle.xzzzy;
                Assert.AreEqual("((-46)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec4<string>("((27)-2)", "2", "3", "(0-5)");
                var v = ov.swizzle.xzzzz;
                Assert.AreEqual("((27)-2)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((-97)-4)", "(-2-6)", "(-37)", "0");
                var v = ov.swizzle.xzzzw;
                Assert.AreEqual("((-97)-4)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-30)9)", "((-30)9)", null);
                var v = ov.swizzle.xzzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-30)9)", v.y);
                Assert.AreEqual("((-30)9)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((26)5)", "((-7-2)3)", "((-4-3)-1)", "");
                var v = ov.swizzle.xzzwx;
                Assert.AreEqual("((26)5)", v.x);
                Assert.AreEqual("((-4-3)-1)", v.y);
                Assert.AreEqual("((-4-3)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((26)5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-4)", "(-8-4)", "((-14)5)", "(86)");
                var v = ov.swizzle.xzzwy;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("((-14)5)", v.y);
                Assert.AreEqual("((-14)5)", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-20)", "-9", "", "((-50)9)");
                var v = ov.swizzle.xzzwz;
                Assert.AreEqual("(-20)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-50)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((09)8)", "(-29)");
                var v = ov.swizzle.xzzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((09)8)", v.y);
                Assert.AreEqual("((09)8)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-7-1)0)", "((3-3)6)", "((3-3)6)");
                var v = ov.swizzle.xzw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((3-3)6)", v.y);
                Assert.AreEqual("((3-3)6)", v.z);
            }
            {
                var ov = new gvec4<string>("(-75)", "(51)", "(51)", "(20)");
                var v = ov.swizzle.xzwx;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("(-75)", v.w);
            }
            {
                var ov = new gvec4<string>("((-86)-2)", "(61)", "", "((-9-3)6)");
                var v = ov.swizzle.xzwxx;
                Assert.AreEqual("((-86)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-3)6)", v.z);
                Assert.AreEqual("((-86)-2)", v.w);
                Assert.AreEqual("((-86)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(49)", null, "8");
                var v = ov.swizzle.xzwxy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(49)", v.v);
            }
            {
                var ov = new gvec4<string>("", "4", "(-29)", "(4-8)");
                var v = ov.swizzle.xzwxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-3)", "(-2-3)", "((-7-1)8)", "((-33)0)");
                var v = ov.swizzle.xzwxw;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("((-7-1)8)", v.y);
                Assert.AreEqual("((-33)0)", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("((-33)0)", v.v);
            }
            {
                var ov = new gvec4<string>("(00)", "(50)", "5", "(50)");
                var v = ov.swizzle.xzwy;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(50)", v.z);
                Assert.AreEqual("(50)", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-9)-2)", null, "7", "-1");
                var v = ov.swizzle.xzwyx;
                Assert.AreEqual("((-3-9)-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-3-9)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-8)", "(7-4)", "", "-3");
                var v = ov.swizzle.xzwyy;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(7-4)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "8", "((-5-6)6)", "((-5-6)6)");
                var v = ov.swizzle.xzwyz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-5-6)6)", v.y);
                Assert.AreEqual("((-5-6)6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-5-6)6)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((3-8)-6)", "8", "((3-8)-6)");
                var v = ov.swizzle.xzwyw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((3-8)-6)", v.z);
                Assert.AreEqual("((3-8)-6)", v.w);
                Assert.AreEqual("((3-8)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((6-6)6)", null, "((4-6)6)");
                var v = ov.swizzle.xzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-6)6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("4", "(81)", "((4-8)6)", "9");
                var v = ov.swizzle.xzwzx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((4-8)6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((4-8)6)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-93)-4)", "0", "(3-4)", "(-75)");
                var v = ov.swizzle.xzwzy;
                Assert.AreEqual("((-93)-4)", v.x);
                Assert.AreEqual("(3-4)", v.y);
                Assert.AreEqual("(-75)", v.z);
                Assert.AreEqual("(3-4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(-59)", "(-59)", "((23)-4)", "(3-1)");
                var v = ov.swizzle.xzwzz;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("((23)-4)", v.y);
                Assert.AreEqual("(3-1)", v.z);
                Assert.AreEqual("((23)-4)", v.w);
                Assert.AreEqual("((23)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-8)", "4", "(9-8)", "-8");
                var v = ov.swizzle.xzwzw;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(4-8)", "((5-4)4)", "4", null);
                var v = ov.swizzle.xzww;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((-3-2)3)", "((94)-4)", "(48)", "((94)-4)");
                var v = ov.swizzle.xzwwx;
                Assert.AreEqual("((-3-2)3)", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("((94)-4)", v.z);
                Assert.AreEqual("((94)-4)", v.w);
                Assert.AreEqual("((-3-2)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-9)", "((07)-5)", "", null);
                var v = ov.swizzle.xzwwy;
                Assert.AreEqual("(6-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((07)-5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((9-5)-8)", "-2", "(60)");
                var v = ov.swizzle.xzwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((-79)8)", "(52)", "(52)", "1");
                var v = ov.swizzle.xzwww;
                Assert.AreEqual("((-79)8)", v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("7", "-4", "((-5-3)3)", "(-6-7)");
                var v = ov.swizzle.xw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-6-7)", v.y);
            }
            {
                var ov = new gvec4<string>("", "(5-1)", "5", null);
                var v = ov.swizzle.xwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("-5", "(-36)", "((-53)-7)", "(-36)");
                var v = ov.swizzle.xwxx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("((-13)7)", "(9-1)", "(6-3)", "-2");
                var v = ov.swizzle.xwxxx;
                Assert.AreEqual("((-13)7)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-13)7)", v.z);
                Assert.AreEqual("((-13)7)", v.w);
                Assert.AreEqual("((-13)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-7)", null, "2", null);
                var v = ov.swizzle.xwxxy;
                Assert.AreEqual("(5-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(5-7)", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("2", "(73)", "2", "((-4-8)5)");
                var v = ov.swizzle.xwxxz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-4-8)5)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((-21)2)", "-2", "((-16)-1)", "8");
                var v = ov.swizzle.xwxxw;
                Assert.AreEqual("((-21)2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-21)2)", v.z);
                Assert.AreEqual("((-21)2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-5)", "((-7-6)-5)", "((79)2)", "(2-9)");
                var v = ov.swizzle.xwxy;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("((-7-6)-5)", v.w);
            }
            {
                var ov = new gvec4<string>("((-81)6)", null, "(-7-2)", "5");
                var v = ov.swizzle.xwxyx;
                Assert.AreEqual("((-81)6)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-81)6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-81)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-43)", "((-73)-6)", "", "((-73)-6)");
                var v = ov.swizzle.xwxyy;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("((-73)-6)", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("((-73)-6)", v.w);
                Assert.AreEqual("((-73)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-3)", "", "(7-1)", "(7-1)");
                var v = ov.swizzle.xwxyz;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("(7-1)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(7-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(44)", "(05)", null, "(05)");
                var v = ov.swizzle.xwxyw;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("(44)", v.z);
                Assert.AreEqual("(05)", v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-6)", "((-6-7)9)", null, null);
                var v = ov.swizzle.xwxz;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-49)", "(-84)", "((84)5)", "((-9-4)8)");
                var v = ov.swizzle.xwxzx;
                Assert.AreEqual("(-49)", v.x);
                Assert.AreEqual("((-9-4)8)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("((84)5)", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec4<string>("((6-8)-8)", "", "-2", "(49)");
                var v = ov.swizzle.xwxzy;
                Assert.AreEqual("((6-8)-8)", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("((6-8)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(01)", "((54)-4)", "((-47)0)");
                var v = ov.swizzle.xwxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-47)0)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((54)-4)", v.w);
                Assert.AreEqual("((54)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-36)", "(-36)", "8", null);
                var v = ov.swizzle.xwxzw;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-3-6)", "", "((-9-1)-2)", "(-3-6)");
                var v = ov.swizzle.xwxw;
                Assert.AreEqual("(-3-6)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
            }
            {
                var ov = new gvec4<string>(null, null, "5", "-1");
                var v = ov.swizzle.xwxwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-74)", "9", "(-74)");
                var v = ov.swizzle.xwxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-74)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((-63)7)", "", "-4");
                var v = ov.swizzle.xwxwz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(22)", "((7-2)2)", "((7-3)7)", "(-9-7)");
                var v = ov.swizzle.xwxww;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("(22)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-9)", "(-11)", "(-4-5)", "");
                var v = ov.swizzle.xwy;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-11)", v.z);
            }
            {
                var ov = new gvec4<string>(null, "-7", "", "((3-6)9)");
                var v = ov.swizzle.xwyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-6)9)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((-6-9)-5)", "((-88)-8)", "6", null);
                var v = ov.swizzle.xwyxx;
                Assert.AreEqual("((-6-9)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-88)-8)", v.z);
                Assert.AreEqual("((-6-9)-5)", v.w);
                Assert.AreEqual("((-6-9)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-9", null, "((-52)1)");
                var v = ov.swizzle.xwyxy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-52)1)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(1-6)", "(-94)", "9", "");
                var v = ov.swizzle.xwyxz;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("", "-6", "((7-7)8)", "(2-3)");
                var v = ov.swizzle.xwyxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-3)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-96)", "-6", "((-5-6)9)", "((-89)9)");
                var v = ov.swizzle.xwyy;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("((-89)9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("", "0", "(2-5)", "((-32)-6)");
                var v = ov.swizzle.xwyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-32)-6)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "-3", "");
                var v = ov.swizzle.xwyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("5", "", "((22)-4)", "((22)-4)");
                var v = ov.swizzle.xwyyz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((22)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((22)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-8)", "-9", "-5", null);
                var v = ov.swizzle.xwyyw;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-1", "", "((7-4)-7)", "(-36)");
                var v = ov.swizzle.xwyz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-4)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("-5", "((2-3)-7)", "((30)-2)", "(47)");
                var v = ov.swizzle.xwyzx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("((2-3)-7)", v.z);
                Assert.AreEqual("((30)-2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(-61)", null, "(-61)", "(-61)");
                var v = ov.swizzle.xwyzy;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-61)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-2-2)", null, "", null);
                var v = ov.swizzle.xwyzz;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(1-2)", "-9", "((1-3)4)", "(1-2)");
                var v = ov.swizzle.xwyzw;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("(1-2)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((1-3)4)", v.w);
                Assert.AreEqual("(1-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(98)", null, "(-27)", "9");
                var v = ov.swizzle.xwyw;
                Assert.AreEqual("(98)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-20)3)", "((-89)5)", "4");
                var v = ov.swizzle.xwywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-20)3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(55)", "(55)");
                var v = ov.swizzle.xwywy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((2-7)9)", "((40)2)", "7", "");
                var v = ov.swizzle.xwywz;
                Assert.AreEqual("((2-7)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((40)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)8)", "", "(83)", "-5");
                var v = ov.swizzle.xwyww;
                Assert.AreEqual("((-2-5)8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("6", "6", "((30)0)", "((30)0)");
                var v = ov.swizzle.xwz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((30)0)", v.y);
                Assert.AreEqual("((30)0)", v.z);
            }
            {
                var ov = new gvec4<string>("", "((-5-5)-9)", "(0-3)", "9");
                var v = ov.swizzle.xwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("", "((-4-2)-3)", "7", "((-24)-5)");
                var v = ov.swizzle.xwzxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-24)-5)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(50)", "(50)", "((41)7)", "-1");
                var v = ov.swizzle.xwzxy;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((41)7)", v.z);
                Assert.AreEqual("(50)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec4<string>("(95)", "((-85)-5)", "((-85)-5)", "(-67)");
                var v = ov.swizzle.xwzxz;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("(-67)", v.y);
                Assert.AreEqual("((-85)-5)", v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("((-85)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-51)", "((-5-7)3)", "");
                var v = ov.swizzle.xwzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-7)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(20)", "9", "(-4-1)", "((-2-2)5)");
                var v = ov.swizzle.xwzy;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("((-2-2)5)", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("0", "((-3-9)-2)", "(60)", "((17)9)");
                var v = ov.swizzle.xwzyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((17)9)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("((-3-9)-2)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "((75)-5)", "(-2-9)", "5");
                var v = ov.swizzle.xwzyy;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("((75)-5)", v.w);
                Assert.AreEqual("((75)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-55)", "", null);
                var v = ov.swizzle.xwzyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-55)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "", "((-14)-3)");
                var v = ov.swizzle.xwzyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-14)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-14)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-1)", "-3", "-3", "(-7-4)");
                var v = ov.swizzle.xwzz;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("(-7-4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("", "(2-6)", "((0-7)-6)", "(3-2)");
                var v = ov.swizzle.xwzzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((0-7)-6)", v.z);
                Assert.AreEqual("((0-7)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(38)", "", "((-95)-6)", "(38)");
                var v = ov.swizzle.xwzzy;
                Assert.AreEqual("(38)", v.x);
                Assert.AreEqual("(38)", v.y);
                Assert.AreEqual("((-95)-6)", v.z);
                Assert.AreEqual("((-95)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-3)-9)", "((-4-3)-9)", "(76)", "5");
                var v = ov.swizzle.xwzzz;
                Assert.AreEqual("((-4-3)-9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("(76)", v.v);
            }
            {
                var ov = new gvec4<string>("((-46)0)", null, "(-1-2)", "");
                var v = ov.swizzle.xwzzw;
                Assert.AreEqual("((-46)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((9-5)-2)", null, "((9-5)-2)", "5");
                var v = ov.swizzle.xwzw;
                Assert.AreEqual("((9-5)-2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((9-5)-2)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("(-3-4)", "(-7-6)", null, "");
                var v = ov.swizzle.xwzwx;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-5)1)", "-9", "(7-2)", "-8");
                var v = ov.swizzle.xwzwy;
                Assert.AreEqual("((5-5)1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(7-2)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-81)", "((-22)-1)", "(17)");
                var v = ov.swizzle.xwzwz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("((-22)-1)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("((-22)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "4", "(8-6)", "(6-1)");
                var v = ov.swizzle.xwzww;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("(6-1)", v.w);
                Assert.AreEqual("(6-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-76)", null, "(21)", "((2-8)5)");
                var v = ov.swizzle.xww;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((2-8)5)", v.y);
                Assert.AreEqual("((2-8)5)", v.z);
            }
            {
                var ov = new gvec4<string>("", "((6-6)5)", "", "-8");
                var v = ov.swizzle.xwwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(9-4)", null, "-2", "");
                var v = ov.swizzle.xwwxx;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("(9-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-6-6)-3)", "((3-5)-3)", "((-6-6)-3)");
                var v = ov.swizzle.xwwxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-6)-3)", v.y);
                Assert.AreEqual("((-6-6)-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-6-6)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(5-5)", "(46)", "-9");
                var v = ov.swizzle.xwwxz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(46)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-9-7)", "((-8-5)-7)", "((-57)-8)");
                var v = ov.swizzle.xwwxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-57)-8)", v.y);
                Assert.AreEqual("((-57)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-57)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "1", "3", "((30)-4)");
                var v = ov.swizzle.xwwy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((30)-4)", v.y);
                Assert.AreEqual("((30)-4)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("-6", "((0-5)7)", "(27)", "-5");
                var v = ov.swizzle.xwwyx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("((0-5)7)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((88)-6)", "", "9", "9");
                var v = ov.swizzle.xwwyy;
                Assert.AreEqual("((88)-6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(93)", "(4-6)", "3");
                var v = ov.swizzle.xwwyz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(93)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((43)-9)", null, "8", "(-87)");
                var v = ov.swizzle.xwwyw;
                Assert.AreEqual("((43)-9)", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec4<string>("(-65)", "", "-5", "((8-7)-2)");
                var v = ov.swizzle.xwwz;
                Assert.AreEqual("(-65)", v.x);
                Assert.AreEqual("((8-7)-2)", v.y);
                Assert.AreEqual("((8-7)-2)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("", "0", "", null);
                var v = ov.swizzle.xwwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((-1-1)-4)", "8", "");
                var v = ov.swizzle.xwwzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-1-1)-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "6", "(4-5)");
                var v = ov.swizzle.xwwzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-5)", v.y);
                Assert.AreEqual("(4-5)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-7)-6)", "9", "(8-9)", "((-9-7)-6)");
                var v = ov.swizzle.xwwzw;
                Assert.AreEqual("((-9-7)-6)", v.x);
                Assert.AreEqual("((-9-7)-6)", v.y);
                Assert.AreEqual("((-9-7)-6)", v.z);
                Assert.AreEqual("(8-9)", v.w);
                Assert.AreEqual("((-9-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-1)9)", "(2-8)", "", "((4-6)7)");
                var v = ov.swizzle.xwww;
                Assert.AreEqual("((5-1)9)", v.x);
                Assert.AreEqual("((4-6)7)", v.y);
                Assert.AreEqual("((4-6)7)", v.z);
                Assert.AreEqual("((4-6)7)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((30)-8)", "8", "8");
                var v = ov.swizzle.xwwwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-2", "1", "(64)");
                var v = ov.swizzle.xwwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("(64)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((-43)3)", "-9");
                var v = ov.swizzle.xwwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((-43)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-76)", "7", "(-76)", "((-1-5)6)");
                var v = ov.swizzle.xwwww;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((-1-5)6)", v.y);
                Assert.AreEqual("((-1-5)6)", v.z);
                Assert.AreEqual("((-1-5)6)", v.w);
                Assert.AreEqual("((-1-5)6)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(01)", "(76)", "(-2-3)");
                var v = ov.swizzle.yx;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("7", v.y);
            }
            {
                var ov = new gvec4<string>("", "9", "(-98)", "(-2-3)");
                var v = ov.swizzle.yxx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("-9", "(3-1)", "((97)-5)", "((97)-5)");
                var v = ov.swizzle.yxxx;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec4<string>("((2-8)5)", "(-7-4)", "(-2-1)", "(9-3)");
                var v = ov.swizzle.yxxxx;
                Assert.AreEqual("(-7-4)", v.x);
                Assert.AreEqual("((2-8)5)", v.y);
                Assert.AreEqual("((2-8)5)", v.z);
                Assert.AreEqual("((2-8)5)", v.w);
                Assert.AreEqual("((2-8)5)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((6-2)1)", "6", "(-55)");
                var v = ov.swizzle.yxxxy;
                Assert.AreEqual("((6-2)1)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((6-2)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-62)", "9", "((-3-9)1)");
                var v = ov.swizzle.yxxxz;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-62)", "(3-7)", "9", "8");
                var v = ov.swizzle.yxxxw;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-1)", null, "((95)0)", "5");
                var v = ov.swizzle.yxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("", "-5", null, "-5");
                var v = ov.swizzle.yxxyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-4)0)", null, "(2-7)", "((21)-9)");
                var v = ov.swizzle.yxxyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-4)0)", v.y);
                Assert.AreEqual("((-7-4)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((2-3)-1)", "(4-8)", "(4-8)", null);
                var v = ov.swizzle.yxxyz;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("((2-3)-1)", v.y);
                Assert.AreEqual("((2-3)-1)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", null, "-9", "((-7-9)-6)");
                var v = ov.swizzle.yxxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-7-9)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "2", "(20)", "((-97)4)");
                var v = ov.swizzle.yxxz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(20)", v.w);
            }
            {
                var ov = new gvec4<string>("(-93)", "((9-1)-3)", "(-72)", "((0-3)9)");
                var v = ov.swizzle.yxxzx;
                Assert.AreEqual("((9-1)-3)", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-72)", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec4<string>("(96)", "(0-2)", "(13)", "");
                var v = ov.swizzle.yxxzy;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-93)", "", "((-82)-4)", null);
                var v = ov.swizzle.yxxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("((-82)-4)", v.w);
                Assert.AreEqual("((-82)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((00)4)", "(-52)", "((00)4)");
                var v = ov.swizzle.yxxzw;
                Assert.AreEqual("((00)4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("((00)4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((99)3)", "(-48)", null);
                var v = ov.swizzle.yxxw;
                Assert.AreEqual("((99)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-1-6)", "(-7-3)", null, "(6-1)");
                var v = ov.swizzle.yxxwx;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual("(6-1)", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-1)", "", "", "((8-6)-6)");
                var v = ov.swizzle.yxxwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("((8-6)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((40)6)", "0", "((-74)4)");
                var v = ov.swizzle.yxxwz;
                Assert.AreEqual("((40)6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-74)4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-1)-6)", "", "(3-9)", "((-92)7)");
                var v = ov.swizzle.yxxww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-9-1)-6)", v.y);
                Assert.AreEqual("((-9-1)-6)", v.z);
                Assert.AreEqual("((-92)7)", v.w);
                Assert.AreEqual("((-92)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((7-8)7)", "((2-2)0)", "7", null);
                var v = ov.swizzle.yxy;
                Assert.AreEqual("((2-2)0)", v.x);
                Assert.AreEqual("((7-8)7)", v.y);
                Assert.AreEqual("((2-2)0)", v.z);
            }
            {
                var ov = new gvec4<string>("((69)-5)", "((-46)9)", "(-8-6)", "0");
                var v = ov.swizzle.yxyx;
                Assert.AreEqual("((-46)9)", v.x);
                Assert.AreEqual("((69)-5)", v.y);
                Assert.AreEqual("((-46)9)", v.z);
                Assert.AreEqual("((69)-5)", v.w);
            }
            {
                var ov = new gvec4<string>("", "0", "(09)", "(09)");
                var v = ov.swizzle.yxyxx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(3-6)", "-2", "(3-6)", "(-78)");
                var v = ov.swizzle.yxyxy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(35)", "(35)", "((22)-7)", "(35)");
                var v = ov.swizzle.yxyxz;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("(35)", v.w);
                Assert.AreEqual("((22)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "(2-7)", "(-3-2)", "(2-7)");
                var v = ov.swizzle.yxyxw;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(52)", "-8", "(-44)");
                var v = ov.swizzle.yxyy;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(52)", v.z);
                Assert.AreEqual("(52)", v.w);
            }
            {
                var ov = new gvec4<string>("-6", "(-8-1)", "((80)9)", "0");
                var v = ov.swizzle.yxyyx;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(0-6)", "(0-6)", "((33)-5)", "5");
                var v = ov.swizzle.yxyyy;
                Assert.AreEqual("(0-6)", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("(0-6)", v.w);
                Assert.AreEqual("(0-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-7)", "((4-2)-3)", "((4-2)-3)", "");
                var v = ov.swizzle.yxyyz;
                Assert.AreEqual("((4-2)-3)", v.x);
                Assert.AreEqual("(5-7)", v.y);
                Assert.AreEqual("((4-2)-3)", v.z);
                Assert.AreEqual("((4-2)-3)", v.w);
                Assert.AreEqual("((4-2)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "3", "", "(90)");
                var v = ov.swizzle.yxyyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-88)", "8", "");
                var v = ov.swizzle.yxyz;
                Assert.AreEqual("(-88)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-88)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec4<string>("((3-9)2)", null, "((3-9)2)", "-3");
                var v = ov.swizzle.yxyzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-9)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((3-9)2)", v.w);
                Assert.AreEqual("((3-9)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(56)", null, "(-6-4)", "(56)");
                var v = ov.swizzle.yxyzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-1-3)", "", "(-7-9)", "1");
                var v = ov.swizzle.yxyzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(-7-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-8)4)", "(22)", null, null);
                var v = ov.swizzle.yxyzw;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("((-3-8)4)", v.y);
                Assert.AreEqual("(22)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((5-9)5)", null, "(-6-9)", "(-6-9)");
                var v = ov.swizzle.yxyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-9)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-9)", v.w);
            }
            {
                var ov = new gvec4<string>("4", "((-71)-6)", "8", "4");
                var v = ov.swizzle.yxywx;
                Assert.AreEqual("((-71)-6)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-71)-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((04)-8)", "8");
                var v = ov.swizzle.yxywy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-15)", "((-68)8)", "(-15)", "");
                var v = ov.swizzle.yxywz;
                Assert.AreEqual("((-68)8)", v.x);
                Assert.AreEqual("(-15)", v.y);
                Assert.AreEqual("((-68)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec4<string>("((21)-3)", "(6-3)", "4", "4");
                var v = ov.swizzle.yxyww;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("((21)-3)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((6-7)-2)", "((-43)9)", null, "-3");
                var v = ov.swizzle.yxz;
                Assert.AreEqual("((-43)9)", v.x);
                Assert.AreEqual("((6-7)-2)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("((6-1)4)", "(5-3)", "((-57)-5)", "((32)-1)");
                var v = ov.swizzle.yxzx;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("((6-1)4)", v.y);
                Assert.AreEqual("((-57)-5)", v.z);
                Assert.AreEqual("((6-1)4)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-6)", "((1-4)-5)", "((78)-8)", "((78)-8)");
                var v = ov.swizzle.yxzxx;
                Assert.AreEqual("((1-4)-5)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("((78)-8)", v.z);
                Assert.AreEqual("(-4-6)", v.w);
                Assert.AreEqual("(-4-6)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "2", "(66)", "(-44)");
                var v = ov.swizzle.yxzxy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((53)8)", "1", "((4-2)1)", "-9");
                var v = ov.swizzle.yxzxz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((53)8)", v.y);
                Assert.AreEqual("((4-2)1)", v.z);
                Assert.AreEqual("((53)8)", v.w);
                Assert.AreEqual("((4-2)1)", v.v);
            }
            {
                var ov = new gvec4<string>("((39)-6)", "(01)", "(-9-7)", "(01)");
                var v = ov.swizzle.yxzxw;
                Assert.AreEqual("(01)", v.x);
                Assert.AreEqual("((39)-6)", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("((39)-6)", v.w);
                Assert.AreEqual("(01)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(64)", null, "5");
                var v = ov.swizzle.yxzy;
                Assert.AreEqual("(64)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(64)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-2)", "-1", "(-4-2)", "(-4-2)");
                var v = ov.swizzle.yxzyx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-4-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-6)", "-8", null, "(2-5)");
                var v = ov.swizzle.yxzyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(0-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(25)", "9", "(56)");
                var v = ov.swizzle.yxzyz;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(8-4)", "6", "6");
                var v = ov.swizzle.yxzyw;
                Assert.AreEqual("(8-4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(-92)", "(-8-1)", "-1");
                var v = ov.swizzle.yxzz;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-8-1)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-2)3)", "((-7-2)3)", "((-57)-9)", null);
                var v = ov.swizzle.yxzzx;
                Assert.AreEqual("((-7-2)3)", v.x);
                Assert.AreEqual("((-7-2)3)", v.y);
                Assert.AreEqual("((-57)-9)", v.z);
                Assert.AreEqual("((-57)-9)", v.w);
                Assert.AreEqual("((-7-2)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-61)4)", "-3", "", null);
                var v = ov.swizzle.yxzzy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-61)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(3-8)", null, "(-2-2)");
                var v = ov.swizzle.yxzzz;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)9)", "-7", "((-2-6)-8)", null);
                var v = ov.swizzle.yxzzw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-2-4)9)", v.y);
                Assert.AreEqual("((-2-6)-8)", v.z);
                Assert.AreEqual("((-2-6)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-19)-1)", "((5-9)-2)", null, "(03)");
                var v = ov.swizzle.yxzw;
                Assert.AreEqual("((5-9)-2)", v.x);
                Assert.AreEqual("((-19)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(03)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-7", null, "((-64)-6)");
                var v = ov.swizzle.yxzwx;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-64)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-69)", "((-51)-9)", "(-69)", "");
                var v = ov.swizzle.yxzwy;
                Assert.AreEqual("((-51)-9)", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-51)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-59)4)", "5", null, "7");
                var v = ov.swizzle.yxzwz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-59)4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("7", "((65)8)", "-5", "(-95)");
                var v = ov.swizzle.yxzww;
                Assert.AreEqual("((65)8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-95)", v.w);
                Assert.AreEqual("(-95)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-8)-4)", "((9-8)-4)", "(-39)", "");
                var v = ov.swizzle.yxw;
                Assert.AreEqual("((9-8)-4)", v.x);
                Assert.AreEqual("((9-8)-4)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(-5-1)", "((-34)-7)", "((-34)-7)", "9");
                var v = ov.swizzle.yxwx;
                Assert.AreEqual("((-34)-7)", v.x);
                Assert.AreEqual("(-5-1)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-5-1)", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-5)7)", "5", "-1", "((-7-5)7)");
                var v = ov.swizzle.yxwxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-7-5)7)", v.y);
                Assert.AreEqual("((-7-5)7)", v.z);
                Assert.AreEqual("((-7-5)7)", v.w);
                Assert.AreEqual("((-7-5)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-4)1)", null, null, null);
                var v = ov.swizzle.yxwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-1-4)1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-4)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-78)5)", null, "(-77)", "(-5-3)");
                var v = ov.swizzle.yxwxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-78)5)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("((-78)5)", v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-2)", "-1", "", "");
                var v = ov.swizzle.yxwxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("8", "-4", "8", "((5-3)-7)");
                var v = ov.swizzle.yxwy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((5-3)-7)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec4<string>("9", "((-6-4)-1)", "9", "9");
                var v = ov.swizzle.yxwyx;
                Assert.AreEqual("((-6-4)-1)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-6-4)-1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-74)", "-3", "(-74)", "(-95)");
                var v = ov.swizzle.yxwyy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("6", "-2", "6", "(-90)");
                var v = ov.swizzle.yxwyz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-90)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(2-7)", "(2-7)", "((2-8)7)", "-3");
                var v = ov.swizzle.yxwyw;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("(2-7)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((-20)-5)", "((42)-6)", "((1-1)-9)", "(83)");
                var v = ov.swizzle.yxwz;
                Assert.AreEqual("((42)-6)", v.x);
                Assert.AreEqual("((-20)-5)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("((1-1)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("0", null, "(86)", "(86)");
                var v = ov.swizzle.yxwzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((0-7)-6)", null, null);
                var v = ov.swizzle.yxwzy;
                Assert.AreEqual("((0-7)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-1)9)", "((-15)-2)", null, "((-7-4)-8)");
                var v = ov.swizzle.yxwzz;
                Assert.AreEqual("((-15)-2)", v.x);
                Assert.AreEqual("((-7-1)9)", v.y);
                Assert.AreEqual("((-7-4)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((98)-3)", "7", "((-9-4)9)", "((98)-3)");
                var v = ov.swizzle.yxwzw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((98)-3)", v.y);
                Assert.AreEqual("((98)-3)", v.z);
                Assert.AreEqual("((-9-4)9)", v.w);
                Assert.AreEqual("((98)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(7-9)", "-4", "((-53)4)");
                var v = ov.swizzle.yxww;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-53)4)", v.z);
                Assert.AreEqual("((-53)4)", v.w);
            }
            {
                var ov = new gvec4<string>("(00)", "((90)4)", "(00)", "(4-7)");
                var v = ov.swizzle.yxwwx;
                Assert.AreEqual("((90)4)", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("(4-7)", v.z);
                Assert.AreEqual("(4-7)", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-9-6)-3)", "((-9-6)-3)", "9");
                var v = ov.swizzle.yxwwy;
                Assert.AreEqual("((-9-6)-3)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-9-6)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-90)", "(82)", null, "-7");
                var v = ov.swizzle.yxwwz;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((17)-1)", "5", "-5", null);
                var v = ov.swizzle.yxwww;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((17)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-38)-2)", "", "((-38)-2)", "((-38)-2)");
                var v = ov.swizzle.yy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
            }
            {
                var ov = new gvec4<string>("(06)", "((-19)-9)", "(-38)", "((-19)-9)");
                var v = ov.swizzle.yyx;
                Assert.AreEqual("((-19)-9)", v.x);
                Assert.AreEqual("((-19)-9)", v.y);
                Assert.AreEqual("(06)", v.z);
            }
            {
                var ov = new gvec4<string>("((-37)3)", "((7-1)3)", "(22)", "(-9-8)");
                var v = ov.swizzle.yyxx;
                Assert.AreEqual("((7-1)3)", v.x);
                Assert.AreEqual("((7-1)3)", v.y);
                Assert.AreEqual("((-37)3)", v.z);
                Assert.AreEqual("((-37)3)", v.w);
            }
            {
                var ov = new gvec4<string>("(66)", "(-29)", "1", "(66)");
                var v = ov.swizzle.yyxxx;
                Assert.AreEqual("(-29)", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("(66)", v.w);
                Assert.AreEqual("(66)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-1", "", "-3");
                var v = ov.swizzle.yyxxy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((4-9)-4)", null, "(-87)", "9");
                var v = ov.swizzle.yyxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-9)-4)", v.z);
                Assert.AreEqual("((4-9)-4)", v.w);
                Assert.AreEqual("(-87)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-6)-2)", "(55)", "((-29)-5)", "((9-5)1)");
                var v = ov.swizzle.yyxxw;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("((-2-6)-2)", v.z);
                Assert.AreEqual("((-2-6)-2)", v.w);
                Assert.AreEqual("((9-5)1)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(65)", null, "(65)");
                var v = ov.swizzle.yyxy;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(65)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-5)", "8", "8", "((-12)-7)");
                var v = ov.swizzle.yyxyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(8-5)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-8-1)-3)", "((-8-1)-3)", null);
                var v = ov.swizzle.yyxyy;
                Assert.AreEqual("((-8-1)-3)", v.x);
                Assert.AreEqual("((-8-1)-3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-8-1)-3)", v.w);
                Assert.AreEqual("((-8-1)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-8)", "(9-4)", "8", "(2-8)");
                var v = ov.swizzle.yyxyz;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("7", "", null, "7");
                var v = ov.swizzle.yyxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", null, "");
                var v = ov.swizzle.yyxz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(21)", "((52)-7)", "(21)", "(21)");
                var v = ov.swizzle.yyxzx;
                Assert.AreEqual("((52)-7)", v.x);
                Assert.AreEqual("((52)-7)", v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("(21)", v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)9)", "-7", null, "");
                var v = ov.swizzle.yyxzy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-2-4)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(76)", "(76)", "((44)-9)", "((2-2)9)");
                var v = ov.swizzle.yyxzz;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("((44)-9)", v.w);
                Assert.AreEqual("((44)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(97)", "((09)-5)", "((09)-5)", "(84)");
                var v = ov.swizzle.yyxzw;
                Assert.AreEqual("((09)-5)", v.x);
                Assert.AreEqual("((09)-5)", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("((09)-5)", v.w);
                Assert.AreEqual("(84)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-4)-8)", "4", "((5-8)0)", "(-84)");
                var v = ov.swizzle.yyxw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-5-4)-8)", v.z);
                Assert.AreEqual("(-84)", v.w);
            }
            {
                var ov = new gvec4<string>("0", "(3-3)", "(1-7)", "-2");
                var v = ov.swizzle.yyxwx;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(0-7)", "-8", "(0-7)", "(-70)");
                var v = ov.swizzle.yyxwy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(0-7)", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((-3-4)4)", "(-3-5)", "1");
                var v = ov.swizzle.yyxwz;
                Assert.AreEqual("((-3-4)4)", v.x);
                Assert.AreEqual("((-3-4)4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((-96)5)", "((37)6)", "((37)6)");
                var v = ov.swizzle.yyxww;
                Assert.AreEqual("((-96)5)", v.x);
                Assert.AreEqual("((-96)5)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((37)6)", v.w);
                Assert.AreEqual("((37)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-5)", "(-8-9)", "((-21)1)", "((-21)1)");
                var v = ov.swizzle.yyy;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
            }
            {
                var ov = new gvec4<string>("(33)", "((5-3)-8)", "-4", "(83)");
                var v = ov.swizzle.yyyx;
                Assert.AreEqual("((5-3)-8)", v.x);
                Assert.AreEqual("((5-3)-8)", v.y);
                Assert.AreEqual("((5-3)-8)", v.z);
                Assert.AreEqual("(33)", v.w);
            }
            {
                var ov = new gvec4<string>("", "", "((84)-9)", "(90)");
                var v = ov.swizzle.yyyxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((4-7)-7)", "((94)5)", "-7");
                var v = ov.swizzle.yyyxy;
                Assert.AreEqual("((4-7)-7)", v.x);
                Assert.AreEqual("((4-7)-7)", v.y);
                Assert.AreEqual("((4-7)-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-7)-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-24)", "((-48)8)", null);
                var v = ov.swizzle.yyyxz;
                Assert.AreEqual("(-24)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("(-24)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-48)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-9)", "((-44)8)", "((-73)7)", "");
                var v = ov.swizzle.yyyxw;
                Assert.AreEqual("((-44)8)", v.x);
                Assert.AreEqual("((-44)8)", v.y);
                Assert.AreEqual("((-44)8)", v.z);
                Assert.AreEqual("(1-9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-3", "((91)4)", "-5");
                var v = ov.swizzle.yyyy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("", "(-2-2)", null, "((02)-7)");
                var v = ov.swizzle.yyyyx;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-14)", null, "((05)-6)", null);
                var v = ov.swizzle.yyyyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-53)4)", null, "-8", "((-6-3)-1)");
                var v = ov.swizzle.yyyyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-45)-9)", null, "((0-5)5)");
                var v = ov.swizzle.yyyyw;
                Assert.AreEqual("((-45)-9)", v.x);
                Assert.AreEqual("((-45)-9)", v.y);
                Assert.AreEqual("((-45)-9)", v.z);
                Assert.AreEqual("((-45)-9)", v.w);
                Assert.AreEqual("((0-5)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-4)4)", "", "(7-2)", "((-75)7)");
                var v = ov.swizzle.yyyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(7-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(-7-2)", "(-7-2)", "((-43)-3)", "(-7-2)");
                var v = ov.swizzle.yyyzx;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("(-7-2)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("((-43)-3)", v.w);
                Assert.AreEqual("(-7-2)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "(-76)", "((37)4)");
                var v = ov.swizzle.yyyzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((05)-2)", "(-6-3)", "(-6-3)", "-3");
                var v = ov.swizzle.yyyzz;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("(-6-3)", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(-6-3)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(69)", "(16)", "((-46)8)");
                var v = ov.swizzle.yyyzw;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("(69)", v.z);
                Assert.AreEqual("(16)", v.w);
                Assert.AreEqual("((-46)8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "0", "((-68)0)", null);
                var v = ov.swizzle.yyyw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(59)", "((49)6)", null, "((49)6)");
                var v = ov.swizzle.yyywx;
                Assert.AreEqual("((49)6)", v.x);
                Assert.AreEqual("((49)6)", v.y);
                Assert.AreEqual("((49)6)", v.z);
                Assert.AreEqual("((49)6)", v.w);
                Assert.AreEqual("(59)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(1-3)", "", "2");
                var v = ov.swizzle.yyywy;
                Assert.AreEqual("(1-3)", v.x);
                Assert.AreEqual("(1-3)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(9-3)", "-5");
                var v = ov.swizzle.yyywz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-7)7)", "(-5-8)", "-5", null);
                var v = ov.swizzle.yyyww;
                Assert.AreEqual("(-5-8)", v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("(-5-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((01)-4)", "(-25)", "((-92)0)", "-6");
                var v = ov.swizzle.yyz;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("((-92)0)", v.z);
            }
            {
                var ov = new gvec4<string>("", "((-6-6)6)", "((08)-7)", "(2-7)");
                var v = ov.swizzle.yyzx;
                Assert.AreEqual("((-6-6)6)", v.x);
                Assert.AreEqual("((-6-6)6)", v.y);
                Assert.AreEqual("((08)-7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("6", "", "7", "(23)");
                var v = ov.swizzle.yyzxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-2)", "-4", "-5", "-5");
                var v = ov.swizzle.yyzxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((49)-2)", "-4", "(-1-8)", "(-58)");
                var v = ov.swizzle.yyzxz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("((49)-2)", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((04)-7)", "(88)", "");
                var v = ov.swizzle.yyzxw;
                Assert.AreEqual("((04)-7)", v.x);
                Assert.AreEqual("((04)-7)", v.y);
                Assert.AreEqual("(88)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-43)4)", "(23)", "(18)", "0");
                var v = ov.swizzle.yyzy;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("(23)", v.w);
            }
            {
                var ov = new gvec4<string>("0", "0", "0", "((-95)-5)");
                var v = ov.swizzle.yyzyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("9", "9", "((-1-3)-6)", "");
                var v = ov.swizzle.yyzyy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-1-3)-6)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((76)-5)", "-8", "((-2-4)-1)");
                var v = ov.swizzle.yyzyz;
                Assert.AreEqual("((76)-5)", v.x);
                Assert.AreEqual("((76)-5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((76)-5)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(-94)", "(19)", "(96)", "");
                var v = ov.swizzle.yyzyw;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("(19)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(6-5)", "((3-1)4)", "((3-1)4)");
                var v = ov.swizzle.yyzz;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("((3-1)4)", v.z);
                Assert.AreEqual("((3-1)4)", v.w);
            }
            {
                var ov = new gvec4<string>("-8", "-8", "((9-7)7)", "((-8-6)-6)");
                var v = ov.swizzle.yyzzx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((9-7)7)", v.z);
                Assert.AreEqual("((9-7)7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("9", "5", "(-4-2)", "((03)-6)");
                var v = ov.swizzle.yyzzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-78)2)", "(28)", "7");
                var v = ov.swizzle.yyzzz;
                Assert.AreEqual("((-78)2)", v.x);
                Assert.AreEqual("((-78)2)", v.y);
                Assert.AreEqual("(28)", v.z);
                Assert.AreEqual("(28)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "-9", "((-51)5)", "((38)2)");
                var v = ov.swizzle.yyzzw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-51)5)", v.z);
                Assert.AreEqual("((-51)5)", v.w);
                Assert.AreEqual("((38)2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-9-3)-3)", "", "((-9-3)-3)");
                var v = ov.swizzle.yyzw;
                Assert.AreEqual("((-9-3)-3)", v.x);
                Assert.AreEqual("((-9-3)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-9-3)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("-5", "(-2-8)", "(15)", "");
                var v = ov.swizzle.yyzwx;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("(-2-8)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("5", "5", null, "(-43)");
                var v = ov.swizzle.yyzwy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-43)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(14)", "9", "(14)", "9");
                var v = ov.swizzle.yyzwz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(14)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "4", "", "4");
                var v = ov.swizzle.yyzww;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("(7-6)", "7", "((-6-4)5)", "-6");
                var v = ov.swizzle.yyw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-6", v.z);
            }
            {
                var ov = new gvec4<string>("((21)5)", "((0-2)0)", "(0-4)", "-7");
                var v = ov.swizzle.yywx;
                Assert.AreEqual("((0-2)0)", v.x);
                Assert.AreEqual("((0-2)0)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((21)5)", v.w);
            }
            {
                var ov = new gvec4<string>("2", "((4-3)-3)", "", "");
                var v = ov.swizzle.yywxx;
                Assert.AreEqual("((4-3)-3)", v.x);
                Assert.AreEqual("((4-3)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-2)", "", "((52)-2)", "3");
                var v = ov.swizzle.yywxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-7-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("4", "4", "-2", "(20)");
                var v = ov.swizzle.yywxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(20)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((-73)-9)", "(-83)", "8");
                var v = ov.swizzle.yywxw;
                Assert.AreEqual("((-73)-9)", v.x);
                Assert.AreEqual("((-73)-9)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(24)", "", "(66)", "");
                var v = ov.swizzle.yywy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-1-9)-9)", "(-66)", "6");
                var v = ov.swizzle.yywyx;
                Assert.AreEqual("((-1-9)-9)", v.x);
                Assert.AreEqual("((-1-9)-9)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-1-9)-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "(22)", "(22)", "3");
                var v = ov.swizzle.yywyy;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("(22)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(22)", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec4<string>("((-39)-2)", "2", "((14)-2)", "2");
                var v = ov.swizzle.yywyz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((14)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "1", "", "((99)4)");
                var v = ov.swizzle.yywyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((99)4)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((99)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(94)", "((6-6)7)", "-6", "2");
                var v = ov.swizzle.yywz;
                Assert.AreEqual("((6-6)7)", v.x);
                Assert.AreEqual("((6-6)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("(2-6)", "5", "2", "(-53)");
                var v = ov.swizzle.yywzx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-53)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-5)", "-5", "2", "((8-4)6)");
                var v = ov.swizzle.yywzy;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((8-4)6)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(82)", "((8-3)-8)", "0", "-4");
                var v = ov.swizzle.yywzz;
                Assert.AreEqual("((8-3)-8)", v.x);
                Assert.AreEqual("((8-3)-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-6)8)", "((-4-6)8)", null, "((-47)8)");
                var v = ov.swizzle.yywzw;
                Assert.AreEqual("((-4-6)8)", v.x);
                Assert.AreEqual("((-4-6)8)", v.y);
                Assert.AreEqual("((-47)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-47)8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(00)", null, "7");
                var v = ov.swizzle.yyww;
                Assert.AreEqual("(00)", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("4", "4", "6", "");
                var v = ov.swizzle.yywwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("", "(15)", "((-4-2)2)", "(15)");
                var v = ov.swizzle.yywwy;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec4<string>("((63)7)", "((63)7)", null, "-4");
                var v = ov.swizzle.yywwz;
                Assert.AreEqual("((63)7)", v.x);
                Assert.AreEqual("((63)7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((4-4)6)", "(-56)", "((4-3)0)", null);
                var v = ov.swizzle.yywww;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "2", "(96)");
                var v = ov.swizzle.yz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
            }
            {
                var ov = new gvec4<string>("-5", "(80)", "-4", "");
                var v = ov.swizzle.yzx;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-5", v.z);
            }
            {
                var ov = new gvec4<string>(null, "((-7-6)-5)", "5", "");
                var v = ov.swizzle.yzxx;
                Assert.AreEqual("((-7-6)-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-3-5)0)", "(7-4)", "((-3-7)-1)");
                var v = ov.swizzle.yzxxx;
                Assert.AreEqual("((-3-5)0)", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(6-3)", "(-28)", null, "");
                var v = ov.swizzle.yzxxy;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("(6-3)", v.w);
                Assert.AreEqual("(-28)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "-8", "-8", null);
                var v = ov.swizzle.yzxxz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-3)", "((60)-6)", "", "(41)");
                var v = ov.swizzle.yzxxw;
                Assert.AreEqual("((60)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("(-6-3)", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-9)-7)", "((-3-5)4)", "-9", "(56)");
                var v = ov.swizzle.yzxy;
                Assert.AreEqual("((-3-5)4)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-6-9)-7)", v.z);
                Assert.AreEqual("((-3-5)4)", v.w);
            }
            {
                var ov = new gvec4<string>("8", "((60)2)", "8", "(-20)");
                var v = ov.swizzle.yzxyx;
                Assert.AreEqual("((60)2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((60)2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-46)2)", "", "((60)9)", "");
                var v = ov.swizzle.yzxyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((60)9)", v.y);
                Assert.AreEqual("((-46)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(9-8)", "(9-8)", "", "(99)");
                var v = ov.swizzle.yzxyz;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(9-8)", v.z);
                Assert.AreEqual("(9-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-7)", "-4", "-8", null);
                var v = ov.swizzle.yzxyw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-4-7)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-9-5)5)", "(-5-1)", "", "((-9-5)5)");
                var v = ov.swizzle.yzxz;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-5)5)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(8-1)", "((88)5)", "-8", "2");
                var v = ov.swizzle.yzxzx;
                Assert.AreEqual("((88)5)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(8-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-25)", "-7", "-7", "");
                var v = ov.swizzle.yzxzy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("4", null, "(-3-5)", "(2-6)");
                var v = ov.swizzle.yzxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((-15)-3)", "8", "-5");
                var v = ov.swizzle.yzxzw;
                Assert.AreEqual("((-15)-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "", "(-3-9)", "(58)");
                var v = ov.swizzle.yzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(58)", v.w);
            }
            {
                var ov = new gvec4<string>("((-58)-9)", "-8", "", "");
                var v = ov.swizzle.yzxwx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-58)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-58)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-1)7)", "(-38)", "(62)", "((66)-9)");
                var v = ov.swizzle.yzxwy;
                Assert.AreEqual("(-38)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("((-1-1)7)", v.z);
                Assert.AreEqual("((66)-9)", v.w);
                Assert.AreEqual("(-38)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "(43)", "-3", "-3");
                var v = ov.swizzle.yzxwz;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "3", "", "((-1-7)1)");
                var v = ov.swizzle.yzxww;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-1-7)1)", v.w);
                Assert.AreEqual("((-1-7)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-5)", "-3", "(1-7)", "((67)-5)");
                var v = ov.swizzle.yzy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("-3", v.z);
            }
            {
                var ov = new gvec4<string>("(20)", "5", "1", "((0-5)-5)");
                var v = ov.swizzle.yzyx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(20)", v.w);
            }
            {
                var ov = new gvec4<string>("3", null, "-6", "((6-5)2)");
                var v = ov.swizzle.yzyxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(79)", "((03)6)", "((30)2)");
                var v = ov.swizzle.yzyxy;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("((03)6)", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((-53)3)", "((-29)6)", "(31)");
                var v = ov.swizzle.yzyxz;
                Assert.AreEqual("((-53)3)", v.x);
                Assert.AreEqual("((-29)6)", v.y);
                Assert.AreEqual("((-53)3)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-29)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-8)", "5", "((8-7)-2)", "((97)-1)");
                var v = ov.swizzle.yzyxw;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((8-7)-2)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("((97)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "6", "6");
                var v = ov.swizzle.yzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((-1-3)1)", "(-2-5)", "(-2-5)", "(-2-5)");
                var v = ov.swizzle.yzyyx;
                Assert.AreEqual("(-2-5)", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("((-1-3)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", null, "((-9-2)-7)");
                var v = ov.swizzle.yzyyy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((-48)-3)", "-4", "-4", "7");
                var v = ov.swizzle.yzyyz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((-64)-6)", "((-64)-6)", "(03)", "");
                var v = ov.swizzle.yzyyw;
                Assert.AreEqual("((-64)-6)", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("((-64)-6)", v.z);
                Assert.AreEqual("((-64)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-7)9)", "((-2-7)9)", "(44)", "((-2-7)9)");
                var v = ov.swizzle.yzyz;
                Assert.AreEqual("((-2-7)9)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("((-2-7)9)", v.z);
                Assert.AreEqual("(44)", v.w);
            }
            {
                var ov = new gvec4<string>("3", "((-78)1)", "(-1-1)", "((-78)1)");
                var v = ov.swizzle.yzyzx;
                Assert.AreEqual("((-78)1)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("((-78)1)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((5-3)8)", "-9", "-8", "((5-3)8)");
                var v = ov.swizzle.yzyzy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-5-4)3)", "(-23)", "(-23)");
                var v = ov.swizzle.yzyzz;
                Assert.AreEqual("((-5-4)3)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("((-5-4)3)", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-9)", "", "((1-7)-9)", null);
                var v = ov.swizzle.yzyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-7)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((1-7)-9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((72)3)", "(9-4)", null, "(50)");
                var v = ov.swizzle.yzyw;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("(50)", v.w);
            }
            {
                var ov = new gvec4<string>("2", "-6", "((-23)3)", "2");
                var v = ov.swizzle.yzywx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-23)3)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-4)", "(7-7)", "-7", "((-9-2)6)");
                var v = ov.swizzle.yzywy;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("((-9-2)6)", v.w);
                Assert.AreEqual("(7-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-1)-6)", null, "-9", "");
                var v = ov.swizzle.yzywz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((93)8)", "-5", "((-10)-7)", "3");
                var v = ov.swizzle.yzyww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-10)-7)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(1-2)", "(-1-6)", "((-8-2)-3)");
                var v = ov.swizzle.yzz;
                Assert.AreEqual("(1-2)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
            }
            {
                var ov = new gvec4<string>("((82)-8)", "((-59)0)", "(15)", "((0-5)8)");
                var v = ov.swizzle.yzzx;
                Assert.AreEqual("((-59)0)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("((82)-8)", v.w);
            }
            {
                var ov = new gvec4<string>("-8", "(4-5)", "((-63)1)", "((-27)4)");
                var v = ov.swizzle.yzzxx;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("((-63)1)", v.y);
                Assert.AreEqual("((-63)1)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((9-6)3)", "", "6");
                var v = ov.swizzle.yzzxy;
                Assert.AreEqual("((9-6)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((9-6)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-64)", "-1", "((1-4)-6)", "(3-3)");
                var v = ov.swizzle.yzzxz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((1-4)-6)", v.y);
                Assert.AreEqual("((1-4)-6)", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual("((1-4)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "", "(-48)", "");
                var v = ov.swizzle.yzzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("(-48)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(95)", "(86)", "", "8");
                var v = ov.swizzle.yzzy;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(86)", v.w);
            }
            {
                var ov = new gvec4<string>("((-63)9)", "", "(-55)", "((-6-9)5)");
                var v = ov.swizzle.yzzyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("(-55)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-63)9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-1)-9)", "((-8-1)-9)", "3", "7");
                var v = ov.swizzle.yzzyy;
                Assert.AreEqual("((-8-1)-9)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((-8-1)-9)", v.w);
                Assert.AreEqual("((-8-1)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-6)7)", null, "(6-4)", "((-9-6)7)");
                var v = ov.swizzle.yzzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(6-4)", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(6-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(20)", "(-4-5)", "((09)-6)");
                var v = ov.swizzle.yzzyw;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("((09)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((95)-5)", "-3", "((-70)-8)");
                var v = ov.swizzle.yzzz;
                Assert.AreEqual("((95)-5)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("7", "((-1-4)4)", "7", "(-7-7)");
                var v = ov.swizzle.yzzzx;
                Assert.AreEqual("((-1-4)4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(4-2)", "(77)", "(77)");
                var v = ov.swizzle.yzzzy;
                Assert.AreEqual("(4-2)", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("(77)", v.z);
                Assert.AreEqual("(77)", v.w);
                Assert.AreEqual("(4-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(88)", "5", "-7", "5");
                var v = ov.swizzle.yzzzz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-7-3)", "((-8-2)0)", "((-8-4)9)");
                var v = ov.swizzle.yzzzw;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("((-8-2)0)", v.y);
                Assert.AreEqual("((-8-2)0)", v.z);
                Assert.AreEqual("((-8-2)0)", v.w);
                Assert.AreEqual("((-8-4)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", null, "", "-8");
                var v = ov.swizzle.yzzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>("9", "((7-7)9)", "(41)", "(8-5)");
                var v = ov.swizzle.yzzwx;
                Assert.AreEqual("((7-7)9)", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("(41)", v.z);
                Assert.AreEqual("(8-5)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", "((6-6)-7)", "((6-6)-7)", "((-5-5)-6)");
                var v = ov.swizzle.yzzwy;
                Assert.AreEqual("((6-6)-7)", v.x);
                Assert.AreEqual("((6-6)-7)", v.y);
                Assert.AreEqual("((6-6)-7)", v.z);
                Assert.AreEqual("((-5-5)-6)", v.w);
                Assert.AreEqual("((6-6)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-58)", "((-48)-5)", "(6-6)", "((-48)-5)");
                var v = ov.swizzle.yzzwz;
                Assert.AreEqual("((-48)-5)", v.x);
                Assert.AreEqual("(6-6)", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual("((-48)-5)", v.w);
                Assert.AreEqual("(6-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "((-7-8)1)", null, "");
                var v = ov.swizzle.yzzww;
                Assert.AreEqual("((-7-8)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-44)", "(-44)", "((-9-3)-2)", "(4-9)");
                var v = ov.swizzle.yzw;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("((-9-3)-2)", v.y);
                Assert.AreEqual("(4-9)", v.z);
            }
            {
                var ov = new gvec4<string>("", "(2-5)", "3", "9");
                var v = ov.swizzle.yzwx;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(15)", "(70)", "((-48)-2)", "4");
                var v = ov.swizzle.yzwxx;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("((-48)-2)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-81)", "(6-5)", "((-4-6)-9)");
                var v = ov.swizzle.yzwxy;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("((-4-6)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(24)", "-8", "");
                var v = ov.swizzle.yzwxz;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-6)", "-2", "(-1-3)", "((7-8)-9)");
                var v = ov.swizzle.yzwxw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-1-3)", v.y);
                Assert.AreEqual("((7-8)-9)", v.z);
                Assert.AreEqual("(-8-6)", v.w);
                Assert.AreEqual("((7-8)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("", "4", "", "");
                var v = ov.swizzle.yzwy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec4<string>("((05)-7)", "4", "(59)", "((00)-4)");
                var v = ov.swizzle.yzwyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(59)", v.y);
                Assert.AreEqual("((00)-4)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((05)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "-2", "-2", "-2");
                var v = ov.swizzle.yzwyy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(7-6)", "(7-6)", "((7-1)4)", "((-33)-3)");
                var v = ov.swizzle.yzwyz;
                Assert.AreEqual("(7-6)", v.x);
                Assert.AreEqual("((7-1)4)", v.y);
                Assert.AreEqual("((-33)-3)", v.z);
                Assert.AreEqual("(7-6)", v.w);
                Assert.AreEqual("((7-1)4)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-80)1)", "0", "");
                var v = ov.swizzle.yzwyw;
                Assert.AreEqual("((-80)1)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-80)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((8-2)0)", "-9", "(36)", "-7");
                var v = ov.swizzle.yzwz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(36)", v.w);
            }
            {
                var ov = new gvec4<string>("-4", null, "-6", "-3");
                var v = ov.swizzle.yzwzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(4-1)", "(0-2)", "(4-1)", null);
                var v = ov.swizzle.yzwzy;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-65)6)", "7", "7");
                var v = ov.swizzle.yzwzz;
                Assert.AreEqual("((-65)6)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "", "-2", "-7");
                var v = ov.swizzle.yzwzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "((-2-5)-3)", "((2-6)4)", "((-2-5)-3)");
                var v = ov.swizzle.yzww;
                Assert.AreEqual("((-2-5)-3)", v.x);
                Assert.AreEqual("((2-6)4)", v.y);
                Assert.AreEqual("((-2-5)-3)", v.z);
                Assert.AreEqual("((-2-5)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((27)6)", "-9", "-1");
                var v = ov.swizzle.yzwwx;
                Assert.AreEqual("((27)6)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-32)9)", "(-75)", "", "((7-7)-6)");
                var v = ov.swizzle.yzwwy;
                Assert.AreEqual("(-75)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-7)-6)", v.z);
                Assert.AreEqual("((7-7)-6)", v.w);
                Assert.AreEqual("(-75)", v.v);
            }
            {
                var ov = new gvec4<string>("3", null, "(54)", "((-6-5)-4)");
                var v = ov.swizzle.yzwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("((-6-5)-4)", v.z);
                Assert.AreEqual("((-6-5)-4)", v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "9", "9", "((-1-2)3)");
                var v = ov.swizzle.yzwww;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-1-2)3)", v.z);
                Assert.AreEqual("((-1-2)3)", v.w);
                Assert.AreEqual("((-1-2)3)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(42)", "2", "-6");
                var v = ov.swizzle.yw;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("-6", v.y);
            }
            {
                var ov = new gvec4<string>("((96)-5)", "1", "0", "");
                var v = ov.swizzle.ywx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((96)-5)", v.z);
            }
            {
                var ov = new gvec4<string>("", "-6", "", "-5");
                var v = ov.swizzle.ywxx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("-6", "3", "0", "0");
                var v = ov.swizzle.ywxxx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-9)", "(76)", null, "((-67)-8)");
                var v = ov.swizzle.ywxxy;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("((-67)-8)", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("(76)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-8)5)", "5", "((-1-8)5)", "7");
                var v = ov.swizzle.ywxxz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-1-8)5)", v.z);
                Assert.AreEqual("((-1-8)5)", v.w);
                Assert.AreEqual("((-1-8)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((-72)-4)", "6", "((8-3)-1)");
                var v = ov.swizzle.ywxxw;
                Assert.AreEqual("((-72)-4)", v.x);
                Assert.AreEqual("((8-3)-1)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((8-3)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(9-6)", "9", "(9-6)");
                var v = ov.swizzle.ywxy;
                Assert.AreEqual("(9-6)", v.x);
                Assert.AreEqual("(9-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-6)", v.w);
            }
            {
                var ov = new gvec4<string>("((11)-2)", null, "((11)-2)", "((11)-2)");
                var v = ov.swizzle.ywxyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((11)-2)", v.y);
                Assert.AreEqual("((11)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((11)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "2", "(11)", "5");
                var v = ov.swizzle.ywxyy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(48)", "(-80)", "-7", "((78)4)");
                var v = ov.swizzle.ywxyz;
                Assert.AreEqual("(-80)", v.x);
                Assert.AreEqual("((78)4)", v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(-80)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((-7-1)1)", "", "5");
                var v = ov.swizzle.ywxyw;
                Assert.AreEqual("((-7-1)1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-7-1)1)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-8)-6)", "((-6-8)-6)", "((-56)-2)", "(-4-9)");
                var v = ov.swizzle.ywxz;
                Assert.AreEqual("((-6-8)-6)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("((-6-8)-6)", v.z);
                Assert.AreEqual("((-56)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-4", "(7-8)", null);
                var v = ov.swizzle.ywxzx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(7-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(35)", null, "(-41)");
                var v = ov.swizzle.ywxzy;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-3)-4)", "(4-6)", "", "(-24)");
                var v = ov.swizzle.ywxzz;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("(-24)", v.y);
                Assert.AreEqual("((3-3)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-6)", "-7", "((38)-8)", "((98)-2)");
                var v = ov.swizzle.ywxzw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((98)-2)", v.y);
                Assert.AreEqual("(-4-6)", v.z);
                Assert.AreEqual("((38)-8)", v.w);
                Assert.AreEqual("((98)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-1)2)", "((8-4)-3)", "((-3-1)2)", "");
                var v = ov.swizzle.ywxw;
                Assert.AreEqual("((8-4)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-3-1)2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>(null, "", "((-67)-4)", "(1-4)");
                var v = ov.swizzle.ywxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", "0", null);
                var v = ov.swizzle.ywxwy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((-48)2)", null, "(-3-3)", "-5");
                var v = ov.swizzle.ywxwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-48)2)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-3-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(07)", "((-26)6)", null, "6");
                var v = ov.swizzle.ywxww;
                Assert.AreEqual("((-26)6)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-68)4)", "(-72)", "-1");
                var v = ov.swizzle.ywy;
                Assert.AreEqual("((-68)4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-68)4)", v.z);
            }
            {
                var ov = new gvec4<string>("6", "8", "6", null);
                var v = ov.swizzle.ywyx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>(null, "3", "-5", "(39)");
                var v = ov.swizzle.ywyxx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "(-30)", "((-9-2)-9)", "((-76)4)");
                var v = ov.swizzle.ywyxy;
                Assert.AreEqual("(-30)", v.x);
                Assert.AreEqual("((-76)4)", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-30)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "5", "((4-2)-9)", null);
                var v = ov.swizzle.ywyxz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((4-2)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(3-3)", "(3-8)", "((4-8)-2)", "5");
                var v = ov.swizzle.ywyxw;
                Assert.AreEqual("(3-8)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("(3-3)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((60)0)", "((-8-7)0)", "(-5-2)", "(-5-2)");
                var v = ov.swizzle.ywyy;
                Assert.AreEqual("((-8-7)0)", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("((-8-7)0)", v.z);
                Assert.AreEqual("((-8-7)0)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-8", "(2-8)", "6");
                var v = ov.swizzle.ywyyx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-2)-9)", "((-86)-7)", "7", "-2");
                var v = ov.swizzle.ywyyy;
                Assert.AreEqual("((-86)-7)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-86)-7)", v.z);
                Assert.AreEqual("((-86)-7)", v.w);
                Assert.AreEqual("((-86)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-44)", "((74)-3)", "(-44)", "((74)-3)");
                var v = ov.swizzle.ywyyz;
                Assert.AreEqual("((74)-3)", v.x);
                Assert.AreEqual("((74)-3)", v.y);
                Assert.AreEqual("((74)-3)", v.z);
                Assert.AreEqual("((74)-3)", v.w);
                Assert.AreEqual("(-44)", v.v);
            }
            {
                var ov = new gvec4<string>("((-54)9)", "3", "4", "3");
                var v = ov.swizzle.ywyyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-90)8)", "6", "(07)");
                var v = ov.swizzle.ywyz;
                Assert.AreEqual("((-90)8)", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("((-90)8)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("((3-4)1)", "-2", "-3", "((3-4)1)");
                var v = ov.swizzle.ywyzx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((3-4)1)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((3-4)1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-4)3)", "(4-3)", "((-38)5)", "((-38)5)");
                var v = ov.swizzle.ywyzy;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("((-38)5)", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("((-38)5)", v.w);
                Assert.AreEqual("(4-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-9)", "1", null, "");
                var v = ov.swizzle.ywyzz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-8-1)5)", "(-13)", "((-6-6)-2)");
                var v = ov.swizzle.ywyzw;
                Assert.AreEqual("((-8-1)5)", v.x);
                Assert.AreEqual("((-6-6)-2)", v.y);
                Assert.AreEqual("((-8-1)5)", v.z);
                Assert.AreEqual("(-13)", v.w);
                Assert.AreEqual("((-6-6)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-5)", "((37)-9)", "(9-5)", "((4-3)-5)");
                var v = ov.swizzle.ywyw;
                Assert.AreEqual("((37)-9)", v.x);
                Assert.AreEqual("((4-3)-5)", v.y);
                Assert.AreEqual("((37)-9)", v.z);
                Assert.AreEqual("((4-3)-5)", v.w);
            }
            {
                var ov = new gvec4<string>("(2-9)", "((65)6)", "", "((-6-9)7)");
                var v = ov.swizzle.ywywx;
                Assert.AreEqual("((65)6)", v.x);
                Assert.AreEqual("((-6-9)7)", v.y);
                Assert.AreEqual("((65)6)", v.z);
                Assert.AreEqual("((-6-9)7)", v.w);
                Assert.AreEqual("(2-9)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(-9-4)", "((28)8)", null);
                var v = ov.swizzle.ywywy;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(71)", "2", "-4", "");
                var v = ov.swizzle.ywywz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((5-3)-7)", "(5-4)", "(2-7)", "-2");
                var v = ov.swizzle.ywyww;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", "(61)", "((6-4)-9)", null);
                var v = ov.swizzle.ywz;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((6-4)-9)", v.z);
            }
            {
                var ov = new gvec4<string>("(81)", "", "(5-8)", "((6-6)6)");
                var v = ov.swizzle.ywzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-6)6)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("(81)", v.w);
            }
            {
                var ov = new gvec4<string>("((7-5)-3)", "2", "(-18)", "2");
                var v = ov.swizzle.ywzxx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("((7-5)-3)", v.w);
                Assert.AreEqual("((7-5)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(46)", "-4", null, "((-53)7)");
                var v = ov.swizzle.ywzxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-53)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(1-5)", "4", "", "(91)");
                var v = ov.swizzle.ywzxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(1-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(37)", "8", "9", "(9-9)");
                var v = ov.swizzle.ywzxw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(37)", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-2)", "(-3-2)", "((-63)7)", "");
                var v = ov.swizzle.ywzy;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-63)7)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((-10)-8)", "-5", "", "(-8-8)");
                var v = ov.swizzle.ywzyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-10)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-9)-7)", "((-84)8)", "(11)", "2");
                var v = ov.swizzle.ywzyy;
                Assert.AreEqual("((-84)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("((-84)8)", v.w);
                Assert.AreEqual("((-84)8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "((8-1)-2)", "((8-1)-2)");
                var v = ov.swizzle.ywzyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((8-1)-2)", v.y);
                Assert.AreEqual("((8-1)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((8-1)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(57)", "9", "-1", null);
                var v = ov.swizzle.ywzyw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(1-2)", "((-5-7)-1)", "((-5-7)-1)", "5");
                var v = ov.swizzle.ywzz;
                Assert.AreEqual("((-5-7)-1)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-5-7)-1)", v.z);
                Assert.AreEqual("((-5-7)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "-1", "(-30)", "((0-5)3)");
                var v = ov.swizzle.ywzzx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((0-5)3)", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("(-30)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(-4-4)", "((-3-6)3)", null);
                var v = ov.swizzle.ywzzy;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-3-6)3)", v.z);
                Assert.AreEqual("((-3-6)3)", v.w);
                Assert.AreEqual("(-4-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-9)7)", "((-1-9)7)", "(86)", "(77)");
                var v = ov.swizzle.ywzzz;
                Assert.AreEqual("((-1-9)7)", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec4<string>("((-89)1)", "(-5-9)", "((-89)1)", "-8");
                var v = ov.swizzle.ywzzw;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-89)1)", v.z);
                Assert.AreEqual("((-89)1)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(-51)", "(2-9)", "3", "6");
                var v = ov.swizzle.ywzw;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("9", "(24)", "((0-8)9)", null);
                var v = ov.swizzle.ywzwx;
                Assert.AreEqual("(24)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-8)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((-4-9)4)", "-9", "4");
                var v = ov.swizzle.ywzwy;
                Assert.AreEqual("((-4-9)4)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((-4-9)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-36)", "", "", "-2");
                var v = ov.swizzle.ywzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(6-7)", "-1", "((-1-6)3)");
                var v = ov.swizzle.ywzww;
                Assert.AreEqual("(6-7)", v.x);
                Assert.AreEqual("((-1-6)3)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-1-6)3)", v.w);
                Assert.AreEqual("((-1-6)3)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(-5-8)", "(-5-8)");
                var v = ov.swizzle.yww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-5-8)", v.y);
                Assert.AreEqual("(-5-8)", v.z);
            }
            {
                var ov = new gvec4<string>("(2-5)", "(8-7)", "((2-5)-9)", "-5");
                var v = ov.swizzle.ywwx;
                Assert.AreEqual("(8-7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(2-5)", v.w);
            }
            {
                var ov = new gvec4<string>("9", "(9-4)", "-8", "(9-4)");
                var v = ov.swizzle.ywwxx;
                Assert.AreEqual("(9-4)", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-84)", "-1", "7", "(-84)");
                var v = ov.swizzle.ywwxy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("(-84)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-2", "4", "((5-5)1)");
                var v = ov.swizzle.ywwxz;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((5-5)1)", v.y);
                Assert.AreEqual("((5-5)1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((47)4)", "((-6-8)5)", "8");
                var v = ov.swizzle.ywwxw;
                Assert.AreEqual("((47)4)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-4)", "0", "", null);
                var v = ov.swizzle.ywwy;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("6", "((7-1)-7)", null, "");
                var v = ov.swizzle.ywwyx;
                Assert.AreEqual("((7-1)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((7-1)-7)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((83)-2)", "5", "1", null);
                var v = ov.swizzle.ywwyy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((9-6)-5)", "((9-6)-5)", null, null);
                var v = ov.swizzle.ywwyz;
                Assert.AreEqual("((9-6)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-6)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("8", "((-16)7)", "7", "7");
                var v = ov.swizzle.ywwyw;
                Assert.AreEqual("((-16)7)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-16)7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((6-9)-3)", "((01)-7)", "7");
                var v = ov.swizzle.ywwz;
                Assert.AreEqual("((6-9)-3)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((01)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(33)", "7", "((-5-9)3)", null);
                var v = ov.swizzle.ywwzx;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-5-9)3)", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec4<string>("(4-2)", "7", "((-69)3)", "(-8-7)");
                var v = ov.swizzle.ywwzy;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("((-69)3)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((1-6)-5)", "0", "-1", "0");
                var v = ov.swizzle.ywwzz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(2-9)", "(2-9)", null, null);
                var v = ov.swizzle.ywwzw;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-1-6)", null, "(02)", "7");
                var v = ov.swizzle.ywww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("(34)", null, "((3-3)-4)", "(34)");
                var v = ov.swizzle.ywwwx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-4)", "", "(-3-4)", "(08)");
                var v = ov.swizzle.ywwwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-57)2)", "((-32)1)", "((-57)2)");
                var v = ov.swizzle.ywwwz;
                Assert.AreEqual("((-57)2)", v.x);
                Assert.AreEqual("((-57)2)", v.y);
                Assert.AreEqual("((-57)2)", v.z);
                Assert.AreEqual("((-57)2)", v.w);
                Assert.AreEqual("((-32)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-5", "-5", "((-4-1)-4)");
                var v = ov.swizzle.ywwww;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-4-1)-4)", v.y);
                Assert.AreEqual("((-4-1)-4)", v.z);
                Assert.AreEqual("((-4-1)-4)", v.w);
                Assert.AreEqual("((-4-1)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", null, "-9", null);
                var v = ov.swizzle.zx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-3", v.y);
            }
            {
                var ov = new gvec4<string>("-2", "(8-1)", "8", "-2");
                var v = ov.swizzle.zxx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
            }
            {
                var ov = new gvec4<string>("(78)", "(78)", "(-43)", "6");
                var v = ov.swizzle.zxxx;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("(78)", v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual("(78)", v.w);
            }
            {
                var ov = new gvec4<string>("((-23)-3)", "", "(7-9)", "");
                var v = ov.swizzle.zxxxx;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual("((-23)-3)", v.y);
                Assert.AreEqual("((-23)-3)", v.z);
                Assert.AreEqual("((-23)-3)", v.w);
                Assert.AreEqual("((-23)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(-32)", null, "(0-9)");
                var v = ov.swizzle.zxxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(-32)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "0", "((36)7)", "(-69)");
                var v = ov.swizzle.zxxxz;
                Assert.AreEqual("((36)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((36)7)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(6-7)", "(34)", "3");
                var v = ov.swizzle.zxxxw;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((-93)-7)", "-6", "(5-7)", "(5-7)");
                var v = ov.swizzle.zxxy;
                Assert.AreEqual("(5-7)", v.x);
                Assert.AreEqual("((-93)-7)", v.y);
                Assert.AreEqual("((-93)-7)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("7", "(-4-1)", "4", "((1-8)-8)");
                var v = ov.swizzle.zxxyx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((-28)-9)", "(-7-4)", "-1", null);
                var v = ov.swizzle.zxxyy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-28)-9)", v.y);
                Assert.AreEqual("((-28)-9)", v.z);
                Assert.AreEqual("(-7-4)", v.w);
                Assert.AreEqual("(-7-4)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(-4-8)", "((6-3)5)", "(-47)");
                var v = ov.swizzle.zxxyz;
                Assert.AreEqual("((6-3)5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("((6-3)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-8)1)", "((15)2)", "((-7-3)-2)", "(0-3)");
                var v = ov.swizzle.zxxyw;
                Assert.AreEqual("((-7-3)-2)", v.x);
                Assert.AreEqual("((-6-8)1)", v.y);
                Assert.AreEqual("((-6-8)1)", v.z);
                Assert.AreEqual("((15)2)", v.w);
                Assert.AreEqual("(0-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-7)", "(-18)", "(-7-7)", "4");
                var v = ov.swizzle.zxxz;
                Assert.AreEqual("(-7-7)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(40)", null, null, "");
                var v = ov.swizzle.zxxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(40)", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(40)", v.v);
            }
            {
                var ov = new gvec4<string>("((-55)-3)", "-5", "(27)", "-9");
                var v = ov.swizzle.zxxzy;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("((-55)-3)", v.y);
                Assert.AreEqual("((-55)-3)", v.z);
                Assert.AreEqual("(27)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(31)", "8", null, "((4-6)3)");
                var v = ov.swizzle.zxxzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("5", "5", "((9-2)-5)", "((9-2)-5)");
                var v = ov.swizzle.zxxzw;
                Assert.AreEqual("((9-2)-5)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((9-2)-5)", v.w);
                Assert.AreEqual("((9-2)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-6-8)", "-8", "-8");
                var v = ov.swizzle.zxxw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>("((94)2)", "3", "(-99)", "8");
                var v = ov.swizzle.zxxwx;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("((94)2)", v.y);
                Assert.AreEqual("((94)2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((94)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((29)-4)", "((75)4)", "(-9-7)", "(-9-7)");
                var v = ov.swizzle.zxxwy;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("((29)-4)", v.y);
                Assert.AreEqual("((29)-4)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("((75)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-2", "((76)-1)", "(-3-2)");
                var v = ov.swizzle.zxxwz;
                Assert.AreEqual("((76)-1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("((76)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-28)6)", "7", "-6", "(2-3)");
                var v = ov.swizzle.zxxww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((-28)6)", v.y);
                Assert.AreEqual("((-28)6)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-97)", "(-97)", "-3", null);
                var v = ov.swizzle.zxy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-97)", v.y);
                Assert.AreEqual("(-97)", v.z);
            }
            {
                var ov = new gvec4<string>("((1-9)2)", "(-15)", null, "(-4-6)");
                var v = ov.swizzle.zxyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((1-9)2)", v.y);
                Assert.AreEqual("(-15)", v.z);
                Assert.AreEqual("((1-9)2)", v.w);
            }
            {
                var ov = new gvec4<string>("(-6-8)", "((9-4)-6)", "-1", "8");
                var v = ov.swizzle.zxyxx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-6-8)", v.y);
                Assert.AreEqual("((9-4)-6)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "5", "5", "((-7-1)6)");
                var v = ov.swizzle.zxyxy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(08)", "1", "((1-5)4)", "");
                var v = ov.swizzle.zxyxz;
                Assert.AreEqual("((1-5)4)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("((1-5)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(54)", "6", "(8-9)", "((-4-2)7)");
                var v = ov.swizzle.zxyxw;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual("((-4-2)7)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(0-2)", "", null);
                var v = ov.swizzle.zxyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("(0-2)", v.w);
            }
            {
                var ov = new gvec4<string>("", "", "(3-6)", "(3-6)");
                var v = ov.swizzle.zxyyx;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((92)-3)", "((-4-6)3)", "4");
                var v = ov.swizzle.zxyyy;
                Assert.AreEqual("((-4-6)3)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((92)-3)", v.z);
                Assert.AreEqual("((92)-3)", v.w);
                Assert.AreEqual("((92)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(1-5)", "7", "(48)");
                var v = ov.swizzle.zxyyz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(1-5)", v.z);
                Assert.AreEqual("(1-5)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-1)", "((-38)-6)", "((-4-1)5)", "1");
                var v = ov.swizzle.zxyyw;
                Assert.AreEqual("((-4-1)5)", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual("((-38)-6)", v.z);
                Assert.AreEqual("((-38)-6)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((8-5)-2)", "(08)", null, "(56)");
                var v = ov.swizzle.zxyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((8-5)-2)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((0-7)7)", "(-4-3)", "", null);
                var v = ov.swizzle.zxyzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-7)7)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((0-7)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-38)-9)", "((2-5)8)", "((-15)2)", "(-11)");
                var v = ov.swizzle.zxyzy;
                Assert.AreEqual("((-15)2)", v.x);
                Assert.AreEqual("((-38)-9)", v.y);
                Assert.AreEqual("((2-5)8)", v.z);
                Assert.AreEqual("((-15)2)", v.w);
                Assert.AreEqual("((2-5)8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-5-5)6)", "(-73)", "-1");
                var v = ov.swizzle.zxyzz;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-5)6)", v.z);
                Assert.AreEqual("(-73)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-3-4)", "((-16)3)", "(82)");
                var v = ov.swizzle.zxyzw;
                Assert.AreEqual("((-16)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-4)", v.z);
                Assert.AreEqual("((-16)3)", v.w);
                Assert.AreEqual("(82)", v.v);
            }
            {
                var ov = new gvec4<string>("", "0", "-2", "((-7-5)7)");
                var v = ov.swizzle.zxyw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-7-5)7)", v.w);
            }
            {
                var ov = new gvec4<string>("((0-6)6)", null, null, "(-94)");
                var v = ov.swizzle.zxywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-6)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("((0-6)6)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "7", "(-9-2)", "((8-1)2)");
                var v = ov.swizzle.zxywy;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((8-1)2)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-7)", "-1", "(-8-7)", "((63)9)");
                var v = ov.swizzle.zxywz;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((63)9)", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "6", "(03)", "(-89)");
                var v = ov.swizzle.zxyww;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-89)", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-8)", "(-9-8)", "3", "(86)");
                var v = ov.swizzle.zxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(8-8)", v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec4<string>("(-87)", "1", "(-34)", "((-54)-6)");
                var v = ov.swizzle.zxzx;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual("(-87)", v.w);
            }
            {
                var ov = new gvec4<string>("(08)", "-8", "", "((-2-8)7)");
                var v = ov.swizzle.zxzxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual("(08)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-9)", "(-76)", "", null);
                var v = ov.swizzle.zxzxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(7-9)", v.w);
                Assert.AreEqual("(-76)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-3)", "(88)", "((64)-8)", "(88)");
                var v = ov.swizzle.zxzxz;
                Assert.AreEqual("((64)-8)", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("((64)-8)", v.z);
                Assert.AreEqual("(-8-3)", v.w);
                Assert.AreEqual("((64)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "5", "(9-9)", "((05)5)");
                var v = ov.swizzle.zxzxw;
                Assert.AreEqual("(9-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((05)5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-5-6)", "((96)0)", "((-87)-9)");
                var v = ov.swizzle.zxzy;
                Assert.AreEqual("((96)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((96)0)", v.z);
                Assert.AreEqual("(-5-6)", v.w);
            }
            {
                var ov = new gvec4<string>("-9", null, "1", "((0-8)4)");
                var v = ov.swizzle.zxzyx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(46)", "(-27)", null, "");
                var v = ov.swizzle.zxzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(46)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("(-27)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-4)-4)", "-5", "(27)", "(54)");
                var v = ov.swizzle.zxzyz;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("((-3-4)-4)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "", "((38)-8)");
                var v = ov.swizzle.zxzyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((38)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-75)9)", "6", "(0-8)");
                var v = ov.swizzle.zxzz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("(61)", "(-5-4)", "", "((1-6)6)");
                var v = ov.swizzle.zxzzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(61)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", "1", "(16)");
                var v = ov.swizzle.zxzzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-33)0)", "(-87)", "((-38)-1)", "4");
                var v = ov.swizzle.zxzzz;
                Assert.AreEqual("((-38)-1)", v.x);
                Assert.AreEqual("((-33)0)", v.y);
                Assert.AreEqual("((-38)-1)", v.z);
                Assert.AreEqual("((-38)-1)", v.w);
                Assert.AreEqual("((-38)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-6)", "((13)3)", "((8-6)8)", null);
                var v = ov.swizzle.zxzzw;
                Assert.AreEqual("((8-6)8)", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("((8-6)8)", v.z);
                Assert.AreEqual("((8-6)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-2-6)", "(7-5)", "4", "4");
                var v = ov.swizzle.zxzw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec4<string>("(55)", "6", "((-1-2)-8)", "(55)");
                var v = ov.swizzle.zxzwx;
                Assert.AreEqual("((-1-2)-8)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("((-1-2)-8)", v.z);
                Assert.AreEqual("(55)", v.w);
                Assert.AreEqual("(55)", v.v);
            }
            {
                var ov = new gvec4<string>("", "1", "(-4-1)", "6");
                var v = ov.swizzle.zxzwy;
                Assert.AreEqual("(-4-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "-9", "((-2-4)-6)", "((-2-4)-6)");
                var v = ov.swizzle.zxzwz;
                Assert.AreEqual("((-2-4)-6)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((-2-4)-6)", v.z);
                Assert.AreEqual("((-2-4)-6)", v.w);
                Assert.AreEqual("((-2-4)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "1", "((23)-7)", "-9");
                var v = ov.swizzle.zxzww;
                Assert.AreEqual("((23)-7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((23)-7)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(14)", "7", "", "");
                var v = ov.swizzle.zxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((65)-7)", "((-7-9)3)", "-6", "2");
                var v = ov.swizzle.zxwx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((65)-7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((65)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("", "(-2-8)", null, "(-94)");
                var v = ov.swizzle.zxwxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-94)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(6-1)", null, "(6-1)", "(6-1)");
                var v = ov.swizzle.zxwxy;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("(6-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-2-8)", "(-65)", "4", "4");
                var v = ov.swizzle.zxwxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-2-8)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-2-8)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "-4", null);
                var v = ov.swizzle.zxwxw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(7-5)", "((6-2)2)");
                var v = ov.swizzle.zxwy;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-2)2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(-30)", "", "(-7-2)", "(-7-2)");
                var v = ov.swizzle.zxwyx;
                Assert.AreEqual("(-7-2)", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("(-7-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-30)", v.v);
            }
            {
                var ov = new gvec4<string>("((63)-1)", "7", "((63)-1)", "((39)-5)");
                var v = ov.swizzle.zxwyy;
                Assert.AreEqual("((63)-1)", v.x);
                Assert.AreEqual("((63)-1)", v.y);
                Assert.AreEqual("((39)-5)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(2-5)", "-6", "((6-5)-6)");
                var v = ov.swizzle.zxwyz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((6-5)-6)", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((2-6)-9)", "(-59)", "1");
                var v = ov.swizzle.zxwyw;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((2-6)-9)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("0", "(-74)", "0", "");
                var v = ov.swizzle.zxwz;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("(29)", "(56)", "", "(29)");
                var v = ov.swizzle.zxwzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(29)", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(29)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-66)6)", "((-66)6)", "(58)");
                var v = ov.swizzle.zxwzy;
                Assert.AreEqual("((-66)6)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("((-66)6)", v.w);
                Assert.AreEqual("((-66)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", null, "((6-2)-9)", "(5-9)");
                var v = ov.swizzle.zxwzz;
                Assert.AreEqual("((6-2)-9)", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("((6-2)-9)", v.w);
                Assert.AreEqual("((6-2)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-41)", "((43)-1)", "-1", "(-16)");
                var v = ov.swizzle.zxwzw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("(-16)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-16)", v.v);
            }
            {
                var ov = new gvec4<string>("((6-5)-6)", "-5", "(85)", "((6-5)-6)");
                var v = ov.swizzle.zxww;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("((6-5)-6)", v.y);
                Assert.AreEqual("((6-5)-6)", v.z);
                Assert.AreEqual("((6-5)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((-97)-8)", "((-9-4)5)", "((-9-4)5)");
                var v = ov.swizzle.zxwwx;
                Assert.AreEqual("((-9-4)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-4)5)", v.z);
                Assert.AreEqual("((-9-4)5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(17)", "((45)-6)", "5", "-4");
                var v = ov.swizzle.zxwwy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((45)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("9", null, "(-41)", "");
                var v = ov.swizzle.zxwwz;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-41)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-4)-8)", "((53)-1)", "", "((53)-1)");
                var v = ov.swizzle.zxwww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((3-4)-8)", v.y);
                Assert.AreEqual("((53)-1)", v.z);
                Assert.AreEqual("((53)-1)", v.w);
                Assert.AreEqual("((53)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-8)-8)", "(-2-9)", "((56)-6)", "((-4-8)-8)");
                var v = ov.swizzle.zy;
                Assert.AreEqual("((56)-6)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
            }
            {
                var ov = new gvec4<string>("-5", "(-62)", "(-83)", "4");
                var v = ov.swizzle.zyx;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("(-62)", v.y);
                Assert.AreEqual("-5", v.z);
            }
            {
                var ov = new gvec4<string>("(-12)", "", "3", null);
                var v = ov.swizzle.zyxx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-12)", v.z);
                Assert.AreEqual("(-12)", v.w);
            }
            {
                var ov = new gvec4<string>("((-77)-1)", "", "5", "((-56)-9)");
                var v = ov.swizzle.zyxxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-77)-1)", v.z);
                Assert.AreEqual("((-77)-1)", v.w);
                Assert.AreEqual("((-77)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(-73)", "-3", "((-2-3)6)");
                var v = ov.swizzle.zyxxy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-73)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-56)-6)", "((74)-1)", "-3");
                var v = ov.swizzle.zyxxz;
                Assert.AreEqual("((74)-1)", v.x);
                Assert.AreEqual("((-56)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((74)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(86)", "(86)", "(86)");
                var v = ov.swizzle.zyxxw;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("(86)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-8)7)", null, null, "((-5-8)7)");
                var v = ov.swizzle.zyxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-8)7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-1-5)", "((-83)2)", "5", "5");
                var v = ov.swizzle.zyxyx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-83)2)", v.y);
                Assert.AreEqual("(-1-5)", v.z);
                Assert.AreEqual("((-83)2)", v.w);
                Assert.AreEqual("(-1-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-52)", "((-83)-4)", null, "3");
                var v = ov.swizzle.zyxyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-83)-4)", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("((-83)-4)", v.w);
                Assert.AreEqual("((-83)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((07)4)", null, "(-81)", null);
                var v = ov.swizzle.zyxyz;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((07)4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>("(51)", "((3-6)6)", "", "((3-6)6)");
                var v = ov.swizzle.zyxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((3-6)6)", v.y);
                Assert.AreEqual("(51)", v.z);
                Assert.AreEqual("((3-6)6)", v.w);
                Assert.AreEqual("((3-6)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((07)-4)", "(-2-9)", null, "((-44)3)");
                var v = ov.swizzle.zyxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((07)-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-22)", "((-67)-6)", "(-44)", "((7-9)-1)");
                var v = ov.swizzle.zyxzx;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("((-67)-6)", v.y);
                Assert.AreEqual("(-22)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-76)-2)", "(52)", null);
                var v = ov.swizzle.zyxzy;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((-76)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("((-76)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-8)-6)", "-7", "", "((2-8)-7)");
                var v = ov.swizzle.zyxzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((1-8)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(-92)", "-2", "((8-6)5)");
                var v = ov.swizzle.zyxzw;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((8-6)5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-63)", "2", "(-63)", "");
                var v = ov.swizzle.zyxw;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-63)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((-1-5)-4)", "2", "((-93)8)", "2");
                var v = ov.swizzle.zyxwx;
                Assert.AreEqual("((-93)8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-1-5)-4)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((-1-5)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "8", "(80)", "((-67)8)");
                var v = ov.swizzle.zyxwy;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-67)8)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-52)8)", "(5-4)", "7", "(1-6)");
                var v = ov.swizzle.zyxwz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("((-52)8)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-57)", "-1", "((-2-1)5)", "(-96)");
                var v = ov.swizzle.zyxww;
                Assert.AreEqual("((-2-1)5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-57)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("(-96)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "", "((-1-9)8)", "((-1-9)8)");
                var v = ov.swizzle.zyy;
                Assert.AreEqual("((-1-9)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((-66)-2)", "(7-8)", "", "(7-8)");
                var v = ov.swizzle.zyyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("(7-8)", v.z);
                Assert.AreEqual("((-66)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(-81)", "4", "((36)-5)", "(98)");
                var v = ov.swizzle.zyyxx;
                Assert.AreEqual("((36)-5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>("((-29)1)", "((63)0)", "", "9");
                var v = ov.swizzle.zyyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((63)0)", v.y);
                Assert.AreEqual("((63)0)", v.z);
                Assert.AreEqual("((-29)1)", v.w);
                Assert.AreEqual("((63)0)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-4", "(-6-4)", "((-2-4)-4)");
                var v = ov.swizzle.zyyxz;
                Assert.AreEqual("(-6-4)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-74)", null, "(-74)");
                var v = ov.swizzle.zyyxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("(-74)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-9-6)-7)", "(-16)", "-7");
                var v = ov.swizzle.zyyy;
                Assert.AreEqual("(-16)", v.x);
                Assert.AreEqual("((-9-6)-7)", v.y);
                Assert.AreEqual("((-9-6)-7)", v.z);
                Assert.AreEqual("((-9-6)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(5-5)", "((56)-8)", "(50)", "1");
                var v = ov.swizzle.zyyyx;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("((56)-8)", v.y);
                Assert.AreEqual("((56)-8)", v.z);
                Assert.AreEqual("((56)-8)", v.w);
                Assert.AreEqual("(5-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((34)6)", null, "(80)", "(-7-4)");
                var v = ov.swizzle.zyyyy;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((4-7)-4)", "((-8-2)-4)", null, "-8");
                var v = ov.swizzle.zyyyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-8-2)-4)", v.y);
                Assert.AreEqual("((-8-2)-4)", v.z);
                Assert.AreEqual("((-8-2)-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "", "5", "(-11)");
                var v = ov.swizzle.zyyyw;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-5-7)", "(-4-3)", null);
                var v = ov.swizzle.zyyz;
                Assert.AreEqual("(-4-3)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("(-4-3)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(39)", "(4-3)", "((37)-5)");
                var v = ov.swizzle.zyyzx;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("(39)", v.y);
                Assert.AreEqual("(39)", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((61)3)", "-2", "((-24)0)", "(3-2)");
                var v = ov.swizzle.zyyzy;
                Assert.AreEqual("((-24)0)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((-24)0)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-7)", null, "8", null);
                var v = ov.swizzle.zyyzz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(14)", "1", "");
                var v = ov.swizzle.zyyzw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(14)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-2)8)", "-1", "(48)", "((-3-6)0)");
                var v = ov.swizzle.zyyw;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-3-6)0)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "((-57)-8)", "-2", null);
                var v = ov.swizzle.zyywx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-57)-8)", v.y);
                Assert.AreEqual("((-57)-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-2)", "(17)", "((-96)4)", "(-88)");
                var v = ov.swizzle.zyywy;
                Assert.AreEqual("((-96)4)", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(-88)", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-3-8)-6)", "(-2-9)", "(-2-9)");
                var v = ov.swizzle.zyywz;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("((-3-8)-6)", v.y);
                Assert.AreEqual("((-3-8)-6)", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-57)", "(-57)", "((7-7)-3)", "4");
                var v = ov.swizzle.zyyww;
                Assert.AreEqual("((7-7)-3)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("(-57)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("0", "1", "((-6-4)1)", "((-99)-1)");
                var v = ov.swizzle.zyz;
                Assert.AreEqual("((-6-4)1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-6-4)1)", v.z);
            }
            {
                var ov = new gvec4<string>("((-1-4)2)", "((-48)1)", "((-1-4)2)", "");
                var v = ov.swizzle.zyzx;
                Assert.AreEqual("((-1-4)2)", v.x);
                Assert.AreEqual("((-48)1)", v.y);
                Assert.AreEqual("((-1-4)2)", v.z);
                Assert.AreEqual("((-1-4)2)", v.w);
            }
            {
                var ov = new gvec4<string>("6", "6", "((-4-9)-7)", "(3-1)");
                var v = ov.swizzle.zyzxx;
                Assert.AreEqual("((-4-9)-7)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-4-9)-7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-8)", "(3-2)", "((6-7)2)", "4");
                var v = ov.swizzle.zyzxy;
                Assert.AreEqual("((6-7)2)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((6-7)2)", v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(-72)", "(-72)");
                var v = ov.swizzle.zyzxz;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-72)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-72)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(2-9)", "(0-5)", "(0-5)");
                var v = ov.swizzle.zyzxw;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-5)", "(-20)", "(1-3)", "9");
                var v = ov.swizzle.zyzy;
                Assert.AreEqual("(1-3)", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(-20)", v.w);
            }
            {
                var ov = new gvec4<string>("(0-8)", "((-55)-1)", "(75)", "-4");
                var v = ov.swizzle.zyzyx;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("((-55)-1)", v.y);
                Assert.AreEqual("(75)", v.z);
                Assert.AreEqual("((-55)-1)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "(0-7)", "-4", "((-59)4)");
                var v = ov.swizzle.zyzyy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(0-7)", v.w);
                Assert.AreEqual("(0-7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "4", "4", "5");
                var v = ov.swizzle.zyzyz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("(-57)", "(-57)", "((-80)5)", "");
                var v = ov.swizzle.zyzyw;
                Assert.AreEqual("((-80)5)", v.x);
                Assert.AreEqual("(-57)", v.y);
                Assert.AreEqual("((-80)5)", v.z);
                Assert.AreEqual("(-57)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-8)", "(7-5)", "(-6-5)", "-4");
                var v = ov.swizzle.zyzz;
                Assert.AreEqual("(-6-5)", v.x);
                Assert.AreEqual("(7-5)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("(-6-5)", v.w);
            }
            {
                var ov = new gvec4<string>("((-82)-4)", "(19)", "9", "(0-6)");
                var v = ov.swizzle.zyzzx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((-82)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-9)", "((74)-3)", "", "6");
                var v = ov.swizzle.zyzzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((74)-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((74)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-57)", "((-6-3)-8)", "((-45)3)", "(8-1)");
                var v = ov.swizzle.zyzzz;
                Assert.AreEqual("((-45)3)", v.x);
                Assert.AreEqual("((-6-3)-8)", v.y);
                Assert.AreEqual("((-45)3)", v.z);
                Assert.AreEqual("((-45)3)", v.w);
                Assert.AreEqual("((-45)3)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(70)", "(70)", "(70)");
                var v = ov.swizzle.zyzzw;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("(70)", v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("(70)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-9)", "(-4-9)", "1", "1");
                var v = ov.swizzle.zyzw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>(null, "", "((-7-9)8)", "9");
                var v = ov.swizzle.zyzwx;
                Assert.AreEqual("((-7-9)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-7-9)8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "(68)", "-3", "-3");
                var v = ov.swizzle.zyzwy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "(1-9)", "((11)-4)");
                var v = ov.swizzle.zyzwz;
                Assert.AreEqual("(1-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(1-9)", v.z);
                Assert.AreEqual("((11)-4)", v.w);
                Assert.AreEqual("(1-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-7)", "(-6-7)", "(-2-7)", "(-6-7)");
                var v = ov.swizzle.zyzww;
                Assert.AreEqual("(-2-7)", v.x);
                Assert.AreEqual("(-6-7)", v.y);
                Assert.AreEqual("(-2-7)", v.z);
                Assert.AreEqual("(-6-7)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(03)", null, "((-3-1)-9)", "");
                var v = ov.swizzle.zyw;
                Assert.AreEqual("((-3-1)-9)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(-64)", "-7", "(83)", "6");
                var v = ov.swizzle.zywx;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-64)", v.w);
            }
            {
                var ov = new gvec4<string>("(-45)", "((4-1)-2)", "(-89)", "((4-1)-2)");
                var v = ov.swizzle.zywxx;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("((4-1)-2)", v.y);
                Assert.AreEqual("((4-1)-2)", v.z);
                Assert.AreEqual("(-45)", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "3", null, "(-1-1)");
                var v = ov.swizzle.zywxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(21)", "(21)", null, "(7-3)");
                var v = ov.swizzle.zywxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("(21)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-77)5)", "(-5-1)", "7");
                var v = ov.swizzle.zywxw;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("((-77)5)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-70)", "-9", "(-50)", "");
                var v = ov.swizzle.zywy;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec4<string>("((4-3)5)", "(-17)", "(-5-4)", "6");
                var v = ov.swizzle.zywyx;
                Assert.AreEqual("(-5-4)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("((4-3)5)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "(97)", "5", "((-52)5)");
                var v = ov.swizzle.zywyy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(97)", v.y);
                Assert.AreEqual("((-52)5)", v.z);
                Assert.AreEqual("(97)", v.w);
                Assert.AreEqual("(97)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-1)", "((-35)8)", null, "-9");
                var v = ov.swizzle.zywyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-35)8)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-35)8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)8)", "((-68)4)", "1", "((-68)4)");
                var v = ov.swizzle.zywyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-68)4)", v.y);
                Assert.AreEqual("((-68)4)", v.z);
                Assert.AreEqual("((-68)4)", v.w);
                Assert.AreEqual("((-68)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((37)3)", "((-2-5)-9)", "9", "((-5-2)-4)");
                var v = ov.swizzle.zywz;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-2-5)-9)", v.y);
                Assert.AreEqual("((-5-2)-4)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("(-70)", "-5", "(-70)", "-4");
                var v = ov.swizzle.zywzx;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("(-70)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "-8", "((1-1)-6)");
                var v = ov.swizzle.zywzy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((1-1)-6)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-61)", "-5", "", "");
                var v = ov.swizzle.zywzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-4-9)", null, "((-8-9)9)");
                var v = ov.swizzle.zywzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("((-8-9)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-8-9)9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((2-3)5)", "-8", "((-1-6)-1)");
                var v = ov.swizzle.zyww;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((2-3)5)", v.y);
                Assert.AreEqual("((-1-6)-1)", v.z);
                Assert.AreEqual("((-1-6)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-7)", "((-72)-6)", "", "((-57)4)");
                var v = ov.swizzle.zywwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-72)-6)", v.y);
                Assert.AreEqual("((-57)4)", v.z);
                Assert.AreEqual("((-57)4)", v.w);
                Assert.AreEqual("(8-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((-8-2)-9)", "-7", "((-8-2)-9)");
                var v = ov.swizzle.zywwy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-8-2)-9)", v.y);
                Assert.AreEqual("((-8-2)-9)", v.z);
                Assert.AreEqual("((-8-2)-9)", v.w);
                Assert.AreEqual("((-8-2)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "8", "((-5-2)-8)", "");
                var v = ov.swizzle.zywwz;
                Assert.AreEqual("((-5-2)-8)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-2)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-2)-9)", "((-66)9)", "((8-2)-9)", "1");
                var v = ov.swizzle.zywww;
                Assert.AreEqual("((8-2)-9)", v.x);
                Assert.AreEqual("((-66)9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "-7", "-9", "((20)-5)");
                var v = ov.swizzle.zz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
            }
            {
                var ov = new gvec4<string>("((38)-7)", "", "((43)-1)", "(-33)");
                var v = ov.swizzle.zzx;
                Assert.AreEqual("((43)-1)", v.x);
                Assert.AreEqual("((43)-1)", v.y);
                Assert.AreEqual("((38)-7)", v.z);
            }
            {
                var ov = new gvec4<string>("2", null, "(4-9)", null);
                var v = ov.swizzle.zzxx;
                Assert.AreEqual("(4-9)", v.x);
                Assert.AreEqual("(4-9)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(81)", "", "-9");
                var v = ov.swizzle.zzxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(9-7)", "-3", "((-44)1)", "(81)");
                var v = ov.swizzle.zzxxy;
                Assert.AreEqual("((-44)1)", v.x);
                Assert.AreEqual("((-44)1)", v.y);
                Assert.AreEqual("(9-7)", v.z);
                Assert.AreEqual("(9-7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "-6", "-3", "");
                var v = ov.swizzle.zzxxz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-40)", "(8-5)", "((50)9)", "((-35)8)");
                var v = ov.swizzle.zzxxw;
                Assert.AreEqual("((50)9)", v.x);
                Assert.AreEqual("((50)9)", v.y);
                Assert.AreEqual("(-40)", v.z);
                Assert.AreEqual("(-40)", v.w);
                Assert.AreEqual("((-35)8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-4)-4)", "((-2-2)3)", "8", "((-46)-1)");
                var v = ov.swizzle.zzxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-6-4)-4)", v.z);
                Assert.AreEqual("((-2-2)3)", v.w);
            }
            {
                var ov = new gvec4<string>("((9-5)8)", "(1-7)", "-2", "(63)");
                var v = ov.swizzle.zzxyx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((9-5)8)", v.z);
                Assert.AreEqual("(1-7)", v.w);
                Assert.AreEqual("((9-5)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-9)", "((-7-7)-3)", "(5-2)", "");
                var v = ov.swizzle.zzxyy;
                Assert.AreEqual("(5-2)", v.x);
                Assert.AreEqual("(5-2)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("((-7-7)-3)", v.w);
                Assert.AreEqual("((-7-7)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "", "((37)5)");
                var v = ov.swizzle.zzxyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "((69)-9)", "((-5-7)-7)");
                var v = ov.swizzle.zzxyw;
                Assert.AreEqual("((69)-9)", v.x);
                Assert.AreEqual("((69)-9)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-5-7)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-95)-6)", "9", "1", null);
                var v = ov.swizzle.zzxz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-95)-6)", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-2)-5)", "(35)", "5", "(4-2)");
                var v = ov.swizzle.zzxzx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-7-2)-5)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-7-2)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-75)-5)", "5", "5", "(-9-4)");
                var v = ov.swizzle.zzxzy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-75)-5)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "", "-8", null);
                var v = ov.swizzle.zzxzz;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "", "1");
                var v = ov.swizzle.zzxzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "2", null, "(89)");
                var v = ov.swizzle.zzxw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(89)", v.w);
            }
            {
                var ov = new gvec4<string>("(-92)", null, "((8-2)5)", "0");
                var v = ov.swizzle.zzxwx;
                Assert.AreEqual("((8-2)5)", v.x);
                Assert.AreEqual("((8-2)5)", v.y);
                Assert.AreEqual("(-92)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec4<string>("(-62)", "((8-6)9)", "-6", "(-62)");
                var v = ov.swizzle.zzxwy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("((8-6)9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-8)8)", "((-98)8)", "(63)", "(-68)");
                var v = ov.swizzle.zzxwz;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("((-7-8)8)", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec4<string>("(-54)", "4", "(-82)", "-1");
                var v = ov.swizzle.zzxww;
                Assert.AreEqual("(-82)", v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-4)-2)", "((-10)-8)", "-6", "((-9-4)-2)");
                var v = ov.swizzle.zzy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((-10)-8)", v.z);
            }
            {
                var ov = new gvec4<string>("2", "3", "(54)", "-4");
                var v = ov.swizzle.zzyx;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec4<string>("-5", "-6", "((-7-7)-9)", "(9-4)");
                var v = ov.swizzle.zzyxx;
                Assert.AreEqual("((-7-7)-9)", v.x);
                Assert.AreEqual("((-7-7)-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(9-1)", "(-28)");
                var v = ov.swizzle.zzyxy;
                Assert.AreEqual("(9-1)", v.x);
                Assert.AreEqual("(9-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((15)0)", "-7", "4", "-7");
                var v = ov.swizzle.zzyxz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((15)0)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-4)-5)", "(74)", "-8", "");
                var v = ov.swizzle.zzyxw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("((-9-4)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(28)", "-3", "((-22)1)", "((3-3)7)");
                var v = ov.swizzle.zzyy;
                Assert.AreEqual("((-22)1)", v.x);
                Assert.AreEqual("((-22)1)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("(-3-9)", "6", "(09)", "6");
                var v = ov.swizzle.zzyyx;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((8-3)2)", "(06)", "((-68)8)");
                var v = ov.swizzle.zzyyy;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("((8-3)2)", v.z);
                Assert.AreEqual("((8-3)2)", v.w);
                Assert.AreEqual("((8-3)2)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "-8", "((-81)-9)", "(37)");
                var v = ov.swizzle.zzyyz;
                Assert.AreEqual("((-81)-9)", v.x);
                Assert.AreEqual("((-81)-9)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-81)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "-9", null, "9");
                var v = ov.swizzle.zzyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("1", "-3", "1", "-3");
                var v = ov.swizzle.zzyz;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("0", "(9-3)", "", "(-7-1)");
                var v = ov.swizzle.zzyzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((5-1)5)", "-2", "((7-9)-9)", "-1");
                var v = ov.swizzle.zzyzy;
                Assert.AreEqual("((7-9)-9)", v.x);
                Assert.AreEqual("((7-9)-9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((7-9)-9)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(3-2)", "(3-2)", "(-8-2)", "(3-2)");
                var v = ov.swizzle.zzyzz;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-2)", "((49)-1)", "(-5-2)", "-7");
                var v = ov.swizzle.zzyzw;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("((49)-1)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(0-7)", "", "", "6");
                var v = ov.swizzle.zzyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>(null, "", null, null);
                var v = ov.swizzle.zzywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("6", "1", "((41)-7)", "");
                var v = ov.swizzle.zzywy;
                Assert.AreEqual("((41)-7)", v.x);
                Assert.AreEqual("((41)-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-9", "-1", "-1");
                var v = ov.swizzle.zzywz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-36)", "", null);
                var v = ov.swizzle.zzyww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-36)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(9-8)", "(-7-9)", "(9-8)", "((46)-1)");
                var v = ov.swizzle.zzz;
                Assert.AreEqual("(9-8)", v.x);
                Assert.AreEqual("(9-8)", v.y);
                Assert.AreEqual("(9-8)", v.z);
            }
            {
                var ov = new gvec4<string>("((-84)-7)", "4", "(53)", "(7-1)");
                var v = ov.swizzle.zzzx;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(53)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual("((-84)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "5", "(0-2)", "7");
                var v = ov.swizzle.zzzxx;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((39)9)", "((-86)-9)", null);
                var v = ov.swizzle.zzzxy;
                Assert.AreEqual("((-86)-9)", v.x);
                Assert.AreEqual("((-86)-9)", v.y);
                Assert.AreEqual("((-86)-9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((39)9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-1)7)", "", "-4", "");
                var v = ov.swizzle.zzzxz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((-1-1)7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(40)", "((8-5)8)", "-4", "(40)");
                var v = ov.swizzle.zzzxw;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual("(40)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "0", "4", "-5");
                var v = ov.swizzle.zzzy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((9-2)-8)", null, "((9-2)-8)");
                var v = ov.swizzle.zzzyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-2)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-41)-1)", null, "-2", null);
                var v = ov.swizzle.zzzyy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-62)-3)", "-2", null, "((-5-9)4)");
                var v = ov.swizzle.zzzyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((3-9)3)", "(-10)", "(80)", "-7");
                var v = ov.swizzle.zzzyw;
                Assert.AreEqual("(80)", v.x);
                Assert.AreEqual("(80)", v.y);
                Assert.AreEqual("(80)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(1-4)", "8", "3", "");
                var v = ov.swizzle.zzzz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(11)", "(11)", "4");
                var v = ov.swizzle.zzzzx;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-54)", "(-54)", "", "-1");
                var v = ov.swizzle.zzzzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec4<string>("0", null, "((3-1)-8)", "((-91)-1)");
                var v = ov.swizzle.zzzzz;
                Assert.AreEqual("((3-1)-8)", v.x);
                Assert.AreEqual("((3-1)-8)", v.y);
                Assert.AreEqual("((3-1)-8)", v.z);
                Assert.AreEqual("((3-1)-8)", v.w);
                Assert.AreEqual("((3-1)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-51)-9)", "", "((87)0)", "(-89)");
                var v = ov.swizzle.zzzzw;
                Assert.AreEqual("((87)0)", v.x);
                Assert.AreEqual("((87)0)", v.y);
                Assert.AreEqual("((87)0)", v.z);
                Assert.AreEqual("((87)0)", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec4<string>("((61)4)", "", "(-89)", "(60)");
                var v = ov.swizzle.zzzw;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("(60)", v.w);
            }
            {
                var ov = new gvec4<string>("(27)", "(27)", "((-2-5)0)", "-6");
                var v = ov.swizzle.zzzwx;
                Assert.AreEqual("((-2-5)0)", v.x);
                Assert.AreEqual("((-2-5)0)", v.y);
                Assert.AreEqual("((-2-5)0)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-5)", "-5", null, "(-83)");
                var v = ov.swizzle.zzzwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-83)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("2", null, "((0-7)-6)", "(84)");
                var v = ov.swizzle.zzzwz;
                Assert.AreEqual("((0-7)-6)", v.x);
                Assert.AreEqual("((0-7)-6)", v.y);
                Assert.AreEqual("((0-7)-6)", v.z);
                Assert.AreEqual("(84)", v.w);
                Assert.AreEqual("((0-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-74)-2)", "(-41)", "", "((6-4)8)");
                var v = ov.swizzle.zzzww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((6-4)8)", v.w);
                Assert.AreEqual("((6-4)8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-78)-2)", "7", "4", "((0-2)2)");
                var v = ov.swizzle.zzw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((0-2)2)", v.z);
            }
            {
                var ov = new gvec4<string>("(-4-8)", null, "2", "(-4-8)");
                var v = ov.swizzle.zzwx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(-4-8)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-6", "(44)", "-6");
                var v = ov.swizzle.zzwxx;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "-8", "((-47)-5)", "((-47)-5)");
                var v = ov.swizzle.zzwxy;
                Assert.AreEqual("((-47)-5)", v.x);
                Assert.AreEqual("((-47)-5)", v.y);
                Assert.AreEqual("((-47)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((25)5)", null);
                var v = ov.swizzle.zzwxz;
                Assert.AreEqual("((25)5)", v.x);
                Assert.AreEqual("((25)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((25)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((14)-3)", "(-45)", "-9", "1");
                var v = ov.swizzle.zzwxw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((14)-3)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("2", "-8", "-8", "((94)5)");
                var v = ov.swizzle.zzwy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((94)5)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "5", "-2", "(-51)");
                var v = ov.swizzle.zzwyx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-2)", "(-4-2)", "(0-2)", "2");
                var v = ov.swizzle.zzwyy;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("(-4-2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(54)", "((-70)-3)", "((-2-7)-8)");
                var v = ov.swizzle.zzwyz;
                Assert.AreEqual("((-70)-3)", v.x);
                Assert.AreEqual("((-70)-3)", v.y);
                Assert.AreEqual("((-2-7)-8)", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual("((-70)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((3-3)-3)", "2", "((5-2)6)");
                var v = ov.swizzle.zzwyw;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((5-2)6)", v.z);
                Assert.AreEqual("((3-3)-3)", v.w);
                Assert.AreEqual("((5-2)6)", v.v);
            }
            {
                var ov = new gvec4<string>("2", null, "((16)0)", "2");
                var v = ov.swizzle.zzwz;
                Assert.AreEqual("((16)0)", v.x);
                Assert.AreEqual("((16)0)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((16)0)", v.w);
            }
            {
                var ov = new gvec4<string>("((-6-6)3)", "6", null, "((-6-6)3)");
                var v = ov.swizzle.zzwzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-6-6)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-6-6)3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((7-3)-6)", "", "((7-3)-6)");
                var v = ov.swizzle.zzwzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((7-3)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((7-3)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(8-6)", "7", "7");
                var v = ov.swizzle.zzwzz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((31)8)", "-4", "(08)", null);
                var v = ov.swizzle.zzwzw;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(08)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-7-1)-8)", "(-13)", "-6", null);
                var v = ov.swizzle.zzww;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-5", "(79)", "((-8-6)2)", "(3-8)");
                var v = ov.swizzle.zzwwx;
                Assert.AreEqual("((-8-6)2)", v.x);
                Assert.AreEqual("((-8-6)2)", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("((-55)0)", "(97)", null, null);
                var v = ov.swizzle.zzwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(97)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-4-6)-3)", null, "((1-7)2)");
                var v = ov.swizzle.zzwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((1-7)2)", v.z);
                Assert.AreEqual("((1-7)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-13)-7)", "(99)", "((-13)-7)");
                var v = ov.swizzle.zzwww;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("((-13)-7)", v.z);
                Assert.AreEqual("((-13)-7)", v.w);
                Assert.AreEqual("((-13)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "(64)", null, null);
                var v = ov.swizzle.zw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec4<string>("((16)1)", "2", "(-97)", "((16)1)");
                var v = ov.swizzle.zwx;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("((16)1)", v.y);
                Assert.AreEqual("((16)1)", v.z);
            }
            {
                var ov = new gvec4<string>("(2-6)", null, "-2", "((0-7)-1)");
                var v = ov.swizzle.zwxx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((0-7)-1)", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("(2-6)", v.w);
            }
            {
                var ov = new gvec4<string>("((4-6)-4)", "(-92)", "(54)", "(54)");
                var v = ov.swizzle.zwxxx;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("((4-6)-4)", v.z);
                Assert.AreEqual("((4-6)-4)", v.w);
                Assert.AreEqual("((4-6)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-96)6)", "", "((-96)6)", "");
                var v = ov.swizzle.zwxxy;
                Assert.AreEqual("((-96)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-96)6)", v.z);
                Assert.AreEqual("((-96)6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-76)5)", "", "(-9-1)", "((-76)5)");
                var v = ov.swizzle.zwxxz;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("((-76)5)", v.y);
                Assert.AreEqual("((-76)5)", v.z);
                Assert.AreEqual("((-76)5)", v.w);
                Assert.AreEqual("(-9-1)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "", "((7-3)-7)", "(-3-8)");
                var v = ov.swizzle.zwxxw;
                Assert.AreEqual("((7-3)-7)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-3-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((53)-5)", "((5-4)-3)", "((5-4)-3)", "(10)");
                var v = ov.swizzle.zwxy;
                Assert.AreEqual("((5-4)-3)", v.x);
                Assert.AreEqual("(10)", v.y);
                Assert.AreEqual("((53)-5)", v.z);
                Assert.AreEqual("((5-4)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("-8", "5", "-8", "((36)8)");
                var v = ov.swizzle.zwxyx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((36)8)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("2", "", "((-8-2)9)", "2");
                var v = ov.swizzle.zwxyy;
                Assert.AreEqual("((-8-2)9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((9-3)4)", "-9", "-5", null);
                var v = ov.swizzle.zwxyz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-3)4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("8", "-5", "", "8");
                var v = ov.swizzle.zwxyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-9)", null, "(-9-9)", "(44)");
                var v = ov.swizzle.zwxz;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((04)-8)", null, "-8", "(-2-9)");
                var v = ov.swizzle.zwxzx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((04)-8)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((04)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-23)", "9", "2");
                var v = ov.swizzle.zwxzy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-31)", "(-81)", "9");
                var v = ov.swizzle.zwxzz;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-1)", "((8-6)-9)", null, "(86)");
                var v = ov.swizzle.zwxzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(86)", v.y);
                Assert.AreEqual("(-5-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(12)", "8", "(85)");
                var v = ov.swizzle.zwxw;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(85)", v.w);
            }
            {
                var ov = new gvec4<string>("-7", "((3-3)-4)", "", "");
                var v = ov.swizzle.zwxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(-13)", "((-4-4)-1)", "((-4-4)-1)", "((-8-7)-2)");
                var v = ov.swizzle.zwxwy;
                Assert.AreEqual("((-4-4)-1)", v.x);
                Assert.AreEqual("((-8-7)-2)", v.y);
                Assert.AreEqual("(-13)", v.z);
                Assert.AreEqual("((-8-7)-2)", v.w);
                Assert.AreEqual("((-4-4)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-5)-5)", "(-52)", "7", "((8-2)8)");
                var v = ov.swizzle.zwxwz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((8-2)8)", v.y);
                Assert.AreEqual("((-1-5)-5)", v.z);
                Assert.AreEqual("((8-2)8)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(2-6)", "0", "(2-6)", "");
                var v = ov.swizzle.zwxww;
                Assert.AreEqual("(2-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("9", null, "4", "(76)");
                var v = ov.swizzle.zwy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("(7-9)", "9", "9", "7");
                var v = ov.swizzle.zwyx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(7-9)", v.w);
            }
            {
                var ov = new gvec4<string>("(02)", "(4-5)", "", "-4");
                var v = ov.swizzle.zwyxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(4-5)", v.z);
                Assert.AreEqual("(02)", v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((5-6)2)", "", "(-10)");
                var v = ov.swizzle.zwyxy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-10)", v.y);
                Assert.AreEqual("((5-6)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((5-6)2)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(-4-3)", "", null);
                var v = ov.swizzle.zwyxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "((81)2)", "((81)2)", "((-94)2)");
                var v = ov.swizzle.zwyxw;
                Assert.AreEqual("((81)2)", v.x);
                Assert.AreEqual("((-94)2)", v.y);
                Assert.AreEqual("((81)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-94)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-5)9)", "1", "-3", "(-7-9)");
                var v = ov.swizzle.zwyy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("-6", "(-39)", "0", "0");
                var v = ov.swizzle.zwyyx;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-39)", v.z);
                Assert.AreEqual("(-39)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-2)", "(58)", null, "((-30)-9)");
                var v = ov.swizzle.zwyyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-30)-9)", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "0", "(22)", "((-4-4)1)");
                var v = ov.swizzle.zwyyz;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("((-4-4)1)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(22)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-1)", "((-56)8)", null, "(-7-5)");
                var v = ov.swizzle.zwyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("((-56)8)", v.z);
                Assert.AreEqual("((-56)8)", v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-4)8)", "(-5-6)", "", "((0-4)8)");
                var v = ov.swizzle.zwyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((0-4)8)", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((-8-9)-3)", "((32)-7)", "(15)", "6");
                var v = ov.swizzle.zwyzx;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((32)-7)", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual("((-8-9)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-1)-8)", "((-5-2)3)", "((-5-2)3)", "");
                var v = ov.swizzle.zwyzy;
                Assert.AreEqual("((-5-2)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-2)3)", v.z);
                Assert.AreEqual("((-5-2)3)", v.w);
                Assert.AreEqual("((-5-2)3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "((20)9)", "6");
                var v = ov.swizzle.zwyzz;
                Assert.AreEqual("((20)9)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((20)9)", v.w);
                Assert.AreEqual("((20)9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "((-9-6)-4)", "4");
                var v = ov.swizzle.zwyzw;
                Assert.AreEqual("((-9-6)-4)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((-9-6)-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-5)-2)", null, "", "((-7-5)-2)");
                var v = ov.swizzle.zwyw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-7-5)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-5)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("9", "0", "(47)", "((-20)4)");
                var v = ov.swizzle.zwywx;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("((-20)4)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-20)4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("2", "", "-4", "(-7-6)");
                var v = ov.swizzle.zwywy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-7-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-7-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("3", "3", "", "-5");
                var v = ov.swizzle.zwywz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-18)2)", "(0-2)", null, "((-18)2)");
                var v = ov.swizzle.zwyww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-18)2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((-18)2)", v.w);
                Assert.AreEqual("((-18)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-6)-3)", "-8", "(-56)", "9");
                var v = ov.swizzle.zwz;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-56)", v.z);
            }
            {
                var ov = new gvec4<string>("(-7-5)", "-7", "((97)0)", "-8");
                var v = ov.swizzle.zwzx;
                Assert.AreEqual("((97)0)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((97)0)", v.z);
                Assert.AreEqual("(-7-5)", v.w);
            }
            {
                var ov = new gvec4<string>("(-89)", "8", "", "-7");
                var v = ov.swizzle.zwzxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-89)", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((1-2)7)", "(-96)", "(-7-7)");
                var v = ov.swizzle.zwzxy;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((1-2)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "(-4-9)", "-6", "(-4-9)");
                var v = ov.swizzle.zwzxz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("", "((84)2)", "0", "(2-6)");
                var v = ov.swizzle.zwzxw;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "-8", "(0-9)", "(8-7)");
                var v = ov.swizzle.zwzy;
                Assert.AreEqual("(0-9)", v.x);
                Assert.AreEqual("(8-7)", v.y);
                Assert.AreEqual("(0-9)", v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>(null, "", "-5", null);
                var v = ov.swizzle.zwzyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(83)", "", null, "((-6-2)8)");
                var v = ov.swizzle.zwzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-6-2)8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-61)-4)", "(-7-8)", "-3", "-3");
                var v = ov.swizzle.zwzyz;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-7-8)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((6-9)7)", "8", "(6-3)", "8");
                var v = ov.swizzle.zwzyw;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("6", null, "((29)9)", "");
                var v = ov.swizzle.zwzz;
                Assert.AreEqual("((29)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((29)9)", v.z);
                Assert.AreEqual("((29)9)", v.w);
            }
            {
                var ov = new gvec4<string>("(-67)", "7", null, "(0-9)");
                var v = ov.swizzle.zwzzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec4<string>("((-40)6)", "((42)-2)", "((27)-8)", "(9-9)");
                var v = ov.swizzle.zwzzy;
                Assert.AreEqual("((27)-8)", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("((27)-8)", v.z);
                Assert.AreEqual("((27)-8)", v.w);
                Assert.AreEqual("((42)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-10)", "((-46)-6)", "(-10)", null);
                var v = ov.swizzle.zwzzz;
                Assert.AreEqual("(-10)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("(-10)", v.v);
            }
            {
                var ov = new gvec4<string>("((92)5)", null, "-7", "-4");
                var v = ov.swizzle.zwzzw;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((92)-3)", "(-3-2)", "-1", "(-16)");
                var v = ov.swizzle.zwzw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-16)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-16)", v.w);
            }
            {
                var ov = new gvec4<string>("(3-8)", "(-6-4)", "", "((-22)4)");
                var v = ov.swizzle.zwzwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-22)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-22)4)", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-5)", "(-15)", "((-3-5)8)", "-2");
                var v = ov.swizzle.zwzwy;
                Assert.AreEqual("((-3-5)8)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-3-5)8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-15)", v.v);
            }
            {
                var ov = new gvec4<string>("((48)-4)", "3", "(27)", "((-1-6)5)");
                var v = ov.swizzle.zwzwz;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("((-1-6)5)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("((-1-6)5)", v.w);
                Assert.AreEqual("(27)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(47)", "-8", "((4-2)2)");
                var v = ov.swizzle.zwzww;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((4-2)2)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((4-2)2)", v.w);
                Assert.AreEqual("((4-2)2)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "(66)", "(-2-3)");
                var v = ov.swizzle.zww;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("(-2-3)", v.z);
            }
            {
                var ov = new gvec4<string>("-4", "-4", "", "(-78)");
                var v = ov.swizzle.zwwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-78)", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-7)-1)", "", "", "(-30)");
                var v = ov.swizzle.zwwxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("((-3-7)-1)", v.w);
                Assert.AreEqual("((-3-7)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-1-6)", null, null);
                var v = ov.swizzle.zwwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-1-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-80)", "", null);
                var v = ov.swizzle.zwwxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(36)", "-1", "-1", "((-5-6)3)");
                var v = ov.swizzle.zwwxw;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-5-6)3)", v.y);
                Assert.AreEqual("((-5-6)3)", v.z);
                Assert.AreEqual("(36)", v.w);
                Assert.AreEqual("((-5-6)3)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((2-6)-4)", "1", "((-7-4)-3)");
                var v = ov.swizzle.zwwy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-7-4)-3)", v.y);
                Assert.AreEqual("((-7-4)-3)", v.z);
                Assert.AreEqual("((2-6)-4)", v.w);
            }
            {
                var ov = new gvec4<string>("((-88)-6)", "", "9", "((0-4)-7)");
                var v = ov.swizzle.zwwyx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((0-4)-7)", v.y);
                Assert.AreEqual("((0-4)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-88)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-2)5)", "(09)", "(09)", "(09)");
                var v = ov.swizzle.zwwyy;
                Assert.AreEqual("(09)", v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("(09)", v.w);
                Assert.AreEqual("(09)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-8)-3)", "((0-5)-1)", "-7", "-8");
                var v = ov.swizzle.zwwyz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((0-5)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((47)-6)", "-7", "(-9-3)", null);
                var v = ov.swizzle.zwwyw;
                Assert.AreEqual("(-9-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, null, null, "7");
                var v = ov.swizzle.zwwz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("", "((47)2)", "-6", "(8-2)");
                var v = ov.swizzle.zwwzx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(58)", null, "(4-3)", "(4-3)");
                var v = ov.swizzle.zwwzy;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("(4-3)", v.y);
                Assert.AreEqual("(4-3)", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("2", "(-50)", "-4", "-4");
                var v = ov.swizzle.zwwzz;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-5)", "(2-4)", "((-4-2)-8)", "-1");
                var v = ov.swizzle.zwwzw;
                Assert.AreEqual("((-4-2)-8)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-4-2)-8)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-9)", "1", "((-2-6)-1)", "(-7-9)");
                var v = ov.swizzle.zwww;
                Assert.AreEqual("((-2-6)-1)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("(-7-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((-99)-6)", "-8", "((-99)-6)", "(-69)");
                var v = ov.swizzle.zwwwx;
                Assert.AreEqual("((-99)-6)", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("((-99)-6)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((7-5)0)", "(0-3)", "1");
                var v = ov.swizzle.zwwwy;
                Assert.AreEqual("(0-3)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((7-5)0)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-95)", "5", "5");
                var v = ov.swizzle.zwwwz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>(null, "2", "2", "((8-9)-9)");
                var v = ov.swizzle.zwwww;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((8-9)-9)", v.y);
                Assert.AreEqual("((8-9)-9)", v.z);
                Assert.AreEqual("((8-9)-9)", v.w);
                Assert.AreEqual("((8-9)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(09)", null, "((0-8)6)", "9");
                var v = ov.swizzle.wx;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(09)", v.y);
            }
            {
                var ov = new gvec4<string>("8", "8", "8", "-4");
                var v = ov.swizzle.wxx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
            }
            {
                var ov = new gvec4<string>(null, "3", "3", "-9");
                var v = ov.swizzle.wxxx;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-7", "((4-8)7)", "((-2-4)9)", "(-26)");
                var v = ov.swizzle.wxxxx;
                Assert.AreEqual("(-26)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((9-9)-4)", "4", "1", "((9-9)-4)");
                var v = ov.swizzle.wxxxy;
                Assert.AreEqual("((9-9)-4)", v.x);
                Assert.AreEqual("((9-9)-4)", v.y);
                Assert.AreEqual("((9-9)-4)", v.z);
                Assert.AreEqual("((9-9)-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("(-93)", "(-3-5)", "(-93)", "3");
                var v = ov.swizzle.wxxxz;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-93)", v.w);
                Assert.AreEqual("(-93)", v.v);
            }
            {
                var ov = new gvec4<string>("((-94)-4)", null, "((3-1)7)", "7");
                var v = ov.swizzle.wxxxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-94)-4)", v.y);
                Assert.AreEqual("((-94)-4)", v.z);
                Assert.AreEqual("((-94)-4)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((00)8)", "(-2-8)", "(-4-2)");
                var v = ov.swizzle.wxxy;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((00)8)", v.w);
            }
            {
                var ov = new gvec4<string>("((3-3)7)", "(02)", "(02)", "(61)");
                var v = ov.swizzle.wxxyx;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual("((3-3)7)", v.y);
                Assert.AreEqual("((3-3)7)", v.z);
                Assert.AreEqual("(02)", v.w);
                Assert.AreEqual("((3-3)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-4)", "(-84)", "-5", "((-7-6)5)");
                var v = ov.swizzle.wxxyy;
                Assert.AreEqual("((-7-6)5)", v.x);
                Assert.AreEqual("(8-4)", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("(-84)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "8", "(89)", "");
                var v = ov.swizzle.wxxyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(89)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-9", "(2-4)", "(-25)");
                var v = ov.swizzle.wxxyw;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-4)", "(-9-4)", "((-94)1)", null);
                var v = ov.swizzle.wxxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("((-94)1)", v.w);
            }
            {
                var ov = new gvec4<string>("-7", null, "(72)", null);
                var v = ov.swizzle.wxxzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(72)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((2-8)7)", "", "(0-8)");
                var v = ov.swizzle.wxxzy;
                Assert.AreEqual("(0-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((2-8)7)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "(7-7)", "((8-9)-7)");
                var v = ov.swizzle.wxxzz;
                Assert.AreEqual("((8-9)-7)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("(7-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(70)", "(4-3)", "((-3-7)-4)");
                var v = ov.swizzle.wxxzw;
                Assert.AreEqual("((-3-7)-4)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(4-3)", v.w);
                Assert.AreEqual("((-3-7)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-4)9)", "((0-4)9)", "(-1-9)", "7");
                var v = ov.swizzle.wxxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((0-4)9)", v.y);
                Assert.AreEqual("((0-4)9)", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("", "-5", "((-2-3)2)", "(4-1)");
                var v = ov.swizzle.wxxwx;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(4-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((3-6)2)", "", "", "((2-9)-2)");
                var v = ov.swizzle.wxxwy;
                Assert.AreEqual("((2-9)-2)", v.x);
                Assert.AreEqual("((3-6)2)", v.y);
                Assert.AreEqual("((3-6)2)", v.z);
                Assert.AreEqual("((2-9)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((-4-6)-1)", "((-4-6)-1)");
                var v = ov.swizzle.wxxwz;
                Assert.AreEqual("((-4-6)-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-4-6)-1)", v.w);
                Assert.AreEqual("((-4-6)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "6", "(-99)", "");
                var v = ov.swizzle.wxxww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(3-9)", "-6", "((8-2)4)");
                var v = ov.swizzle.wxy;
                Assert.AreEqual("((8-2)4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(3-9)", v.z);
            }
            {
                var ov = new gvec4<string>(null, "(40)", "(40)", "((2-5)4)");
                var v = ov.swizzle.wxyx;
                Assert.AreEqual("((2-5)4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-4", "", null, "(2-7)");
                var v = ov.swizzle.wxyxx;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((-37)-1)", "((-8-2)8)");
                var v = ov.swizzle.wxyxy;
                Assert.AreEqual("((-8-2)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "((-2-9)3)", "-4", null);
                var v = ov.swizzle.wxyxz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-9)3)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "4", null, "((95)-3)");
                var v = ov.swizzle.wxyxw;
                Assert.AreEqual("((95)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((95)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(19)", "((84)5)", "", "((84)5)");
                var v = ov.swizzle.wxyy;
                Assert.AreEqual("((84)5)", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("((84)5)", v.z);
                Assert.AreEqual("((84)5)", v.w);
            }
            {
                var ov = new gvec4<string>("1", "", null, null);
                var v = ov.swizzle.wxyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-55)-8)", "-3", "-7");
                var v = ov.swizzle.wxyyy;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-55)-8)", v.z);
                Assert.AreEqual("((-55)-8)", v.w);
                Assert.AreEqual("((-55)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-5)-1)", "(-32)", "((4-5)-1)", "(-5-9)");
                var v = ov.swizzle.wxyyz;
                Assert.AreEqual("(-5-9)", v.x);
                Assert.AreEqual("((4-5)-1)", v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("(-32)", v.w);
                Assert.AreEqual("((4-5)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((16)-3)", "-5", "((16)-3)", "(-84)");
                var v = ov.swizzle.wxyyw;
                Assert.AreEqual("(-84)", v.x);
                Assert.AreEqual("((16)-3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-84)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(10)", "((-8-3)2)");
                var v = ov.swizzle.wxyz;
                Assert.AreEqual("((-8-3)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(10)", v.w);
            }
            {
                var ov = new gvec4<string>("(3-8)", "((-28)-3)", "(58)", "(40)");
                var v = ov.swizzle.wxyzx;
                Assert.AreEqual("(40)", v.x);
                Assert.AreEqual("(3-8)", v.y);
                Assert.AreEqual("((-28)-3)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(3-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(17)", "(17)", "", "(17)");
                var v = ov.swizzle.wxyzy;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-3)-6)", "((-6-7)4)", "8", null);
                var v = ov.swizzle.wxyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-5-3)-6)", v.y);
                Assert.AreEqual("((-6-7)4)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(81)", "-9", "(3-5)", null);
                var v = ov.swizzle.wxyzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(3-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((3-6)-7)", "((3-6)-7)", "(-69)", "((3-6)-7)");
                var v = ov.swizzle.wxyw;
                Assert.AreEqual("((3-6)-7)", v.x);
                Assert.AreEqual("((3-6)-7)", v.y);
                Assert.AreEqual("((3-6)-7)", v.z);
                Assert.AreEqual("((3-6)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("((-4-8)-7)", "((33)2)", "-5", "-5");
                var v = ov.swizzle.wxywx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((-4-8)-7)", v.y);
                Assert.AreEqual("((33)2)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((-4-8)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(3-1)", "(-41)", "(80)", "(3-1)");
                var v = ov.swizzle.wxywy;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("(3-1)", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("(-41)", v.v);
            }
            {
                var ov = new gvec4<string>("((7-9)6)", "(5-9)", "-5", "4");
                var v = ov.swizzle.wxywz;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((7-9)6)", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>(null, "7", "(5-1)", "(-60)");
                var v = ov.swizzle.wxyww;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-60)", v.w);
                Assert.AreEqual("(-60)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((51)-8)", "2", "");
                var v = ov.swizzle.wxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec4<string>("", "", "((32)-6)", "((-60)-8)");
                var v = ov.swizzle.wxzx;
                Assert.AreEqual("((-60)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((32)-6)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((4-1)-7)", "((4-1)-7)", "((4-1)-7)", "((4-1)-7)");
                var v = ov.swizzle.wxzxx;
                Assert.AreEqual("((4-1)-7)", v.x);
                Assert.AreEqual("((4-1)-7)", v.y);
                Assert.AreEqual("((4-1)-7)", v.z);
                Assert.AreEqual("((4-1)-7)", v.w);
                Assert.AreEqual("((4-1)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((90)-2)", "", "6", "((-23)6)");
                var v = ov.swizzle.wxzxy;
                Assert.AreEqual("((-23)6)", v.x);
                Assert.AreEqual("((90)-2)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((90)-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-86)", "((9-7)0)", "((5-3)-5)", "((58)7)");
                var v = ov.swizzle.wxzxz;
                Assert.AreEqual("((58)7)", v.x);
                Assert.AreEqual("(-86)", v.y);
                Assert.AreEqual("((5-3)-5)", v.z);
                Assert.AreEqual("(-86)", v.w);
                Assert.AreEqual("((5-3)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", "-4", "(51)");
                var v = ov.swizzle.wxzxw;
                Assert.AreEqual("(51)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec4<string>("(-25)", "(-1-3)", "(-25)", "");
                var v = ov.swizzle.wxzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-1-3)", v.w);
            }
            {
                var ov = new gvec4<string>("(-1-1)", null, "-7", "6");
                var v = ov.swizzle.wxzyx;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-42)", "(9-6)", "((-75)9)", "");
                var v = ov.swizzle.wxzyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-42)", v.y);
                Assert.AreEqual("((-75)9)", v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual("(9-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-61)-5)", "((-1-7)7)", "-8", "(3-7)");
                var v = ov.swizzle.wxzyz;
                Assert.AreEqual("(3-7)", v.x);
                Assert.AreEqual("((-61)-5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-1-7)7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("((26)4)", null, "((0-8)9)", "1");
                var v = ov.swizzle.wxzyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((26)4)", v.y);
                Assert.AreEqual("((0-8)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(5-2)", "(69)", "-5", "(69)");
                var v = ov.swizzle.wxzz;
                Assert.AreEqual("(69)", v.x);
                Assert.AreEqual("(5-2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((10)2)", "(-28)", "((-48)-7)");
                var v = ov.swizzle.wxzzx;
                Assert.AreEqual("((-48)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-3", "((63)5)", "((63)5)", "((-6-9)1)");
                var v = ov.swizzle.wxzzy;
                Assert.AreEqual("((-6-9)1)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((63)5)", v.z);
                Assert.AreEqual("((63)5)", v.w);
                Assert.AreEqual("((63)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-4)-8)", "(-7-9)", "((-4-8)5)", "(-9-1)");
                var v = ov.swizzle.wxzzz;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("((5-4)-8)", v.y);
                Assert.AreEqual("((-4-8)5)", v.z);
                Assert.AreEqual("((-4-8)5)", v.w);
                Assert.AreEqual("((-4-8)5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-9", "(-3-9)", "((85)-9)");
                var v = ov.swizzle.wxzzw;
                Assert.AreEqual("((85)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("((85)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("", "6", "((2-5)-5)", "(-4-5)");
                var v = ov.swizzle.wxzw;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((2-5)-5)", v.z);
                Assert.AreEqual("(-4-5)", v.w);
            }
            {
                var ov = new gvec4<string>("(-72)", "-2", "5", "-2");
                var v = ov.swizzle.wxzwx;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-72)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(-72)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-8)", "2", "((69)-5)", "(-9-2)");
                var v = ov.swizzle.wxzwy;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("((69)-5)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-3)", "8", "4", "8");
                var v = ov.swizzle.wxzwz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(-2-3)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-94)-2)", "((30)-2)", "8", "(-76)");
                var v = ov.swizzle.wxzww;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((-94)-2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(-76)", v.w);
                Assert.AreEqual("(-76)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "((-51)3)", "", "6");
                var v = ov.swizzle.wxw;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("6", v.z);
            }
            {
                var ov = new gvec4<string>("(-49)", "(4-6)", "((-4-9)4)", "((65)-9)");
                var v = ov.swizzle.wxwx;
                Assert.AreEqual("((65)-9)", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("((65)-9)", v.z);
                Assert.AreEqual("(-49)", v.w);
            }
            {
                var ov = new gvec4<string>("((-68)1)", "(-2-2)", "(-2-2)", "((5-8)6)");
                var v = ov.swizzle.wxwxx;
                Assert.AreEqual("((5-8)6)", v.x);
                Assert.AreEqual("((-68)1)", v.y);
                Assert.AreEqual("((5-8)6)", v.z);
                Assert.AreEqual("((-68)1)", v.w);
                Assert.AreEqual("((-68)1)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((-1-1)3)", "-2", "(4-5)");
                var v = ov.swizzle.wxwxy;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(4-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-1-1)3)", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "((-42)9)", "((-42)9)");
                var v = ov.swizzle.wxwxz;
                Assert.AreEqual("((-42)9)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-42)9)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-42)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-6)", "((-4-9)-8)", "", "(-3-2)");
                var v = ov.swizzle.wxwxw;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(42)", "(7-7)", "(60)", "-3");
                var v = ov.swizzle.wxwy;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(42)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(7-7)", v.w);
            }
            {
                var ov = new gvec4<string>("1", "((46)7)", null, null);
                var v = ov.swizzle.wxwyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((46)7)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-3)", "(-3-3)", "(-6-2)", "((5-3)-9)");
                var v = ov.swizzle.wxwyy;
                Assert.AreEqual("((5-3)-9)", v.x);
                Assert.AreEqual("(-3-3)", v.y);
                Assert.AreEqual("((5-3)-9)", v.z);
                Assert.AreEqual("(-3-3)", v.w);
                Assert.AreEqual("(-3-3)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((0-4)2)", "", null);
                var v = ov.swizzle.wxwyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((0-4)2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", "((-48)0)", "((-17)9)", "1");
                var v = ov.swizzle.wxwyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(5-9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-48)0)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((69)8)", "-2", "((28)3)", "8");
                var v = ov.swizzle.wxwz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((69)8)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((28)3)", v.w);
            }
            {
                var ov = new gvec4<string>("((51)-7)", "(10)", null, "(10)");
                var v = ov.swizzle.wxwzx;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("((51)-7)", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((51)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-6", "8", "((-31)-4)");
                var v = ov.swizzle.wxwzy;
                Assert.AreEqual("((-31)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-31)-4)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((05)4)", "((97)-3)", "4", "((-56)5)");
                var v = ov.swizzle.wxwzz;
                Assert.AreEqual("((-56)5)", v.x);
                Assert.AreEqual("((05)4)", v.y);
                Assert.AreEqual("((-56)5)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((65)2)", "-4", "(-9-4)");
                var v = ov.swizzle.wxwzw;
                Assert.AreEqual("(-9-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(23)", "(-3-4)", "3", null);
                var v = ov.swizzle.wxww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((5-6)4)", "(27)", null, "-6");
                var v = ov.swizzle.wxwwx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((5-6)4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((5-6)4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "", "-6");
                var v = ov.swizzle.wxwwy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "-8", "2");
                var v = ov.swizzle.wxwwz;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("((6-8)1)", "-7", "-7", "(-1-9)");
                var v = ov.swizzle.wxwww;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("((6-8)1)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((11)0)", "3", "3");
                var v = ov.swizzle.wy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((11)0)", v.y);
            }
            {
                var ov = new gvec4<string>("(7-4)", "((5-5)0)", "(63)", "(9-2)");
                var v = ov.swizzle.wyx;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("((5-5)0)", v.y);
                Assert.AreEqual("(7-4)", v.z);
            }
            {
                var ov = new gvec4<string>("((0-2)-9)", "(57)", "(6-7)", "-1");
                var v = ov.swizzle.wyxx;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(57)", v.y);
                Assert.AreEqual("((0-2)-9)", v.z);
                Assert.AreEqual("((0-2)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-3)-5)", "((-9-4)-1)", "(4-5)", "((-15)2)");
                var v = ov.swizzle.wyxxx;
                Assert.AreEqual("((-15)2)", v.x);
                Assert.AreEqual("((-9-4)-1)", v.y);
                Assert.AreEqual("((-7-3)-5)", v.z);
                Assert.AreEqual("((-7-3)-5)", v.w);
                Assert.AreEqual("((-7-3)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "7", "7", null);
                var v = ov.swizzle.wyxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(73)", "-4", "(-8-2)", "((25)-2)");
                var v = ov.swizzle.wyxxz;
                Assert.AreEqual("((25)-2)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(73)", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(34)", null, "((-38)6)", "");
                var v = ov.swizzle.wyxxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "-1", "((-49)-4)", "-4");
                var v = ov.swizzle.wyxy;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec4<string>("(3-9)", "((95)-9)", "((-60)4)", "-5");
                var v = ov.swizzle.wyxyx;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("((95)-9)", v.y);
                Assert.AreEqual("(3-9)", v.z);
                Assert.AreEqual("((95)-9)", v.w);
                Assert.AreEqual("(3-9)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", null, "-3", null);
                var v = ov.swizzle.wyxyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-9-6)5)", "((-86)2)", "(2-7)", null);
                var v = ov.swizzle.wyxyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-86)2)", v.y);
                Assert.AreEqual("((-9-6)5)", v.z);
                Assert.AreEqual("((-86)2)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-3-8)", "((9-3)6)", "3");
                var v = ov.swizzle.wyxyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-3-8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((2-9)7)", "(-38)", "", "-9");
                var v = ov.swizzle.wyxz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-38)", v.y);
                Assert.AreEqual("((2-9)7)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(69)", "5", "(7-1)", "");
                var v = ov.swizzle.wyxzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(69)", v.z);
                Assert.AreEqual("(7-1)", v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-7)", "((-66)4)", "", "1");
                var v = ov.swizzle.wyxzy;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-66)4)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-66)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-64)", "(-64)", "-9");
                var v = ov.swizzle.wyxzz;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-64)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "", "(-1-2)", "((-8-3)4)");
                var v = ov.swizzle.wyxzw;
                Assert.AreEqual("((-8-3)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("((-8-3)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-94)0)", "((5-7)-8)", "(-9-3)", "((-94)0)");
                var v = ov.swizzle.wyxw;
                Assert.AreEqual("((-94)0)", v.x);
                Assert.AreEqual("((5-7)-8)", v.y);
                Assert.AreEqual("((-94)0)", v.z);
                Assert.AreEqual("((-94)0)", v.w);
            }
            {
                var ov = new gvec4<string>("-4", "1", "(8-7)", "-4");
                var v = ov.swizzle.wyxwx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((-16)-4)", "((-92)4)", "");
                var v = ov.swizzle.wyxwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-16)-4)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-16)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-50)2)", "-4", null, "-5");
                var v = ov.swizzle.wyxwz;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-50)2)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((1-2)-6)", "-1", null, null);
                var v = ov.swizzle.wyxww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((1-2)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(78)", "((57)-9)", "((57)-9)", "");
                var v = ov.swizzle.wyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((57)-9)", v.y);
                Assert.AreEqual("((57)-9)", v.z);
            }
            {
                var ov = new gvec4<string>("", "(3-2)", "-7", "2");
                var v = ov.swizzle.wyyx;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("(3-2)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "((-3-4)0)", "((5-6)-9)", "(-5-7)");
                var v = ov.swizzle.wyyxx;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("((-3-4)0)", v.y);
                Assert.AreEqual("((-3-4)0)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((1-4)-7)", "((1-4)-7)", "4");
                var v = ov.swizzle.wyyxy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((1-4)-7)", v.y);
                Assert.AreEqual("((1-4)-7)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((1-4)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(-5-3)", "(46)", "((-5-6)-7)");
                var v = ov.swizzle.wyyxz;
                Assert.AreEqual("((-5-6)-7)", v.x);
                Assert.AreEqual("(-5-3)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(46)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "(88)", "(-19)", "((8-4)2)");
                var v = ov.swizzle.wyyxw;
                Assert.AreEqual("((8-4)2)", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("(88)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((8-4)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-63)-4)", null, "(-87)", "");
                var v = ov.swizzle.wyyy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("", "-1", "-1", null);
                var v = ov.swizzle.wyyyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-3)-8)", "(-69)", "-8", "-8");
                var v = ov.swizzle.wyyyy;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("(-69)", v.w);
                Assert.AreEqual("(-69)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "", "");
                var v = ov.swizzle.wyyyz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-2)5)", "(62)", "(-2-3)", "(28)");
                var v = ov.swizzle.wyyyw;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("(62)", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("(62)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-2)", "(-5-7)", "((-1-3)4)", "((-41)1)");
                var v = ov.swizzle.wyyz;
                Assert.AreEqual("((-41)1)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("((-1-3)4)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "(27)", "5", "5");
                var v = ov.swizzle.wyyzx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-44)6)", "-1", "((-44)6)", null);
                var v = ov.swizzle.wyyzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-44)6)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(-41)", "9", "((-4-9)4)", null);
                var v = ov.swizzle.wyyzz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-4-9)4)", v.w);
                Assert.AreEqual("((-4-9)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-68)", "((1-7)9)", "((-6-7)-9)", "((-6-7)-9)");
                var v = ov.swizzle.wyyzw;
                Assert.AreEqual("((-6-7)-9)", v.x);
                Assert.AreEqual("((1-7)9)", v.y);
                Assert.AreEqual("((1-7)9)", v.z);
                Assert.AreEqual("((-6-7)-9)", v.w);
                Assert.AreEqual("((-6-7)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-5)", "-9", "((31)7)", "-9");
                var v = ov.swizzle.wyyw;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec4<string>("-6", "-6", "-4", "(-36)");
                var v = ov.swizzle.wyywx;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("", "-5", "5", "5");
                var v = ov.swizzle.wyywy;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(5-1)", "-4", "((2-1)-6)", "(-17)");
                var v = ov.swizzle.wyywz;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("((2-1)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((76)-4)", "(-45)", "((05)-1)", "-2");
                var v = ov.swizzle.wyyww;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(-45)", v.y);
                Assert.AreEqual("(-45)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((39)-5)", null, "((-96)6)", null);
                var v = ov.swizzle.wyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-96)6)", v.z);
            }
            {
                var ov = new gvec4<string>("(02)", "(2-9)", "(02)", "(37)");
                var v = ov.swizzle.wyzx;
                Assert.AreEqual("(37)", v.x);
                Assert.AreEqual("(2-9)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("(02)", v.w);
            }
            {
                var ov = new gvec4<string>("(20)", "((-37)8)", "(31)", "-8");
                var v = ov.swizzle.wyzxx;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-37)8)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("(20)", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "-3", "((02)1)", "(-83)");
                var v = ov.swizzle.wyzxy;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((02)1)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("", "((64)-5)", "-2", "((-96)-4)");
                var v = ov.swizzle.wyzxz;
                Assert.AreEqual("((-96)-4)", v.x);
                Assert.AreEqual("((64)-5)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(29)", "-3", "(4-4)", "");
                var v = ov.swizzle.wyzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(4-4)", v.z);
                Assert.AreEqual("(29)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(-4-5)", "-7", "(9-2)");
                var v = ov.swizzle.wyzy;
                Assert.AreEqual("(9-2)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-4-5)", v.w);
            }
            {
                var ov = new gvec4<string>("(-68)", "3", "((8-2)-3)", null);
                var v = ov.swizzle.wyzyx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((8-2)-3)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-68)", v.v);
            }
            {
                var ov = new gvec4<string>("(-85)", "9", null, "((-4-1)-5)");
                var v = ov.swizzle.wyzyy;
                Assert.AreEqual("((-4-1)-5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-3)4)", "-8", "((-4-3)4)", "(-67)");
                var v = ov.swizzle.wyzyz;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-4-3)4)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("((-4-3)4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "6", "(05)", "((-62)-5)");
                var v = ov.swizzle.wyzyw;
                Assert.AreEqual("((-62)-5)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-62)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-7)2)", "((40)9)", "(87)", "((9-6)5)");
                var v = ov.swizzle.wyzz;
                Assert.AreEqual("((9-6)5)", v.x);
                Assert.AreEqual("((40)9)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("(87)", v.w);
            }
            {
                var ov = new gvec4<string>("0", "0", "((3-2)3)", "8");
                var v = ov.swizzle.wyzzx;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((3-2)3)", v.z);
                Assert.AreEqual("((3-2)3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-68)-2)", "", "(-70)", "");
                var v = ov.swizzle.wyzzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-70)", v.z);
                Assert.AreEqual("(-70)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((1-9)4)", "-7", "(-59)", "(49)");
                var v = ov.swizzle.wyzzz;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "9", "((-73)-7)", "-8");
                var v = ov.swizzle.wyzzw;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-73)-7)", v.z);
                Assert.AreEqual("((-73)-7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(2-2)", "(41)", "-3", "");
                var v = ov.swizzle.wyzw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(05)", "((9-5)-5)", "((-94)-1)", "1");
                var v = ov.swizzle.wyzwx;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((9-5)-5)", v.y);
                Assert.AreEqual("((-94)-1)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", null, "((-1-6)4)", "-2");
                var v = ov.swizzle.wyzwy;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-1-6)4)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((5-4)-6)", "((-3-4)6)", "(-1-1)", "");
                var v = ov.swizzle.wyzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-3-4)6)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-1)", "((15)9)", "-6", "((15)9)");
                var v = ov.swizzle.wyzww;
                Assert.AreEqual("((15)9)", v.x);
                Assert.AreEqual("((15)9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((15)9)", v.w);
                Assert.AreEqual("((15)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(99)", "((8-2)3)", "(53)");
                var v = ov.swizzle.wyw;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(99)", v.y);
                Assert.AreEqual("(53)", v.z);
            }
            {
                var ov = new gvec4<string>("((-3-7)-6)", "(47)", "", "((73)-3)");
                var v = ov.swizzle.wywx;
                Assert.AreEqual("((73)-3)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("((73)-3)", v.z);
                Assert.AreEqual("((-3-7)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("((-71)6)", null, null, "((-71)6)");
                var v = ov.swizzle.wywxx;
                Assert.AreEqual("((-71)6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-71)6)", v.z);
                Assert.AreEqual("((-71)6)", v.w);
                Assert.AreEqual("((-71)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(44)", "(-6-4)", "4", "4");
                var v = ov.swizzle.wywxy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-6-4)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(15)", "((12)0)", null, "");
                var v = ov.swizzle.wywxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((12)0)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(15)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("5", "(9-6)", "(49)", "");
                var v = ov.swizzle.wywxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(9-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "(9-4)", "-1", "-1");
                var v = ov.swizzle.wywy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(9-4)", v.w);
            }
            {
                var ov = new gvec4<string>("((3-1)4)", "((-8-8)4)", "(-4-6)", "((-8-8)4)");
                var v = ov.swizzle.wywyx;
                Assert.AreEqual("((-8-8)4)", v.x);
                Assert.AreEqual("((-8-8)4)", v.y);
                Assert.AreEqual("((-8-8)4)", v.z);
                Assert.AreEqual("((-8-8)4)", v.w);
                Assert.AreEqual("((3-1)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((2-4)-9)", "-7", "((-7-6)4)", "(-6-3)");
                var v = ov.swizzle.wywyy;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-6-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("", "((7-5)6)", "((62)1)", "(-1-1)");
                var v = ov.swizzle.wywyz;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("((7-5)6)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("((7-5)6)", v.w);
                Assert.AreEqual("((62)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-30)", "((91)-5)", "-1", null);
                var v = ov.swizzle.wywyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((91)-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((91)-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-7-1)", null, "4", "((-2-8)5)");
                var v = ov.swizzle.wywz;
                Assert.AreEqual("((-2-8)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-8)5)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec4<string>("5", "((11)5)", "((11)5)", null);
                var v = ov.swizzle.wywzx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((11)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((11)5)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(72)", null, "", "-9");
                var v = ov.swizzle.wywzy;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(6-4)", "((20)-6)", "((20)-6)", "(6-4)");
                var v = ov.swizzle.wywzz;
                Assert.AreEqual("(6-4)", v.x);
                Assert.AreEqual("((20)-6)", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual("((20)-6)", v.w);
                Assert.AreEqual("((20)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-4)", "(-11)", "((9-1)-8)", "((72)0)");
                var v = ov.swizzle.wywzw;
                Assert.AreEqual("((72)0)", v.x);
                Assert.AreEqual("(-11)", v.y);
                Assert.AreEqual("((72)0)", v.z);
                Assert.AreEqual("((9-1)-8)", v.w);
                Assert.AreEqual("((72)0)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, null, "((8-6)7)");
                var v = ov.swizzle.wyww;
                Assert.AreEqual("((8-6)7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-6)7)", v.z);
                Assert.AreEqual("((8-6)7)", v.w);
            }
            {
                var ov = new gvec4<string>("-4", "((42)7)", "((17)-1)", "-4");
                var v = ov.swizzle.wywwx;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((42)7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(58)", "(58)", "(-8-2)", "6");
                var v = ov.swizzle.wywwy;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-1)-3)", "(-4-4)", "-5", "((8-1)-3)");
                var v = ov.swizzle.wywwz;
                Assert.AreEqual("((8-1)-3)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("((8-1)-3)", v.z);
                Assert.AreEqual("((8-1)-3)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("", "((9-8)6)", "((96)6)", "(-3-5)");
                var v = ov.swizzle.wywww;
                Assert.AreEqual("(-3-5)", v.x);
                Assert.AreEqual("((9-8)6)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("(-3-5)", v.w);
                Assert.AreEqual("(-3-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((06)8)", "(1-7)", "((21)-8)", "((-45)-1)");
                var v = ov.swizzle.wz;
                Assert.AreEqual("((-45)-1)", v.x);
                Assert.AreEqual("((21)-8)", v.y);
            }
            {
                var ov = new gvec4<string>("5", "(1-5)", "7", "");
                var v = ov.swizzle.wzx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec4<string>("((-8-8)-2)", "5", "((-99)3)", "5");
                var v = ov.swizzle.wzxx;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-99)3)", v.y);
                Assert.AreEqual("((-8-8)-2)", v.z);
                Assert.AreEqual("((-8-8)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("", null, "((-6-1)2)", "");
                var v = ov.swizzle.wzxxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-6-1)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((-95)-7)", "", null);
                var v = ov.swizzle.wzxxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-95)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(04)", "", "((1-2)-8)", "(2-3)");
                var v = ov.swizzle.wzxxz;
                Assert.AreEqual("(2-3)", v.x);
                Assert.AreEqual("((1-2)-8)", v.y);
                Assert.AreEqual("(04)", v.z);
                Assert.AreEqual("(04)", v.w);
                Assert.AreEqual("((1-2)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(59)", "5", null, "");
                var v = ov.swizzle.wzxxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(59)", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-95)-7)", "((-4-4)3)", "((-4-4)3)", "(75)");
                var v = ov.swizzle.wzxy;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual("((-4-4)3)", v.y);
                Assert.AreEqual("((-95)-7)", v.z);
                Assert.AreEqual("((-4-4)3)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((98)0)", "(2-4)", "((98)0)");
                var v = ov.swizzle.wzxyx;
                Assert.AreEqual("((98)0)", v.x);
                Assert.AreEqual("(2-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((98)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "8", null);
                var v = ov.swizzle.wzxyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-86)", "(54)", "5", "((1-4)2)");
                var v = ov.swizzle.wzxyz;
                Assert.AreEqual("((1-4)2)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((13)-4)", "9", "9");
                var v = ov.swizzle.wzxyw;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((13)-4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)6)", "9", "((-2-5)6)", "(8-1)");
                var v = ov.swizzle.wzxz;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("((-2-5)6)", v.y);
                Assert.AreEqual("((-2-5)6)", v.z);
                Assert.AreEqual("((-2-5)6)", v.w);
            }
            {
                var ov = new gvec4<string>("((48)-3)", "((-55)8)", "(82)", "(82)");
                var v = ov.swizzle.wzxzx;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("(82)", v.y);
                Assert.AreEqual("((48)-3)", v.z);
                Assert.AreEqual("(82)", v.w);
                Assert.AreEqual("((48)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-36)-6)", "(-94)", "((-36)-6)", "8");
                var v = ov.swizzle.wzxzy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-36)-6)", v.y);
                Assert.AreEqual("((-36)-6)", v.z);
                Assert.AreEqual("((-36)-6)", v.w);
                Assert.AreEqual("(-94)", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)9)", "((-48)6)", null, "((9-9)5)");
                var v = ov.swizzle.wzxzz;
                Assert.AreEqual("((9-9)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-87)9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-54)-9)", "(-1-9)", "(-43)");
                var v = ov.swizzle.wzxzw;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-43)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-42)", "((58)-4)", "7");
                var v = ov.swizzle.wzxw;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((58)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("((16)-8)", "(-53)", "", "((16)-8)");
                var v = ov.swizzle.wzxwx;
                Assert.AreEqual("((16)-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((16)-8)", v.z);
                Assert.AreEqual("((16)-8)", v.w);
                Assert.AreEqual("((16)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((02)3)", "(-5-6)", "((02)3)", "((80)5)");
                var v = ov.swizzle.wzxwy;
                Assert.AreEqual("((80)5)", v.x);
                Assert.AreEqual("((02)3)", v.y);
                Assert.AreEqual("((02)3)", v.z);
                Assert.AreEqual("((80)5)", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-58)", "(-58)", "6", "(-71)");
                var v = ov.swizzle.wzxwz;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-58)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((2-5)-4)", "((94)1)", "", "((9-9)9)");
                var v = ov.swizzle.wzxww;
                Assert.AreEqual("((9-9)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((2-5)-4)", v.z);
                Assert.AreEqual("((9-9)9)", v.w);
                Assert.AreEqual("((9-9)9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-8-5)-3)", "(-2-5)", "-1");
                var v = ov.swizzle.wzy;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-2-5)", v.y);
                Assert.AreEqual("((-8-5)-3)", v.z);
            }
            {
                var ov = new gvec4<string>("((78)-3)", "(-68)", "6", "");
                var v = ov.swizzle.wzyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("((78)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "(8-2)", "((-6-5)6)", "(8-2)");
                var v = ov.swizzle.wzyxx;
                Assert.AreEqual("(8-2)", v.x);
                Assert.AreEqual("((-6-5)6)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((4-4)-4)", "((-3-3)6)", null);
                var v = ov.swizzle.wzyxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-3)6)", v.y);
                Assert.AreEqual("((4-4)-4)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("((4-4)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((2-3)-9)", "((2-3)-9)", "(91)", "(91)");
                var v = ov.swizzle.wzyxz;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("(91)", v.y);
                Assert.AreEqual("((2-3)-9)", v.z);
                Assert.AreEqual("((2-3)-9)", v.w);
                Assert.AreEqual("(91)", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-1)6)", null, "", "-5");
                var v = ov.swizzle.wzyxw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-7-1)6)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((-19)-2)", "(-1-4)", "((-68)9)");
                var v = ov.swizzle.wzyy;
                Assert.AreEqual("((-68)9)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("((-19)-2)", v.z);
                Assert.AreEqual("((-19)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(-5-2)", "3", null, "(-5-2)");
                var v = ov.swizzle.wzyyx;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "-8", "((-91)-4)");
                var v = ov.swizzle.wzyyy;
                Assert.AreEqual("((-91)-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-5-8)4)", "(3-6)", "((46)-4)", null);
                var v = ov.swizzle.wzyyz;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((46)-4)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("((46)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-63)8)", "((-63)8)", "(3-3)", "3");
                var v = ov.swizzle.wzyyw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(3-3)", v.y);
                Assert.AreEqual("((-63)8)", v.z);
                Assert.AreEqual("((-63)8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((7-6)-2)", "((-9-9)0)", "", "((7-6)-2)");
                var v = ov.swizzle.wzyz;
                Assert.AreEqual("((7-6)-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-9-9)0)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(04)", "-8", "(-43)", "(-91)");
                var v = ov.swizzle.wzyzx;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-43)", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-86)2)", "6", "((-58)2)");
                var v = ov.swizzle.wzyzy;
                Assert.AreEqual("((-58)2)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((-86)2)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((-86)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-6)", "((52)-6)", null, "-1");
                var v = ov.swizzle.wzyzz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((52)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-61)", "", "4");
                var v = ov.swizzle.wzyzw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-94)2)", "((86)0)", "(-4-2)", "-3");
                var v = ov.swizzle.wzyw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("((86)0)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("((8-8)-9)", "4", "4", null);
                var v = ov.swizzle.wzywx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((8-8)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(53)", "(61)", null);
                var v = ov.swizzle.wzywy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("(53)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(53)", v.v);
            }
            {
                var ov = new gvec4<string>("((-19)8)", "(76)", "(76)", "((-19)8)");
                var v = ov.swizzle.wzywz;
                Assert.AreEqual("((-19)8)", v.x);
                Assert.AreEqual("(76)", v.y);
                Assert.AreEqual("(76)", v.z);
                Assert.AreEqual("((-19)8)", v.w);
                Assert.AreEqual("(76)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", null, "", "(-5-1)");
                var v = ov.swizzle.wzyww;
                Assert.AreEqual("(-5-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual("(-5-1)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(-6-8)", "3", "((83)-3)");
                var v = ov.swizzle.wzz;
                Assert.AreEqual("((83)-3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
            }
            {
                var ov = new gvec4<string>("(-47)", "8", null, "(8-3)");
                var v = ov.swizzle.wzzx;
                Assert.AreEqual("(8-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-47)", v.w);
            }
            {
                var ov = new gvec4<string>("", "6", null, "((75)8)");
                var v = ov.swizzle.wzzxx;
                Assert.AreEqual("((75)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-23)", "-6", "-6", "(10)");
                var v = ov.swizzle.wzzxy;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(57)", "(-2-8)", "(0-1)", "5");
                var v = ov.swizzle.wzzxz;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual("(57)", v.w);
                Assert.AreEqual("(0-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-7-3)4)", "3", "-6");
                var v = ov.swizzle.wzzxw;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((67)9)", "(-17)", "(-17)", "(26)");
                var v = ov.swizzle.wzzy;
                Assert.AreEqual("(26)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(-17)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-8", "-3", "-6");
                var v = ov.swizzle.wzzyx;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-9)9)", "6", "6", null);
                var v = ov.swizzle.wzzyy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-6)-1)", "(-88)", "(-88)", "((23)-1)");
                var v = ov.swizzle.wzzyz;
                Assert.AreEqual("((23)-1)", v.x);
                Assert.AreEqual("(-88)", v.y);
                Assert.AreEqual("(-88)", v.z);
                Assert.AreEqual("(-88)", v.w);
                Assert.AreEqual("(-88)", v.v);
            }
            {
                var ov = new gvec4<string>("((12)6)", null, "2", "((97)-8)");
                var v = ov.swizzle.wzzyw;
                Assert.AreEqual("((97)-8)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((97)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-43)-5)", "-8", null, "");
                var v = ov.swizzle.wzzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((2-9)3)", "1", "(7-3)", "(3-6)");
                var v = ov.swizzle.wzzzx;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("((2-9)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-22)8)", "-4", "2", "(-1-9)");
                var v = ov.swizzle.wzzzy;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("7", "-5", "((9-7)-1)", "-7");
                var v = ov.swizzle.wzzzz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((9-7)-1)", v.y);
                Assert.AreEqual("((9-7)-1)", v.z);
                Assert.AreEqual("((9-7)-1)", v.w);
                Assert.AreEqual("((9-7)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-2)4)", "(6-5)", "((-2-1)-2)", "(6-5)");
                var v = ov.swizzle.wzzzw;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("((-2-1)-2)", v.y);
                Assert.AreEqual("((-2-1)-2)", v.z);
                Assert.AreEqual("((-2-1)-2)", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", null, null, "((19)-2)");
                var v = ov.swizzle.wzzw;
                Assert.AreEqual("((19)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((19)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-3)", null, "(8-3)", "((-6-5)-6)");
                var v = ov.swizzle.wzzwx;
                Assert.AreEqual("((-6-5)-6)", v.x);
                Assert.AreEqual("(8-3)", v.y);
                Assert.AreEqual("(8-3)", v.z);
                Assert.AreEqual("((-6-5)-6)", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-6)", "(4-6)", null, "((-88)2)");
                var v = ov.swizzle.wzzwy;
                Assert.AreEqual("((-88)2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-88)2)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-2)4)", "", null, "(75)");
                var v = ov.swizzle.wzzwz;
                Assert.AreEqual("(75)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(75)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-48)", "", "((66)4)");
                var v = ov.swizzle.wzzww;
                Assert.AreEqual("((66)4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((66)4)", v.w);
                Assert.AreEqual("((66)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-3)", null, "((-7-2)-9)", "(58)");
                var v = ov.swizzle.wzw;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("((-7-2)-9)", v.y);
                Assert.AreEqual("(58)", v.z);
            }
            {
                var ov = new gvec4<string>("-9", null, "8", "(-8-3)");
                var v = ov.swizzle.wzwx;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("-9", v.w);
            }
            {
                var ov = new gvec4<string>("(58)", null, "4", "");
                var v = ov.swizzle.wzwxx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("(58)", v.v);
            }
            {
                var ov = new gvec4<string>("((92)7)", "-4", "5", "8");
                var v = ov.swizzle.wzwxy;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((92)7)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(-34)", "((82)8)", "(-34)", "");
                var v = ov.swizzle.wzwxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-34)", v.w);
                Assert.AreEqual("(-34)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "5", "((-7-7)4)", "((-5-7)2)");
                var v = ov.swizzle.wzwxw;
                Assert.AreEqual("((-5-7)2)", v.x);
                Assert.AreEqual("((-7-7)4)", v.y);
                Assert.AreEqual("((-5-7)2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-5-7)2)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "9", "9", "");
                var v = ov.swizzle.wzwy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "((-8-7)1)", "", "((-8-7)1)");
                var v = ov.swizzle.wzwyx;
                Assert.AreEqual("((-8-7)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-7)1)", v.z);
                Assert.AreEqual("((-8-7)1)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((02)-1)", null, "", "3");
                var v = ov.swizzle.wzwyy;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "(-82)", "((94)-7)", "6");
                var v = ov.swizzle.wzwyz;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((94)-7)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-82)", v.w);
                Assert.AreEqual("((94)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "1", "(49)", "1");
                var v = ov.swizzle.wzwyw;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("", "9", "(-3-9)", "((-77)-3)");
                var v = ov.swizzle.wzwz;
                Assert.AreEqual("((-77)-3)", v.x);
                Assert.AreEqual("(-3-9)", v.y);
                Assert.AreEqual("((-77)-3)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
            }
            {
                var ov = new gvec4<string>("(-67)", "((-3-2)-3)", "", "(2-5)");
                var v = ov.swizzle.wzwzx;
                Assert.AreEqual("(2-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(2-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-67)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "6", "(-7-1)", null);
                var v = ov.swizzle.wzwzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-7-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-7-1)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("", "7", null, "-7");
                var v = ov.swizzle.wzwzz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "((-39)3)", "((6-3)1)", "(2-7)");
                var v = ov.swizzle.wzwzw;
                Assert.AreEqual("(2-7)", v.x);
                Assert.AreEqual("((6-3)1)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("((6-3)1)", v.w);
                Assert.AreEqual("(2-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-9", "((-5-7)-3)", "-1");
                var v = ov.swizzle.wzww;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-5-7)-3)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec4<string>("(07)", null, "0", "");
                var v = ov.swizzle.wzwwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((-12)-4)", "((-27)-4)", "(48)");
                var v = ov.swizzle.wzwwy;
                Assert.AreEqual("(48)", v.x);
                Assert.AreEqual("((-27)-4)", v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("(48)", v.w);
                Assert.AreEqual("((-12)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(23)", "", "((-5-3)-1)", "-1");
                var v = ov.swizzle.wzwwz;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-5-3)-1)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-5-3)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-47)", "((-26)-3)", "(-6-5)");
                var v = ov.swizzle.wzwww;
                Assert.AreEqual("(-6-5)", v.x);
                Assert.AreEqual("((-26)-3)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("(-6-5)", v.w);
                Assert.AreEqual("(-6-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-8)-2)", "(7-4)", "-4", null);
                var v = ov.swizzle.ww;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec4<string>("5", "(-82)", null, "4");
                var v = ov.swizzle.wwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("5", v.z);
            }
            {
                var ov = new gvec4<string>("-6", "(-31)", "((-22)6)", "((1-2)-9)");
                var v = ov.swizzle.wwxx;
                Assert.AreEqual("((1-2)-9)", v.x);
                Assert.AreEqual("((1-2)-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("((30)1)", "(-1-4)", "(-4-5)", "4");
                var v = ov.swizzle.wwxxx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((30)1)", v.z);
                Assert.AreEqual("((30)1)", v.w);
                Assert.AreEqual("((30)1)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "8", null, "((6-5)-3)");
                var v = ov.swizzle.wwxxy;
                Assert.AreEqual("((6-5)-3)", v.x);
                Assert.AreEqual("((6-5)-3)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-9)", "9", "(-49)", "(-4-9)");
                var v = ov.swizzle.wwxxz;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec4<string>("(40)", null, "(88)", "3");
                var v = ov.swizzle.wwxxw;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-2)", "(-3-9)", "9", "9");
                var v = ov.swizzle.wwxy;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-3-2)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
            }
            {
                var ov = new gvec4<string>("(70)", "((0-7)0)", "((50)-4)", "((0-7)0)");
                var v = ov.swizzle.wwxyx;
                Assert.AreEqual("((0-7)0)", v.x);
                Assert.AreEqual("((0-7)0)", v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("((0-7)0)", v.w);
                Assert.AreEqual("(70)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-24)", "(-24)", "(5-8)");
                var v = ov.swizzle.wwxyy;
                Assert.AreEqual("(5-8)", v.x);
                Assert.AreEqual("(5-8)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-24)", v.w);
                Assert.AreEqual("(-24)", v.v);
            }
            {
                var ov = new gvec4<string>("((-70)-9)", "(-5-8)", "-7", "((-9-5)1)");
                var v = ov.swizzle.wwxyz;
                Assert.AreEqual("((-9-5)1)", v.x);
                Assert.AreEqual("((-9-5)1)", v.y);
                Assert.AreEqual("((-70)-9)", v.z);
                Assert.AreEqual("(-5-8)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((-71)4)", "((-8-7)0)", "(5-3)", "(34)");
                var v = ov.swizzle.wwxyw;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("(34)", v.y);
                Assert.AreEqual("((-71)4)", v.z);
                Assert.AreEqual("((-8-7)0)", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((9-1)-9)", "1", "");
                var v = ov.swizzle.wwxz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("", "-7", "((-6-5)3)", "(-3-2)");
                var v = ov.swizzle.wwxzx;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-6-5)3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(69)", "(69)", "(1-3)", "((-8-3)-8)");
                var v = ov.swizzle.wwxzy;
                Assert.AreEqual("((-8-3)-8)", v.x);
                Assert.AreEqual("((-8-3)-8)", v.y);
                Assert.AreEqual("(69)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec4<string>("(-81)", "4", "(-29)", "(-81)");
                var v = ov.swizzle.wwxzz;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("(-81)", v.z);
                Assert.AreEqual("(-29)", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec4<string>("(-50)", null, "((-7-2)3)", "((1-4)-9)");
                var v = ov.swizzle.wwxzw;
                Assert.AreEqual("((1-4)-9)", v.x);
                Assert.AreEqual("((1-4)-9)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("((-7-2)3)", v.w);
                Assert.AreEqual("((1-4)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-3)", "1", "((-5-2)-9)", "((-5-2)-9)");
                var v = ov.swizzle.wwxw;
                Assert.AreEqual("((-5-2)-9)", v.x);
                Assert.AreEqual("((-5-2)-9)", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("((-5-2)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("-6", null, "9", "");
                var v = ov.swizzle.wwxwx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "-2", null);
                var v = ov.swizzle.wwxwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("7", "7", "((91)3)", "(-8-2)");
                var v = ov.swizzle.wwxwz;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("((91)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(85)", "(71)", "2", "(85)");
                var v = ov.swizzle.wwxww;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual("(85)", v.y);
                Assert.AreEqual("(85)", v.z);
                Assert.AreEqual("(85)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec4<string>("((92)1)", "((92)1)", "(-6-4)", "((-81)8)");
                var v = ov.swizzle.wwy;
                Assert.AreEqual("((-81)8)", v.x);
                Assert.AreEqual("((-81)8)", v.y);
                Assert.AreEqual("((92)1)", v.z);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "(-7-2)", "((34)-4)");
                var v = ov.swizzle.wwyx;
                Assert.AreEqual("((34)-4)", v.x);
                Assert.AreEqual("((34)-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec4<string>("((-2-7)-6)", "5", "(8-9)", "(-6-9)");
                var v = ov.swizzle.wwyxx;
                Assert.AreEqual("(-6-9)", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("((-2-7)-6)", v.w);
                Assert.AreEqual("((-2-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-40)5)", "(-7-8)", "(-58)");
                var v = ov.swizzle.wwyxy;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("((-40)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-40)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "2", "((1-6)0)", "-7");
                var v = ov.swizzle.wwyxz;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((1-6)0)", v.v);
            }
            {
                var ov = new gvec4<string>("(52)", "-4", "(36)", "");
                var v = ov.swizzle.wwyxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((2-6)8)", "((2-6)8)", "((2-6)8)", "(-3-8)");
                var v = ov.swizzle.wwyy;
                Assert.AreEqual("(-3-8)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("((2-6)8)", v.z);
                Assert.AreEqual("((2-6)8)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-79)0)", "(-15)", "((70)-6)");
                var v = ov.swizzle.wwyyx;
                Assert.AreEqual("((70)-6)", v.x);
                Assert.AreEqual("((70)-6)", v.y);
                Assert.AreEqual("((-79)0)", v.z);
                Assert.AreEqual("((-79)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((62)-5)", "(12)", "(10)", "((62)-5)");
                var v = ov.swizzle.wwyyy;
                Assert.AreEqual("((62)-5)", v.x);
                Assert.AreEqual("((62)-5)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(12)", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(44)", "((05)-4)", "(44)");
                var v = ov.swizzle.wwyyz;
                Assert.AreEqual("(44)", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("(44)", v.z);
                Assert.AreEqual("(44)", v.w);
                Assert.AreEqual("((05)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(54)", "((-9-6)-8)", null);
                var v = ov.swizzle.wwyyw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(0-6)", "(9-3)", "-3", "(28)");
                var v = ov.swizzle.wwyz;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("(28)", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("6", "3", "", "(66)");
                var v = ov.swizzle.wwyzx;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((-15)3)", "1", "(86)", "");
                var v = ov.swizzle.wwyzy;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(86)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(9-9)", "(65)", "7", "((43)1)");
                var v = ov.swizzle.wwyzz;
                Assert.AreEqual("((43)1)", v.x);
                Assert.AreEqual("((43)1)", v.y);
                Assert.AreEqual("(65)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>(null, "4", "", "4");
                var v = ov.swizzle.wwyzw;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-4", null, "-5");
                var v = ov.swizzle.wwyw;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("6", "((-64)6)", "7", "-3");
                var v = ov.swizzle.wwywx;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-64)6)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(3-6)", "((-7-4)-6)", "((-7-4)-6)");
                var v = ov.swizzle.wwywy;
                Assert.AreEqual("((-7-4)-6)", v.x);
                Assert.AreEqual("((-7-4)-6)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("((-7-4)-6)", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-9)8)", "(-8-4)", "((76)-7)", "((6-4)-1)");
                var v = ov.swizzle.wwywz;
                Assert.AreEqual("((6-4)-1)", v.x);
                Assert.AreEqual("((6-4)-1)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("((6-4)-1)", v.w);
                Assert.AreEqual("((76)-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((5-6)1)", "((3-9)6)", "((-25)-1)");
                var v = ov.swizzle.wwyww;
                Assert.AreEqual("((-25)-1)", v.x);
                Assert.AreEqual("((-25)-1)", v.y);
                Assert.AreEqual("((5-6)1)", v.z);
                Assert.AreEqual("((-25)-1)", v.w);
                Assert.AreEqual("((-25)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((-73)5)", "((-73)5)");
                var v = ov.swizzle.wwz;
                Assert.AreEqual("((-73)5)", v.x);
                Assert.AreEqual("((-73)5)", v.y);
                Assert.AreEqual("((-73)5)", v.z);
            }
            {
                var ov = new gvec4<string>("0", "(-4-9)", "((-8-1)1)", "(-4-9)");
                var v = ov.swizzle.wwzx;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("((-8-1)1)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("(28)", "9", "", null);
                var v = ov.swizzle.wwzxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(28)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-24)8)", null, "((0-9)-6)");
                var v = ov.swizzle.wwzxy;
                Assert.AreEqual("((0-9)-6)", v.x);
                Assert.AreEqual("((0-9)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-24)8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "7", "(-54)", "7");
                var v = ov.swizzle.wwzxz;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-54)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((0-4)-3)", null, "");
                var v = ov.swizzle.wwzxw;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-29)", "-4", "((-5-7)-5)", "((-5-7)-5)");
                var v = ov.swizzle.wwzy;
                Assert.AreEqual("((-5-7)-5)", v.x);
                Assert.AreEqual("((-5-7)-5)", v.y);
                Assert.AreEqual("((-5-7)-5)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec4<string>("(9-1)", "((37)-8)", "(57)", "");
                var v = ov.swizzle.wwzyx;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(57)", v.z);
                Assert.AreEqual("((37)-8)", v.w);
                Assert.AreEqual("(9-1)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(46)", "-9", "4");
                var v = ov.swizzle.wwzyy;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(46)", v.w);
                Assert.AreEqual("(46)", v.v);
            }
            {
                var ov = new gvec4<string>("(-73)", "((-4-5)-3)", "(-73)", "((03)8)");
                var v = ov.swizzle.wwzyz;
                Assert.AreEqual("((03)8)", v.x);
                Assert.AreEqual("((03)8)", v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual("((-4-5)-3)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec4<string>("((-29)-9)", "(59)", "((-29)-9)", "(02)");
                var v = ov.swizzle.wwzyw;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("((-29)-9)", v.z);
                Assert.AreEqual("(59)", v.w);
                Assert.AreEqual("(02)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "(-1-2)", "((5-3)2)", "8");
                var v = ov.swizzle.wwzz;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((5-3)2)", v.z);
                Assert.AreEqual("((5-3)2)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(5-8)", "(-93)", "3");
                var v = ov.swizzle.wwzzx;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-93)", v.z);
                Assert.AreEqual("(-93)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-4-2)3)", "(-8-6)", "((-67)-7)", "(-32)");
                var v = ov.swizzle.wwzzy;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("((-67)-7)", v.z);
                Assert.AreEqual("((-67)-7)", v.w);
                Assert.AreEqual("(-8-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-19)-9)", null, null, "(-39)");
                var v = ov.swizzle.wwzzz;
                Assert.AreEqual("(-39)", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-11)1)", "6", "((95)-2)");
                var v = ov.swizzle.wwzzw;
                Assert.AreEqual("((95)-2)", v.x);
                Assert.AreEqual("((95)-2)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("((95)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((1-7)-7)", "", "((1-7)-7)");
                var v = ov.swizzle.wwzw;
                Assert.AreEqual("((1-7)-7)", v.x);
                Assert.AreEqual("((1-7)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((1-7)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "-2", "0", "((1-1)-4)");
                var v = ov.swizzle.wwzwx;
                Assert.AreEqual("((1-1)-4)", v.x);
                Assert.AreEqual("((1-1)-4)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((1-1)-4)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-4-9)8)", null, "-6");
                var v = ov.swizzle.wwzwy;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((-4-9)8)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((73)6)", "((-2-9)8)", "");
                var v = ov.swizzle.wwzwz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-2-9)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-9)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-6)", "", "((-6-3)1)", "7");
                var v = ov.swizzle.wwzww;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-6-3)1)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(91)", "", "((-3-4)-8)");
                var v = ov.swizzle.www;
                Assert.AreEqual("((-3-4)-8)", v.x);
                Assert.AreEqual("((-3-4)-8)", v.y);
                Assert.AreEqual("((-3-4)-8)", v.z);
            }
            {
                var ov = new gvec4<string>("((40)5)", "-3", "", "(55)");
                var v = ov.swizzle.wwwx;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("((40)5)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "(-76)", "-1", null);
                var v = ov.swizzle.wwwxx;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("0", "(96)", "9", null);
                var v = ov.swizzle.wwwxy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "-6", null, "-6");
                var v = ov.swizzle.wwwxz;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-8-6)-7)", "((-8-5)-1)", "((-8-5)-1)", "((-8-6)-7)");
                var v = ov.swizzle.wwwxw;
                Assert.AreEqual("((-8-6)-7)", v.x);
                Assert.AreEqual("((-8-6)-7)", v.y);
                Assert.AreEqual("((-8-6)-7)", v.z);
                Assert.AreEqual("((-8-6)-7)", v.w);
                Assert.AreEqual("((-8-6)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-30)4)", "0", "(-5-2)", null);
                var v = ov.swizzle.wwwy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("3", "((1-7)-7)", "((3-2)3)", "(-96)");
                var v = ov.swizzle.wwwyx;
                Assert.AreEqual("(-96)", v.x);
                Assert.AreEqual("(-96)", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual("((1-7)-7)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((82)8)", "((82)8)", "(74)", "((-1-1)4)");
                var v = ov.swizzle.wwwyy;
                Assert.AreEqual("((-1-1)4)", v.x);
                Assert.AreEqual("((-1-1)4)", v.y);
                Assert.AreEqual("((-1-1)4)", v.z);
                Assert.AreEqual("((82)8)", v.w);
                Assert.AreEqual("((82)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-49)", "(3-8)", "-6", "((-5-2)-9)");
                var v = ov.swizzle.wwwyz;
                Assert.AreEqual("((-5-2)-9)", v.x);
                Assert.AreEqual("((-5-2)-9)", v.y);
                Assert.AreEqual("((-5-2)-9)", v.z);
                Assert.AreEqual("(3-8)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((9-4)0)", "0", "-3", "-3");
                var v = ov.swizzle.wwwyw;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(7-7)", "((01)-8)", "(5-6)", "((01)-8)");
                var v = ov.swizzle.wwwz;
                Assert.AreEqual("((01)-8)", v.x);
                Assert.AreEqual("((01)-8)", v.y);
                Assert.AreEqual("((01)-8)", v.z);
                Assert.AreEqual("(5-6)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-6)", "2", "4", "(8-6)");
                var v = ov.swizzle.wwwzx;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("(8-6)", v.y);
                Assert.AreEqual("(8-6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(8-6)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-9-1)1)", "", null);
                var v = ov.swizzle.wwwzy;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-9-1)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(44)", null, "0", "");
                var v = ov.swizzle.wwwzz;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("", "1", "(1-3)", null);
                var v = ov.swizzle.wwwzw;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-9", null, "", "");
                var v = ov.swizzle.wwww;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("", "-8", null, "4");
                var v = ov.swizzle.wwwwx;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("1", "2", "1", "2");
                var v = ov.swizzle.wwwwy;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("-1", null, "(-6-8)", "((-46)9)");
                var v = ov.swizzle.wwwwz;
                Assert.AreEqual("((-46)9)", v.x);
                Assert.AreEqual("((-46)9)", v.y);
                Assert.AreEqual("((-46)9)", v.z);
                Assert.AreEqual("((-46)9)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "-3", "((-10)-2)", "-3");
                var v = ov.swizzle.wwwww;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
        }

        [Test]
        public void rgbaklpq()
        {
            {
                var ov = new gvec4<string>("(-3-7)", null, "(-3-7)", "((6-8)8)");
                var v = ov.swizzle.rr;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
            }
            {
                var ov = new gvec4<string>("((59)7)", "(-3-3)", "9", "(98)");
                var v = ov.swizzle.rrr;
                Assert.AreEqual("((59)7)", v.x);
                Assert.AreEqual("((59)7)", v.y);
                Assert.AreEqual("((59)7)", v.z);
            }
            {
                var ov = new gvec4<string>("(-9-2)", "1", "((15)-6)", "((78)2)");
                var v = ov.swizzle.rrrr;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual("(-9-2)", v.z);
                Assert.AreEqual("(-9-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(-1-9)", "((9-1)-3)", null, "-8");
                var v = ov.swizzle.rrrrr;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((6-8)1)", "7", "(77)");
                var v = ov.swizzle.rrrrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((6-8)1)", v.v);
            }
            {
                var ov = new gvec4<string>("((7-2)-6)", "(3-8)", "-2", "");
                var v = ov.swizzle.rrrrb;
                Assert.AreEqual("((7-2)-6)", v.x);
                Assert.AreEqual("((7-2)-6)", v.y);
                Assert.AreEqual("((7-2)-6)", v.z);
                Assert.AreEqual("((7-2)-6)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(68)", "9", "9");
                var v = ov.swizzle.rrrra;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((98)-5)", "(4-4)", "8", "(4-4)");
                var v = ov.swizzle.rrrg;
                Assert.AreEqual("((98)-5)", v.x);
                Assert.AreEqual("((98)-5)", v.y);
                Assert.AreEqual("((98)-5)", v.z);
                Assert.AreEqual("(4-4)", v.w);
            }
            {
                var ov = new gvec4<string>("(-2-6)", "((-8-4)-3)", "(-91)", "(1-6)");
                var v = ov.swizzle.rrrgr;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual("(-2-6)", v.y);
                Assert.AreEqual("(-2-6)", v.z);
                Assert.AreEqual("((-8-4)-3)", v.w);
                Assert.AreEqual("(-2-6)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "4", "(-7-3)", "");
                var v = ov.swizzle.rrrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("5", "", "((62)6)", "-9");
                var v = ov.swizzle.rrrgb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((62)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-79)-9)", "(-27)", "-4", "-4");
                var v = ov.swizzle.rrrga;
                Assert.AreEqual("((-79)-9)", v.x);
                Assert.AreEqual("((-79)-9)", v.y);
                Assert.AreEqual("((-79)-9)", v.z);
                Assert.AreEqual("(-27)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(-34)", "((-43)-9)", null, null);
                var v = ov.swizzle.rrrb;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("(-34)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-6", null, "((-3-1)-1)", "-9");
                var v = ov.swizzle.rrrbr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-3-1)-1)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((92)9)", "(-23)", "-4");
                var v = ov.swizzle.rrrbg;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-23)", v.w);
                Assert.AreEqual("((92)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(66)", null, null, null);
                var v = ov.swizzle.rrrbb;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-88)4)", null, "");
                var v = ov.swizzle.rrrba;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-8)", "((-9-7)-5)", "", "-1");
                var v = ov.swizzle.rrra;
                Assert.AreEqual("(-3-8)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(-3-8)", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "-1", null, "");
                var v = ov.swizzle.rrrar;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-3-8)-1)", "4", "-4");
                var v = ov.swizzle.rrrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("((-3-8)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-4", "7", "(70)");
                var v = ov.swizzle.rrrab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-23)", null, "6", null);
                var v = ov.swizzle.rrraa;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("(-23)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", "0", "");
                var v = ov.swizzle.rrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
            }
            {
                var ov = new gvec4<string>("-7", "(3-8)", "-6", "(3-8)");
                var v = ov.swizzle.rrgr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((04)-3)", "", "4");
                var v = ov.swizzle.rrgrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((04)-3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((27)5)", "((-7-2)-3)", "(-26)", "((-26)-7)");
                var v = ov.swizzle.rrgrg;
                Assert.AreEqual("((27)5)", v.x);
                Assert.AreEqual("((27)5)", v.y);
                Assert.AreEqual("((-7-2)-3)", v.z);
                Assert.AreEqual("((27)5)", v.w);
                Assert.AreEqual("((-7-2)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((44)3)", "7", "");
                var v = ov.swizzle.rrgrb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((44)3)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-59)-2)", "(4-3)", null);
                var v = ov.swizzle.rrgra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-59)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-23)", "(-30)", "((-78)0)", "((-78)0)");
                var v = ov.swizzle.rrgg;
                Assert.AreEqual("(-23)", v.x);
                Assert.AreEqual("(-23)", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("(-30)", v.w);
            }
            {
                var ov = new gvec4<string>("((40)-5)", "1", "(7-2)", "(-28)");
                var v = ov.swizzle.rrggr;
                Assert.AreEqual("((40)-5)", v.x);
                Assert.AreEqual("((40)-5)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((40)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "3", "-2", "(8-6)");
                var v = ov.swizzle.rrggg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((5-2)-2)", "((5-2)-2)", "");
                var v = ov.swizzle.rrggb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-2)-2)", v.z);
                Assert.AreEqual("((5-2)-2)", v.w);
                Assert.AreEqual("((5-2)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-1", "-1", "-1");
                var v = ov.swizzle.rrgga;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-7)", "((68)-3)", "(-84)", "6");
                var v = ov.swizzle.rrgb;
                Assert.AreEqual("(-3-7)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("((68)-3)", v.z);
                Assert.AreEqual("(-84)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((71)5)", "((71)5)", "((9-4)-2)");
                var v = ov.swizzle.rrgbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((71)5)", v.z);
                Assert.AreEqual("((71)5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-7", "(-3-9)", "-7", "");
                var v = ov.swizzle.rrgbg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-3-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(-49)", "((4-6)-6)");
                var v = ov.swizzle.rrgbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-49)", v.w);
                Assert.AreEqual("(-49)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-3)", "((-18)-5)", "((-18)-5)", "(-73)");
                var v = ov.swizzle.rrgba;
                Assert.AreEqual("(6-3)", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("((-18)-5)", v.z);
                Assert.AreEqual("((-18)-5)", v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-5)", "6", null, "(-13)");
                var v = ov.swizzle.rrga;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-13)", v.w);
            }
            {
                var ov = new gvec4<string>("(-6-6)", "", "0", "(-5-4)");
                var v = ov.swizzle.rrgar;
                Assert.AreEqual("(-6-6)", v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-4)", v.w);
                Assert.AreEqual("(-6-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-8)3)", "((-2-8)3)", "(0-7)", null);
                var v = ov.swizzle.rrgag;
                Assert.AreEqual("((-2-8)3)", v.x);
                Assert.AreEqual("((-2-8)3)", v.y);
                Assert.AreEqual("((-2-8)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-2-8)3)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "4", "", "(-32)");
                var v = ov.swizzle.rrgab;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-32)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(6-8)", "1", "", "7");
                var v = ov.swizzle.rrgaa;
                Assert.AreEqual("(6-8)", v.x);
                Assert.AreEqual("(6-8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-63)", "(2-4)", "-7", "-7");
                var v = ov.swizzle.rrb;
                Assert.AreEqual("(-63)", v.x);
                Assert.AreEqual("(-63)", v.y);
                Assert.AreEqual("-7", v.z);
            }
            {
                var ov = new gvec4<string>("(-44)", null, null, "4");
                var v = ov.swizzle.rrbr;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-44)", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-8)4)", "(18)", "(3-8)", "-1");
                var v = ov.swizzle.rrbrr;
                Assert.AreEqual("((-3-8)4)", v.x);
                Assert.AreEqual("((-3-8)4)", v.y);
                Assert.AreEqual("(3-8)", v.z);
                Assert.AreEqual("((-3-8)4)", v.w);
                Assert.AreEqual("((-3-8)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(96)", "((-5-4)7)", "-3", "5");
                var v = ov.swizzle.rrbrg;
                Assert.AreEqual("(96)", v.x);
                Assert.AreEqual("(96)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("((-5-4)7)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-32)-5)", "(-4-5)", "((-32)-5)");
                var v = ov.swizzle.rrbrb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(-4-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-4)4)", "", "(-87)", "((3-4)4)");
                var v = ov.swizzle.rrbra;
                Assert.AreEqual("((3-4)4)", v.x);
                Assert.AreEqual("((3-4)4)", v.y);
                Assert.AreEqual("(-87)", v.z);
                Assert.AreEqual("((3-4)4)", v.w);
                Assert.AreEqual("((3-4)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "9", "(4-4)", "((32)9)");
                var v = ov.swizzle.rrbg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(4-4)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>(null, "-9", "5", "(50)");
                var v = ov.swizzle.rrbgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "((-2-6)-8)", "2", "((7-2)9)");
                var v = ov.swizzle.rrbgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-2-6)-8)", v.w);
                Assert.AreEqual("((-2-6)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-42)", "", "((3-2)9)");
                var v = ov.swizzle.rrbgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-42)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-62)1)", "((8-1)-4)", "(-5-3)", "-9");
                var v = ov.swizzle.rrbga;
                Assert.AreEqual("((-62)1)", v.x);
                Assert.AreEqual("((-62)1)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("((8-1)-4)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((-61)8)", "((-61)8)", "((-5-2)-2)");
                var v = ov.swizzle.rrbb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-61)8)", v.z);
                Assert.AreEqual("((-61)8)", v.w);
            }
            {
                var ov = new gvec4<string>("(-50)", "(8-8)", null, "5");
                var v = ov.swizzle.rrbbr;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec4<string>("((6-1)-6)", "(9-6)", "((69)3)", "(9-6)");
                var v = ov.swizzle.rrbbg;
                Assert.AreEqual("((6-1)-6)", v.x);
                Assert.AreEqual("((6-1)-6)", v.y);
                Assert.AreEqual("((69)3)", v.z);
                Assert.AreEqual("((69)3)", v.w);
                Assert.AreEqual("(9-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(58)", "(71)", null, "(-60)");
                var v = ov.swizzle.rrbbb;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-6", "-8", "9", "9");
                var v = ov.swizzle.rrbba;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "((-5-7)0)", "((-5-7)0)", "5");
                var v = ov.swizzle.rrba;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("((-5-7)0)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("4", "((8-9)7)", "", null);
                var v = ov.swizzle.rrbar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "-8", "-7", null);
                var v = ov.swizzle.rrbag;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-7)", "", null, "(00)");
                var v = ov.swizzle.rrbab;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((8-4)2)", "-6", "((8-4)2)", "8");
                var v = ov.swizzle.rrbaa;
                Assert.AreEqual("((8-4)2)", v.x);
                Assert.AreEqual("((8-4)2)", v.y);
                Assert.AreEqual("((8-4)2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((2-2)2)", "", "9", "-9");
                var v = ov.swizzle.rra;
                Assert.AreEqual("((2-2)2)", v.x);
                Assert.AreEqual("((2-2)2)", v.y);
                Assert.AreEqual("-9", v.z);
            }
            {
                var ov = new gvec4<string>(null, "((-9-1)-3)", "", "((-26)-5)");
                var v = ov.swizzle.rrar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-26)-5)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("", "7", "(-87)", "(-14)");
                var v = ov.swizzle.rrarr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-14)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-47)1)", "((-69)-6)", null, "(72)");
                var v = ov.swizzle.rrarg;
                Assert.AreEqual("((-47)1)", v.x);
                Assert.AreEqual("((-47)1)", v.y);
                Assert.AreEqual("(72)", v.z);
                Assert.AreEqual("((-47)1)", v.w);
                Assert.AreEqual("((-69)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "-5", "(04)", "((7-6)9)");
                var v = ov.swizzle.rrarb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("((7-6)9)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-6)", "", "", "-9");
                var v = ov.swizzle.rrara;
                Assert.AreEqual("(1-6)", v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((39)-7)", "", "(5-2)", "(3-3)");
                var v = ov.swizzle.rrag;
                Assert.AreEqual("((39)-7)", v.x);
                Assert.AreEqual("((39)-7)", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>(null, "4", "(11)", "((9-3)6)");
                var v = ov.swizzle.rragr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((9-3)6)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "((25)-5)", "-9", "6");
                var v = ov.swizzle.rragg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((25)-5)", v.w);
                Assert.AreEqual("((25)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-52)", "(-52)", "2", "5");
                var v = ov.swizzle.rragb;
                Assert.AreEqual("(-52)", v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-52)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((96)9)", null, "((-82)-9)", "");
                var v = ov.swizzle.rraga;
                Assert.AreEqual("((96)9)", v.x);
                Assert.AreEqual("((96)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-29)", "-2", null);
                var v = ov.swizzle.rrab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec4<string>("(-61)", "(-61)", "((9-1)-7)", "(-61)");
                var v = ov.swizzle.rrabr;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("((9-1)-7)", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec4<string>("(12)", "(-2-9)", "(-55)", "((-48)8)");
                var v = ov.swizzle.rrabg;
                Assert.AreEqual("(12)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("((-48)8)", v.z);
                Assert.AreEqual("(-55)", v.w);
                Assert.AreEqual("(-2-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-1)4)", "(90)", "-6", "-2");
                var v = ov.swizzle.rrabb;
                Assert.AreEqual("((-8-1)4)", v.x);
                Assert.AreEqual("((-8-1)4)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(-71)", "9", "7", "((00)9)");
                var v = ov.swizzle.rraba;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("((00)9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((00)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-48)", "((-5-3)9)", null, "(0-2)");
                var v = ov.swizzle.rraa;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("(-48)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("(0-2)", v.w);
            }
            {
                var ov = new gvec4<string>("3", "3", "8", "((93)-8)");
                var v = ov.swizzle.rraar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((93)-8)", v.z);
                Assert.AreEqual("((93)-8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(1-5)", "-5", "(-8-8)", "-5");
                var v = ov.swizzle.rraag;
                Assert.AreEqual("(1-5)", v.x);
                Assert.AreEqual("(1-5)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-8-8)", null, "(-8-8)");
                var v = ov.swizzle.rraab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("(-8-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-27)-1)", "((23)-1)", "0", "(-38)");
                var v = ov.swizzle.rraaa;
                Assert.AreEqual("((-27)-1)", v.x);
                Assert.AreEqual("((-27)-1)", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-38)", v.w);
                Assert.AreEqual("(-38)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-8)", "9", "(-10)", "-9");
                var v = ov.swizzle.rg;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("9", v.y);
            }
            {
                var ov = new gvec4<string>("((17)-4)", "((17)-4)", "(-2-8)", "((-47)-6)");
                var v = ov.swizzle.rgr;
                Assert.AreEqual("((17)-4)", v.x);
                Assert.AreEqual("((17)-4)", v.y);
                Assert.AreEqual("((17)-4)", v.z);
            }
            {
                var ov = new gvec4<string>("((31)5)", "((31)5)", "", null);
                var v = ov.swizzle.rgrr;
                Assert.AreEqual("((31)5)", v.x);
                Assert.AreEqual("((31)5)", v.y);
                Assert.AreEqual("((31)5)", v.z);
                Assert.AreEqual("((31)5)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(03)", "((88)2)", null);
                var v = ov.swizzle.rgrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-9-9)", "((34)7)", "3", "(-9-9)");
                var v = ov.swizzle.rgrrg;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("((34)7)", v.y);
                Assert.AreEqual("(-9-9)", v.z);
                Assert.AreEqual("(-9-9)", v.w);
                Assert.AreEqual("((34)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-43)", "", "((6-4)0)", "-8");
                var v = ov.swizzle.rgrrb;
                Assert.AreEqual("(-43)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("(-43)", v.w);
                Assert.AreEqual("((6-4)0)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-3", "(5-8)", "((0-5)1)");
                var v = ov.swizzle.rgrra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((0-5)1)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(58)", "1", "(81)");
                var v = ov.swizzle.rgrg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(58)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(58)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "-7", "(-4-9)", "(30)");
                var v = ov.swizzle.rgrgr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "9", "", "((33)-7)");
                var v = ov.swizzle.rgrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("3", "3", null, "((-72)5)");
                var v = ov.swizzle.rgrgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(10)", "", "(02)", "((09)-6)");
                var v = ov.swizzle.rgrga;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((09)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(28)", "4", "((-7-8)2)", "(28)");
                var v = ov.swizzle.rgrb;
                Assert.AreEqual("(28)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(28)", v.z);
                Assert.AreEqual("((-7-8)2)", v.w);
            }
            {
                var ov = new gvec4<string>("-6", null, "(-38)", "-5");
                var v = ov.swizzle.rgrbr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(-38)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-8)", "3", "(-89)", "(-89)");
                var v = ov.swizzle.rgrbg;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("(-89)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((68)-6)", "-4", "3");
                var v = ov.swizzle.rgrbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((68)-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(-50)", "(2-8)", "(-50)");
                var v = ov.swizzle.rgrba;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(2-8)", v.w);
                Assert.AreEqual("(-50)", v.v);
            }
            {
                var ov = new gvec4<string>("", "1", "((-7-2)-9)", "");
                var v = ov.swizzle.rgra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("", "", null, "6");
                var v = ov.swizzle.rgrar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "((-62)-1)", "-4");
                var v = ov.swizzle.rgrag;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-60)", "2", "((-11)-3)", "(87)");
                var v = ov.swizzle.rgrab;
                Assert.AreEqual("(-60)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-60)", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("((-11)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-6-5)", "((2-9)-9)", "(0-8)");
                var v = ov.swizzle.rgraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-6-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((4-4)-7)", "((-8-2)0)", null);
                var v = ov.swizzle.rgg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((4-4)-7)", v.y);
                Assert.AreEqual("((4-4)-7)", v.z);
            }
            {
                var ov = new gvec4<string>("-5", "(-3-5)", "(-3-5)", "((-54)5)");
                var v = ov.swizzle.rggr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-3-5)", v.y);
                Assert.AreEqual("(-3-5)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((74)7)", "", "-7");
                var v = ov.swizzle.rggrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((74)7)", v.y);
                Assert.AreEqual("((74)7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-92)", "", "(2-6)", null);
                var v = ov.swizzle.rggrg;
                Assert.AreEqual("(-92)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-92)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-6)", null, "((62)2)", "-1");
                var v = ov.swizzle.rggrb;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual("((62)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((47)0)", "(47)", "", "(-71)");
                var v = ov.swizzle.rggra;
                Assert.AreEqual("((47)0)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("((47)0)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec4<string>("((72)-5)", "2", null, "5");
                var v = ov.swizzle.rggg;
                Assert.AreEqual("((72)-5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec4<string>("((-36)-6)", "((-44)0)", "", "(8-3)");
                var v = ov.swizzle.rgggr;
                Assert.AreEqual("((-36)-6)", v.x);
                Assert.AreEqual("((-44)0)", v.y);
                Assert.AreEqual("((-44)0)", v.z);
                Assert.AreEqual("((-44)0)", v.w);
                Assert.AreEqual("((-36)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-7)", "((95)4)", "(-8-7)", "0");
                var v = ov.swizzle.rgggg;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("((95)4)", v.y);
                Assert.AreEqual("((95)4)", v.z);
                Assert.AreEqual("((95)4)", v.w);
                Assert.AreEqual("((95)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((98)-7)", "3", "3", "((-2-2)5)");
                var v = ov.swizzle.rgggb;
                Assert.AreEqual("((98)-7)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(-70)", null, "-9", "-9");
                var v = ov.swizzle.rggga;
                Assert.AreEqual("(-70)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-3)-2)", "-3", "(-18)", "(-18)");
                var v = ov.swizzle.rggb;
                Assert.AreEqual("((-7-3)-2)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-18)", v.w);
            }
            {
                var ov = new gvec4<string>("6", "4", "4", null);
                var v = ov.swizzle.rggbr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-17)-5)", "1", "((52)6)");
                var v = ov.swizzle.rggbg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-17)-5)", v.y);
                Assert.AreEqual("((-17)-5)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-17)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(-55)", "((74)-2)");
                var v = ov.swizzle.rggbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-55)", v.w);
                Assert.AreEqual("(-55)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "", "(-8-2)", "(88)");
                var v = ov.swizzle.rggba;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "-3", null);
                var v = ov.swizzle.rgga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-4", null, "(-4-8)", "-4");
                var v = ov.swizzle.rggar;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((03)-8)", "(64)", "((7-9)9)", "((7-9)9)");
                var v = ov.swizzle.rggag;
                Assert.AreEqual("((03)-8)", v.x);
                Assert.AreEqual("(64)", v.y);
                Assert.AreEqual("(64)", v.z);
                Assert.AreEqual("((7-9)9)", v.w);
                Assert.AreEqual("(64)", v.v);
            }
            {
                var ov = new gvec4<string>("(66)", "(66)", "", "((-8-7)-5)");
                var v = ov.swizzle.rggab;
                Assert.AreEqual("(66)", v.x);
                Assert.AreEqual("(66)", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("((-8-7)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "3", "(52)", "((4-3)1)");
                var v = ov.swizzle.rggaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((4-3)1)", v.w);
                Assert.AreEqual("((4-3)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-1)", "(-6-9)", "(49)", "2");
                var v = ov.swizzle.rgb;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("(-6-9)", v.y);
                Assert.AreEqual("(49)", v.z);
            }
            {
                var ov = new gvec4<string>("", "(67)", "-9", "(67)");
                var v = ov.swizzle.rgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(-6-8)", "", "((02)7)", "-9");
                var v = ov.swizzle.rgbrr;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((02)7)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("(-6-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-17)", "(-17)", "-2", "2");
                var v = ov.swizzle.rgbrg;
                Assert.AreEqual("(-17)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec4<string>("((-15)0)", "9", "(-30)", "");
                var v = ov.swizzle.rgbrb;
                Assert.AreEqual("((-15)0)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-30)", v.z);
                Assert.AreEqual("((-15)0)", v.w);
                Assert.AreEqual("(-30)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-6", "((61)-2)", "(60)");
                var v = ov.swizzle.rgbra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((61)-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec4<string>("(81)", "(81)", "(81)", "2");
                var v = ov.swizzle.rgbg;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("(81)", v.w);
            }
            {
                var ov = new gvec4<string>("(-8-3)", "", "((22)-4)", "-4");
                var v = ov.swizzle.rgbgr;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((22)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-8-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-48)", "((-30)-9)", "", "8");
                var v = ov.swizzle.rgbgg;
                Assert.AreEqual("(-48)", v.x);
                Assert.AreEqual("((-30)-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-30)-9)", v.w);
                Assert.AreEqual("((-30)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((5-8)-7)", "((-98)-7)", "8");
                var v = ov.swizzle.rgbgb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((5-8)-7)", v.y);
                Assert.AreEqual("((-98)-7)", v.z);
                Assert.AreEqual("((5-8)-7)", v.w);
                Assert.AreEqual("((-98)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(-3-6)", "((-50)3)", "3");
                var v = ov.swizzle.rgbga;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-3-6)", v.y);
                Assert.AreEqual("((-50)3)", v.z);
                Assert.AreEqual("(-3-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((4-6)-3)", "((02)-2)", "(-38)", "(-38)");
                var v = ov.swizzle.rgbb;
                Assert.AreEqual("((4-6)-3)", v.x);
                Assert.AreEqual("((02)-2)", v.y);
                Assert.AreEqual("(-38)", v.z);
                Assert.AreEqual("(-38)", v.w);
            }
            {
                var ov = new gvec4<string>("((1-7)5)", "((-7-5)-5)", "(40)", "1");
                var v = ov.swizzle.rgbbr;
                Assert.AreEqual("((1-7)5)", v.x);
                Assert.AreEqual("((-7-5)-5)", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual("((1-7)5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(8-9)", "-4", "-4");
                var v = ov.swizzle.rgbbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(8-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(99)", "((98)2)", "((-1-4)2)", "(-9-4)");
                var v = ov.swizzle.rgbbb;
                Assert.AreEqual("(99)", v.x);
                Assert.AreEqual("((98)2)", v.y);
                Assert.AreEqual("((-1-4)2)", v.z);
                Assert.AreEqual("((-1-4)2)", v.w);
                Assert.AreEqual("((-1-4)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-6)-1)", "((75)-2)", "2", "2");
                var v = ov.swizzle.rgbba;
                Assert.AreEqual("((1-6)-1)", v.x);
                Assert.AreEqual("((75)-2)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-3)", "((-16)3)", "-2", "(-3-3)");
                var v = ov.swizzle.rgba;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("((-16)3)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-3-3)", v.w);
            }
            {
                var ov = new gvec4<string>("7", null, "(4-6)", "7");
                var v = ov.swizzle.rgbar;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(4-6)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(9-6)", "-3", "6", "6");
                var v = ov.swizzle.rgbag;
                Assert.AreEqual("(9-6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-8)-4)", "(-7-9)", "((-4-8)-4)", "(04)");
                var v = ov.swizzle.rgbab;
                Assert.AreEqual("((-4-8)-4)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("((-4-8)-4)", v.z);
                Assert.AreEqual("(04)", v.w);
                Assert.AreEqual("((-4-8)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-17)-2)", "(-6-5)", "((-17)-2)");
                var v = ov.swizzle.rgbaa;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-17)-2)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("((-17)-2)", v.w);
                Assert.AreEqual("((-17)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-97)", "", "(-97)", null);
                var v = ov.swizzle.rga;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("(33)", "(61)", "((09)-8)", "(3-6)");
                var v = ov.swizzle.rgar;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("(61)", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(33)", v.w);
            }
            {
                var ov = new gvec4<string>("(-8-2)", "-2", "(3-1)", "-2");
                var v = ov.swizzle.rgarr;
                Assert.AreEqual("(-8-2)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-8-2)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-56)1)", "", "((97)-1)", "0");
                var v = ov.swizzle.rgarg;
                Assert.AreEqual("((-56)1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((-56)1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "6", "3", "(70)");
                var v = ov.swizzle.rgarb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("-6", null, "-8", "-6");
                var v = ov.swizzle.rgara;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((5-3)3)", "(77)", "((56)8)");
                var v = ov.swizzle.rgag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-3)3)", v.y);
                Assert.AreEqual("((56)8)", v.z);
                Assert.AreEqual("((5-3)3)", v.w);
            }
            {
                var ov = new gvec4<string>("(-62)", "-1", "-6", "-6");
                var v = ov.swizzle.rgagr;
                Assert.AreEqual("(-62)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", "(89)", "(3-6)");
                var v = ov.swizzle.rgagg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(0-2)", "(0-2)", "-9", "(-65)");
                var v = ov.swizzle.rgagb;
                Assert.AreEqual("(0-2)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((94)-2)", "((99)3)", "1");
                var v = ov.swizzle.rgaga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((94)-2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((94)-2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(36)", "((-51)0)", "", "((-51)0)");
                var v = ov.swizzle.rgab;
                Assert.AreEqual("(36)", v.x);
                Assert.AreEqual("((-51)0)", v.y);
                Assert.AreEqual("((-51)0)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(-9-9)", "-6", "", null);
                var v = ov.swizzle.rgabr;
                Assert.AreEqual("(-9-9)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-9-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-2)", null, "(-36)", "((4-3)-2)");
                var v = ov.swizzle.rgabg;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((4-3)-2)", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(3-2)", "", "8", "((13)-4)");
                var v = ov.swizzle.rgabb;
                Assert.AreEqual("(3-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((13)-4)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "", "((17)3)", "(34)");
                var v = ov.swizzle.rgaba;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("((17)3)", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-6)", "-8", "(8-6)", "6");
                var v = ov.swizzle.rgaa;
                Assert.AreEqual("(8-6)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("(-88)", "(-51)", "(-88)", "((46)8)");
                var v = ov.swizzle.rgaar;
                Assert.AreEqual("(-88)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("((46)8)", v.z);
                Assert.AreEqual("((46)8)", v.w);
                Assert.AreEqual("(-88)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-3", "", "(89)");
                var v = ov.swizzle.rgaag;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-2)", "7", "(-97)", "3");
                var v = ov.swizzle.rgaab;
                Assert.AreEqual("(-9-2)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(98)", "0", "((1-6)4)");
                var v = ov.swizzle.rgaaa;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("((1-6)4)", v.z);
                Assert.AreEqual("((1-6)4)", v.w);
                Assert.AreEqual("((1-6)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-4)-8)", "((-78)-1)", "((0-3)1)", "(-4-5)");
                var v = ov.swizzle.rb;
                Assert.AreEqual("((8-4)-8)", v.x);
                Assert.AreEqual("((0-3)1)", v.y);
            }
            {
                var ov = new gvec4<string>("(18)", "(18)", "", "(76)");
                var v = ov.swizzle.rbr;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(18)", v.z);
            }
            {
                var ov = new gvec4<string>("(-89)", "((9-2)-1)", "((9-2)-1)", "-2");
                var v = ov.swizzle.rbrr;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("((9-2)-1)", v.y);
                Assert.AreEqual("(-89)", v.z);
                Assert.AreEqual("(-89)", v.w);
            }
            {
                var ov = new gvec4<string>("((9-4)5)", "((73)4)", "-1", "(62)");
                var v = ov.swizzle.rbrrr;
                Assert.AreEqual("((9-4)5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((9-4)5)", v.z);
                Assert.AreEqual("((9-4)5)", v.w);
                Assert.AreEqual("((9-4)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "", "(6-3)", null);
                var v = ov.swizzle.rbrrg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(6-3)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", "((-4-9)-2)", "-9");
                var v = ov.swizzle.rbrrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-4-9)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-4-9)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(92)", "(96)", "-2", "-2");
                var v = ov.swizzle.rbrra;
                Assert.AreEqual("(92)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(92)", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(60)", "(9-9)", "", "((-66)6)");
                var v = ov.swizzle.rbrg;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(9-9)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-3", "(08)", "");
                var v = ov.swizzle.rbrgr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(4-8)", "((-7-1)-5)", "(4-8)", "0");
                var v = ov.swizzle.rbrgg;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("((-7-1)-5)", v.w);
                Assert.AreEqual("((-7-1)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-18)", null, "(-7-5)", "(44)");
                var v = ov.swizzle.rbrgb;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-7-5)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((40)6)", null, "(-6-7)");
                var v = ov.swizzle.rbrga;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((40)6)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((45)-8)", "", "((5-7)-5)");
                var v = ov.swizzle.rbrb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(-7-3)", "(-2-6)", "-3", "(-2-6)");
                var v = ov.swizzle.rbrbr;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(-7-3)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-7-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-4)-7)", "-8", "((51)7)", "((29)-4)");
                var v = ov.swizzle.rbrbg;
                Assert.AreEqual("((4-4)-7)", v.x);
                Assert.AreEqual("((51)7)", v.y);
                Assert.AreEqual("((4-4)-7)", v.z);
                Assert.AreEqual("((51)7)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-3", "-3", "((98)1)");
                var v = ov.swizzle.rbrbb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(9-3)", "(9-3)", "(9-3)", "((-42)-6)");
                var v = ov.swizzle.rbrba;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("(9-3)", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("((-42)-6)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "(09)", null);
                var v = ov.swizzle.rbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(09)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-8", "-8", "(0-9)", "-8");
                var v = ov.swizzle.rbrar;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", null, "2");
                var v = ov.swizzle.rbrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "((7-2)6)", "((9-3)6)", "(5-7)");
                var v = ov.swizzle.rbrab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((9-3)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-7)", v.w);
                Assert.AreEqual("((9-3)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-4)", "6", "(-4-4)", "((-4-6)-7)");
                var v = ov.swizzle.rbraa;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("((-4-6)-7)", v.w);
                Assert.AreEqual("((-4-6)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((81)8)", "0", "((81)8)", "-7");
                var v = ov.swizzle.rbg;
                Assert.AreEqual("((81)8)", v.x);
                Assert.AreEqual("((81)8)", v.y);
                Assert.AreEqual("0", v.z);
            }
            {
                var ov = new gvec4<string>("(-76)", null, "((4-9)7)", null);
                var v = ov.swizzle.rbgr;
                Assert.AreEqual("(-76)", v.x);
                Assert.AreEqual("((4-9)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-76)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-2", "-2", "(6-6)");
                var v = ov.swizzle.rbgrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-16)3)", "((2-1)8)", "((-16)3)", "(-76)");
                var v = ov.swizzle.rbgrg;
                Assert.AreEqual("((-16)3)", v.x);
                Assert.AreEqual("((-16)3)", v.y);
                Assert.AreEqual("((2-1)8)", v.z);
                Assert.AreEqual("((-16)3)", v.w);
                Assert.AreEqual("((2-1)8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-5-5)-4)", null, "-6");
                var v = ov.swizzle.rbgrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-5-5)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-9-8)", "7", "7", "(-54)");
                var v = ov.swizzle.rbgra;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("(-54)", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-2)-5)", "7", "(-4-7)", "((-4-2)-5)");
                var v = ov.swizzle.rbgg;
                Assert.AreEqual("((-4-2)-5)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("((03)-2)", "(0-4)", "((03)-2)", "-2");
                var v = ov.swizzle.rbggr;
                Assert.AreEqual("((03)-2)", v.x);
                Assert.AreEqual("((03)-2)", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("((03)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(81)", "(-62)", "((65)-8)", "((-54)3)");
                var v = ov.swizzle.rbggg;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("((65)-8)", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("(-62)", v.w);
                Assert.AreEqual("(-62)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-9", "((0-6)5)", "(-2-4)");
                var v = ov.swizzle.rbggb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((0-6)5)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((0-6)5)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "(-3-9)", null, "9");
                var v = ov.swizzle.rbgga;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-3-9)", v.z);
                Assert.AreEqual("(-3-9)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((-45)-3)", "((-45)-3)", null, "-1");
                var v = ov.swizzle.rbgb;
                Assert.AreEqual("((-45)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-45)-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-13)", "((41)-4)", "-4", "(-69)");
                var v = ov.swizzle.rbgbr;
                Assert.AreEqual("(-13)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((41)-4)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-13)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-7)5)", "1", "((-16)-6)", "((4-7)5)");
                var v = ov.swizzle.rbgbg;
                Assert.AreEqual("((4-7)5)", v.x);
                Assert.AreEqual("((-16)-6)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-16)-6)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((1-9)-8)", null, "6", "(-42)");
                var v = ov.swizzle.rbgbb;
                Assert.AreEqual("((1-9)-8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(54)", "", "6", "");
                var v = ov.swizzle.rbgba;
                Assert.AreEqual("(54)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-97)5)", "((-93)-5)", "-9", "(2-3)");
                var v = ov.swizzle.rbga;
                Assert.AreEqual("((-97)5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-93)-5)", v.z);
                Assert.AreEqual("(2-3)", v.w);
            }
            {
                var ov = new gvec4<string>("1", "((01)-7)", "(-3-4)", "((01)-7)");
                var v = ov.swizzle.rbgar;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("((01)-7)", v.z);
                Assert.AreEqual("((01)-7)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-4)", "((1-5)0)", "9", "");
                var v = ov.swizzle.rbgag;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((1-5)0)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-5)0)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-8)0)", "", "-3", "(-82)");
                var v = ov.swizzle.rbgab;
                Assert.AreEqual("((9-8)0)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-82)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "(3-5)", "(0-8)");
                var v = ov.swizzle.rbgaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(0-8)", v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((98)9)", null, "", "((-9-2)3)");
                var v = ov.swizzle.rbb;
                Assert.AreEqual("((98)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(15)", "(15)", "-2", "(-9-7)");
                var v = ov.swizzle.rbbr;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(15)", v.w);
            }
            {
                var ov = new gvec4<string>("((87)1)", "(-2-1)", null, "6");
                var v = ov.swizzle.rbbrr;
                Assert.AreEqual("((87)1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((87)1)", v.w);
                Assert.AreEqual("((87)1)", v.v);
            }
            {
                var ov = new gvec4<string>("", "0", "", "");
                var v = ov.swizzle.rbbrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(-99)", "-4", "((-10)3)", "-1");
                var v = ov.swizzle.rbbrb;
                Assert.AreEqual("(-99)", v.x);
                Assert.AreEqual("((-10)3)", v.y);
                Assert.AreEqual("((-10)3)", v.z);
                Assert.AreEqual("(-99)", v.w);
                Assert.AreEqual("((-10)3)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-9", "-5", "-5");
                var v = ov.swizzle.rbbra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("", "-2", "((6-4)1)", "(-7-8)");
                var v = ov.swizzle.rbbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-4)1)", v.y);
                Assert.AreEqual("((6-4)1)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-1)2)", "(-4-2)", "((3-6)9)", "-1");
                var v = ov.swizzle.rbbgr;
                Assert.AreEqual("((-3-1)2)", v.x);
                Assert.AreEqual("((3-6)9)", v.y);
                Assert.AreEqual("((3-6)9)", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("((-3-1)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-71)8)", "-8", "7", "-8");
                var v = ov.swizzle.rbbgg;
                Assert.AreEqual("((-71)8)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((-47)-5)", "", "1");
                var v = ov.swizzle.rbbgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-47)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "", "(-9-3)");
                var v = ov.swizzle.rbbga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-9-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((16)-8)", "", "((41)9)", "-2");
                var v = ov.swizzle.rbbb;
                Assert.AreEqual("((16)-8)", v.x);
                Assert.AreEqual("((41)9)", v.y);
                Assert.AreEqual("((41)9)", v.z);
                Assert.AreEqual("((41)9)", v.w);
            }
            {
                var ov = new gvec4<string>("((5-7)5)", "(-26)", null, "(-26)");
                var v = ov.swizzle.rbbbr;
                Assert.AreEqual("((5-7)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-7)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "(-31)", null, "(-2-6)");
                var v = ov.swizzle.rbbbg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-31)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "", null, "(93)");
                var v = ov.swizzle.rbbbb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-98)", "((2-2)-2)", "(-98)", "(-98)");
                var v = ov.swizzle.rbbba;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("(-98)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("(-98)", v.w);
                Assert.AreEqual("(-98)", v.v);
            }
            {
                var ov = new gvec4<string>("((96)-5)", "((-85)1)", "((12)-2)", "(-9-7)");
                var v = ov.swizzle.rbba;
                Assert.AreEqual("((96)-5)", v.x);
                Assert.AreEqual("((12)-2)", v.y);
                Assert.AreEqual("((12)-2)", v.z);
                Assert.AreEqual("(-9-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(85)", "(85)", null, "((5-9)-2)");
                var v = ov.swizzle.rbbar;
                Assert.AreEqual("(85)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((5-9)-2)", v.w);
                Assert.AreEqual("(85)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((2-2)-7)", "", null);
                var v = ov.swizzle.rbbag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((2-2)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(4-5)", null, null, "(-85)");
                var v = ov.swizzle.rbbab;
                Assert.AreEqual("(4-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-85)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-46)-9)", null, "(-65)", "4");
                var v = ov.swizzle.rbbaa;
                Assert.AreEqual("((-46)-9)", v.x);
                Assert.AreEqual("(-65)", v.y);
                Assert.AreEqual("(-65)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((1-9)-6)", "-3", "(3-5)", "");
                var v = ov.swizzle.rba;
                Assert.AreEqual("((1-9)-6)", v.x);
                Assert.AreEqual("(3-5)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((-34)-1)", null, "((08)-9)", "-9");
                var v = ov.swizzle.rbar;
                Assert.AreEqual("((-34)-1)", v.x);
                Assert.AreEqual("((08)-9)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-34)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("6", "-2", null, "((-9-6)1)");
                var v = ov.swizzle.rbarr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-9-6)1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("4", null, "((-69)7)", "(-4-3)");
                var v = ov.swizzle.rbarg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-69)7)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(88)", "(6-6)");
                var v = ov.swizzle.rbarb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)-3)", "((96)-4)", "((96)-4)", "(9-9)");
                var v = ov.swizzle.rbara;
                Assert.AreEqual("((-87)-3)", v.x);
                Assert.AreEqual("((96)-4)", v.y);
                Assert.AreEqual("(9-9)", v.z);
                Assert.AreEqual("((-87)-3)", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-6)", "(-71)", "((-1-5)1)", "((2-4)5)");
                var v = ov.swizzle.rbag;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("((-1-5)1)", v.y);
                Assert.AreEqual("((2-4)5)", v.z);
                Assert.AreEqual("(-71)", v.w);
            }
            {
                var ov = new gvec4<string>("4", "2", null, "4");
                var v = ov.swizzle.rbagr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-8", "-5", "(62)");
                var v = ov.swizzle.rbagg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(62)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((-6-4)9)", "((-47)6)", "((5-6)-8)");
                var v = ov.swizzle.rbagb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((-47)6)", v.y);
                Assert.AreEqual("((5-6)-8)", v.z);
                Assert.AreEqual("((-6-4)9)", v.w);
                Assert.AreEqual("((-47)6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(83)", null, "((-70)8)");
                var v = ov.swizzle.rbaga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-70)8)", v.z);
                Assert.AreEqual("(83)", v.w);
                Assert.AreEqual("((-70)8)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "9", "(5-1)");
                var v = ov.swizzle.rbab;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(5-1)", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("((34)4)", null, "(04)", "(04)");
                var v = ov.swizzle.rbabr;
                Assert.AreEqual("((34)4)", v.x);
                Assert.AreEqual("(04)", v.y);
                Assert.AreEqual("(04)", v.z);
                Assert.AreEqual("(04)", v.w);
                Assert.AreEqual("((34)4)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((68)-2)", "", "((-78)5)");
                var v = ov.swizzle.rbabg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-78)5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((68)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "", "", null);
                var v = ov.swizzle.rbabb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(6-6)", "-1", "((-29)6)", null);
                var v = ov.swizzle.rbaba;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("((-29)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-29)6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "(6-8)", "(37)", "((0-1)9)");
                var v = ov.swizzle.rbaa;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(37)", v.y);
                Assert.AreEqual("((0-1)9)", v.z);
                Assert.AreEqual("((0-1)9)", v.w);
            }
            {
                var ov = new gvec4<string>("(-83)", "((76)5)", "5", "-6");
                var v = ov.swizzle.rbaar;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-5)7)", "(84)", "-5", "-5");
                var v = ov.swizzle.rbaag;
                Assert.AreEqual("((-1-5)7)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(84)", v.v);
            }
            {
                var ov = new gvec4<string>("(-90)", "(-90)", "", "-2");
                var v = ov.swizzle.rbaab;
                Assert.AreEqual("(-90)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(19)", "(19)", "((-51)3)", "(45)");
                var v = ov.swizzle.rbaaa;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("((-51)3)", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "-9", "-9", "2");
                var v = ov.swizzle.ra;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
            }
            {
                var ov = new gvec4<string>("-1", "(-15)", "(-15)", "((7-8)-5)");
                var v = ov.swizzle.rar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((7-8)-5)", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec4<string>("(82)", "", "(2-8)", "((21)3)");
                var v = ov.swizzle.rarr;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("((21)3)", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("(82)", v.w);
            }
            {
                var ov = new gvec4<string>("((36)-5)", "", "", "((-11)3)");
                var v = ov.swizzle.rarrr;
                Assert.AreEqual("((36)-5)", v.x);
                Assert.AreEqual("((-11)3)", v.y);
                Assert.AreEqual("((36)-5)", v.z);
                Assert.AreEqual("((36)-5)", v.w);
                Assert.AreEqual("((36)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-4)", "9", "", "(05)");
                var v = ov.swizzle.rarrg;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("(05)", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-68)-2)", "3", "-5");
                var v = ov.swizzle.rarrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-3)", "(3-4)", "5", "0");
                var v = ov.swizzle.rarra;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-3-3)", v.z);
                Assert.AreEqual("(-3-3)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-84)1)", "((15)-2)", "");
                var v = ov.swizzle.rarg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-84)1)", v.w);
            }
            {
                var ov = new gvec4<string>("-7", "(-22)", "((2-4)6)", "-7");
                var v = ov.swizzle.rargr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(-22)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("1", null, "((-4-8)8)", "");
                var v = ov.swizzle.rargg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-8-3)", "(-81)", "(-81)", "((18)-9)");
                var v = ov.swizzle.rargb;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("((18)-9)", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-5-6)", "((1-5)-2)", null);
                var v = ov.swizzle.rarga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-5-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((25)3)", "(1-3)", "-3", "-3");
                var v = ov.swizzle.rarb;
                Assert.AreEqual("((25)3)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((25)3)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("", "3", "3", "((-15)3)");
                var v = ov.swizzle.rarbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-15)3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "((1-4)7)", "(6-8)", "-7");
                var v = ov.swizzle.rarbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(6-8)", v.w);
                Assert.AreEqual("((1-4)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-82)0)", "((-9-7)4)", "(1-2)", "-8");
                var v = ov.swizzle.rarbb;
                Assert.AreEqual("((-82)0)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-82)0)", v.z);
                Assert.AreEqual("(1-2)", v.w);
                Assert.AreEqual("(1-2)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "-6", "(82)", "((57)-7)");
                var v = ov.swizzle.rarba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((57)-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(82)", v.w);
                Assert.AreEqual("((57)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((39)-5)", "4", null, "(77)");
                var v = ov.swizzle.rara;
                Assert.AreEqual("((39)-5)", v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual("((39)-5)", v.z);
                Assert.AreEqual("(77)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "(8-5)", "1", "-1");
                var v = ov.swizzle.rarar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(22)", "1", "(-68)", "1");
                var v = ov.swizzle.rarag;
                Assert.AreEqual("(22)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("(22)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-8)-4)", "4", "3", "");
                var v = ov.swizzle.rarab;
                Assert.AreEqual("((-3-8)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-3-8)-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(47)", "-2", "((81)2)", "((81)2)");
                var v = ov.swizzle.raraa;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("((81)2)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("((81)2)", v.w);
                Assert.AreEqual("((81)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-2)-1)", "(-55)", "(39)", "(-55)");
                var v = ov.swizzle.rag;
                Assert.AreEqual("((-6-2)-1)", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("(-55)", v.z);
            }
            {
                var ov = new gvec4<string>("(0-1)", "((91)-6)", "(0-1)", "(-13)");
                var v = ov.swizzle.ragr;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("(-13)", v.y);
                Assert.AreEqual("((91)-6)", v.z);
                Assert.AreEqual("(0-1)", v.w);
            }
            {
                var ov = new gvec4<string>("((19)3)", "", "4", "((1-1)-4)");
                var v = ov.swizzle.ragrr;
                Assert.AreEqual("((19)3)", v.x);
                Assert.AreEqual("((1-1)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((19)3)", v.w);
                Assert.AreEqual("((19)3)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "5", "", "(-8-3)");
                var v = ov.swizzle.ragrg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((7-3)7)", "((7-3)7)", null);
                var v = ov.swizzle.ragrb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-3)7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((7-3)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-3)3)", "-9", "((-9-3)3)", "(68)");
                var v = ov.swizzle.ragra;
                Assert.AreEqual("((-9-3)3)", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-9-3)3)", v.w);
                Assert.AreEqual("(68)", v.v);
            }
            {
                var ov = new gvec4<string>("((-43)2)", "", "(-6-2)", "(-6-2)");
                var v = ov.swizzle.ragg;
                Assert.AreEqual("((-43)2)", v.x);
                Assert.AreEqual("(-6-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((32)-4)", "", "(-39)", "(-39)");
                var v = ov.swizzle.raggr;
                Assert.AreEqual("((32)-4)", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((32)-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-3-1)", "(-88)", "((-8-9)-3)");
                var v = ov.swizzle.raggg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-8-9)-3)", v.y);
                Assert.AreEqual("(-3-1)", v.z);
                Assert.AreEqual("(-3-1)", v.w);
                Assert.AreEqual("(-3-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "-7", "((8-4)2)", "((52)4)");
                var v = ov.swizzle.raggb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((52)4)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((8-4)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((6-1)-1)", "(01)", "(-9-7)", "-9");
                var v = ov.swizzle.ragga;
                Assert.AreEqual("((6-1)-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(01)", v.z);
                Assert.AreEqual("(01)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(-34)", "((-32)5)", "((-32)5)", "((-32)5)");
                var v = ov.swizzle.ragb;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("((-32)5)", v.y);
                Assert.AreEqual("((-32)5)", v.z);
                Assert.AreEqual("((-32)5)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "6", "(5-9)", null);
                var v = ov.swizzle.ragbr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(5-9)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((-65)4)", "(-8-4)", "((-65)4)", "(6-7)");
                var v = ov.swizzle.ragbg;
                Assert.AreEqual("((-65)4)", v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("(-8-4)", v.z);
                Assert.AreEqual("((-65)4)", v.w);
                Assert.AreEqual("(-8-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-9)", "(-3-6)", "1", "-1");
                var v = ov.swizzle.ragbb;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-3-6)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("", "((59)-6)", "((8-3)-8)", "-7");
                var v = ov.swizzle.ragba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((59)-6)", v.z);
                Assert.AreEqual("((8-3)-8)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-7)", "-3", "(-1-7)", "((-19)6)");
                var v = ov.swizzle.raga;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("((-19)6)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((-19)6)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "-7", "((82)-1)", null);
                var v = ov.swizzle.ragar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((32)-6)", "-4", "(-42)", "");
                var v = ov.swizzle.ragag;
                Assert.AreEqual("((32)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "(9-8)", "(2-6)", "(2-6)");
                var v = ov.swizzle.ragab;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(2-6)", v.y);
                Assert.AreEqual("(9-8)", v.z);
                Assert.AreEqual("(2-6)", v.w);
                Assert.AreEqual("(2-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((24)6)", "(-2-7)", "-1", "-2");
                var v = ov.swizzle.ragaa;
                Assert.AreEqual("((24)6)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-2-7)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-9)", "", "", "(-30)");
                var v = ov.swizzle.rab;
                Assert.AreEqual("(-8-9)", v.x);
                Assert.AreEqual("(-30)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((9-5)-1)", "((-2-4)4)", null, "-1");
                var v = ov.swizzle.rabr;
                Assert.AreEqual("((9-5)-1)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((9-5)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "(-1-4)", "7", "((-22)1)");
                var v = ov.swizzle.rabrr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-22)1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("9", "-7", null, "((-4-7)-3)");
                var v = ov.swizzle.rabrg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-4-7)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((-89)4)", "(-6-5)", "(-6-5)", "((-89)4)");
                var v = ov.swizzle.rabrb;
                Assert.AreEqual("((-89)4)", v.x);
                Assert.AreEqual("((-89)4)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("((-89)4)", v.w);
                Assert.AreEqual("(-6-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-4)", "(-16)", "(1-4)", "(1-4)");
                var v = ov.swizzle.rabra;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual("(1-4)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "-5", "(89)", "(5-6)");
                var v = ov.swizzle.rabg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(5-6)", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("((7-4)7)", null, "", "((7-4)7)");
                var v = ov.swizzle.rabgr;
                Assert.AreEqual("((7-4)7)", v.x);
                Assert.AreEqual("((7-4)7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((7-4)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((-6-2)7)", "((28)3)", "-5");
                var v = ov.swizzle.rabgg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((28)3)", v.z);
                Assert.AreEqual("((-6-2)7)", v.w);
                Assert.AreEqual("((-6-2)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-5)", "-2", "4", "4");
                var v = ov.swizzle.rabgb;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((3-5)4)", "(2-9)", "((-3-3)4)");
                var v = ov.swizzle.rabga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-3-3)4)", v.y);
                Assert.AreEqual("(2-9)", v.z);
                Assert.AreEqual("((3-5)4)", v.w);
                Assert.AreEqual("((-3-3)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", null, "-5", "2");
                var v = ov.swizzle.rabb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("(17)", "((-94)-8)", "(17)", "");
                var v = ov.swizzle.rabbr;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(17)", v.z);
                Assert.AreEqual("(17)", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(12)", "-9", "-9");
                var v = ov.swizzle.rabbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-8)", "-9", "-5", "-5");
                var v = ov.swizzle.rabbb;
                Assert.AreEqual("(7-8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(10)", "(10)", "-3", "((-9-8)-4)");
                var v = ov.swizzle.rabba;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual("((-9-8)-4)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-9-8)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "-9", "2", null);
                var v = ov.swizzle.raba;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("8", "(-5-9)", "((90)1)", "((90)1)");
                var v = ov.swizzle.rabar;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((90)1)", v.y);
                Assert.AreEqual("((90)1)", v.z);
                Assert.AreEqual("((90)1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-22)-3)", "(-6-4)", "(31)", "4");
                var v = ov.swizzle.rabag;
                Assert.AreEqual("((-22)-3)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(-6-4)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-1", "(-23)", "((-31)2)");
                var v = ov.swizzle.rabab;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-31)2)", v.y);
                Assert.AreEqual("(-23)", v.z);
                Assert.AreEqual("((-31)2)", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-7)", "((-44)7)", "((-44)7)", "-8");
                var v = ov.swizzle.rabaa;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-44)7)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-48)8)", "-1", "((-48)8)");
                var v = ov.swizzle.raa;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-48)8)", v.y);
                Assert.AreEqual("((-48)8)", v.z);
            }
            {
                var ov = new gvec4<string>("-2", "((85)5)", "(-46)", "((-1-8)9)");
                var v = ov.swizzle.raar;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-1-8)9)", v.y);
                Assert.AreEqual("((-1-8)9)", v.z);
                Assert.AreEqual("-2", v.w);
            }
            {
                var ov = new gvec4<string>(null, "0", "((0-5)9)", "0");
                var v = ov.swizzle.raarr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((1-1)-5)", "(4-3)", "1", "-1");
                var v = ov.swizzle.raarg;
                Assert.AreEqual("((1-1)-5)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((1-1)-5)", v.w);
                Assert.AreEqual("(4-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((13)6)", "((13)6)", "((-35)-6)");
                var v = ov.swizzle.raarb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-35)-6)", v.y);
                Assert.AreEqual("((-35)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((13)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(39)", "(-83)", "((9-2)1)", "(-1-2)");
                var v = ov.swizzle.raara;
                Assert.AreEqual("(39)", v.x);
                Assert.AreEqual("(-1-2)", v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("(-1-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-3)2)", "-7", "", "((-3-4)-1)");
                var v = ov.swizzle.raag;
                Assert.AreEqual("((8-3)2)", v.x);
                Assert.AreEqual("((-3-4)-1)", v.y);
                Assert.AreEqual("((-3-4)-1)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>("(-1-7)", "", null, "");
                var v = ov.swizzle.raagr;
                Assert.AreEqual("(-1-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "(-78)", "4", "(1-7)");
                var v = ov.swizzle.raagg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(1-7)", v.y);
                Assert.AreEqual("(1-7)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("(-78)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-9", "-1", "(1-4)");
                var v = ov.swizzle.raagb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(1-4)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((3-2)-3)", "4", "5", "5");
                var v = ov.swizzle.raaga;
                Assert.AreEqual("((3-2)-3)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((-57)5)", "((-1-9)-6)", "");
                var v = ov.swizzle.raab;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-1-9)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "(0-4)", "-2", "(5-3)");
                var v = ov.swizzle.raabr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("(5-3)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-92)-2)", null, "(0-1)");
                var v = ov.swizzle.raabg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(0-1)", v.y);
                Assert.AreEqual("(0-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-92)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(-14)", null, "(69)");
                var v = ov.swizzle.raabb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("(69)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("3", "((33)2)", "(39)", "2");
                var v = ov.swizzle.raaba;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(39)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "-6", null);
                var v = ov.swizzle.raaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(2-1)", "5", "((12)-9)", "(2-1)");
                var v = ov.swizzle.raaar;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual("(2-1)", v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("(2-1)", v.w);
                Assert.AreEqual("(2-1)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((-6-4)8)", "(97)");
                var v = ov.swizzle.raaag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(97)", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("(97)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "(67)", "0", "(0-4)");
                var v = ov.swizzle.raaab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-4)", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-3)", "(-6-3)", null, "((93)-9)");
                var v = ov.swizzle.raaaa;
                Assert.AreEqual("(-6-3)", v.x);
                Assert.AreEqual("((93)-9)", v.y);
                Assert.AreEqual("((93)-9)", v.z);
                Assert.AreEqual("((93)-9)", v.w);
                Assert.AreEqual("((93)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-9)-9)", "", "", "6");
                var v = ov.swizzle.gr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-9)-9)", v.y);
            }
            {
                var ov = new gvec4<string>(null, "((-52)-3)", null, "(-31)");
                var v = ov.swizzle.grr;
                Assert.AreEqual("((-52)-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("(67)", "-5", "((-6-4)-1)", "((-6-4)-1)");
                var v = ov.swizzle.grrr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(67)", v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("(67)", v.w);
            }
            {
                var ov = new gvec4<string>("((-62)9)", "(-41)", "((3-7)-5)", "(-41)");
                var v = ov.swizzle.grrrr;
                Assert.AreEqual("(-41)", v.x);
                Assert.AreEqual("((-62)9)", v.y);
                Assert.AreEqual("((-62)9)", v.z);
                Assert.AreEqual("((-62)9)", v.w);
                Assert.AreEqual("((-62)9)", v.v);
            }
            {
                var ov = new gvec4<string>("((70)9)", "6", "((-87)4)", "((4-7)-6)");
                var v = ov.swizzle.grrrg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((70)9)", v.y);
                Assert.AreEqual("((70)9)", v.z);
                Assert.AreEqual("((70)9)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "3", "((-48)7)");
                var v = ov.swizzle.grrrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "(-9-5)", null);
                var v = ov.swizzle.grrra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("8", "8", "((-64)0)", "(03)");
                var v = ov.swizzle.grrg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec4<string>("(2-2)", "", "(26)", "(-91)");
                var v = ov.swizzle.grrgr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(2-2)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(2-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-6)", null, "-3", "(83)");
                var v = ov.swizzle.grrgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("(-1-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-5", "(-1-7)", "((-6-7)9)");
                var v = ov.swizzle.grrgb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(-1-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((82)2)", "6", "5", "(-5-9)");
                var v = ov.swizzle.grrga;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((82)2)", v.y);
                Assert.AreEqual("((82)2)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-2)", "((4-9)9)", "((4-9)9)", "5");
                var v = ov.swizzle.grrb;
                Assert.AreEqual("((4-9)9)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("((4-9)9)", v.w);
            }
            {
                var ov = new gvec4<string>("((6-3)9)", "(6-6)", "(-4-9)", "((6-3)9)");
                var v = ov.swizzle.grrbr;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("((6-3)9)", v.y);
                Assert.AreEqual("((6-3)9)", v.z);
                Assert.AreEqual("(-4-9)", v.w);
                Assert.AreEqual("((6-3)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-4)", "5", "(8-4)", "(8-4)");
                var v = ov.swizzle.grrbg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(9-4)", v.y);
                Assert.AreEqual("(9-4)", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(-8-6)", "(05)", "(60)");
                var v = ov.swizzle.grrbb;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("(05)", v.w);
                Assert.AreEqual("(05)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-3-5)8)", "6", "(1-8)");
                var v = ov.swizzle.grrba;
                Assert.AreEqual("((-3-5)8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(1-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-24)-9)", "-3", "((72)8)", "((-55)-2)");
                var v = ov.swizzle.grra;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((-24)-9)", v.y);
                Assert.AreEqual("((-24)-9)", v.z);
                Assert.AreEqual("((-55)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("", "-3", "(6-5)", "");
                var v = ov.swizzle.grrar;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((52)-3)", "6", "(-91)");
                var v = ov.swizzle.grrag;
                Assert.AreEqual("((52)-3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-91)", v.w);
                Assert.AreEqual("((52)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-26)-7)", "(89)", "((-2-9)0)", "");
                var v = ov.swizzle.grrab;
                Assert.AreEqual("(89)", v.x);
                Assert.AreEqual("((-26)-7)", v.y);
                Assert.AreEqual("((-26)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-9)0)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-2)", "-8", "-8", "6");
                var v = ov.swizzle.grraa;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(8-2)", v.y);
                Assert.AreEqual("(8-2)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-9)-8)", "(3-9)", null, "((-1-9)-8)");
                var v = ov.swizzle.grg;
                Assert.AreEqual("(3-9)", v.x);
                Assert.AreEqual("((-1-9)-8)", v.y);
                Assert.AreEqual("(3-9)", v.z);
            }
            {
                var ov = new gvec4<string>("-3", "((-42)-4)", "((1-4)7)", "((-42)-4)");
                var v = ov.swizzle.grgr;
                Assert.AreEqual("((-42)-4)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-42)-4)", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("(-68)", "-1", "((-19)-7)", "(-7-5)");
                var v = ov.swizzle.grgrr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("(-68)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-5)6)", "((-85)0)", "((8-5)6)", "(-92)");
                var v = ov.swizzle.grgrg;
                Assert.AreEqual("((-85)0)", v.x);
                Assert.AreEqual("((8-5)6)", v.y);
                Assert.AreEqual("((-85)0)", v.z);
                Assert.AreEqual("((8-5)6)", v.w);
                Assert.AreEqual("((-85)0)", v.v);
            }
            {
                var ov = new gvec4<string>("((03)-6)", "((-4-5)-9)", "((-4-5)-9)", "((03)-6)");
                var v = ov.swizzle.grgrb;
                Assert.AreEqual("((-4-5)-9)", v.x);
                Assert.AreEqual("((03)-6)", v.y);
                Assert.AreEqual("((-4-5)-9)", v.z);
                Assert.AreEqual("((03)-6)", v.w);
                Assert.AreEqual("((-4-5)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((30)6)", "", "4", "(69)");
                var v = ov.swizzle.grgra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((30)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((30)6)", v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "", "((-6-8)-4)", "3");
                var v = ov.swizzle.grgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("8", "", "8", "((3-1)-9)");
                var v = ov.swizzle.grggr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((78)-7)", null, "((-43)4)", "");
                var v = ov.swizzle.grggg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((78)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-92)", "", "(35)", null);
                var v = ov.swizzle.grggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-92)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(35)", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "(-28)", null, "1");
                var v = ov.swizzle.grgga;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("(-28)", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((-53)8)", "-7", "-7", null);
                var v = ov.swizzle.grgb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-53)8)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>("9", "-1", "((64)-5)", "((50)-7)");
                var v = ov.swizzle.grgbr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((64)-5)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((43)5)", "((43)5)", "(-7-6)", "((1-5)-6)");
                var v = ov.swizzle.grgbg;
                Assert.AreEqual("((43)5)", v.x);
                Assert.AreEqual("((43)5)", v.y);
                Assert.AreEqual("((43)5)", v.z);
                Assert.AreEqual("(-7-6)", v.w);
                Assert.AreEqual("((43)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)-1)", "-1", "(00)", "((-22)-8)");
                var v = ov.swizzle.grgbb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-2-5)-1)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(00)", v.w);
                Assert.AreEqual("(00)", v.v);
            }
            {
                var ov = new gvec4<string>("8", null, "(95)", "-4");
                var v = ov.swizzle.grgba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(95)", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-1)", null, "-2", "(-68)");
                var v = ov.swizzle.grga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-68)", v.w);
            }
            {
                var ov = new gvec4<string>("(23)", "((07)-7)", "", "((56)-3)");
                var v = ov.swizzle.grgar;
                Assert.AreEqual("((07)-7)", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual("((07)-7)", v.z);
                Assert.AreEqual("((56)-3)", v.w);
                Assert.AreEqual("(23)", v.v);
            }
            {
                var ov = new gvec4<string>("(92)", "((50)6)", "9", "(-88)");
                var v = ov.swizzle.grgag;
                Assert.AreEqual("((50)6)", v.x);
                Assert.AreEqual("(92)", v.y);
                Assert.AreEqual("((50)6)", v.z);
                Assert.AreEqual("(-88)", v.w);
                Assert.AreEqual("((50)6)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "", "", null);
                var v = ov.swizzle.grgab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "", "-2");
                var v = ov.swizzle.grgaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((38)7)", "((38)7)", "((1-3)0)", null);
                var v = ov.swizzle.grb;
                Assert.AreEqual("((38)7)", v.x);
                Assert.AreEqual("((38)7)", v.y);
                Assert.AreEqual("((1-3)0)", v.z);
            }
            {
                var ov = new gvec4<string>("(-94)", null, "((25)1)", "((1-8)7)");
                var v = ov.swizzle.grbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-94)", v.y);
                Assert.AreEqual("((25)1)", v.z);
                Assert.AreEqual("(-94)", v.w);
            }
            {
                var ov = new gvec4<string>("((3-6)-7)", null, "7", null);
                var v = ov.swizzle.grbrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-6)-7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((3-6)-7)", v.w);
                Assert.AreEqual("((3-6)-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "9", "((12)3)", "((61)-2)");
                var v = ov.swizzle.grbrg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((12)3)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-17)", "(77)", "(-17)", "1");
                var v = ov.swizzle.grbrb;
                Assert.AreEqual("(77)", v.x);
                Assert.AreEqual("(-17)", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("(-17)", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "((11)1)", "");
                var v = ov.swizzle.grbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((11)1)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-5-2)", "(-5-2)", "((-1-8)2)");
                var v = ov.swizzle.grbg;
                Assert.AreEqual("(-5-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-5-2)", v.z);
                Assert.AreEqual("(-5-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((24)-8)", "", "4", "-9");
                var v = ov.swizzle.grbgr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((24)-8)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((24)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((68)-7)", null, null, "((05)8)");
                var v = ov.swizzle.grbgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((68)-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-8-1)", "(-5-7)", "((-67)-6)", "-8");
                var v = ov.swizzle.grbgb;
                Assert.AreEqual("(-5-7)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("((-67)-6)", v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("((-67)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((-21)7)", "", "8");
                var v = ov.swizzle.grbga;
                Assert.AreEqual("((-21)7)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-21)7)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((34)1)", "-1", "(8-4)", "-4");
                var v = ov.swizzle.grbb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((34)1)", v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual("(8-4)", v.w);
            }
            {
                var ov = new gvec4<string>("((5-5)-1)", "((97)-6)", null, "");
                var v = ov.swizzle.grbbr;
                Assert.AreEqual("((97)-6)", v.x);
                Assert.AreEqual("((5-5)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-5)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((5-8)-5)", null, "-6");
                var v = ov.swizzle.grbbg;
                Assert.AreEqual("((5-8)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((5-8)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "((8-8)-6)", "", "");
                var v = ov.swizzle.grbbb;
                Assert.AreEqual("((8-8)-6)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(-4-4)", "((24)-7)", null);
                var v = ov.swizzle.grbba;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((24)-7)", v.z);
                Assert.AreEqual("((24)-7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("5", "", "(-2-3)", "5");
                var v = ov.swizzle.grba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-2-3)", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("", "7", "7", "-9");
                var v = ov.swizzle.grbar;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(1-6)", null, "-4", "8");
                var v = ov.swizzle.grbag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(1-6)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-17)-3)", "7", "((-17)-3)", "(-84)");
                var v = ov.swizzle.grbab;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("((-17)-3)", v.y);
                Assert.AreEqual("((-17)-3)", v.z);
                Assert.AreEqual("(-84)", v.w);
                Assert.AreEqual("((-17)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(5-3)", "(-20)", "");
                var v = ov.swizzle.grbaa;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "((31)0)", "((31)0)");
                var v = ov.swizzle.gra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((31)0)", v.z);
            }
            {
                var ov = new gvec4<string>("(-74)", "(-74)", "(-28)", "-1");
                var v = ov.swizzle.grar;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-74)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-74)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "(-13)", "((-4-4)5)", "((-39)1)");
                var v = ov.swizzle.grarr;
                Assert.AreEqual("(-13)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((-39)1)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-56)-6)", "9", "(-1-8)");
                var v = ov.swizzle.grarg;
                Assert.AreEqual("((-56)-6)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-56)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-3)", "(-2-3)", "((-9-8)3)", "((-4-6)-7)");
                var v = ov.swizzle.grarb;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(5-3)", v.y);
                Assert.AreEqual("((-4-6)-7)", v.z);
                Assert.AreEqual("(5-3)", v.w);
                Assert.AreEqual("((-9-8)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((59)-3)", "((59)-3)", "", "(-2-5)");
                var v = ov.swizzle.grara;
                Assert.AreEqual("((59)-3)", v.x);
                Assert.AreEqual("((59)-3)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("((59)-3)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((-17)9)", "2");
                var v = ov.swizzle.grag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("9", "(-54)", "9", "(14)");
                var v = ov.swizzle.gragr;
                Assert.AreEqual("(-54)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("(-54)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((-96)6)", "(25)", "(3-2)", "((2-3)8)");
                var v = ov.swizzle.gragg;
                Assert.AreEqual("(25)", v.x);
                Assert.AreEqual("((-96)6)", v.y);
                Assert.AreEqual("((2-3)8)", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("(25)", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "-1", "", "((-35)3)");
                var v = ov.swizzle.gragb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("((-35)3)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-76)", "9", "(36)", "((6-9)-8)");
                var v = ov.swizzle.graga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(-76)", v.y);
                Assert.AreEqual("((6-9)-8)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((6-9)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((97)2)", "(4-6)", "((5-2)-8)", "(15)");
                var v = ov.swizzle.grab;
                Assert.AreEqual("(4-6)", v.x);
                Assert.AreEqual("((97)2)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("((5-2)-8)", v.w);
            }
            {
                var ov = new gvec4<string>("(88)", "(88)", "", "((-36)8)");
                var v = ov.swizzle.grabr;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("(88)", v.y);
                Assert.AreEqual("((-36)8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(88)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "((00)9)", "((5-1)-2)");
                var v = ov.swizzle.grabg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("((5-1)-2)", v.z);
                Assert.AreEqual("((00)9)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((57)-5)", "1", "(-1-4)", "(-1-4)");
                var v = ov.swizzle.grabb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((57)-5)", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("(-1-4)", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-5", "(92)", "((-30)5)");
                var v = ov.swizzle.graba;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-30)5)", v.z);
                Assert.AreEqual("(92)", v.w);
                Assert.AreEqual("((-30)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-8", "((20)-1)", null);
                var v = ov.swizzle.graa;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-8", "((-9-8)-1)", null, "(-4-5)");
                var v = ov.swizzle.graar;
                Assert.AreEqual("((-9-8)-1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("(-4-5)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("((-78)2)", "((-2-3)-6)", null, "");
                var v = ov.swizzle.graag;
                Assert.AreEqual("((-2-3)-6)", v.x);
                Assert.AreEqual("((-78)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-2-3)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((5-8)-9)", "(78)", "((40)-6)");
                var v = ov.swizzle.graab;
                Assert.AreEqual("((5-8)-9)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((40)-6)", v.z);
                Assert.AreEqual("((40)-6)", v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-2-7)3)", "((37)2)", "-4");
                var v = ov.swizzle.graaa;
                Assert.AreEqual("((-2-7)3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((04)-7)", "-9", "((-17)2)");
                var v = ov.swizzle.gg;
                Assert.AreEqual("((04)-7)", v.x);
                Assert.AreEqual("((04)-7)", v.y);
            }
            {
                var ov = new gvec4<string>("-1", "-1", null, "(61)");
                var v = ov.swizzle.ggr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec4<string>("((-9-7)0)", "((4-1)9)", "(59)", null);
                var v = ov.swizzle.ggrr;
                Assert.AreEqual("((4-1)9)", v.x);
                Assert.AreEqual("((4-1)9)", v.y);
                Assert.AreEqual("((-9-7)0)", v.z);
                Assert.AreEqual("((-9-7)0)", v.w);
            }
            {
                var ov = new gvec4<string>("(-7-7)", "", "((38)1)", "4");
                var v = ov.swizzle.ggrrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("(-7-7)", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "7", "((-8-5)-9)", "(-6-1)");
                var v = ov.swizzle.ggrrg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((-65)9)", "(-51)", null, "(-51)");
                var v = ov.swizzle.ggrrb;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("((-65)9)", v.z);
                Assert.AreEqual("((-65)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-25)", "(-25)", null, "0");
                var v = ov.swizzle.ggrra;
                Assert.AreEqual("(-25)", v.x);
                Assert.AreEqual("(-25)", v.y);
                Assert.AreEqual("(-25)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "((0-1)-8)", "(8-4)");
                var v = ov.swizzle.ggrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("4", "(90)", "4", "1");
                var v = ov.swizzle.ggrgr;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-7)0)", "-4", "((-86)-3)", null);
                var v = ov.swizzle.ggrgg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((-8-7)0)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("((8-6)2)", "8", "8", "((6-9)-7)");
                var v = ov.swizzle.ggrgb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((8-6)2)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((90)-4)", "(34)");
                var v = ov.swizzle.ggrga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-4)", "-8", "4", "");
                var v = ov.swizzle.ggrb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-9-4)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec4<string>("((-75)3)", "((-75)3)", "((78)3)", "(7-5)");
                var v = ov.swizzle.ggrbr;
                Assert.AreEqual("((-75)3)", v.x);
                Assert.AreEqual("((-75)3)", v.y);
                Assert.AreEqual("((-75)3)", v.z);
                Assert.AreEqual("((78)3)", v.w);
                Assert.AreEqual("((-75)3)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(04)", "((20)-6)", "1");
                var v = ov.swizzle.ggrbg;
                Assert.AreEqual("(04)", v.x);
                Assert.AreEqual("(04)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((20)-6)", v.w);
                Assert.AreEqual("(04)", v.v);
            }
            {
                var ov = new gvec4<string>("(96)", "-3", "", "(-49)");
                var v = ov.swizzle.ggrbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("(96)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-1)", "(-9-6)", "(-2-1)", "-9");
                var v = ov.swizzle.ggrba;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((30)2)", "(-7-5)", "-1", "8");
                var v = ov.swizzle.ggra;
                Assert.AreEqual("(-7-5)", v.x);
                Assert.AreEqual("(-7-5)", v.y);
                Assert.AreEqual("((30)2)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec4<string>("(13)", "((-62)-9)", "(1-3)", null);
                var v = ov.swizzle.ggrar;
                Assert.AreEqual("((-62)-9)", v.x);
                Assert.AreEqual("((-62)-9)", v.y);
                Assert.AreEqual("(13)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(13)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(7-7)", "((8-6)8)", "((4-4)-1)");
                var v = ov.swizzle.ggrag;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((4-4)-1)", v.w);
                Assert.AreEqual("(7-7)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "4", "4", "(-36)");
                var v = ov.swizzle.ggrab;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-36)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("(0-4)", "-9", null, "((-63)0)");
                var v = ov.swizzle.ggraa;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(0-4)", v.z);
                Assert.AreEqual("((-63)0)", v.w);
                Assert.AreEqual("((-63)0)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "-4", "((3-4)9)", "(-7-9)");
                var v = ov.swizzle.ggg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
            }
            {
                var ov = new gvec4<string>("((99)6)", "((99)6)", "((99)6)", "(4-7)");
                var v = ov.swizzle.gggr;
                Assert.AreEqual("((99)6)", v.x);
                Assert.AreEqual("((99)6)", v.y);
                Assert.AreEqual("((99)6)", v.z);
                Assert.AreEqual("((99)6)", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-4)6)", "(27)", "(22)", "");
                var v = ov.swizzle.gggrr;
                Assert.AreEqual("(27)", v.x);
                Assert.AreEqual("(27)", v.y);
                Assert.AreEqual("(27)", v.z);
                Assert.AreEqual("((-7-4)6)", v.w);
                Assert.AreEqual("((-7-4)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-38)5)", "-9", "2", "((-38)5)");
                var v = ov.swizzle.gggrg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((-38)5)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(-95)", "(-95)", null);
                var v = ov.swizzle.gggrb;
                Assert.AreEqual("(-95)", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual("(-95)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-95)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(70)", "((4-8)2)", "((4-8)2)");
                var v = ov.swizzle.gggra;
                Assert.AreEqual("(70)", v.x);
                Assert.AreEqual("(70)", v.y);
                Assert.AreEqual("(70)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("((4-8)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(50)", "-4", "(3-4)", "-2");
                var v = ov.swizzle.gggg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec4<string>("((-83)3)", "((-83)3)", "-3", "3");
                var v = ov.swizzle.ggggr;
                Assert.AreEqual("((-83)3)", v.x);
                Assert.AreEqual("((-83)3)", v.y);
                Assert.AreEqual("((-83)3)", v.z);
                Assert.AreEqual("((-83)3)", v.w);
                Assert.AreEqual("((-83)3)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((29)-9)", null, "(2-4)");
                var v = ov.swizzle.ggggg;
                Assert.AreEqual("((29)-9)", v.x);
                Assert.AreEqual("((29)-9)", v.y);
                Assert.AreEqual("((29)-9)", v.z);
                Assert.AreEqual("((29)-9)", v.w);
                Assert.AreEqual("((29)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("", "1", "((5-1)0)", "(75)");
                var v = ov.swizzle.ggggb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((5-1)0)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((23)1)", "(00)", "(43)");
                var v = ov.swizzle.gggga;
                Assert.AreEqual("((23)1)", v.x);
                Assert.AreEqual("((23)1)", v.y);
                Assert.AreEqual("((23)1)", v.z);
                Assert.AreEqual("((23)1)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec4<string>("1", null, "1", "(-54)");
                var v = ov.swizzle.gggb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "((-9-5)3)", "(0-4)", "((-62)-7)");
                var v = ov.swizzle.gggbr;
                Assert.AreEqual("((-9-5)3)", v.x);
                Assert.AreEqual("((-9-5)3)", v.y);
                Assert.AreEqual("((-9-5)3)", v.z);
                Assert.AreEqual("(0-4)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "5", null, "((4-8)1)");
                var v = ov.swizzle.gggbg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-65)6)", "-1", "((-2-4)-7)", "((-7-9)-8)");
                var v = ov.swizzle.gggbb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-2-4)-7)", v.w);
                Assert.AreEqual("((-2-4)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((17)7)", null, "-2", null);
                var v = ov.swizzle.gggba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", "", "-7");
                var v = ov.swizzle.ggga;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>("(-46)", "(47)", "-8", "(-46)");
                var v = ov.swizzle.gggar;
                Assert.AreEqual("(47)", v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("(-46)", v.w);
                Assert.AreEqual("(-46)", v.v);
            }
            {
                var ov = new gvec4<string>("((7-7)-2)", "4", "7", "((7-7)-2)");
                var v = ov.swizzle.gggag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((7-7)-2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-7-3)0)", null, "(8-4)");
                var v = ov.swizzle.gggab;
                Assert.AreEqual("((-7-3)0)", v.x);
                Assert.AreEqual("((-7-3)0)", v.y);
                Assert.AreEqual("((-7-3)0)", v.z);
                Assert.AreEqual("(8-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-7-3)4)", "-2", "");
                var v = ov.swizzle.gggaa;
                Assert.AreEqual("((-7-3)4)", v.x);
                Assert.AreEqual("((-7-3)4)", v.y);
                Assert.AreEqual("((-7-3)4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "", "", "(55)");
                var v = ov.swizzle.ggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(-5-2)", "-9", "", "9");
                var v = ov.swizzle.ggbr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(2-3)", "6", "((6-8)7)", "((85)3)");
                var v = ov.swizzle.ggbrr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("((6-8)7)", v.z);
                Assert.AreEqual("(2-3)", v.w);
                Assert.AreEqual("(2-3)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(06)", "((9-5)7)", "((-1-2)3)");
                var v = ov.swizzle.ggbrg;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("((9-5)7)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(06)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "-3", "9", "((-5-1)2)");
                var v = ov.swizzle.ggbrb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "(84)", "((-78)-2)");
                var v = ov.swizzle.ggbra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(84)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-78)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((96)9)", "1", "1");
                var v = ov.swizzle.ggbg;
                Assert.AreEqual("((96)9)", v.x);
                Assert.AreEqual("((96)9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((96)9)", v.w);
            }
            {
                var ov = new gvec4<string>("(-13)", "(-32)", "((7-7)-3)", "1");
                var v = ov.swizzle.ggbgr;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("(-32)", v.y);
                Assert.AreEqual("((7-7)-3)", v.z);
                Assert.AreEqual("(-32)", v.w);
                Assert.AreEqual("(-13)", v.v);
            }
            {
                var ov = new gvec4<string>("(-42)", "(-3-4)", "-1", null);
                var v = ov.swizzle.ggbgg;
                Assert.AreEqual("(-3-4)", v.x);
                Assert.AreEqual("(-3-4)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-3-4)", v.w);
                Assert.AreEqual("(-3-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-56)", "3", "((6-5)8)");
                var v = ov.swizzle.ggbgb;
                Assert.AreEqual("(-56)", v.x);
                Assert.AreEqual("(-56)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-56)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((80)-1)", "(49)", "(49)", "");
                var v = ov.swizzle.ggbga;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("(49)", v.z);
                Assert.AreEqual("(49)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-5)", "((-8-2)-3)", "(2-1)", "");
                var v = ov.swizzle.ggbb;
                Assert.AreEqual("((-8-2)-3)", v.x);
                Assert.AreEqual("((-8-2)-3)", v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("(2-1)", v.w);
            }
            {
                var ov = new gvec4<string>("((36)-8)", "3", "(-5-3)", "(-89)");
                var v = ov.swizzle.ggbbr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-5-3)", v.z);
                Assert.AreEqual("(-5-3)", v.w);
                Assert.AreEqual("((36)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-4)", "((76)-8)", "((76)-8)", "(-5-4)");
                var v = ov.swizzle.ggbbg;
                Assert.AreEqual("((76)-8)", v.x);
                Assert.AreEqual("((76)-8)", v.y);
                Assert.AreEqual("((76)-8)", v.z);
                Assert.AreEqual("((76)-8)", v.w);
                Assert.AreEqual("((76)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "-3", "((-65)6)", "((8-3)4)");
                var v = ov.swizzle.ggbbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-65)6)", v.z);
                Assert.AreEqual("((-65)6)", v.w);
                Assert.AreEqual("((-65)6)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(4-1)", null, "(54)");
                var v = ov.swizzle.ggbba;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(54)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "-5", "");
                var v = ov.swizzle.ggba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("5", "5", "(54)", "(54)");
                var v = ov.swizzle.ggbar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(54)", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((-19)-7)", "(07)", null);
                var v = ov.swizzle.ggbag;
                Assert.AreEqual("((-19)-7)", v.x);
                Assert.AreEqual("((-19)-7)", v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-19)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-9)", "9", "(5-9)", "(33)");
                var v = ov.swizzle.ggbab;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(5-9)", v.z);
                Assert.AreEqual("(33)", v.w);
                Assert.AreEqual("(5-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((7-7)-2)", "((7-7)-2)", "(66)", "(-25)");
                var v = ov.swizzle.ggbaa;
                Assert.AreEqual("((7-7)-2)", v.x);
                Assert.AreEqual("((7-7)-2)", v.y);
                Assert.AreEqual("(66)", v.z);
                Assert.AreEqual("(-25)", v.w);
                Assert.AreEqual("(-25)", v.v);
            }
            {
                var ov = new gvec4<string>("((37)5)", null, "-2", "((37)5)");
                var v = ov.swizzle.gga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((37)5)", v.z);
            }
            {
                var ov = new gvec4<string>("(-2-2)", "-4", "-4", "(-96)");
                var v = ov.swizzle.ggar;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(-96)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((4-2)3)", "-7", "(9-2)", "-9");
                var v = ov.swizzle.ggarr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((4-2)3)", v.w);
                Assert.AreEqual("((4-2)3)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "-9", "(-4-6)", "(4-9)");
                var v = ov.swizzle.ggarg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(4-9)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(90)", "(9-3)", "-8", "");
                var v = ov.swizzle.ggarb;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("(9-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-70)1)", "((-70)1)", "((-70)1)");
                var v = ov.swizzle.ggara;
                Assert.AreEqual("((-70)1)", v.x);
                Assert.AreEqual("((-70)1)", v.y);
                Assert.AreEqual("((-70)1)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-70)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-35)", "((0-5)-7)", "((35)-7)", "-1");
                var v = ov.swizzle.ggag;
                Assert.AreEqual("((0-5)-7)", v.x);
                Assert.AreEqual("((0-5)-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((0-5)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("-4", "0", "0", "(-10)");
                var v = ov.swizzle.ggagr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-10)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("5", "5", "(79)", "((-47)1)");
                var v = ov.swizzle.ggagg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-47)1)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((-53)-1)", "(-6-8)", "(-3-7)", "((-45)2)");
                var v = ov.swizzle.ggagb;
                Assert.AreEqual("(-6-8)", v.x);
                Assert.AreEqual("(-6-8)", v.y);
                Assert.AreEqual("((-45)2)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("(-3-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((54)-5)", "((54)-5)", "(-4-9)", "((-59)6)");
                var v = ov.swizzle.ggaga;
                Assert.AreEqual("((54)-5)", v.x);
                Assert.AreEqual("((54)-5)", v.y);
                Assert.AreEqual("((-59)6)", v.z);
                Assert.AreEqual("((54)-5)", v.w);
                Assert.AreEqual("((-59)6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-5", null, "-8");
                var v = ov.swizzle.ggab;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((-32)1)", "((-9-4)-9)", "((-32)1)", "-8");
                var v = ov.swizzle.ggabr;
                Assert.AreEqual("((-9-4)-9)", v.x);
                Assert.AreEqual("((-9-4)-9)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-32)1)", v.w);
                Assert.AreEqual("((-32)1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-32)4)", "-8", "((-2-1)4)", "-8");
                var v = ov.swizzle.ggabg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-2-1)4)", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-7)2)", "9", "(96)", "1");
                var v = ov.swizzle.ggabb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(96)", v.w);
                Assert.AreEqual("(96)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "9", null, "(-33)");
                var v = ov.swizzle.ggaba;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-33)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-33)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-2)", "(-7-8)", "9", "((-8-3)9)");
                var v = ov.swizzle.ggaa;
                Assert.AreEqual("(-7-8)", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("((-8-3)9)", v.z);
                Assert.AreEqual("((-8-3)9)", v.w);
            }
            {
                var ov = new gvec4<string>("(24)", "6", "((-4-6)4)", "(-1-3)");
                var v = ov.swizzle.ggaar;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-1-3)", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("(24)", v.v);
            }
            {
                var ov = new gvec4<string>("((22)-4)", "(0-8)", "((22)-4)", null);
                var v = ov.swizzle.ggaag;
                Assert.AreEqual("(0-8)", v.x);
                Assert.AreEqual("(0-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(0-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((89)-5)", "-9", "((-14)8)", "((6-3)8)");
                var v = ov.swizzle.ggaab;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((6-3)8)", v.z);
                Assert.AreEqual("((6-3)8)", v.w);
                Assert.AreEqual("((-14)8)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(-4-1)", "-2", "(-4-1)");
                var v = ov.swizzle.ggaaa;
                Assert.AreEqual("(-4-1)", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual("(-4-1)", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("(-4-1)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "(-7-3)", "((-83)-4)", "(45)");
                var v = ov.swizzle.gb;
                Assert.AreEqual("(-7-3)", v.x);
                Assert.AreEqual("((-83)-4)", v.y);
            }
            {
                var ov = new gvec4<string>("(-14)", "((1-2)-9)", "3", "0");
                var v = ov.swizzle.gbr;
                Assert.AreEqual("((1-2)-9)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-14)", v.z);
            }
            {
                var ov = new gvec4<string>("0", "((-2-7)-4)", null, "-5");
                var v = ov.swizzle.gbrr;
                Assert.AreEqual("((-2-7)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("((62)8)", "((-78)-3)", "-9", "(61)");
                var v = ov.swizzle.gbrrr;
                Assert.AreEqual("((-78)-3)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((62)8)", v.z);
                Assert.AreEqual("((62)8)", v.w);
                Assert.AreEqual("((62)8)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "(1-8)", null, "7");
                var v = ov.swizzle.gbrrg;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(1-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(25)", "", "((6-1)0)", "(-2-9)");
                var v = ov.swizzle.gbrrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((6-1)0)", v.y);
                Assert.AreEqual("(25)", v.z);
                Assert.AreEqual("(25)", v.w);
                Assert.AreEqual("((6-1)0)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-6-2)", "", "");
                var v = ov.swizzle.gbrra;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-44)", null, "(8-4)");
                var v = ov.swizzle.gbrg;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-44)", v.w);
            }
            {
                var ov = new gvec4<string>("(-11)", "(-64)", "(-3-7)", "6");
                var v = ov.swizzle.gbrgr;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("(-3-7)", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual("(-11)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-5)3)", "5", "3", null);
                var v = ov.swizzle.gbrgg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((5-5)3)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-14)", "((-59)-6)", "9", "((-5-3)2)");
                var v = ov.swizzle.gbrgb;
                Assert.AreEqual("((-59)-6)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-14)", v.z);
                Assert.AreEqual("((-59)-6)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-18)", "((-62)-6)", null, "(-18)");
                var v = ov.swizzle.gbrga;
                Assert.AreEqual("((-62)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-18)", v.z);
                Assert.AreEqual("((-62)-6)", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "-6", "((40)-9)", "(82)");
                var v = ov.swizzle.gbrb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((40)-9)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((40)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((-75)-6)", "(-66)", "((-75)-6)", "-9");
                var v = ov.swizzle.gbrbr;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("((-75)-6)", v.y);
                Assert.AreEqual("((-75)-6)", v.z);
                Assert.AreEqual("((-75)-6)", v.w);
                Assert.AreEqual("((-75)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "(20)", "4", "-4");
                var v = ov.swizzle.gbrbg;
                Assert.AreEqual("(20)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(20)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-7", "", "(-9-6)");
                var v = ov.swizzle.gbrbb;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "5", "((9-7)-8)", null);
                var v = ov.swizzle.gbrba;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((9-7)-8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((9-7)-8)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-8-5)", "", "5");
                var v = ov.swizzle.gbra;
                Assert.AreEqual("(-8-5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("((-73)4)", "(34)", "(-9-2)", "0");
                var v = ov.swizzle.gbrar;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("(-9-2)", v.y);
                Assert.AreEqual("((-73)4)", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((-73)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-4)", "9", "(7-9)", "3");
                var v = ov.swizzle.gbrag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(1-3)", "", "", "(1-3)");
                var v = ov.swizzle.gbrab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("(1-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(-8-5)", "((19)-8)");
                var v = ov.swizzle.gbraa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-8-5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((19)-8)", v.w);
                Assert.AreEqual("((19)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-5-5)", null, "(-5-5)");
                var v = ov.swizzle.gbg;
                Assert.AreEqual("(-5-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-5-5)", v.z);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "-2", "-2", "(-1-5)");
                var v = ov.swizzle.gbgr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(-2-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((-9-4)5)", "(-82)", "-1", "((-9-4)5)");
                var v = ov.swizzle.gbgrr;
                Assert.AreEqual("(-82)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("((-9-4)5)", v.w);
                Assert.AreEqual("((-9-4)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(3-3)", "((-5-9)6)", "(-66)");
                var v = ov.swizzle.gbgrg;
                Assert.AreEqual("(3-3)", v.x);
                Assert.AreEqual("((-5-9)6)", v.y);
                Assert.AreEqual("(3-3)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(3-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)4)", "", "-7", "-7");
                var v = ov.swizzle.gbgrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-2-5)4)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((9-3)4)", "6", null, "4");
                var v = ov.swizzle.gbgra;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((9-3)4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((64)5)", "9", "((78)7)", "3");
                var v = ov.swizzle.gbgg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((78)7)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("((7-8)4)", "(7-3)", "-2", "(-44)");
                var v = ov.swizzle.gbggr;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(7-3)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("((7-8)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((18)6)", "((5-6)-8)", "(-3-2)", "0");
                var v = ov.swizzle.gbggg;
                Assert.AreEqual("((5-6)-8)", v.x);
                Assert.AreEqual("(-3-2)", v.y);
                Assert.AreEqual("((5-6)-8)", v.z);
                Assert.AreEqual("((5-6)-8)", v.w);
                Assert.AreEqual("((5-6)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-4)3)", "1", "((-1-4)3)", "(9-8)");
                var v = ov.swizzle.gbggb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-1-4)3)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((-1-4)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-8)", "(1-8)", "((8-3)8)", "3");
                var v = ov.swizzle.gbgga;
                Assert.AreEqual("(1-8)", v.x);
                Assert.AreEqual("((8-3)8)", v.y);
                Assert.AreEqual("(1-8)", v.z);
                Assert.AreEqual("(1-8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "3", "(-4-8)", "(2-9)");
                var v = ov.swizzle.gbgb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(-4-8)", v.w);
            }
            {
                var ov = new gvec4<string>("4", "4", "((0-9)-7)", "(99)");
                var v = ov.swizzle.gbgbr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((0-9)-7)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((0-9)-7)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-5-3)6)", "", "(-4-4)");
                var v = ov.swizzle.gbgbg;
                Assert.AreEqual("((-5-3)6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-5-3)6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-5-3)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-2)", "((8-5)8)", null, "((7-8)6)");
                var v = ov.swizzle.gbgbb;
                Assert.AreEqual("((8-5)8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-5)8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "((-66)0)", "7", "(3-7)");
                var v = ov.swizzle.gbgba;
                Assert.AreEqual("((-66)0)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("((-66)0)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-7)3)", "(-66)", "7", "((-4-7)3)");
                var v = ov.swizzle.gbga;
                Assert.AreEqual("(-66)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-66)", v.z);
                Assert.AreEqual("((-4-7)3)", v.w);
            }
            {
                var ov = new gvec4<string>("", "(5-4)", "((-4-2)-7)", null);
                var v = ov.swizzle.gbgar;
                Assert.AreEqual("(5-4)", v.x);
                Assert.AreEqual("((-4-2)-7)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(9-5)", "(-3-8)", "-2");
                var v = ov.swizzle.gbgag;
                Assert.AreEqual("(9-5)", v.x);
                Assert.AreEqual("(-3-8)", v.y);
                Assert.AreEqual("(9-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-92)8)", "(98)", "((-8-4)8)");
                var v = ov.swizzle.gbgab;
                Assert.AreEqual("((-92)8)", v.x);
                Assert.AreEqual("(98)", v.y);
                Assert.AreEqual("((-92)8)", v.z);
                Assert.AreEqual("((-8-4)8)", v.w);
                Assert.AreEqual("(98)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((98)-8)", "-8", "");
                var v = ov.swizzle.gbgaa;
                Assert.AreEqual("((98)-8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((98)-8)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("4", "", "(-81)", "(5-9)");
                var v = ov.swizzle.gbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("(-81)", v.z);
            }
            {
                var ov = new gvec4<string>("((-20)9)", "(6-1)", "(6-1)", "-9");
                var v = ov.swizzle.gbbr;
                Assert.AreEqual("(6-1)", v.x);
                Assert.AreEqual("(6-1)", v.y);
                Assert.AreEqual("(6-1)", v.z);
                Assert.AreEqual("((-20)9)", v.w);
            }
            {
                var ov = new gvec4<string>("-8", "4", "-8", "(73)");
                var v = ov.swizzle.gbbrr;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(7-3)", "(50)", "((51)7)", "-5");
                var v = ov.swizzle.gbbrg;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("((51)7)", v.y);
                Assert.AreEqual("((51)7)", v.z);
                Assert.AreEqual("(7-3)", v.w);
                Assert.AreEqual("(50)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((-5-7)-8)", null, "5");
                var v = ov.swizzle.gbbrb;
                Assert.AreEqual("((-5-7)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(23)", "", "(-32)");
                var v = ov.swizzle.gbbra;
                Assert.AreEqual("(23)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(-32)", v.v);
            }
            {
                var ov = new gvec4<string>("(-79)", "((-87)-7)", "(81)", "(1-6)");
                var v = ov.swizzle.gbbg;
                Assert.AreEqual("((-87)-7)", v.x);
                Assert.AreEqual("(81)", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("((-87)-7)", v.w);
            }
            {
                var ov = new gvec4<string>("(1-5)", "-7", "8", "8");
                var v = ov.swizzle.gbbgr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(1-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-1)-9)", "((3-4)9)", "((9-5)7)", "-2");
                var v = ov.swizzle.gbbgg;
                Assert.AreEqual("((3-4)9)", v.x);
                Assert.AreEqual("((9-5)7)", v.y);
                Assert.AreEqual("((9-5)7)", v.z);
                Assert.AreEqual("((3-4)9)", v.w);
                Assert.AreEqual("((3-4)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((72)6)", "((-61)4)", "(0-9)");
                var v = ov.swizzle.gbbgb;
                Assert.AreEqual("((72)6)", v.x);
                Assert.AreEqual("((-61)4)", v.y);
                Assert.AreEqual("((-61)4)", v.z);
                Assert.AreEqual("((72)6)", v.w);
                Assert.AreEqual("((-61)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-77)9)", "((-14)-3)", "", "((2-6)-2)");
                var v = ov.swizzle.gbbga;
                Assert.AreEqual("((-14)-3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-14)-3)", v.w);
                Assert.AreEqual("((2-6)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(52)", "((-49)6)", "1");
                var v = ov.swizzle.gbbb;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("((-49)6)", v.y);
                Assert.AreEqual("((-49)6)", v.z);
                Assert.AreEqual("((-49)6)", v.w);
            }
            {
                var ov = new gvec4<string>("((-13)3)", null, "((-13)3)", "((1-4)-4)");
                var v = ov.swizzle.gbbbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-13)3)", v.y);
                Assert.AreEqual("((-13)3)", v.z);
                Assert.AreEqual("((-13)3)", v.w);
                Assert.AreEqual("((-13)3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-3", "-3", "((-92)-7)");
                var v = ov.swizzle.gbbbg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-6)", null, "((-5-6)4)", "");
                var v = ov.swizzle.gbbbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-5-6)4)", v.y);
                Assert.AreEqual("((-5-6)4)", v.z);
                Assert.AreEqual("((-5-6)4)", v.w);
                Assert.AreEqual("((-5-6)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-8-6)", "-1", "");
                var v = ov.swizzle.gbbba;
                Assert.AreEqual("(-8-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((7-1)3)", "-7", "(07)", "-4");
                var v = ov.swizzle.gbba;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("(07)", v.z);
                Assert.AreEqual("-4", v.w);
            }
            {
                var ov = new gvec4<string>("((1-3)0)", "(-8-1)", "((-6-6)-2)", "(-68)");
                var v = ov.swizzle.gbbar;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("((-6-6)-2)", v.y);
                Assert.AreEqual("((-6-6)-2)", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("((1-3)0)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "((8-4)5)", "(-8-8)", "-9");
                var v = ov.swizzle.gbbag;
                Assert.AreEqual("((8-4)5)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("(-8-8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((8-4)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-82)1)", "((39)-1)", "((39)-1)", "((-37)4)");
                var v = ov.swizzle.gbbab;
                Assert.AreEqual("((39)-1)", v.x);
                Assert.AreEqual("((39)-1)", v.y);
                Assert.AreEqual("((39)-1)", v.z);
                Assert.AreEqual("((-37)4)", v.w);
                Assert.AreEqual("((39)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((56)8)", "", "2");
                var v = ov.swizzle.gbbaa;
                Assert.AreEqual("((56)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((7-5)-6)", "((7-5)-6)", "2", null);
                var v = ov.swizzle.gba;
                Assert.AreEqual("((7-5)-6)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("(-59)", "1", "(-59)", "(8-9)");
                var v = ov.swizzle.gbar;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("(8-9)", v.z);
                Assert.AreEqual("(-59)", v.w);
            }
            {
                var ov = new gvec4<string>("(3-1)", "((-5-3)-4)", "-7", "((-5-3)-4)");
                var v = ov.swizzle.gbarr;
                Assert.AreEqual("((-5-3)-4)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-5-3)-4)", v.z);
                Assert.AreEqual("(3-1)", v.w);
                Assert.AreEqual("(3-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-81)", "4", "(56)", "4");
                var v = ov.swizzle.gbarg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(03)", "((-32)-7)", "((-79)-6)");
                var v = ov.swizzle.gbarb;
                Assert.AreEqual("(03)", v.x);
                Assert.AreEqual("((-32)-7)", v.y);
                Assert.AreEqual("((-79)-6)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((-32)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-68)", null, "6", null);
                var v = ov.swizzle.gbara;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((42)6)", "((1-9)-6)", "(-55)", "((03)1)");
                var v = ov.swizzle.gbag;
                Assert.AreEqual("((1-9)-6)", v.x);
                Assert.AreEqual("(-55)", v.y);
                Assert.AreEqual("((03)1)", v.z);
                Assert.AreEqual("((1-9)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("(90)", "(90)", "((58)-8)", "7");
                var v = ov.swizzle.gbagr;
                Assert.AreEqual("(90)", v.x);
                Assert.AreEqual("((58)-8)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-4)6)", "((9-4)6)", "((-7-2)-9)", "(97)");
                var v = ov.swizzle.gbagg;
                Assert.AreEqual("((9-4)6)", v.x);
                Assert.AreEqual("((-7-2)-9)", v.y);
                Assert.AreEqual("(97)", v.z);
                Assert.AreEqual("((9-4)6)", v.w);
                Assert.AreEqual("((9-4)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-2)", "4", "-8", "(00)");
                var v = ov.swizzle.gbagb;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(00)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(3-6)", "((-99)-5)", "(-5-7)", "8");
                var v = ov.swizzle.gbaga;
                Assert.AreEqual("((-99)-5)", v.x);
                Assert.AreEqual("(-5-7)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("((-99)-5)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((26)0)", "((0-7)-3)", "((0-7)-3)", "((9-5)8)");
                var v = ov.swizzle.gbab;
                Assert.AreEqual("((0-7)-3)", v.x);
                Assert.AreEqual("((0-7)-3)", v.y);
                Assert.AreEqual("((9-5)8)", v.z);
                Assert.AreEqual("((0-7)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "((1-7)0)", "((41)4)");
                var v = ov.swizzle.gbabr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((1-7)0)", v.y);
                Assert.AreEqual("((41)4)", v.z);
                Assert.AreEqual("((1-7)0)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(10)", "(-74)", "((9-6)2)", "");
                var v = ov.swizzle.gbabg;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("((9-6)2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((9-6)2)", v.w);
                Assert.AreEqual("(-74)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-4-7)", "((-23)9)", "-1");
                var v = ov.swizzle.gbabb;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("((-23)9)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((-23)9)", v.w);
                Assert.AreEqual("((-23)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-87)", "(-8-4)", "(-8-4)", "((36)5)");
                var v = ov.swizzle.gbaba;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("(-8-4)", v.y);
                Assert.AreEqual("((36)5)", v.z);
                Assert.AreEqual("(-8-4)", v.w);
                Assert.AreEqual("((36)5)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-7)", "((-9-3)5)", "", "(60)");
                var v = ov.swizzle.gbaa;
                Assert.AreEqual("((-9-3)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(60)", v.w);
            }
            {
                var ov = new gvec4<string>("(44)", "((89)0)", "(-91)", "((7-8)9)");
                var v = ov.swizzle.gbaar;
                Assert.AreEqual("((89)0)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("((7-8)9)", v.z);
                Assert.AreEqual("((7-8)9)", v.w);
                Assert.AreEqual("(44)", v.v);
            }
            {
                var ov = new gvec4<string>("", "4", "(-7-8)", "4");
                var v = ov.swizzle.gbaag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-7-8)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-55)4)", "-2", "", "-2");
                var v = ov.swizzle.gbaab;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-72)", "((-92)7)", "(51)", null);
                var v = ov.swizzle.gbaaa;
                Assert.AreEqual("((-92)7)", v.x);
                Assert.AreEqual("(51)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((38)-6)", "", "1", "2");
                var v = ov.swizzle.ga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("2", v.y);
            }
            {
                var ov = new gvec4<string>("", "((-79)3)", "((-8-3)-3)", "");
                var v = ov.swizzle.gar;
                Assert.AreEqual("((-79)3)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(09)", "-1", "-3", "((01)7)");
                var v = ov.swizzle.garr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((01)7)", v.y);
                Assert.AreEqual("(09)", v.z);
                Assert.AreEqual("(09)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(95)", "8", "1");
                var v = ov.swizzle.garrr;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("1", "1", "", "((-2-5)-9)");
                var v = ov.swizzle.garrg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-2-5)-9)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(-78)", "(52)", "2", "6");
                var v = ov.swizzle.garrb;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)9)", "-9", "((-87)9)", null);
                var v = ov.swizzle.garra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-87)9)", v.z);
                Assert.AreEqual("((-87)9)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-9-6)-7)", "(7-7)", "(7-7)", "(7-7)");
                var v = ov.swizzle.garg;
                Assert.AreEqual("(7-7)", v.x);
                Assert.AreEqual("(7-7)", v.y);
                Assert.AreEqual("((-9-6)-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
            }
            {
                var ov = new gvec4<string>("((4-3)3)", "((-51)6)", "", "(-61)");
                var v = ov.swizzle.gargr;
                Assert.AreEqual("((-51)6)", v.x);
                Assert.AreEqual("(-61)", v.y);
                Assert.AreEqual("((4-3)3)", v.z);
                Assert.AreEqual("((-51)6)", v.w);
                Assert.AreEqual("((4-3)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-4)-3)", "(-1-1)", "((-8-5)9)", "((-8-5)9)");
                var v = ov.swizzle.gargg;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("((-8-5)9)", v.y);
                Assert.AreEqual("((1-4)-3)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual("(-1-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(-28)", "", null);
                var v = ov.swizzle.gargb;
                Assert.AreEqual("(-28)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-28)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "", "");
                var v = ov.swizzle.garga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-5)9)", "((82)2)", "8", "(12)");
                var v = ov.swizzle.garb;
                Assert.AreEqual("((82)2)", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("((-1-5)9)", v.z);
                Assert.AreEqual("8", v.w);
            }
            {
                var ov = new gvec4<string>("((54)1)", "((28)-3)", "((54)1)", "(23)");
                var v = ov.swizzle.garbr;
                Assert.AreEqual("((28)-3)", v.x);
                Assert.AreEqual("(23)", v.y);
                Assert.AreEqual("((54)1)", v.z);
                Assert.AreEqual("((54)1)", v.w);
                Assert.AreEqual("((54)1)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(-89)", "-6", "0");
                var v = ov.swizzle.garbg;
                Assert.AreEqual("(-89)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-89)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-3-9)-9)", "-3", "((-13)-8)");
                var v = ov.swizzle.garbb;
                Assert.AreEqual("((-3-9)-9)", v.x);
                Assert.AreEqual("((-13)-8)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "-6", "(1-4)", null);
                var v = ov.swizzle.garba;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(1-4)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "8", "(4-1)", "(19)");
                var v = ov.swizzle.gara;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("(19)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(19)", v.w);
            }
            {
                var ov = new gvec4<string>("(-83)", "((-9-5)9)", "", "(54)");
                var v = ov.swizzle.garar;
                Assert.AreEqual("((-9-5)9)", v.x);
                Assert.AreEqual("(54)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("(54)", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "(33)", "(75)", "-5");
                var v = ov.swizzle.garag;
                Assert.AreEqual("(33)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("(33)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "((-83)9)", "(-90)");
                var v = ov.swizzle.garab;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-90)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(-90)", v.w);
                Assert.AreEqual("((-83)9)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-4)", "((4-5)9)", "(5-4)", "(5-4)");
                var v = ov.swizzle.garaa;
                Assert.AreEqual("((4-5)9)", v.x);
                Assert.AreEqual("(5-4)", v.y);
                Assert.AreEqual("(5-4)", v.z);
                Assert.AreEqual("(5-4)", v.w);
                Assert.AreEqual("(5-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-5-3)", "-5", "((2-8)-6)");
                var v = ov.swizzle.gag;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual("((2-8)-6)", v.y);
                Assert.AreEqual("(-5-3)", v.z);
            }
            {
                var ov = new gvec4<string>("1", "", "", "((-1-5)-7)");
                var v = ov.swizzle.gagr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-1-5)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>(null, "0", "(88)", "-2");
                var v = ov.swizzle.gagrr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((7-6)-5)", "((-52)-1)", "(4-1)", "(4-1)");
                var v = ov.swizzle.gagrg;
                Assert.AreEqual("((-52)-1)", v.x);
                Assert.AreEqual("(4-1)", v.y);
                Assert.AreEqual("((-52)-1)", v.z);
                Assert.AreEqual("((7-6)-5)", v.w);
                Assert.AreEqual("((-52)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "-1", "((-4-7)-2)", "((-4-7)-2)");
                var v = ov.swizzle.gagrb;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-4-7)-2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-4-7)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "5", "(4-2)", "-6");
                var v = ov.swizzle.gagra;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((57)4)", "(88)", "0", "((7-4)6)");
                var v = ov.swizzle.gagg;
                Assert.AreEqual("(88)", v.x);
                Assert.AreEqual("((7-4)6)", v.y);
                Assert.AreEqual("(88)", v.z);
                Assert.AreEqual("(88)", v.w);
            }
            {
                var ov = new gvec4<string>("(1-3)", "((-32)-9)", "(1-3)", "(03)");
                var v = ov.swizzle.gaggr;
                Assert.AreEqual("((-32)-9)", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("((-32)-9)", v.z);
                Assert.AreEqual("((-32)-9)", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-6)", "((6-9)2)", "", "1");
                var v = ov.swizzle.gaggg;
                Assert.AreEqual("((6-9)2)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((6-9)2)", v.z);
                Assert.AreEqual("((6-9)2)", v.w);
                Assert.AreEqual("((6-9)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-9)-3)", "(78)", "(1-5)", "((0-2)-1)");
                var v = ov.swizzle.gaggb;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("((0-2)-1)", v.y);
                Assert.AreEqual("(78)", v.z);
                Assert.AreEqual("(78)", v.w);
                Assert.AreEqual("(1-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-7)", "(-11)", "(9-7)", "2");
                var v = ov.swizzle.gagga;
                Assert.AreEqual("(-11)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-11)", v.z);
                Assert.AreEqual("(-11)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "-4", "((04)0)", null);
                var v = ov.swizzle.gagb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((04)0)", v.w);
            }
            {
                var ov = new gvec4<string>("2", "", "((-3-9)-9)", "(89)");
                var v = ov.swizzle.gagbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-3-9)-9)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("7", null, "(9-6)", "");
                var v = ov.swizzle.gagbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-6)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "-6", "((52)-8)", "");
                var v = ov.swizzle.gagbb;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((52)-8)", v.w);
                Assert.AreEqual("((52)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", "(6-5)", null);
                var v = ov.swizzle.gagba;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(6-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "-8", "(21)", "");
                var v = ov.swizzle.gaga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "(58)", "7", "2");
                var v = ov.swizzle.gagar;
                Assert.AreEqual("(58)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((61)-3)", "-6", "-5", "((09)-3)");
                var v = ov.swizzle.gagag;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((09)-3)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((09)-3)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((-96)2)", "((-7-7)8)", "(9-4)", "((-96)2)");
                var v = ov.swizzle.gagab;
                Assert.AreEqual("((-7-7)8)", v.x);
                Assert.AreEqual("((-96)2)", v.y);
                Assert.AreEqual("((-7-7)8)", v.z);
                Assert.AreEqual("((-96)2)", v.w);
                Assert.AreEqual("(9-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "8", "8");
                var v = ov.swizzle.gagaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((9-1)6)", "(-4-8)", "((3-1)-2)", "(-4-8)");
                var v = ov.swizzle.gab;
                Assert.AreEqual("(-4-8)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("((3-1)-2)", v.z);
            }
            {
                var ov = new gvec4<string>("(-42)", "(-1-8)", "((2-8)-5)", "(-1-8)");
                var v = ov.swizzle.gabr;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("((2-8)-5)", v.z);
                Assert.AreEqual("(-42)", v.w);
            }
            {
                var ov = new gvec4<string>("9", "-5", "-5", "9");
                var v = ov.swizzle.gabrr;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-1)", "((-76)-1)", "((-5-4)1)", "(-99)");
                var v = ov.swizzle.gabrg;
                Assert.AreEqual("((-76)-1)", v.x);
                Assert.AreEqual("(-99)", v.y);
                Assert.AreEqual("((-5-4)1)", v.z);
                Assert.AreEqual("(-6-1)", v.w);
                Assert.AreEqual("((-76)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-8)7)", "((-3-8)7)", "(11)", "(-3-1)");
                var v = ov.swizzle.gabrb;
                Assert.AreEqual("((-3-8)7)", v.x);
                Assert.AreEqual("(-3-1)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("((-3-8)7)", v.w);
                Assert.AreEqual("(11)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(-6-2)", "8", "(-6-2)");
                var v = ov.swizzle.gabra;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual("(-6-2)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-6-2)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "9", "5", "");
                var v = ov.swizzle.gabg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("((07)-8)", "((-4-3)-5)", "(-9-7)", "-2");
                var v = ov.swizzle.gabgr;
                Assert.AreEqual("((-4-3)-5)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-9-7)", v.z);
                Assert.AreEqual("((-4-3)-5)", v.w);
                Assert.AreEqual("((07)-8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-4-1)", "((52)7)", "-4");
                var v = ov.swizzle.gabgg;
                Assert.AreEqual("(-4-1)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((52)7)", v.z);
                Assert.AreEqual("(-4-1)", v.w);
                Assert.AreEqual("(-4-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-3)8)", "", "(-23)", null);
                var v = ov.swizzle.gabgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-23)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-23)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(34)", null, "8");
                var v = ov.swizzle.gabga;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "(-15)", "((70)-1)", "-6");
                var v = ov.swizzle.gabb;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((70)-1)", v.z);
                Assert.AreEqual("((70)-1)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-3)", "(-4-3)", null, "((1-4)-2)");
                var v = ov.swizzle.gabbr;
                Assert.AreEqual("(-4-3)", v.x);
                Assert.AreEqual("((1-4)-2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(49)", "(-7-6)", "((7-5)-2)", "((23)-6)");
                var v = ov.swizzle.gabbg;
                Assert.AreEqual("(-7-6)", v.x);
                Assert.AreEqual("((23)-6)", v.y);
                Assert.AreEqual("((7-5)-2)", v.z);
                Assert.AreEqual("((7-5)-2)", v.w);
                Assert.AreEqual("(-7-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-27)8)", "", "(-2-5)", "((24)-4)");
                var v = ov.swizzle.gabbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((24)-4)", v.y);
                Assert.AreEqual("(-2-5)", v.z);
                Assert.AreEqual("(-2-5)", v.w);
                Assert.AreEqual("(-2-5)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "4", "((2-5)-7)", "((2-5)-7)");
                var v = ov.swizzle.gabba;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((2-5)-7)", v.y);
                Assert.AreEqual("((2-5)-7)", v.z);
                Assert.AreEqual("((2-5)-7)", v.w);
                Assert.AreEqual("((2-5)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-6)", "((-92)9)", "(-7-9)", "");
                var v = ov.swizzle.gaba;
                Assert.AreEqual("((-92)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-7-9)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-5)-1)", "((20)-2)", "", "(-1-6)");
                var v = ov.swizzle.gabar;
                Assert.AreEqual("((20)-2)", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-1-6)", v.w);
                Assert.AreEqual("((-3-5)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((63)1)", "(-71)", "", "((05)8)");
                var v = ov.swizzle.gabag;
                Assert.AreEqual("(-71)", v.x);
                Assert.AreEqual("((05)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((05)8)", v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-2)9)", null, "-5", "(-4-2)");
                var v = ov.swizzle.gabab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-4-2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(94)", null, "((53)-5)", "");
                var v = ov.swizzle.gabaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((53)-5)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "((14)1)", "((14)1)");
                var v = ov.swizzle.gaa;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((14)1)", v.y);
                Assert.AreEqual("((14)1)", v.z);
            }
            {
                var ov = new gvec4<string>("9", null, "-5", null);
                var v = ov.swizzle.gaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>("(4-4)", "(4-4)", "(-20)", "(-20)");
                var v = ov.swizzle.gaarr;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("(-20)", v.y);
                Assert.AreEqual("(-20)", v.z);
                Assert.AreEqual("(4-4)", v.w);
                Assert.AreEqual("(4-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-18)", "(-18)", "((-2-8)7)", "((5-5)7)");
                var v = ov.swizzle.gaarg;
                Assert.AreEqual("(-18)", v.x);
                Assert.AreEqual("((5-5)7)", v.y);
                Assert.AreEqual("((5-5)7)", v.z);
                Assert.AreEqual("(-18)", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec4<string>("(16)", "-5", "(17)", "-5");
                var v = ov.swizzle.gaarb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(16)", v.w);
                Assert.AreEqual("(17)", v.v);
            }
            {
                var ov = new gvec4<string>("(-88)", "(2-4)", "(-4-9)", "-9");
                var v = ov.swizzle.gaara;
                Assert.AreEqual("(2-4)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("(-88)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-1)6)", "(3-1)", "((-1-1)6)", "((-7-1)5)");
                var v = ov.swizzle.gaag;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("((-7-1)5)", v.y);
                Assert.AreEqual("((-7-1)5)", v.z);
                Assert.AreEqual("(3-1)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-4-1)0)", "0", null);
                var v = ov.swizzle.gaagr;
                Assert.AreEqual("((-4-1)0)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-4-1)0)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(48)", "(56)", "((0-1)5)", "((-73)-6)");
                var v = ov.swizzle.gaagg;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("((-73)-6)", v.y);
                Assert.AreEqual("((-73)-6)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(56)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(45)", "7", "(45)");
                var v = ov.swizzle.gaagb;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(45)", v.y);
                Assert.AreEqual("(45)", v.z);
                Assert.AreEqual("(45)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(31)", "(31)", "-4", null);
                var v = ov.swizzle.gaaga;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(31)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("5", "(49)", "-6", "(1-1)");
                var v = ov.swizzle.gaab;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("(1-1)", v.y);
                Assert.AreEqual("(1-1)", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("((-7-9)5)", "(63)", "", "2");
                var v = ov.swizzle.gaabr;
                Assert.AreEqual("(63)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-7-9)5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-2-1)-9)", "(-5-7)", "");
                var v = ov.swizzle.gaabg;
                Assert.AreEqual("((-2-1)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-5-7)", v.w);
                Assert.AreEqual("((-2-1)-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-4", "-9", null);
                var v = ov.swizzle.gaabb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((8-8)-3)", "((42)8)", "((-7-6)-3)");
                var v = ov.swizzle.gaaba;
                Assert.AreEqual("((8-8)-3)", v.x);
                Assert.AreEqual("((-7-6)-3)", v.y);
                Assert.AreEqual("((-7-6)-3)", v.z);
                Assert.AreEqual("((42)8)", v.w);
                Assert.AreEqual("((-7-6)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-1-9)", "(-6-3)", "(-1-9)");
                var v = ov.swizzle.gaaa;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "((57)6)", "(05)", "-7");
                var v = ov.swizzle.gaaar;
                Assert.AreEqual("((57)6)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((03)-2)", "4", "((11)-9)", "((03)-2)");
                var v = ov.swizzle.gaaag;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((03)-2)", v.y);
                Assert.AreEqual("((03)-2)", v.z);
                Assert.AreEqual("((03)-2)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((88)9)", "(6-6)", "((-3-9)0)", "(6-6)");
                var v = ov.swizzle.gaaab;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("(6-6)", v.y);
                Assert.AreEqual("(6-6)", v.z);
                Assert.AreEqual("(6-6)", v.w);
                Assert.AreEqual("((-3-9)0)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-3)-3)", "(-8-4)", "2", "(90)");
                var v = ov.swizzle.gaaaa;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("(90)", v.z);
                Assert.AreEqual("(90)", v.w);
                Assert.AreEqual("(90)", v.v);
            }
            {
                var ov = new gvec4<string>("((-27)9)", "(-59)", "((-27)9)", "3");
                var v = ov.swizzle.br;
                Assert.AreEqual("((-27)9)", v.x);
                Assert.AreEqual("((-27)9)", v.y);
            }
            {
                var ov = new gvec4<string>("((15)9)", null, "", "((-55)7)");
                var v = ov.swizzle.brr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((15)9)", v.y);
                Assert.AreEqual("((15)9)", v.z);
            }
            {
                var ov = new gvec4<string>("(-49)", "((2-1)7)", "-9", "((-63)4)");
                var v = ov.swizzle.brrr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-49)", v.y);
                Assert.AreEqual("(-49)", v.z);
                Assert.AreEqual("(-49)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "6", "6", "((-91)-8)");
                var v = ov.swizzle.brrrr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "6", "(-5-3)", "6");
                var v = ov.swizzle.brrrg;
                Assert.AreEqual("(-5-3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("((22)6)", "", "((-6-4)-9)", "((22)6)");
                var v = ov.swizzle.brrrb;
                Assert.AreEqual("((-6-4)-9)", v.x);
                Assert.AreEqual("((22)6)", v.y);
                Assert.AreEqual("((22)6)", v.z);
                Assert.AreEqual("((22)6)", v.w);
                Assert.AreEqual("((-6-4)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(79)", "((81)-1)", "(79)", "(-9-4)");
                var v = ov.swizzle.brrra;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("(79)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-8", "", "5");
                var v = ov.swizzle.brrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-8", v.w);
            }
            {
                var ov = new gvec4<string>(null, null, "(-5-6)", "((-66)-6)");
                var v = ov.swizzle.brrgr;
                Assert.AreEqual("(-5-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(95)", "");
                var v = ov.swizzle.brrgg;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "(-97)", "7");
                var v = ov.swizzle.brrgb;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((02)-1)", "((02)-1)", "((02)-1)");
                var v = ov.swizzle.brrga;
                Assert.AreEqual("((02)-1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((02)-1)", v.w);
                Assert.AreEqual("((02)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-3)7)", "((-49)-4)", "6", "6");
                var v = ov.swizzle.brrb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((1-3)7)", v.y);
                Assert.AreEqual("((1-3)7)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("7", "((1-7)7)", "-1", "((-6-1)9)");
                var v = ov.swizzle.brrbr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((-50)-8)", null, "((83)2)", "(58)");
                var v = ov.swizzle.brrbg;
                Assert.AreEqual("((83)2)", v.x);
                Assert.AreEqual("((-50)-8)", v.y);
                Assert.AreEqual("((-50)-8)", v.z);
                Assert.AreEqual("((83)2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-10)7)", "8", "(76)", "(76)");
                var v = ov.swizzle.brrbb;
                Assert.AreEqual("(76)", v.x);
                Assert.AreEqual("((-10)7)", v.y);
                Assert.AreEqual("((-10)7)", v.z);
                Assert.AreEqual("(76)", v.w);
                Assert.AreEqual("(76)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-8)3)", null, "-6", "(73)");
                var v = ov.swizzle.brrba;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((8-8)3)", v.y);
                Assert.AreEqual("((8-8)3)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(73)", v.v);
            }
            {
                var ov = new gvec4<string>("((09)0)", "", "9", "(1-6)");
                var v = ov.swizzle.brra;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((09)0)", v.y);
                Assert.AreEqual("((09)0)", v.z);
                Assert.AreEqual("(1-6)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-2)", "(1-2)", "4", "(1-2)");
                var v = ov.swizzle.brrar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("(-4-2)", v.z);
                Assert.AreEqual("(1-2)", v.w);
                Assert.AreEqual("(-4-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-17)2)", "7", null, "");
                var v = ov.swizzle.brrag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-17)2)", v.y);
                Assert.AreEqual("((-17)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((-8-1)9)", "", "4");
                var v = ov.swizzle.brrab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-44)3)", "(0-1)", "-8", "-1");
                var v = ov.swizzle.brraa;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((-44)3)", v.y);
                Assert.AreEqual("((-44)3)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((7-9)-8)", "((7-9)-8)", null, "-1");
                var v = ov.swizzle.brg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-9)-8)", v.y);
                Assert.AreEqual("((7-9)-8)", v.z);
            }
            {
                var ov = new gvec4<string>(null, "(37)", "((6-3)5)", "((1-5)5)");
                var v = ov.swizzle.brgr;
                Assert.AreEqual("((6-3)5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(37)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("-5", null, "((23)6)", "(-33)");
                var v = ov.swizzle.brgrr;
                Assert.AreEqual("((23)6)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("-6", null, "", "-6");
                var v = ov.swizzle.brgrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-53)", "(21)", "-5", "((36)0)");
                var v = ov.swizzle.brgrb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("(21)", v.z);
                Assert.AreEqual("(-53)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "4", "((-28)-5)", "(-2-1)");
                var v = ov.swizzle.brgra;
                Assert.AreEqual("((-28)-5)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(-2-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(49)", "((-29)-9)", "-2", "");
                var v = ov.swizzle.brgg;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("(49)", v.y);
                Assert.AreEqual("((-29)-9)", v.z);
                Assert.AreEqual("((-29)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("(-8-7)", null, "(-8-7)", "(7-2)");
                var v = ov.swizzle.brggr;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-7)3)", "-5", "-1", null);
                var v = ov.swizzle.brggg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((-8-7)3)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "", "((27)8)", "0");
                var v = ov.swizzle.brggb;
                Assert.AreEqual("((27)8)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((27)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(21)", null, "", "(21)");
                var v = ov.swizzle.brgga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(21)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "((-1-3)-6)", null, "((-3-3)7)");
                var v = ov.swizzle.brgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("((-1-3)-6)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((1-9)-8)", "(14)", "", "((1-9)-8)");
                var v = ov.swizzle.brgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((1-9)-8)", v.y);
                Assert.AreEqual("(14)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((1-9)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-6)", null, "", "(-61)");
                var v = ov.swizzle.brgbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-5-6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("0", "5", "-9", "0");
                var v = ov.swizzle.brgbb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(58)", "((15)-6)", "3");
                var v = ov.swizzle.brgba;
                Assert.AreEqual("((15)-6)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("((15)-6)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("((68)9)", "-2", "(73)", "0");
                var v = ov.swizzle.brga;
                Assert.AreEqual("(73)", v.x);
                Assert.AreEqual("((68)9)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("((-3-2)-8)", "((-3-2)-8)", "1", "(81)");
                var v = ov.swizzle.brgar;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-3-2)-8)", v.y);
                Assert.AreEqual("((-3-2)-8)", v.z);
                Assert.AreEqual("(81)", v.w);
                Assert.AreEqual("((-3-2)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-37)3)", "7", "((1-4)-8)", "");
                var v = ov.swizzle.brgag;
                Assert.AreEqual("((1-4)-8)", v.x);
                Assert.AreEqual("((-37)3)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((22)-4)", "((35)3)", "((35)3)", "8");
                var v = ov.swizzle.brgab;
                Assert.AreEqual("((35)3)", v.x);
                Assert.AreEqual("((22)-4)", v.y);
                Assert.AreEqual("((35)3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((35)3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "1", "((-49)-8)", "");
                var v = ov.swizzle.brgaa;
                Assert.AreEqual("((-49)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(60)", "(4-1)", "1", "(4-1)");
                var v = ov.swizzle.brb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("1", v.z);
            }
            {
                var ov = new gvec4<string>("1", "1", "", "-1");
                var v = ov.swizzle.brbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("", "", null, "9");
                var v = ov.swizzle.brbrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)-8)", "((40)-6)", null, "((8-7)0)");
                var v = ov.swizzle.brbrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-87)-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-87)-8)", v.w);
                Assert.AreEqual("((40)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(9-7)", "(96)", "((0-9)-8)", "-9");
                var v = ov.swizzle.brbrb;
                Assert.AreEqual("((0-9)-8)", v.x);
                Assert.AreEqual("(9-7)", v.y);
                Assert.AreEqual("((0-9)-8)", v.z);
                Assert.AreEqual("(9-7)", v.w);
                Assert.AreEqual("((0-9)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "(2-1)", "(2-1)", "((2-4)-1)");
                var v = ov.swizzle.brbra;
                Assert.AreEqual("(2-1)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(2-1)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("((2-4)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((02)-7)", "3", "0", null);
                var v = ov.swizzle.brbg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((02)-7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec4<string>(null, "-1", "6", "-1");
                var v = ov.swizzle.brbgr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((34)7)", "((6-9)2)", "(93)", "((6-9)2)");
                var v = ov.swizzle.brbgg;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("((34)7)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("((6-9)2)", v.w);
                Assert.AreEqual("((6-9)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-53)", "(-2-1)", "", "(-53)");
                var v = ov.swizzle.brbgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-53)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-62)-7)", "(-1-3)", "5", "(71)");
                var v = ov.swizzle.brbga;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("((-62)-7)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(-1-3)", v.w);
                Assert.AreEqual("(71)", v.v);
            }
            {
                var ov = new gvec4<string>("(44)", null, "-3", "((49)-8)");
                var v = ov.swizzle.brbb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(44)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("((52)4)", null, "((52)4)", "(-70)");
                var v = ov.swizzle.brbbr;
                Assert.AreEqual("((52)4)", v.x);
                Assert.AreEqual("((52)4)", v.y);
                Assert.AreEqual("((52)4)", v.z);
                Assert.AreEqual("((52)4)", v.w);
                Assert.AreEqual("((52)4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-8-8)-1)", "(-1-2)", "(95)");
                var v = ov.swizzle.brbbg;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-1-2)", v.z);
                Assert.AreEqual("(-1-2)", v.w);
                Assert.AreEqual("((-8-8)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "(10)", "-9");
                var v = ov.swizzle.brbbb;
                Assert.AreEqual("(10)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(10)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("(10)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-9)", "(7-9)", "", "(-82)");
                var v = ov.swizzle.brbba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-3)-6)", "((-1-3)-6)", "4", "9");
                var v = ov.swizzle.brba;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-1-3)-6)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("9", v.w);
            }
            {
                var ov = new gvec4<string>(null, "", null, "-2");
                var v = ov.swizzle.brbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(77)", "((17)-2)", null, "(-6-6)");
                var v = ov.swizzle.brbag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(77)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-6)", v.w);
                Assert.AreEqual("((17)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((2-3)6)", "8", "(40)");
                var v = ov.swizzle.brbab;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(40)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(-8-3)", "(-8-3)", "6");
                var v = ov.swizzle.brbaa;
                Assert.AreEqual("(-8-3)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(-8-3)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-5)", "-6", "(34)", "(-6-5)");
                var v = ov.swizzle.bra;
                Assert.AreEqual("(34)", v.x);
                Assert.AreEqual("(-6-5)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
            }
            {
                var ov = new gvec4<string>("(86)", null, "(86)", "((2-8)1)");
                var v = ov.swizzle.brar;
                Assert.AreEqual("(86)", v.x);
                Assert.AreEqual("(86)", v.y);
                Assert.AreEqual("((2-8)1)", v.z);
                Assert.AreEqual("(86)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "(-6-8)", "(5-5)", "((-8-8)-9)");
                var v = ov.swizzle.brarr;
                Assert.AreEqual("(5-5)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-8-8)-9)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(6-2)", "(1-7)", "", "((80)9)");
                var v = ov.swizzle.brarg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(6-2)", v.y);
                Assert.AreEqual("((80)9)", v.z);
                Assert.AreEqual("(6-2)", v.w);
                Assert.AreEqual("(1-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "", "-4", "(83)");
                var v = ov.swizzle.brarb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("5", "5", "-3", "(-17)");
                var v = ov.swizzle.brara;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-17)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("(-17)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "(-22)", "((-8-9)-4)");
                var v = ov.swizzle.brag;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-8-9)-4)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("7", "((-2-1)6)", "(7-3)", "(-2-1)");
                var v = ov.swizzle.bragr;
                Assert.AreEqual("(7-3)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("((-2-1)6)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-89)", "((-4-9)-3)", "-1", "((-6-6)-5)");
                var v = ov.swizzle.bragg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(-89)", v.y);
                Assert.AreEqual("((-6-6)-5)", v.z);
                Assert.AreEqual("((-4-9)-3)", v.w);
                Assert.AreEqual("((-4-9)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-7)9)", "(-61)", "(-61)", "-8");
                var v = ov.swizzle.bragb;
                Assert.AreEqual("(-61)", v.x);
                Assert.AreEqual("((-1-7)9)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-61)", v.w);
                Assert.AreEqual("(-61)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(-2-2)", "((-59)8)", "(81)");
                var v = ov.swizzle.braga;
                Assert.AreEqual("((-59)8)", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("(81)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-5", "(-2-6)", "-5");
                var v = ov.swizzle.brab;
                Assert.AreEqual("(-2-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("(-2-6)", v.w);
            }
            {
                var ov = new gvec4<string>("(-91)", "((34)-9)", "((-90)-2)", "4");
                var v = ov.swizzle.brabr;
                Assert.AreEqual("((-90)-2)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-90)-2)", v.w);
                Assert.AreEqual("(-91)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-6)", "-3", "(3-6)", "8");
                var v = ov.swizzle.brabg;
                Assert.AreEqual("(3-6)", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("(3-6)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((71)-9)", "", "((-73)-6)");
                var v = ov.swizzle.brabb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-73)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "((8-9)2)", "-4", "(-29)");
                var v = ov.swizzle.braba;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-29)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec4<string>("((90)6)", "0", "(7-5)", "(6-4)");
                var v = ov.swizzle.braa;
                Assert.AreEqual("(7-5)", v.x);
                Assert.AreEqual("((90)6)", v.y);
                Assert.AreEqual("(6-4)", v.z);
                Assert.AreEqual("(6-4)", v.w);
            }
            {
                var ov = new gvec4<string>("(-8-2)", "((8-8)9)", "((8-8)9)", "((19)5)");
                var v = ov.swizzle.braar;
                Assert.AreEqual("((8-8)9)", v.x);
                Assert.AreEqual("(-8-2)", v.y);
                Assert.AreEqual("((19)5)", v.z);
                Assert.AreEqual("((19)5)", v.w);
                Assert.AreEqual("(-8-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-15)8)", "(-45)", "((-9-6)1)", "((-9-6)1)");
                var v = ov.swizzle.braag;
                Assert.AreEqual("((-9-6)1)", v.x);
                Assert.AreEqual("((-15)8)", v.y);
                Assert.AreEqual("((-9-6)1)", v.z);
                Assert.AreEqual("((-9-6)1)", v.w);
                Assert.AreEqual("(-45)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-8)-2)", "(63)", "", "(0-2)");
                var v = ov.swizzle.braab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-2-8)-2)", v.y);
                Assert.AreEqual("(0-2)", v.z);
                Assert.AreEqual("(0-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(68)", "((-78)-6)", "((7-1)-4)");
                var v = ov.swizzle.braaa;
                Assert.AreEqual("((-78)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-1)-4)", v.z);
                Assert.AreEqual("((7-1)-4)", v.w);
                Assert.AreEqual("((7-1)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("2", null, "(-47)", null);
                var v = ov.swizzle.bg;
                Assert.AreEqual("(-47)", v.x);
                Assert.AreEqual(null, v.y);
            }
            {
                var ov = new gvec4<string>("((-7-1)-1)", "((-7-1)-1)", "((-6-8)0)", "-7");
                var v = ov.swizzle.bgr;
                Assert.AreEqual("((-6-8)0)", v.x);
                Assert.AreEqual("((-7-1)-1)", v.y);
                Assert.AreEqual("((-7-1)-1)", v.z);
            }
            {
                var ov = new gvec4<string>("(-82)", "0", "((-1-8)3)", "((-67)-1)");
                var v = ov.swizzle.bgrr;
                Assert.AreEqual("((-1-8)3)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("(-82)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((-9-3)-6)", null, "(6-9)");
                var v = ov.swizzle.bgrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-3)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((2-8)0)", null, "((96)0)");
                var v = ov.swizzle.bgrrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((2-8)0)", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((2-8)0)", v.v);
            }
            {
                var ov = new gvec4<string>("(11)", "-8", "((2-8)7)", "-8");
                var v = ov.swizzle.bgrrb;
                Assert.AreEqual("((2-8)7)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(11)", v.w);
                Assert.AreEqual("((2-8)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-71)-7)", "((37)9)", "((37)9)", "(-9-4)");
                var v = ov.swizzle.bgrra;
                Assert.AreEqual("((37)9)", v.x);
                Assert.AreEqual("((37)9)", v.y);
                Assert.AreEqual("((-71)-7)", v.z);
                Assert.AreEqual("((-71)-7)", v.w);
                Assert.AreEqual("(-9-4)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-40)7)", "((56)5)", "((-40)7)");
                var v = ov.swizzle.bgrg;
                Assert.AreEqual("((56)5)", v.x);
                Assert.AreEqual("((-40)7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-40)7)", v.w);
            }
            {
                var ov = new gvec4<string>("((50)0)", "((-35)-8)", "((-87)3)", null);
                var v = ov.swizzle.bgrgr;
                Assert.AreEqual("((-87)3)", v.x);
                Assert.AreEqual("((-35)-8)", v.y);
                Assert.AreEqual("((50)0)", v.z);
                Assert.AreEqual("((-35)-8)", v.w);
                Assert.AreEqual("((50)0)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((93)2)", "-6", "((-4-5)6)");
                var v = ov.swizzle.bgrgg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("((93)2)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((93)2)", v.w);
                Assert.AreEqual("((93)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-4)", "", "((55)-4)", "(1-4)");
                var v = ov.swizzle.bgrgb;
                Assert.AreEqual("((55)-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((55)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", null, "7", "(-90)");
                var v = ov.swizzle.bgrga;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-90)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(-2-4)", "(-2-4)", "-7");
                var v = ov.swizzle.bgrb;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("(-2-4)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("(-2-4)", v.w);
            }
            {
                var ov = new gvec4<string>("7", null, "3", "");
                var v = ov.swizzle.bgrbr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(05)", "((87)-3)", "-3", null);
                var v = ov.swizzle.bgrbg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("((87)-3)", v.y);
                Assert.AreEqual("(05)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((87)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-8-3)", "((83)-8)", "");
                var v = ov.swizzle.bgrbb;
                Assert.AreEqual("((83)-8)", v.x);
                Assert.AreEqual("(-8-3)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((83)-8)", v.w);
                Assert.AreEqual("((83)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((-3-2)-5)", "((5-2)-1)", "(-5-3)");
                var v = ov.swizzle.bgrba;
                Assert.AreEqual("((5-2)-1)", v.x);
                Assert.AreEqual("((-3-2)-5)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("((5-2)-1)", v.w);
                Assert.AreEqual("(-5-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(67)", null, "(5-6)", "6");
                var v = ov.swizzle.bgra;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(67)", v.z);
                Assert.AreEqual("6", v.w);
            }
            {
                var ov = new gvec4<string>("(63)", "(63)", "(4-1)", "");
                var v = ov.swizzle.bgrar;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("(63)", v.y);
                Assert.AreEqual("(63)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(63)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "7", "((3-7)-4)", "");
                var v = ov.swizzle.bgrag;
                Assert.AreEqual("((3-7)-4)", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("((6-7)7)", "", "(-7-1)", "((9-9)-4)");
                var v = ov.swizzle.bgrab;
                Assert.AreEqual("(-7-1)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((6-7)7)", v.z);
                Assert.AreEqual("((9-9)-4)", v.w);
                Assert.AreEqual("(-7-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((6-4)-4)", "");
                var v = ov.swizzle.bgraa;
                Assert.AreEqual("((6-4)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(7-1)", "((-1-5)7)", "-4", "(7-1)");
                var v = ov.swizzle.bgg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((-1-5)7)", v.y);
                Assert.AreEqual("((-1-5)7)", v.z);
            }
            {
                var ov = new gvec4<string>("(12)", "(12)", "-1", "-3");
                var v = ov.swizzle.bggr;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("(12)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual("(12)", v.w);
            }
            {
                var ov = new gvec4<string>("2", "(48)", "", "(-18)");
                var v = ov.swizzle.bggrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(48)", v.y);
                Assert.AreEqual("(48)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-6", "(-3-1)", "((-47)3)");
                var v = ov.swizzle.bggrg;
                Assert.AreEqual("(-3-1)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("3", "((-24)-4)", "((-24)-4)", "6");
                var v = ov.swizzle.bggrb;
                Assert.AreEqual("((-24)-4)", v.x);
                Assert.AreEqual("((-24)-4)", v.y);
                Assert.AreEqual("((-24)-4)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-24)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-25)2)", "((9-1)1)", "(-15)", "-5");
                var v = ov.swizzle.bggra;
                Assert.AreEqual("(-15)", v.x);
                Assert.AreEqual("((9-1)1)", v.y);
                Assert.AreEqual("((9-1)1)", v.z);
                Assert.AreEqual("((-25)2)", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-5)-6)", null, "((-7-2)-1)", "1");
                var v = ov.swizzle.bggg;
                Assert.AreEqual("((-7-2)-1)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("5", "(-4-3)", "(5-7)", "((-6-2)-7)");
                var v = ov.swizzle.bgggr;
                Assert.AreEqual("(5-7)", v.x);
                Assert.AreEqual("(-4-3)", v.y);
                Assert.AreEqual("(-4-3)", v.z);
                Assert.AreEqual("(-4-3)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-38)", null, "-1", "");
                var v = ov.swizzle.bgggg;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("9", "(0-5)", "(0-5)", "((-4-6)1)");
                var v = ov.swizzle.bgggb;
                Assert.AreEqual("(0-5)", v.x);
                Assert.AreEqual("(0-5)", v.y);
                Assert.AreEqual("(0-5)", v.z);
                Assert.AreEqual("(0-5)", v.w);
                Assert.AreEqual("(0-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-6-5)", null, "0", "9");
                var v = ov.swizzle.bggga;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("3", "-1", "(42)", "");
                var v = ov.swizzle.bggb;
                Assert.AreEqual("(42)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(42)", v.w);
            }
            {
                var ov = new gvec4<string>("(2-1)", "(-91)", "((-9-3)-3)", "3");
                var v = ov.swizzle.bggbr;
                Assert.AreEqual("((-9-3)-3)", v.x);
                Assert.AreEqual("(-91)", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual("((-9-3)-3)", v.w);
                Assert.AreEqual("(2-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-1)-7)", "6", "", "((84)7)");
                var v = ov.swizzle.bggbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("0", "", "(43)", "(-7-4)");
                var v = ov.swizzle.bggbb;
                Assert.AreEqual("(43)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(43)", v.w);
                Assert.AreEqual("(43)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((-9-2)-4)", "((-4-6)-8)");
                var v = ov.swizzle.bggba;
                Assert.AreEqual("((-9-2)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-9-2)-4)", v.w);
                Assert.AreEqual("((-4-6)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "0", "(7-9)", "0");
                var v = ov.swizzle.bgga;
                Assert.AreEqual("(7-9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("(-22)", "-4", null, "(-10)");
                var v = ov.swizzle.bggar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(-10)", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec4<string>("((-77)7)", "((69)6)", null, "((69)6)");
                var v = ov.swizzle.bggag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((69)6)", v.y);
                Assert.AreEqual("((69)6)", v.z);
                Assert.AreEqual("((69)6)", v.w);
                Assert.AreEqual("((69)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-7)", "((1-5)-3)", "(-1-8)", "8");
                var v = ov.swizzle.bggab;
                Assert.AreEqual("(-1-8)", v.x);
                Assert.AreEqual("((1-5)-3)", v.y);
                Assert.AreEqual("((1-5)-3)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-1-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-20)", "(-41)", "((-7-9)1)", "(-41)");
                var v = ov.swizzle.bggaa;
                Assert.AreEqual("((-7-9)1)", v.x);
                Assert.AreEqual("(-41)", v.y);
                Assert.AreEqual("(-41)", v.z);
                Assert.AreEqual("(-41)", v.w);
                Assert.AreEqual("(-41)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-5)8)", "(-1-1)", "(-74)", "");
                var v = ov.swizzle.bgb;
                Assert.AreEqual("(-74)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("(-74)", v.z);
            }
            {
                var ov = new gvec4<string>("((42)6)", "((42)6)", "", "1");
                var v = ov.swizzle.bgbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((42)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((42)6)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "-5", "-4", "-4");
                var v = ov.swizzle.bgbrr;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "(69)", "((-80)-6)", "5");
                var v = ov.swizzle.bgbrg;
                Assert.AreEqual("((-80)-6)", v.x);
                Assert.AreEqual("(69)", v.y);
                Assert.AreEqual("((-80)-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(69)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", null, "((7-5)4)", null);
                var v = ov.swizzle.bgbrb;
                Assert.AreEqual("((7-5)4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-5)4)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((7-5)4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-8-9)", "5", "((2-6)-7)");
                var v = ov.swizzle.bgbra;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("(-8-9)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((2-6)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((-11)4)", "((-11)4)", "(-4-7)");
                var v = ov.swizzle.bgbg;
                Assert.AreEqual("((-11)4)", v.x);
                Assert.AreEqual("((-11)4)", v.y);
                Assert.AreEqual("((-11)4)", v.z);
                Assert.AreEqual("((-11)4)", v.w);
            }
            {
                var ov = new gvec4<string>("(-8-7)", "((-23)6)", "(1-4)", "7");
                var v = ov.swizzle.bgbgr;
                Assert.AreEqual("(1-4)", v.x);
                Assert.AreEqual("((-23)6)", v.y);
                Assert.AreEqual("(1-4)", v.z);
                Assert.AreEqual("((-23)6)", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-5)3)", "", "9", "-3");
                var v = ov.swizzle.bgbgg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "5", "5", "((-45)2)");
                var v = ov.swizzle.bgbgb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-2)", "", null, "-7");
                var v = ov.swizzle.bgbga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(7-6)", "", "((-50)0)", "");
                var v = ov.swizzle.bgbb;
                Assert.AreEqual("((-50)0)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-50)0)", v.z);
                Assert.AreEqual("((-50)0)", v.w);
            }
            {
                var ov = new gvec4<string>("(7-8)", "(7-8)", "((-45)9)", "((02)-5)");
                var v = ov.swizzle.bgbbr;
                Assert.AreEqual("((-45)9)", v.x);
                Assert.AreEqual("(7-8)", v.y);
                Assert.AreEqual("((-45)9)", v.z);
                Assert.AreEqual("((-45)9)", v.w);
                Assert.AreEqual("(7-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-8-1)2)", "((4-4)-3)", "(-9-8)", "((4-4)-3)");
                var v = ov.swizzle.bgbbg;
                Assert.AreEqual("(-9-8)", v.x);
                Assert.AreEqual("((4-4)-3)", v.y);
                Assert.AreEqual("(-9-8)", v.z);
                Assert.AreEqual("(-9-8)", v.w);
                Assert.AreEqual("((4-4)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("6", null, "((14)-4)", "8");
                var v = ov.swizzle.bgbbb;
                Assert.AreEqual("((14)-4)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((14)-4)", v.z);
                Assert.AreEqual("((14)-4)", v.w);
                Assert.AreEqual("((14)-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "1", "((-81)8)", "3");
                var v = ov.swizzle.bgbba;
                Assert.AreEqual("((-81)8)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((-81)8)", v.z);
                Assert.AreEqual("((-81)8)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(49)", "-5", "", "-3");
                var v = ov.swizzle.bgba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("4", "4", "((37)-1)", "(-81)");
                var v = ov.swizzle.bgbar;
                Assert.AreEqual("((37)-1)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((37)-1)", v.z);
                Assert.AreEqual("(-81)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(3-6)", "9", "(-30)");
                var v = ov.swizzle.bgbag;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("(3-6)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("(-30)", v.w);
                Assert.AreEqual("(3-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-4-8)-3)", "(-83)", "1");
                var v = ov.swizzle.bgbab;
                Assert.AreEqual("(-83)", v.x);
                Assert.AreEqual("((-4-8)-3)", v.y);
                Assert.AreEqual("(-83)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("(-83)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "", "(-32)", "((-5-9)2)");
                var v = ov.swizzle.bgbaa;
                Assert.AreEqual("(-32)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("((-5-9)2)", v.w);
                Assert.AreEqual("((-5-9)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-28)", "(-14)", "-9", "((7-9)-2)");
                var v = ov.swizzle.bga;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-14)", v.y);
                Assert.AreEqual("((7-9)-2)", v.z);
            }
            {
                var ov = new gvec4<string>("", "(0-7)", "", "");
                var v = ov.swizzle.bgar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(0-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("-4", "-4", "7", "");
                var v = ov.swizzle.bgarr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "(41)", "-7", null);
                var v = ov.swizzle.bgarg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(41)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(89)", v.w);
                Assert.AreEqual("(41)", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-2)9)", "-4", "((0-4)-2)", "((0-4)-2)");
                var v = ov.swizzle.bgarb;
                Assert.AreEqual("((0-4)-2)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((0-4)-2)", v.z);
                Assert.AreEqual("((-7-2)9)", v.w);
                Assert.AreEqual("((0-4)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-3)", "4", "((-32)5)", "((4-3)-3)");
                var v = ov.swizzle.bgara;
                Assert.AreEqual("((-32)5)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((4-3)-3)", v.z);
                Assert.AreEqual("(-9-3)", v.w);
                Assert.AreEqual("((4-3)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-1-6)", "-5", "((3-2)7)");
                var v = ov.swizzle.bgag;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("(-1-6)", v.y);
                Assert.AreEqual("((3-2)7)", v.z);
                Assert.AreEqual("(-1-6)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(74)", "(74)", "((-20)-4)");
                var v = ov.swizzle.bgagr;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("((-20)-4)", v.z);
                Assert.AreEqual("(74)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-18)7)", "2", "9", "(-1-8)");
                var v = ov.swizzle.bgagg;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(-61)", "((2-3)7)", "3", "(-61)");
                var v = ov.swizzle.bgagb;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("((2-3)7)", v.y);
                Assert.AreEqual("(-61)", v.z);
                Assert.AreEqual("((2-3)7)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-6-8)", "2", "6");
                var v = ov.swizzle.bgaga;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-6-8)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(-6-8)", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(88)", "9", "((91)5)", "9");
                var v = ov.swizzle.bgab;
                Assert.AreEqual("((91)5)", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((91)5)", v.w);
            }
            {
                var ov = new gvec4<string>("(28)", "((-2-3)6)", "((-4-6)9)", "((-4-6)9)");
                var v = ov.swizzle.bgabr;
                Assert.AreEqual("((-4-6)9)", v.x);
                Assert.AreEqual("((-2-3)6)", v.y);
                Assert.AreEqual("((-4-6)9)", v.z);
                Assert.AreEqual("((-4-6)9)", v.w);
                Assert.AreEqual("(28)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-4)", "(-5-2)", "-9", "((-4-8)7)");
                var v = ov.swizzle.bgabg;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(-5-2)", v.y);
                Assert.AreEqual("((-4-8)7)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-5-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(63)", "(6-5)", "((47)5)", "(6-5)");
                var v = ov.swizzle.bgabb;
                Assert.AreEqual("((47)5)", v.x);
                Assert.AreEqual("(6-5)", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("((47)5)", v.w);
                Assert.AreEqual("((47)5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-68)", "(21)", null);
                var v = ov.swizzle.bgaba;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(21)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-46)", null, "((-7-2)-6)", "-6");
                var v = ov.swizzle.bgaa;
                Assert.AreEqual("((-7-2)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
            }
            {
                var ov = new gvec4<string>("(1-7)", "4", "4", "4");
                var v = ov.swizzle.bgaar;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(1-7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-5-6)-1)", "(57)", "((-5-6)-1)");
                var v = ov.swizzle.bgaag;
                Assert.AreEqual("(57)", v.x);
                Assert.AreEqual("((-5-6)-1)", v.y);
                Assert.AreEqual("((-5-6)-1)", v.z);
                Assert.AreEqual("((-5-6)-1)", v.w);
                Assert.AreEqual("((-5-6)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((3-3)7)", "(4-4)", null, "5");
                var v = ov.swizzle.bgaab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(4-4)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((56)-6)", "3", "(-21)", "(-21)");
                var v = ov.swizzle.bgaaa;
                Assert.AreEqual("(-21)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("(-21)", v.z);
                Assert.AreEqual("(-21)", v.w);
                Assert.AreEqual("(-21)", v.v);
            }
            {
                var ov = new gvec4<string>("((46)6)", "((47)-1)", "(56)", "(7-9)");
                var v = ov.swizzle.bb;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("(56)", v.y);
            }
            {
                var ov = new gvec4<string>("((-7-7)6)", "(9-6)", "9", "(-7-2)");
                var v = ov.swizzle.bbr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-7-7)6)", v.z);
            }
            {
                var ov = new gvec4<string>("-1", "7", "((-85)-2)", null);
                var v = ov.swizzle.bbrr;
                Assert.AreEqual("((-85)-2)", v.x);
                Assert.AreEqual("((-85)-2)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
            }
            {
                var ov = new gvec4<string>("((-2-1)4)", "-6", null, "((-3-7)7)");
                var v = ov.swizzle.bbrrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-2-1)4)", v.z);
                Assert.AreEqual("((-2-1)4)", v.w);
                Assert.AreEqual("((-2-1)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(0-6)", "(7-9)", "((-9-8)-7)", null);
                var v = ov.swizzle.bbrrg;
                Assert.AreEqual("((-9-8)-7)", v.x);
                Assert.AreEqual("((-9-8)-7)", v.y);
                Assert.AreEqual("(0-6)", v.z);
                Assert.AreEqual("(0-6)", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((5-1)5)", "0", "(60)", "((5-1)5)");
                var v = ov.swizzle.bbrrb;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("((5-1)5)", v.z);
                Assert.AreEqual("((5-1)5)", v.w);
                Assert.AreEqual("(60)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "-9", "((76)4)", "-5");
                var v = ov.swizzle.bbrra;
                Assert.AreEqual("((76)4)", v.x);
                Assert.AreEqual("((76)4)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(18)", "-5", "(18)", "((38)-6)");
                var v = ov.swizzle.bbrg;
                Assert.AreEqual("(18)", v.x);
                Assert.AreEqual("(18)", v.y);
                Assert.AreEqual("(18)", v.z);
                Assert.AreEqual("-5", v.w);
            }
            {
                var ov = new gvec4<string>("((67)9)", "-6", "-6", "");
                var v = ov.swizzle.bbrgr;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((67)9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("((67)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "((58)7)", "");
                var v = ov.swizzle.bbrgg;
                Assert.AreEqual("((58)7)", v.x);
                Assert.AreEqual("((58)7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("(11)", "(-94)", "((-5-8)7)", "7");
                var v = ov.swizzle.bbrgb;
                Assert.AreEqual("((-5-8)7)", v.x);
                Assert.AreEqual("((-5-8)7)", v.y);
                Assert.AreEqual("(11)", v.z);
                Assert.AreEqual("(-94)", v.w);
                Assert.AreEqual("((-5-8)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(2-2)", "", "");
                var v = ov.swizzle.bbrga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(2-2)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-4)", "((-60)-5)", "", "(01)");
                var v = ov.swizzle.bbrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(47)", "(-8-1)", "(-8-1)", "");
                var v = ov.swizzle.bbrbr;
                Assert.AreEqual("(-8-1)", v.x);
                Assert.AreEqual("(-8-1)", v.y);
                Assert.AreEqual("(47)", v.z);
                Assert.AreEqual("(-8-1)", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "(8-3)", "(-7-9)", "(69)");
                var v = ov.swizzle.bbrbg;
                Assert.AreEqual("(-7-9)", v.x);
                Assert.AreEqual("(-7-9)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("(-7-9)", v.w);
                Assert.AreEqual("(8-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((58)9)", "3", "((-65)5)", "(1-2)");
                var v = ov.swizzle.bbrbb;
                Assert.AreEqual("((-65)5)", v.x);
                Assert.AreEqual("((-65)5)", v.y);
                Assert.AreEqual("((58)9)", v.z);
                Assert.AreEqual("((-65)5)", v.w);
                Assert.AreEqual("((-65)5)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "(59)", "9", "((65)-3)");
                var v = ov.swizzle.bbrba;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((65)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("(25)", "(-7-2)", "(-4-7)", null);
                var v = ov.swizzle.bbra;
                Assert.AreEqual("(-4-7)", v.x);
                Assert.AreEqual("(-4-7)", v.y);
                Assert.AreEqual("(25)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("4", "((-89)-6)", "-4", "(9-4)");
                var v = ov.swizzle.bbrar;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("(9-4)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((04)-2)", "((-60)3)", "((04)-2)", "-3");
                var v = ov.swizzle.bbrag;
                Assert.AreEqual("((04)-2)", v.x);
                Assert.AreEqual("((04)-2)", v.y);
                Assert.AreEqual("((04)-2)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((-60)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-6)", "-7", "-6", "(-96)");
                var v = ov.swizzle.bbrab;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(1-6)", v.z);
                Assert.AreEqual("(-96)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((7-3)1)", "(5-9)", null, "((0-9)9)");
                var v = ov.swizzle.bbraa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((7-3)1)", v.z);
                Assert.AreEqual("((0-9)9)", v.w);
                Assert.AreEqual("((0-9)9)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "2", "((-51)-1)", "2");
                var v = ov.swizzle.bbg;
                Assert.AreEqual("((-51)-1)", v.x);
                Assert.AreEqual("((-51)-1)", v.y);
                Assert.AreEqual("2", v.z);
            }
            {
                var ov = new gvec4<string>("-7", "-7", "-7", "(-9-5)");
                var v = ov.swizzle.bbgr;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>("(-9-7)", "1", "(-9-7)", "((-1-5)5)");
                var v = ov.swizzle.bbgrr;
                Assert.AreEqual("(-9-7)", v.x);
                Assert.AreEqual("(-9-7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("(-9-7)", v.w);
                Assert.AreEqual("(-9-7)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "5", "-4", "((20)2)");
                var v = ov.swizzle.bbgrg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(2-7)", "(2-7)", "(8-9)", "((-55)3)");
                var v = ov.swizzle.bbgrb;
                Assert.AreEqual("(8-9)", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("(2-7)", v.z);
                Assert.AreEqual("(2-7)", v.w);
                Assert.AreEqual("(8-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-4", "", "5");
                var v = ov.swizzle.bbgra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-7", null, "-7", "(-8-7)");
                var v = ov.swizzle.bbgg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(-85)", "(-1-8)", "-9", "(-38)");
                var v = ov.swizzle.bbggr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(-1-8)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "((-5-8)7)", "((-5-8)7)", null);
                var v = ov.swizzle.bbggg;
                Assert.AreEqual("((-5-8)7)", v.x);
                Assert.AreEqual("((-5-8)7)", v.y);
                Assert.AreEqual("((-5-8)7)", v.z);
                Assert.AreEqual("((-5-8)7)", v.w);
                Assert.AreEqual("((-5-8)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-4)", "6", "6", "((4-9)-5)");
                var v = ov.swizzle.bbggb;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("(31)", "(31)", "(31)", "");
                var v = ov.swizzle.bbgga;
                Assert.AreEqual("(31)", v.x);
                Assert.AreEqual("(31)", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("(31)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-6)-7)", "(-1-9)", "(-44)", "(-44)");
                var v = ov.swizzle.bbgb;
                Assert.AreEqual("(-44)", v.x);
                Assert.AreEqual("(-44)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("(-44)", v.w);
            }
            {
                var ov = new gvec4<string>("4", "4", "((-86)0)", "");
                var v = ov.swizzle.bbgbr;
                Assert.AreEqual("((-86)0)", v.x);
                Assert.AreEqual("((-86)0)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-86)0)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-8-7)", "", "");
                var v = ov.swizzle.bbgbg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-8-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-8-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-38)1)", "(-1-9)", "(-31)");
                var v = ov.swizzle.bbgbb;
                Assert.AreEqual("(-1-9)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("((-38)1)", v.z);
                Assert.AreEqual("(-1-9)", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-93)", "-1", "", "(51)");
                var v = ov.swizzle.bbgba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(51)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-3)", "7", "(8-1)", "(8-1)");
                var v = ov.swizzle.bbga;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(8-1)", v.w);
            }
            {
                var ov = new gvec4<string>("(-22)", "((-38)-9)", "(-22)", "-6");
                var v = ov.swizzle.bbgar;
                Assert.AreEqual("(-22)", v.x);
                Assert.AreEqual("(-22)", v.y);
                Assert.AreEqual("((-38)-9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-22)", v.v);
            }
            {
                var ov = new gvec4<string>("(56)", "3", "((60)-4)", "(56)");
                var v = ov.swizzle.bbgag;
                Assert.AreEqual("((60)-4)", v.x);
                Assert.AreEqual("((60)-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(29)", "(29)", "(8-5)", "");
                var v = ov.swizzle.bbgab;
                Assert.AreEqual("(8-5)", v.x);
                Assert.AreEqual("(8-5)", v.y);
                Assert.AreEqual("(29)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(8-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-8", "(11)", null);
                var v = ov.swizzle.bbgaa;
                Assert.AreEqual("(11)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-1", "3", "((1-6)-6)", "-1");
                var v = ov.swizzle.bbb;
                Assert.AreEqual("((1-6)-6)", v.x);
                Assert.AreEqual("((1-6)-6)", v.y);
                Assert.AreEqual("((1-6)-6)", v.z);
            }
            {
                var ov = new gvec4<string>("(2-7)", "-1", "(-4-9)", "9");
                var v = ov.swizzle.bbbr;
                Assert.AreEqual("(-4-9)", v.x);
                Assert.AreEqual("(-4-9)", v.y);
                Assert.AreEqual("(-4-9)", v.z);
                Assert.AreEqual("(2-7)", v.w);
            }
            {
                var ov = new gvec4<string>(null, null, "((72)-1)", "(69)");
                var v = ov.swizzle.bbbrr;
                Assert.AreEqual("((72)-1)", v.x);
                Assert.AreEqual("((72)-1)", v.y);
                Assert.AreEqual("((72)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-83)-1)", "", "(-2-2)", "(-2-8)");
                var v = ov.swizzle.bbbrg;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("((-83)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "(-6-4)", "-5", "((41)-9)");
                var v = ov.swizzle.bbbrb;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(9-3)", "(-8-4)", null, "1");
                var v = ov.swizzle.bbbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("((-31)0)", "(3-7)", "-7", "(3-7)");
                var v = ov.swizzle.bbbg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(3-7)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "5", "((3-3)-6)", null);
                var v = ov.swizzle.bbbgr;
                Assert.AreEqual("((3-3)-6)", v.x);
                Assert.AreEqual("((3-3)-6)", v.y);
                Assert.AreEqual("((3-3)-6)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-79)-1)", "-2", "(9-7)", "(-55)");
                var v = ov.swizzle.bbbgg;
                Assert.AreEqual("(9-7)", v.x);
                Assert.AreEqual("(9-7)", v.y);
                Assert.AreEqual("(9-7)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(29)", "-7", "(15)", "6");
                var v = ov.swizzle.bbbgb;
                Assert.AreEqual("(15)", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec4<string>("((88)-3)", "-2", "((5-1)-8)", "((88)-3)");
                var v = ov.swizzle.bbbga;
                Assert.AreEqual("((5-1)-8)", v.x);
                Assert.AreEqual("((5-1)-8)", v.y);
                Assert.AreEqual("((5-1)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("((88)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, "((84)-2)", "((84)-2)");
                var v = ov.swizzle.bbbb;
                Assert.AreEqual("((84)-2)", v.x);
                Assert.AreEqual("((84)-2)", v.y);
                Assert.AreEqual("((84)-2)", v.z);
                Assert.AreEqual("((84)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "6", "(60)", "(-64)");
                var v = ov.swizzle.bbbbr;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((3-4)-5)", "1", "((3-4)-5)");
                var v = ov.swizzle.bbbbg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((3-4)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(9-1)", "(-59)", "(-34)");
                var v = ov.swizzle.bbbbb;
                Assert.AreEqual("(-59)", v.x);
                Assert.AreEqual("(-59)", v.y);
                Assert.AreEqual("(-59)", v.z);
                Assert.AreEqual("(-59)", v.w);
                Assert.AreEqual("(-59)", v.v);
            }
            {
                var ov = new gvec4<string>("(60)", "0", "(60)", "((-72)2)");
                var v = ov.swizzle.bbbba;
                Assert.AreEqual("(60)", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("(60)", v.z);
                Assert.AreEqual("(60)", v.w);
                Assert.AreEqual("((-72)2)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(-7-3)", null, "((-22)-1)");
                var v = ov.swizzle.bbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-22)-1)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((-20)6)", null, "7");
                var v = ov.swizzle.bbbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-3", "", "(06)", "-3");
                var v = ov.swizzle.bbbag;
                Assert.AreEqual("(06)", v.x);
                Assert.AreEqual("(06)", v.y);
                Assert.AreEqual("(06)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-4)2)", "(34)", "", "(5-6)");
                var v = ov.swizzle.bbbab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(5-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "((-84)8)", "(47)");
                var v = ov.swizzle.bbbaa;
                Assert.AreEqual("((-84)8)", v.x);
                Assert.AreEqual("((-84)8)", v.y);
                Assert.AreEqual("((-84)8)", v.z);
                Assert.AreEqual("(47)", v.w);
                Assert.AreEqual("(47)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-2)1)", "(-43)", null, "((86)-9)");
                var v = ov.swizzle.bba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((86)-9)", v.z);
            }
            {
                var ov = new gvec4<string>("-3", "(66)", "2", "2");
                var v = ov.swizzle.bbar;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("((-54)7)", "-1", "(-93)", "((-41)7)");
                var v = ov.swizzle.bbarr;
                Assert.AreEqual("(-93)", v.x);
                Assert.AreEqual("(-93)", v.y);
                Assert.AreEqual("((-41)7)", v.z);
                Assert.AreEqual("((-54)7)", v.w);
                Assert.AreEqual("((-54)7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-4)2)", "(4-2)", "3", "");
                var v = ov.swizzle.bbarg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-4)2)", v.w);
                Assert.AreEqual("(4-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((22)-4)", "", "(-4-5)", null);
                var v = ov.swizzle.bbarb;
                Assert.AreEqual("(-4-5)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((22)-4)", v.w);
                Assert.AreEqual("(-4-5)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-8", "((-20)-7)", "(-71)");
                var v = ov.swizzle.bbara;
                Assert.AreEqual("((-20)-7)", v.x);
                Assert.AreEqual("((-20)-7)", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-71)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "3", "((-2-5)3)", "(9-6)");
                var v = ov.swizzle.bbag;
                Assert.AreEqual("((-2-5)3)", v.x);
                Assert.AreEqual("((-2-5)3)", v.y);
                Assert.AreEqual("(9-6)", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec4<string>("5", "(-14)", "(8-1)", null);
                var v = ov.swizzle.bbagr;
                Assert.AreEqual("(8-1)", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((34)4)", "((51)-1)", "5", "2");
                var v = ov.swizzle.bbagg;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((51)-1)", v.w);
                Assert.AreEqual("((51)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "5", "5", "5");
                var v = ov.swizzle.bbagb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("5", null, "8", "((-77)-1)");
                var v = ov.swizzle.bbaga;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-77)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-77)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-4)1)", "1", "(-6-5)", "((-48)6)");
                var v = ov.swizzle.bbab;
                Assert.AreEqual("(-6-5)", v.x);
                Assert.AreEqual("(-6-5)", v.y);
                Assert.AreEqual("((-48)6)", v.z);
                Assert.AreEqual("(-6-5)", v.w);
            }
            {
                var ov = new gvec4<string>("9", "(75)", "(-14)", "(-5-5)");
                var v = ov.swizzle.bbabr;
                Assert.AreEqual("(-14)", v.x);
                Assert.AreEqual("(-14)", v.y);
                Assert.AreEqual("(-5-5)", v.z);
                Assert.AreEqual("(-14)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("", "8", "8", "-7");
                var v = ov.swizzle.bbabg;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("", "((8-9)8)", null, "-5");
                var v = ov.swizzle.bbabb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((66)-4)", "((12)7)", "8", "(-43)");
                var v = ov.swizzle.bbaba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-43)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-43)", v.v);
            }
            {
                var ov = new gvec4<string>("((9-4)-1)", "((19)2)", null, "(3-6)");
                var v = ov.swizzle.bbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-6)", v.z);
                Assert.AreEqual("(3-6)", v.w);
            }
            {
                var ov = new gvec4<string>("5", "7", "5", "(-26)");
                var v = ov.swizzle.bbaar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("(-26)", v.z);
                Assert.AreEqual("(-26)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("(-82)", "(9-7)", "0", null);
                var v = ov.swizzle.bbaag;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(9-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-80)8)", "((-2-3)7)", "(-31)", "-6");
                var v = ov.swizzle.bbaab;
                Assert.AreEqual("(-31)", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-31)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((-6-6)6)", "", "(-64)");
                var v = ov.swizzle.bbaaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-64)", v.z);
                Assert.AreEqual("(-64)", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-80)9)", "((3-7)3)", "(-16)");
                var v = ov.swizzle.ba;
                Assert.AreEqual("((3-7)3)", v.x);
                Assert.AreEqual("(-16)", v.y);
            }
            {
                var ov = new gvec4<string>("((5-4)3)", "(4-8)", "((5-4)3)", null);
                var v = ov.swizzle.bar;
                Assert.AreEqual("((5-4)3)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((5-4)3)", v.z);
            }
            {
                var ov = new gvec4<string>("((49)8)", "8", "(45)", "-5");
                var v = ov.swizzle.barr;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("((49)8)", v.z);
                Assert.AreEqual("((49)8)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((1-8)-4)", "7", null);
                var v = ov.swizzle.barrr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-4", "", "((-88)-8)", "((86)-8)");
                var v = ov.swizzle.barrg;
                Assert.AreEqual("((-88)-8)", v.x);
                Assert.AreEqual("((86)-8)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-78)", "(19)", "((8-7)-7)", null);
                var v = ov.swizzle.barrb;
                Assert.AreEqual("((8-7)-7)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-78)", v.z);
                Assert.AreEqual("(-78)", v.w);
                Assert.AreEqual("((8-7)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(4-8)", "2", "-7", "-7");
                var v = ov.swizzle.barra;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((-52)6)", "((6-4)-9)", "-7", "(0-2)");
                var v = ov.swizzle.barg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("((-52)6)", v.z);
                Assert.AreEqual("((6-4)-9)", v.w);
            }
            {
                var ov = new gvec4<string>("-9", "2", "((-80)4)", "((65)-7)");
                var v = ov.swizzle.bargr;
                Assert.AreEqual("((-80)4)", v.x);
                Assert.AreEqual("((65)-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(5-8)", "((20)-5)", "((-5-9)-3)", "(-37)");
                var v = ov.swizzle.bargg;
                Assert.AreEqual("((-5-9)-3)", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("((20)-5)", v.w);
                Assert.AreEqual("((20)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(2-2)", "(-5-1)", "((0-2)-7)", "((8-9)-5)");
                var v = ov.swizzle.bargb;
                Assert.AreEqual("((0-2)-7)", v.x);
                Assert.AreEqual("((8-9)-5)", v.y);
                Assert.AreEqual("(2-2)", v.z);
                Assert.AreEqual("(-5-1)", v.w);
                Assert.AreEqual("((0-2)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((-50)0)", "((35)-6)", "((35)-6)");
                var v = ov.swizzle.barga;
                Assert.AreEqual("((35)-6)", v.x);
                Assert.AreEqual("((35)-6)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((-50)0)", v.w);
                Assert.AreEqual("((35)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(06)", "0", "((34)-9)");
                var v = ov.swizzle.barb;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((34)-9)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("-1", "-1", "((5-2)8)", "((45)-9)");
                var v = ov.swizzle.barbr;
                Assert.AreEqual("((5-2)8)", v.x);
                Assert.AreEqual("((45)-9)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("((5-2)8)", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("((52)-6)", "(-92)", "((6-1)5)", "");
                var v = ov.swizzle.barbg;
                Assert.AreEqual("((6-1)5)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((52)-6)", v.z);
                Assert.AreEqual("((6-1)5)", v.w);
                Assert.AreEqual("(-92)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-34)", "-9", null);
                var v = ov.swizzle.barbb;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(40)", "3", "(-2-3)", "(-81)");
                var v = ov.swizzle.barba;
                Assert.AreEqual("(-2-3)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual("(40)", v.z);
                Assert.AreEqual("(-2-3)", v.w);
                Assert.AreEqual("(-81)", v.v);
            }
            {
                var ov = new gvec4<string>("(-4-5)", "", "(-35)", "((5-1)0)");
                var v = ov.swizzle.bara;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("((5-1)0)", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("((5-1)0)", v.w);
            }
            {
                var ov = new gvec4<string>("((-1-6)-2)", "((35)1)", "5", "5");
                var v = ov.swizzle.barar;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((-1-6)-2)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-1-6)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "", null, "-2");
                var v = ov.swizzle.barag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((-9-7)2)", "((-83)-9)", "((8-1)-9)");
                var v = ov.swizzle.barab;
                Assert.AreEqual("((-83)-9)", v.x);
                Assert.AreEqual("((8-1)-9)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((8-1)-9)", v.w);
                Assert.AreEqual("((-83)-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(83)", "(83)", "(7-4)");
                var v = ov.swizzle.baraa;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(7-4)", v.w);
                Assert.AreEqual("(7-4)", v.v);
            }
            {
                var ov = new gvec4<string>("6", null, "6", "(-95)");
                var v = ov.swizzle.bag;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-95)", v.y);
                Assert.AreEqual(null, v.z);
            }
            {
                var ov = new gvec4<string>("((-1-9)4)", "((9-1)-9)", "1", "");
                var v = ov.swizzle.bagr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((9-1)-9)", v.z);
                Assert.AreEqual("((-1-9)4)", v.w);
            }
            {
                var ov = new gvec4<string>("((7-7)-6)", "((7-7)-6)", "-3", "8");
                var v = ov.swizzle.bagrr;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((7-7)-6)", v.z);
                Assert.AreEqual("((7-7)-6)", v.w);
                Assert.AreEqual("((7-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-1-4)", null, "-9");
                var v = ov.swizzle.bagrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-1-4)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-1-4)", v.v);
            }
            {
                var ov = new gvec4<string>("2", null, "(32)", "-6");
                var v = ov.swizzle.bagrb;
                Assert.AreEqual("(32)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("(32)", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(79)", "(79)");
                var v = ov.swizzle.bagra;
                Assert.AreEqual("(79)", v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-6)2)", "2", "(-8-4)", "-1");
                var v = ov.swizzle.bagg;
                Assert.AreEqual("(-8-4)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("2", v.w);
            }
            {
                var ov = new gvec4<string>("-5", "-5", "((12)1)", "((-7-7)8)");
                var v = ov.swizzle.baggr;
                Assert.AreEqual("((12)1)", v.x);
                Assert.AreEqual("((-7-7)8)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("((-85)1)", "((0-9)-2)", null, "2");
                var v = ov.swizzle.baggg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((0-9)-2)", v.z);
                Assert.AreEqual("((0-9)-2)", v.w);
                Assert.AreEqual("((0-9)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("((46)8)", "((93)-3)", "", "((46)8)");
                var v = ov.swizzle.baggb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((46)8)", v.y);
                Assert.AreEqual("((93)-3)", v.z);
                Assert.AreEqual("((93)-3)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-36)", "((-57)4)", "((06)-6)", "(-36)");
                var v = ov.swizzle.bagga;
                Assert.AreEqual("((06)-6)", v.x);
                Assert.AreEqual("(-36)", v.y);
                Assert.AreEqual("((-57)4)", v.z);
                Assert.AreEqual("((-57)4)", v.w);
                Assert.AreEqual("(-36)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "((-20)-6)", "(6-5)", "((9-8)-6)");
                var v = ov.swizzle.bagb;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("((9-8)-6)", v.y);
                Assert.AreEqual("((-20)-6)", v.z);
                Assert.AreEqual("(6-5)", v.w);
            }
            {
                var ov = new gvec4<string>("0", null, "((-75)-9)", "0");
                var v = ov.swizzle.bagbr;
                Assert.AreEqual("((-75)-9)", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-75)-9)", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-3-3)-5)", "((10)-2)", null, null);
                var v = ov.swizzle.bagbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((10)-2)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((10)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "-4", "(-9-4)");
                var v = ov.swizzle.bagbb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-9-4)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((40)-3)", "((40)-3)", "3");
                var v = ov.swizzle.bagba;
                Assert.AreEqual("((40)-3)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((40)-3)", v.z);
                Assert.AreEqual("((40)-3)", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("3", "3", "-6", "");
                var v = ov.swizzle.baga;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("5", "((6-8)-8)", "((6-6)-1)", "-2");
                var v = ov.swizzle.bagar;
                Assert.AreEqual("((6-6)-1)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((6-8)-8)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>(null, "7", "-1", "((9-5)7)");
                var v = ov.swizzle.bagag;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("((9-5)7)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((9-5)7)", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("0", "0", null, "((0-4)7)");
                var v = ov.swizzle.bagab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((0-4)7)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("((0-4)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(3-2)", "(-6-4)", "-9", "((-3-4)6)");
                var v = ov.swizzle.bagaa;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("((-3-4)6)", v.y);
                Assert.AreEqual("(-6-4)", v.z);
                Assert.AreEqual("((-3-4)6)", v.w);
                Assert.AreEqual("((-3-4)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((0-7)-2)", "0", "((0-7)-2)", null);
                var v = ov.swizzle.bab;
                Assert.AreEqual("((0-7)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((0-7)-2)", v.z);
            }
            {
                var ov = new gvec4<string>("", "((43)1)", "1", "((-38)7)");
                var v = ov.swizzle.babr;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-38)7)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(2-5)", "", "2", "(-87)");
                var v = ov.swizzle.babrr;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-87)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(2-5)", v.w);
                Assert.AreEqual("(2-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-37)", "(6-5)", "(-37)", "");
                var v = ov.swizzle.babrg;
                Assert.AreEqual("(-37)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(-37)", v.w);
                Assert.AreEqual("(6-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((57)5)", "(07)", "((57)5)", "1");
                var v = ov.swizzle.babrb;
                Assert.AreEqual("((57)5)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((57)5)", v.z);
                Assert.AreEqual("((57)5)", v.w);
                Assert.AreEqual("((57)5)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((2-5)-6)", null, "-6");
                var v = ov.swizzle.babra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("8", "(06)", "((-7-6)-9)", "");
                var v = ov.swizzle.babg;
                Assert.AreEqual("((-7-6)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-7-6)-9)", v.z);
                Assert.AreEqual("(06)", v.w);
            }
            {
                var ov = new gvec4<string>("(4-6)", "(-6-4)", "(-69)", "-1");
                var v = ov.swizzle.babgr;
                Assert.AreEqual("(-69)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-69)", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("(4-6)", v.v);
            }
            {
                var ov = new gvec4<string>("8", "8", null, "((-45)5)");
                var v = ov.swizzle.babgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-45)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((2-1)7)", null, "-5");
                var v = ov.swizzle.babgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((2-1)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "((8-6)-1)", "((-63)-9)", "");
                var v = ov.swizzle.babga;
                Assert.AreEqual("((-63)-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-63)-9)", v.z);
                Assert.AreEqual("((8-6)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(41)", "((6-3)1)", "((-1-4)-2)", "8");
                var v = ov.swizzle.babb;
                Assert.AreEqual("((-1-4)-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((-1-4)-2)", v.z);
                Assert.AreEqual("((-1-4)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((1-7)1)", "", "-9", "(50)");
                var v = ov.swizzle.babbr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("((1-7)1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(08)", "-7", "(90)");
                var v = ov.swizzle.babbg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(90)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(08)", v.v);
            }
            {
                var ov = new gvec4<string>("(64)", null, null, "(-82)");
                var v = ov.swizzle.babbb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-82)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-95)-1)", "(07)", "((-3-5)-8)", "(07)");
                var v = ov.swizzle.babba;
                Assert.AreEqual("((-3-5)-8)", v.x);
                Assert.AreEqual("(07)", v.y);
                Assert.AreEqual("((-3-5)-8)", v.z);
                Assert.AreEqual("((-3-5)-8)", v.w);
                Assert.AreEqual("(07)", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-3)9)", "", "8", null);
                var v = ov.swizzle.baba;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((1-6)-5)", "((-4-8)-2)", "-8", "((1-6)-5)");
                var v = ov.swizzle.babar;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("((1-6)-5)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("((1-6)-5)", v.w);
                Assert.AreEqual("((1-6)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-76)3)", null, null, "(52)");
                var v = ov.swizzle.babag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(52)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(52)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("7", "((1-2)-8)", "(-73)", null);
                var v = ov.swizzle.babab;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-73)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-73)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((85)5)", "2", "((-7-2)-7)");
                var v = ov.swizzle.babaa;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-7-2)-7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("((-7-2)-7)", v.w);
                Assert.AreEqual("((-7-2)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-8)", "(0-5)", "-5", "");
                var v = ov.swizzle.baa;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("0", "(-89)", "((-2-5)-4)", "((-4-1)-5)");
                var v = ov.swizzle.baar;
                Assert.AreEqual("((-2-5)-4)", v.x);
                Assert.AreEqual("((-4-1)-5)", v.y);
                Assert.AreEqual("((-4-1)-5)", v.z);
                Assert.AreEqual("0", v.w);
            }
            {
                var ov = new gvec4<string>("((7-2)2)", "(-58)", "(-58)", "((-37)-4)");
                var v = ov.swizzle.baarr;
                Assert.AreEqual("(-58)", v.x);
                Assert.AreEqual("((-37)-4)", v.y);
                Assert.AreEqual("((-37)-4)", v.z);
                Assert.AreEqual("((7-2)2)", v.w);
                Assert.AreEqual("((7-2)2)", v.v);
            }
            {
                var ov = new gvec4<string>("((-48)-5)", "(03)", "-3", "(03)");
                var v = ov.swizzle.baarg;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(03)", v.y);
                Assert.AreEqual("(03)", v.z);
                Assert.AreEqual("((-48)-5)", v.w);
                Assert.AreEqual("(03)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "(-98)", null, "((35)-7)");
                var v = ov.swizzle.baarb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((35)-7)", v.y);
                Assert.AreEqual("((35)-7)", v.z);
                Assert.AreEqual("-5", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "5", "-3", "(-7-7)");
                var v = ov.swizzle.baara;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-7-7)", v.y);
                Assert.AreEqual("(-7-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-7-7)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "", "((-8-8)-4)", "2");
                var v = ov.swizzle.baag;
                Assert.AreEqual("((-8-8)-4)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("5", "(81)", null, "((-9-9)5)");
                var v = ov.swizzle.baagr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-9-9)5)", v.y);
                Assert.AreEqual("((-9-9)5)", v.z);
                Assert.AreEqual("(81)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((09)7)", "-9", "((1-2)3)", "-6");
                var v = ov.swizzle.baagg;
                Assert.AreEqual("((1-2)3)", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((-37)-1)", "-1", "5", "");
                var v = ov.swizzle.baagb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((-7-4)3)", "((4-1)0)");
                var v = ov.swizzle.baaga;
                Assert.AreEqual("((-7-4)3)", v.x);
                Assert.AreEqual("((4-1)0)", v.y);
                Assert.AreEqual("((4-1)0)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((4-1)0)", v.v);
            }
            {
                var ov = new gvec4<string>("", "1", "-3", "1");
                var v = ov.swizzle.baab;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("(9-5)", "", "(56)", "(56)");
                var v = ov.swizzle.baabr;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("(56)", v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual("(56)", v.w);
                Assert.AreEqual("(9-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-9)", "(15)", "((6-5)-8)", "((68)-1)");
                var v = ov.swizzle.baabg;
                Assert.AreEqual("((6-5)-8)", v.x);
                Assert.AreEqual("((68)-1)", v.y);
                Assert.AreEqual("((68)-1)", v.z);
                Assert.AreEqual("((6-5)-8)", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "", "((0-7)-4)", "(3-9)");
                var v = ov.swizzle.baabb;
                Assert.AreEqual("((0-7)-4)", v.x);
                Assert.AreEqual("(3-9)", v.y);
                Assert.AreEqual("(3-9)", v.z);
                Assert.AreEqual("((0-7)-4)", v.w);
                Assert.AreEqual("((0-7)-4)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(97)", "-1", "-1");
                var v = ov.swizzle.baaba;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((2-2)9)", null, "((49)-4)");
                var v = ov.swizzle.baaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((49)-4)", v.y);
                Assert.AreEqual("((49)-4)", v.z);
                Assert.AreEqual("((49)-4)", v.w);
            }
            {
                var ov = new gvec4<string>("((4-1)0)", "-3", null, "(02)");
                var v = ov.swizzle.baaar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("(02)", v.w);
                Assert.AreEqual("((4-1)0)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((9-4)-7)", "", "((7-8)-6)");
                var v = ov.swizzle.baaag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((7-8)-6)", v.y);
                Assert.AreEqual("((7-8)-6)", v.z);
                Assert.AreEqual("((7-8)-6)", v.w);
                Assert.AreEqual("((9-4)-7)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(7-1)", "-7", "((-7-3)0)");
                var v = ov.swizzle.baaab;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((-7-3)0)", v.y);
                Assert.AreEqual("((-7-3)0)", v.z);
                Assert.AreEqual("((-7-3)0)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(-4-2)", "", "(-31)");
                var v = ov.swizzle.baaaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-31)", v.y);
                Assert.AreEqual("(-31)", v.z);
                Assert.AreEqual("(-31)", v.w);
                Assert.AreEqual("(-31)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-5)", "(5-5)", "-1", "((-9-6)7)");
                var v = ov.swizzle.ar;
                Assert.AreEqual("((-9-6)7)", v.x);
                Assert.AreEqual("(5-5)", v.y);
            }
            {
                var ov = new gvec4<string>("", "", "(95)", "9");
                var v = ov.swizzle.arr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((6-2)-6)", "(7-1)", "", "((6-2)-6)");
                var v = ov.swizzle.arrr;
                Assert.AreEqual("((6-2)-6)", v.x);
                Assert.AreEqual("((6-2)-6)", v.y);
                Assert.AreEqual("((6-2)-6)", v.z);
                Assert.AreEqual("((6-2)-6)", v.w);
            }
            {
                var ov = new gvec4<string>("3", "((-21)4)", "3", "3");
                var v = ov.swizzle.arrrr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("0", "((6-1)4)", "(1-5)", "0");
                var v = ov.swizzle.arrrg;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((6-1)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "", "(2-9)", "(2-9)");
                var v = ov.swizzle.arrrb;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(2-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-60)-1)", "((-60)-1)", "(-97)", "9");
                var v = ov.swizzle.arrra;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-60)-1)", v.y);
                Assert.AreEqual("((-60)-1)", v.z);
                Assert.AreEqual("((-60)-1)", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(2-4)", "(2-4)", "(-46)", "(2-4)");
                var v = ov.swizzle.arrg;
                Assert.AreEqual("(2-4)", v.x);
                Assert.AreEqual("(2-4)", v.y);
                Assert.AreEqual("(2-4)", v.z);
                Assert.AreEqual("(2-4)", v.w);
            }
            {
                var ov = new gvec4<string>("((32)-3)", "9", "", "8");
                var v = ov.swizzle.arrgr;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((32)-3)", v.y);
                Assert.AreEqual("((32)-3)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("((32)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "7", "(-5-5)", "7");
                var v = ov.swizzle.arrgg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(15)", "4", "", "-8");
                var v = ov.swizzle.arrgb;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(15)", v.y);
                Assert.AreEqual("(15)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((7-6)7)", null, "9", "9");
                var v = ov.swizzle.arrga;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((7-6)7)", v.y);
                Assert.AreEqual("((7-6)7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(74)", "5");
                var v = ov.swizzle.arrb;
                Assert.AreEqual("5", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(74)", v.w);
            }
            {
                var ov = new gvec4<string>("((7-9)3)", "(-84)", "((63)0)", "(56)");
                var v = ov.swizzle.arrbr;
                Assert.AreEqual("(56)", v.x);
                Assert.AreEqual("((7-9)3)", v.y);
                Assert.AreEqual("((7-9)3)", v.z);
                Assert.AreEqual("((63)0)", v.w);
                Assert.AreEqual("((7-9)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-52)", "(-52)", "(53)", "-4");
                var v = ov.swizzle.arrbg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("(-52)", v.y);
                Assert.AreEqual("(-52)", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("(-52)", v.v);
            }
            {
                var ov = new gvec4<string>("((02)-9)", "1", "", "((-50)-7)");
                var v = ov.swizzle.arrbb;
                Assert.AreEqual("((-50)-7)", v.x);
                Assert.AreEqual("((02)-9)", v.y);
                Assert.AreEqual("((02)-9)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "((19)9)", "(-35)");
                var v = ov.swizzle.arrba;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((19)9)", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-1)-3)", "((-28)7)", "-2", null);
                var v = ov.swizzle.arra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-2-1)-3)", v.y);
                Assert.AreEqual("((-2-1)-3)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((88)-4)", "-7", "((88)-4)", "-7");
                var v = ov.swizzle.arrar;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("((88)-4)", v.y);
                Assert.AreEqual("((88)-4)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("((88)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(-13)", "((9-8)1)", "(92)", "(-3-3)");
                var v = ov.swizzle.arrag;
                Assert.AreEqual("(-3-3)", v.x);
                Assert.AreEqual("(-13)", v.y);
                Assert.AreEqual("(-13)", v.z);
                Assert.AreEqual("(-3-3)", v.w);
                Assert.AreEqual("((9-8)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-8)", "(5-9)", null, null);
                var v = ov.swizzle.arrab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-79)", "-4", "(8-2)", "(-3-2)");
                var v = ov.swizzle.arraa;
                Assert.AreEqual("(-3-2)", v.x);
                Assert.AreEqual("(-79)", v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(50)", "", "-5", "(50)");
                var v = ov.swizzle.arg;
                Assert.AreEqual("(50)", v.x);
                Assert.AreEqual("(50)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>(null, "", null, "");
                var v = ov.swizzle.argr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(3-2)", "((48)3)", "", "(93)");
                var v = ov.swizzle.argrr;
                Assert.AreEqual("(93)", v.x);
                Assert.AreEqual("(3-2)", v.y);
                Assert.AreEqual("((48)3)", v.z);
                Assert.AreEqual("(3-2)", v.w);
                Assert.AreEqual("(3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-6)", "2", null, "2");
                var v = ov.swizzle.argrg;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("(-9-6)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-9-6)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(87)", "-7", "", "");
                var v = ov.swizzle.argrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(87)", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(87)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "((-32)6)", "");
                var v = ov.swizzle.argra;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(21)", "((-8-4)9)", null, "(21)");
                var v = ov.swizzle.argg;
                Assert.AreEqual("(21)", v.x);
                Assert.AreEqual("(21)", v.y);
                Assert.AreEqual("((-8-4)9)", v.z);
                Assert.AreEqual("((-8-4)9)", v.w);
            }
            {
                var ov = new gvec4<string>("((03)9)", "(-6-4)", "(02)", "0");
                var v = ov.swizzle.arggr;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("((03)9)", v.y);
                Assert.AreEqual("(-6-4)", v.z);
                Assert.AreEqual("(-6-4)", v.w);
                Assert.AreEqual("((03)9)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", null, "-2", "7");
                var v = ov.swizzle.arggg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((2-5)-5)", "(5-8)", "", "(4-3)");
                var v = ov.swizzle.arggb;
                Assert.AreEqual("(4-3)", v.x);
                Assert.AreEqual("((2-5)-5)", v.y);
                Assert.AreEqual("(5-8)", v.z);
                Assert.AreEqual("(5-8)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-84)", "((9-9)2)", "(4-3)", "((24)6)");
                var v = ov.swizzle.argga;
                Assert.AreEqual("((24)6)", v.x);
                Assert.AreEqual("(-84)", v.y);
                Assert.AreEqual("((9-9)2)", v.z);
                Assert.AreEqual("((9-9)2)", v.w);
                Assert.AreEqual("((24)6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", null, "(-67)");
                var v = ov.swizzle.argb;
                Assert.AreEqual("(-67)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>(null, "", null, "(61)");
                var v = ov.swizzle.argbr;
                Assert.AreEqual("(61)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-75)", null, "(-75)", "(0-1)");
                var v = ov.swizzle.argbg;
                Assert.AreEqual("(0-1)", v.x);
                Assert.AreEqual("(-75)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-75)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(4-8)", null, "((-28)4)", "(4-8)");
                var v = ov.swizzle.argbb;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("(4-8)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-28)4)", v.w);
                Assert.AreEqual("((-28)4)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(-8-6)", "((05)8)", "((6-5)3)");
                var v = ov.swizzle.argba;
                Assert.AreEqual("((6-5)3)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(-8-6)", v.z);
                Assert.AreEqual("((05)8)", v.w);
                Assert.AreEqual("((6-5)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(13)", "", "", "");
                var v = ov.swizzle.arga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(0-2)", "-4", "(9-8)", "((61)5)");
                var v = ov.swizzle.argar;
                Assert.AreEqual("((61)5)", v.x);
                Assert.AreEqual("(0-2)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("((61)5)", v.w);
                Assert.AreEqual("(0-2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-9)", "(-1-9)", null, "-6");
                var v = ov.swizzle.argag;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("(-1-9)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-1-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-93)0)", "((66)-9)", "((-76)3)", "(5-6)");
                var v = ov.swizzle.argab;
                Assert.AreEqual("(5-6)", v.x);
                Assert.AreEqual("((-93)0)", v.y);
                Assert.AreEqual("((66)-9)", v.z);
                Assert.AreEqual("(5-6)", v.w);
                Assert.AreEqual("((-76)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((89)5)", "((5-8)-3)", "0", "-2");
                var v = ov.swizzle.argaa;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((89)5)", v.y);
                Assert.AreEqual("((5-8)-3)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((5-5)-2)", null, "", null);
                var v = ov.swizzle.arb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((5-5)-2)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((-2-3)1)", "((-5-7)3)", "((-5-7)3)", "(95)");
                var v = ov.swizzle.arbr;
                Assert.AreEqual("(95)", v.x);
                Assert.AreEqual("((-2-3)1)", v.y);
                Assert.AreEqual("((-5-7)3)", v.z);
                Assert.AreEqual("((-2-3)1)", v.w);
            }
            {
                var ov = new gvec4<string>("((-46)6)", "", null, "((-11)4)");
                var v = ov.swizzle.arbrr;
                Assert.AreEqual("((-11)4)", v.x);
                Assert.AreEqual("((-46)6)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-46)6)", v.w);
                Assert.AreEqual("((-46)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((97)7)", "-2", "-2", "");
                var v = ov.swizzle.arbrg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((97)7)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("((97)7)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-6", null, "(2-4)");
                var v = ov.swizzle.arbrb;
                Assert.AreEqual("(2-4)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>(null, "-7", "-7", "-9");
                var v = ov.swizzle.arbra;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("(-34)", "(-93)", "", "((9-6)-1)");
                var v = ov.swizzle.arbg;
                Assert.AreEqual("((9-6)-1)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-93)", v.w);
            }
            {
                var ov = new gvec4<string>("((7-4)5)", null, "(12)", "((-16)2)");
                var v = ov.swizzle.arbgr;
                Assert.AreEqual("((-16)2)", v.x);
                Assert.AreEqual("((7-4)5)", v.y);
                Assert.AreEqual("(12)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((7-4)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "-4", "((65)-5)", "(-73)");
                var v = ov.swizzle.arbgg;
                Assert.AreEqual("(-73)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((65)-5)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "(34)", "(34)", "((11)0)");
                var v = ov.swizzle.arbgb;
                Assert.AreEqual("((11)0)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(34)", v.z);
                Assert.AreEqual("(34)", v.w);
                Assert.AreEqual("(34)", v.v);
            }
            {
                var ov = new gvec4<string>("((-50)8)", "8", "((-55)-7)", "(-64)");
                var v = ov.swizzle.arbga;
                Assert.AreEqual("(-64)", v.x);
                Assert.AreEqual("((-50)8)", v.y);
                Assert.AreEqual("((-55)-7)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("(-64)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "", "(-71)", "(-9-1)");
                var v = ov.swizzle.arbb;
                Assert.AreEqual("(-9-1)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-71)", v.z);
                Assert.AreEqual("(-71)", v.w);
            }
            {
                var ov = new gvec4<string>("((11)2)", "(-4-5)", null, "");
                var v = ov.swizzle.arbbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((11)2)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((11)2)", v.v);
            }
            {
                var ov = new gvec4<string>("(-68)", "(67)", "-3", null);
                var v = ov.swizzle.arbbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("(67)", v.v);
            }
            {
                var ov = new gvec4<string>("((85)-2)", "(7-4)", "1", "(-8-7)");
                var v = ov.swizzle.arbbb;
                Assert.AreEqual("(-8-7)", v.x);
                Assert.AreEqual("((85)-2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("", null, "(-86)", "(-97)");
                var v = ov.swizzle.arbba;
                Assert.AreEqual("(-97)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-86)", v.z);
                Assert.AreEqual("(-86)", v.w);
                Assert.AreEqual("(-97)", v.v);
            }
            {
                var ov = new gvec4<string>("(-81)", "(-3-8)", null, "(-81)");
                var v = ov.swizzle.arba;
                Assert.AreEqual("(-81)", v.x);
                Assert.AreEqual("(-81)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-81)", v.w);
            }
            {
                var ov = new gvec4<string>("((68)-1)", "3", "6", "(91)");
                var v = ov.swizzle.arbar;
                Assert.AreEqual("(91)", v.x);
                Assert.AreEqual("((68)-1)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("(91)", v.w);
                Assert.AreEqual("((68)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-2-9)", "((8-8)9)", "", "(53)");
                var v = ov.swizzle.arbag;
                Assert.AreEqual("(53)", v.x);
                Assert.AreEqual("(-2-9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(53)", v.w);
                Assert.AreEqual("((8-8)9)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "", "-5", "");
                var v = ov.swizzle.arbab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("(47)", "((-3-6)-3)", "", null);
                var v = ov.swizzle.arbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(47)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "((45)-1)", "(78)", "(-2-9)");
                var v = ov.swizzle.ara;
                Assert.AreEqual("(-2-9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-2-9)", v.z);
            }
            {
                var ov = new gvec4<string>("((-21)5)", "(49)", "(49)", "");
                var v = ov.swizzle.arar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-21)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-21)5)", v.w);
            }
            {
                var ov = new gvec4<string>("6", "(-9-5)", "((53)-1)", "6");
                var v = ov.swizzle.ararr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("6", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-26)", "3", "((1-5)8)");
                var v = ov.swizzle.ararg;
                Assert.AreEqual("((1-5)8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((1-5)8)", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(-26)", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-6)-8)", "", "5", "1");
                var v = ov.swizzle.ararb;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("((-9-6)-8)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("((-9-6)-8)", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "(72)", "(06)", "-3");
                var v = ov.swizzle.arara;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("", "(39)", "(81)", "(81)");
                var v = ov.swizzle.arag;
                Assert.AreEqual("(81)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(81)", v.z);
                Assert.AreEqual("(39)", v.w);
            }
            {
                var ov = new gvec4<string>("((-5-2)5)", null, "5", null);
                var v = ov.swizzle.aragr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-5-2)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-5-2)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-89)1)", null, "((36)-1)", "((36)-1)");
                var v = ov.swizzle.aragg;
                Assert.AreEqual("((36)-1)", v.x);
                Assert.AreEqual("((-89)1)", v.y);
                Assert.AreEqual("((36)-1)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-7-1)4)", "", "(-18)", "-2");
                var v = ov.swizzle.aragb;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-7-1)4)", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-18)", v.v);
            }
            {
                var ov = new gvec4<string>("(8-9)", null, "1", "-8");
                var v = ov.swizzle.araga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(8-9)", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(-93)", "(-4-8)", "(-4-8)");
                var v = ov.swizzle.arab;
                Assert.AreEqual("(-4-8)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(-4-8)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", null, "(4-8)", "(4-8)");
                var v = ov.swizzle.arabr;
                Assert.AreEqual("(4-8)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((82)3)", "(-5-6)", "-8", "((82)3)");
                var v = ov.swizzle.arabg;
                Assert.AreEqual("((82)3)", v.x);
                Assert.AreEqual("((82)3)", v.y);
                Assert.AreEqual("((82)3)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(-5-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-47)", null, "5", "(-98)");
                var v = ov.swizzle.arabb;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("(-47)", v.y);
                Assert.AreEqual("(-98)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("5", v.v);
            }
            {
                var ov = new gvec4<string>("((2-6)-5)", "", "((41)8)", "(2-8)");
                var v = ov.swizzle.araba;
                Assert.AreEqual("(2-8)", v.x);
                Assert.AreEqual("((2-6)-5)", v.y);
                Assert.AreEqual("(2-8)", v.z);
                Assert.AreEqual("((41)8)", v.w);
                Assert.AreEqual("(2-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((4-9)6)", "", "5", "");
                var v = ov.swizzle.araa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((4-9)6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((6-7)0)", "((6-7)0)", "-8", "((6-7)0)");
                var v = ov.swizzle.araar;
                Assert.AreEqual("((6-7)0)", v.x);
                Assert.AreEqual("((6-7)0)", v.y);
                Assert.AreEqual("((6-7)0)", v.z);
                Assert.AreEqual("((6-7)0)", v.w);
                Assert.AreEqual("((6-7)0)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-6)", "((-38)-8)", null, "");
                var v = ov.swizzle.araag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(7-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-38)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-4)", "((-6-8)-1)", "((-6-8)-1)", "((-47)3)");
                var v = ov.swizzle.araab;
                Assert.AreEqual("((-47)3)", v.x);
                Assert.AreEqual("(7-4)", v.y);
                Assert.AreEqual("((-47)3)", v.z);
                Assert.AreEqual("((-47)3)", v.w);
                Assert.AreEqual("((-6-8)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(68)", "-8", "-7");
                var v = ov.swizzle.araaa;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-4)", "3", "-5", "(35)");
                var v = ov.swizzle.ag;
                Assert.AreEqual("(35)", v.x);
                Assert.AreEqual("3", v.y);
            }
            {
                var ov = new gvec4<string>("((30)-5)", "(00)", "((30)-5)", "((30)-5)");
                var v = ov.swizzle.agr;
                Assert.AreEqual("((30)-5)", v.x);
                Assert.AreEqual("(00)", v.y);
                Assert.AreEqual("((30)-5)", v.z);
            }
            {
                var ov = new gvec4<string>("3", "((-4-8)-2)", "3", null);
                var v = ov.swizzle.agrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-4-8)-2)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("3", v.w);
            }
            {
                var ov = new gvec4<string>("((-73)-3)", "((-73)-3)", "(-23)", "-2");
                var v = ov.swizzle.agrrr;
                Assert.AreEqual("-2", v.x);
                Assert.AreEqual("((-73)-3)", v.y);
                Assert.AreEqual("((-73)-3)", v.z);
                Assert.AreEqual("((-73)-3)", v.w);
                Assert.AreEqual("((-73)-3)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((3-3)5)", "((13)-6)", null);
                var v = ov.swizzle.agrrg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((3-3)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((3-3)5)", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "(5-7)", "(5-7)", "(2-9)");
                var v = ov.swizzle.agrrb;
                Assert.AreEqual("(2-9)", v.x);
                Assert.AreEqual("(5-7)", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("(5-7)", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-5)-6)", "(-8-7)", "", "(-53)");
                var v = ov.swizzle.agrra;
                Assert.AreEqual("(-53)", v.x);
                Assert.AreEqual("(-8-7)", v.y);
                Assert.AreEqual("((-6-5)-6)", v.z);
                Assert.AreEqual("((-6-5)-6)", v.w);
                Assert.AreEqual("(-53)", v.v);
            }
            {
                var ov = new gvec4<string>("((-62)1)", "-7", null, "-7");
                var v = ov.swizzle.agrg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((-62)1)", v.z);
                Assert.AreEqual("-7", v.w);
            }
            {
                var ov = new gvec4<string>("(8-4)", null, "-8", "-8");
                var v = ov.swizzle.agrgr;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(8-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(8-4)", v.v);
            }
            {
                var ov = new gvec4<string>("(31)", "9", "((44)-3)", "");
                var v = ov.swizzle.agrgg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(31)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("(9-7)", null, "2", "");
                var v = ov.swizzle.agrgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(9-7)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("((85)-5)", "(0-9)", "((33)3)", "(45)");
                var v = ov.swizzle.agrga;
                Assert.AreEqual("(45)", v.x);
                Assert.AreEqual("(0-9)", v.y);
                Assert.AreEqual("((85)-5)", v.z);
                Assert.AreEqual("(0-9)", v.w);
                Assert.AreEqual("(45)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "((-7-4)-6)", "7", null);
                var v = ov.swizzle.agrb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-7-4)-6)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("7", v.w);
            }
            {
                var ov = new gvec4<string>("", "", "9", "((-7-1)-7)");
                var v = ov.swizzle.agrbr;
                Assert.AreEqual("((-7-1)-7)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "(79)", "((-69)7)", null);
                var v = ov.swizzle.agrbg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(79)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-69)7)", v.w);
                Assert.AreEqual("(79)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "", "((-47)2)", "((-47)2)");
                var v = ov.swizzle.agrbb;
                Assert.AreEqual("((-47)2)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-47)2)", v.w);
                Assert.AreEqual("((-47)2)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "4", "(70)", "((56)3)");
                var v = ov.swizzle.agrba;
                Assert.AreEqual("((56)3)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(70)", v.w);
                Assert.AreEqual("((56)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(-62)", "-5", null, "((-22)8)");
                var v = ov.swizzle.agra;
                Assert.AreEqual("((-22)8)", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("(-62)", v.z);
                Assert.AreEqual("((-22)8)", v.w);
            }
            {
                var ov = new gvec4<string>(null, null, "(-4-6)", "(-6-2)");
                var v = ov.swizzle.agrar;
                Assert.AreEqual("(-6-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(-6-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-7", "8", "5", "((-43)-2)");
                var v = ov.swizzle.agrag;
                Assert.AreEqual("((-43)-2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("((-43)-2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((7-8)-3)", "((-1-7)3)", "(-41)", "(1-7)");
                var v = ov.swizzle.agrab;
                Assert.AreEqual("(1-7)", v.x);
                Assert.AreEqual("((-1-7)3)", v.y);
                Assert.AreEqual("((7-8)-3)", v.z);
                Assert.AreEqual("(1-7)", v.w);
                Assert.AreEqual("(-41)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-7)", "((7-6)8)", "7", "(9-3)");
                var v = ov.swizzle.agraa;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("((7-6)8)", v.y);
                Assert.AreEqual("(-5-7)", v.z);
                Assert.AreEqual("(9-3)", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "((92)-3)", "", "");
                var v = ov.swizzle.agg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((92)-3)", v.y);
                Assert.AreEqual("((92)-3)", v.z);
            }
            {
                var ov = new gvec4<string>("(88)", "(-1-8)", "(88)", null);
                var v = ov.swizzle.aggr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-1-8)", v.y);
                Assert.AreEqual("(-1-8)", v.z);
                Assert.AreEqual("(88)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-8)", "-4", "-4", "((-9-5)-5)");
                var v = ov.swizzle.aggrr;
                Assert.AreEqual("((-9-5)-5)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("(8-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(74)", "(74)", "1", "(74)");
                var v = ov.swizzle.aggrg;
                Assert.AreEqual("(74)", v.x);
                Assert.AreEqual("(74)", v.y);
                Assert.AreEqual("(74)", v.z);
                Assert.AreEqual("(74)", v.w);
                Assert.AreEqual("(74)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-7)", "((60)-8)", "4", "((60)-8)");
                var v = ov.swizzle.aggrb;
                Assert.AreEqual("((60)-8)", v.x);
                Assert.AreEqual("((60)-8)", v.y);
                Assert.AreEqual("((60)-8)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>(null, null, null, "((-40)-2)");
                var v = ov.swizzle.aggra;
                Assert.AreEqual("((-40)-2)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-40)-2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((-61)0)", "0", "((88)-2)");
                var v = ov.swizzle.aggg;
                Assert.AreEqual("((88)-2)", v.x);
                Assert.AreEqual("((-61)0)", v.y);
                Assert.AreEqual("((-61)0)", v.z);
                Assert.AreEqual("((-61)0)", v.w);
            }
            {
                var ov = new gvec4<string>("(78)", "((-44)-9)", "(68)", "(4-1)");
                var v = ov.swizzle.agggr;
                Assert.AreEqual("(4-1)", v.x);
                Assert.AreEqual("((-44)-9)", v.y);
                Assert.AreEqual("((-44)-9)", v.z);
                Assert.AreEqual("((-44)-9)", v.w);
                Assert.AreEqual("(78)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "((-4-5)0)", "(-85)", "((4-7)-2)");
                var v = ov.swizzle.agggg;
                Assert.AreEqual("((4-7)-2)", v.x);
                Assert.AreEqual("((-4-5)0)", v.y);
                Assert.AreEqual("((-4-5)0)", v.z);
                Assert.AreEqual("((-4-5)0)", v.w);
                Assert.AreEqual("((-4-5)0)", v.v);
            }
            {
                var ov = new gvec4<string>("3", null, "7", "(29)");
                var v = ov.swizzle.agggb;
                Assert.AreEqual("(29)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("7", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-7)", "(-4-8)", "1", "((9-2)6)");
                var v = ov.swizzle.aggga;
                Assert.AreEqual("((9-2)6)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("(-4-8)", v.z);
                Assert.AreEqual("(-4-8)", v.w);
                Assert.AreEqual("((9-2)6)", v.v);
            }
            {
                var ov = new gvec4<string>("((97)6)", "(89)", "((97)6)", "((3-2)-5)");
                var v = ov.swizzle.aggb;
                Assert.AreEqual("((3-2)-5)", v.x);
                Assert.AreEqual("(89)", v.y);
                Assert.AreEqual("(89)", v.z);
                Assert.AreEqual("((97)6)", v.w);
            }
            {
                var ov = new gvec4<string>("(-5-9)", "((01)-2)", "9", "(-68)");
                var v = ov.swizzle.aggbr;
                Assert.AreEqual("(-68)", v.x);
                Assert.AreEqual("((01)-2)", v.y);
                Assert.AreEqual("((01)-2)", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("(-5-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)6)", "((-10)3)", "((2-3)1)", "((-10)3)");
                var v = ov.swizzle.aggbg;
                Assert.AreEqual("((-10)3)", v.x);
                Assert.AreEqual("((-10)3)", v.y);
                Assert.AreEqual("((-10)3)", v.z);
                Assert.AreEqual("((2-3)1)", v.w);
                Assert.AreEqual("((-10)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(3-1)", "1", null, "(3-1)");
                var v = ov.swizzle.aggbb;
                Assert.AreEqual("(3-1)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-64)5)", "(-37)", "(73)", "-3");
                var v = ov.swizzle.aggba;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-37)", v.y);
                Assert.AreEqual("(-37)", v.z);
                Assert.AreEqual("(73)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("((25)5)", "", "", "");
                var v = ov.swizzle.agga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("", "(-6-6)", null, null);
                var v = ov.swizzle.aggar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-6-6)", v.y);
                Assert.AreEqual("(-6-6)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "(86)", "(86)", "-8");
                var v = ov.swizzle.aggag;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("(86)", v.y);
                Assert.AreEqual("(86)", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("(86)", v.v);
            }
            {
                var ov = new gvec4<string>("((51)-1)", "", "((-65)8)", "((-65)8)");
                var v = ov.swizzle.aggab;
                Assert.AreEqual("((-65)8)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-65)8)", v.w);
                Assert.AreEqual("((-65)8)", v.v);
            }
            {
                var ov = new gvec4<string>("(7-8)", "5", "(-91)", "");
                var v = ov.swizzle.aggaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(7-5)", null, "", "((87)-6)");
                var v = ov.swizzle.agb;
                Assert.AreEqual("((87)-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("", "8", "(-4-5)", null);
                var v = ov.swizzle.agbr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-4-5)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>(null, "9", "((-1-8)5)", "9");
                var v = ov.swizzle.agbrr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("((-1-8)5)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("-4", "1", "1", "1");
                var v = ov.swizzle.agbrg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("4", "", "(6-3)", "2");
                var v = ov.swizzle.agbrb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("(6-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((8-8)-7)", "(-27)", "-3", "-3");
                var v = ov.swizzle.agbra;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("(-27)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("((8-8)-7)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("-4", null, "((8-7)2)", "(-9-6)");
                var v = ov.swizzle.agbg;
                Assert.AreEqual("(-9-6)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((8-7)2)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(7-9)", "-6", "((41)-4)", "9");
                var v = ov.swizzle.agbgr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("((41)-4)", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(7-9)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "4", "((-4-5)-7)", "((-4-5)-7)");
                var v = ov.swizzle.agbgg;
                Assert.AreEqual("((-4-5)-7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("((-4-5)-7)", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("(-62)", "((7-5)3)", "(-2-2)", null);
                var v = ov.swizzle.agbgb;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((7-5)3)", v.y);
                Assert.AreEqual("(-2-2)", v.z);
                Assert.AreEqual("((7-5)3)", v.w);
                Assert.AreEqual("(-2-2)", v.v);
            }
            {
                var ov = new gvec4<string>("5", "-4", "(98)", "(-35)");
                var v = ov.swizzle.agbga;
                Assert.AreEqual("(-35)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("(98)", v.z);
                Assert.AreEqual("-4", v.w);
                Assert.AreEqual("(-35)", v.v);
            }
            {
                var ov = new gvec4<string>("(-7-3)", "((-5-6)-8)", "((-20)7)", "");
                var v = ov.swizzle.agbb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-5-6)-8)", v.y);
                Assert.AreEqual("((-20)7)", v.z);
                Assert.AreEqual("((-20)7)", v.w);
            }
            {
                var ov = new gvec4<string>("(-4-7)", "(-28)", null, "(-1-2)");
                var v = ov.swizzle.agbbr;
                Assert.AreEqual("(-1-2)", v.x);
                Assert.AreEqual("(-28)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-4-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(86)", null, "(0-3)", "-4");
                var v = ov.swizzle.agbbg;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(0-3)", v.z);
                Assert.AreEqual("(0-3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((70)3)", "((8-4)6)", "(-2-1)", "(6-5)");
                var v = ov.swizzle.agbbb;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("((8-4)6)", v.y);
                Assert.AreEqual("(-2-1)", v.z);
                Assert.AreEqual("(-2-1)", v.w);
                Assert.AreEqual("(-2-1)", v.v);
            }
            {
                var ov = new gvec4<string>("-6", "((76)5)", "", "((-1-7)-2)");
                var v = ov.swizzle.agbba;
                Assert.AreEqual("((-1-7)-2)", v.x);
                Assert.AreEqual("((76)5)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-1-7)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("7", "(6-7)", "((-86)-8)", null);
                var v = ov.swizzle.agba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("((-86)-8)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("9", "4", "9", null);
                var v = ov.swizzle.agbar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("9", v.v);
            }
            {
                var ov = new gvec4<string>("((-60)6)", "((-1-4)-1)", null, "(4-4)");
                var v = ov.swizzle.agbag;
                Assert.AreEqual("(4-4)", v.x);
                Assert.AreEqual("((-1-4)-1)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(4-4)", v.w);
                Assert.AreEqual("((-1-4)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "((89)2)", "((89)2)", "");
                var v = ov.swizzle.agbab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((89)2)", v.y);
                Assert.AreEqual("((89)2)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((89)2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-1-7)7)", "2", "(84)");
                var v = ov.swizzle.agbaa;
                Assert.AreEqual("(84)", v.x);
                Assert.AreEqual("((-1-7)7)", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(84)", v.w);
                Assert.AreEqual("(84)", v.v);
            }
            {
                var ov = new gvec4<string>("((66)-6)", "(-1-9)", "4", "((66)-6)");
                var v = ov.swizzle.aga;
                Assert.AreEqual("((66)-6)", v.x);
                Assert.AreEqual("(-1-9)", v.y);
                Assert.AreEqual("((66)-6)", v.z);
            }
            {
                var ov = new gvec4<string>(null, "1", "1", "((56)-7)");
                var v = ov.swizzle.agar;
                Assert.AreEqual("((56)-7)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((56)-7)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>(null, "8", "(-91)", "(-91)");
                var v = ov.swizzle.agarr;
                Assert.AreEqual("(-91)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("(-91)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-69)-8)", "((-69)-8)", "((-57)1)", "(83)");
                var v = ov.swizzle.agarg;
                Assert.AreEqual("(83)", v.x);
                Assert.AreEqual("((-69)-8)", v.y);
                Assert.AreEqual("(83)", v.z);
                Assert.AreEqual("((-69)-8)", v.w);
                Assert.AreEqual("((-69)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(10)", "((-5-6)4)", "4", "(-82)");
                var v = ov.swizzle.agarb;
                Assert.AreEqual("(-82)", v.x);
                Assert.AreEqual("((-5-6)4)", v.y);
                Assert.AreEqual("(-82)", v.z);
                Assert.AreEqual("(10)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-3)-7)", "(11)", "(-8-6)", "((-22)0)");
                var v = ov.swizzle.agara;
                Assert.AreEqual("((-22)0)", v.x);
                Assert.AreEqual("(11)", v.y);
                Assert.AreEqual("((-22)0)", v.z);
                Assert.AreEqual("((-5-3)-7)", v.w);
                Assert.AreEqual("((-22)0)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", null, "-1", "(-79)");
                var v = ov.swizzle.agag;
                Assert.AreEqual("(-79)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-79)", v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("(9-9)", "((04)-4)", "9", "9");
                var v = ov.swizzle.agagr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((04)-4)", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((04)-4)", v.w);
                Assert.AreEqual("(9-9)", v.v);
            }
            {
                var ov = new gvec4<string>("(-9-1)", "", "(-9-1)", "-6");
                var v = ov.swizzle.agagg;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((42)-9)", "", "2", "((-6-2)-6)");
                var v = ov.swizzle.agagb;
                Assert.AreEqual("((-6-2)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-6-2)-6)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("(81)", "((-2-8)-5)", "((-2-8)-5)", "((40)-4)");
                var v = ov.swizzle.agaga;
                Assert.AreEqual("((40)-4)", v.x);
                Assert.AreEqual("((-2-8)-5)", v.y);
                Assert.AreEqual("((40)-4)", v.z);
                Assert.AreEqual("((-2-8)-5)", v.w);
                Assert.AreEqual("((40)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-62)-1)", "2", "", "(19)");
                var v = ov.swizzle.agab;
                Assert.AreEqual("(19)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("(19)", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("((15)1)", null, null, "");
                var v = ov.swizzle.agabr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((15)1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-92)", "-2", "", "((-54)7)");
                var v = ov.swizzle.agabg;
                Assert.AreEqual("((-54)7)", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("((-54)7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("(12)", "3", "(12)", "((-1-4)9)");
                var v = ov.swizzle.agabb;
                Assert.AreEqual("((-1-4)9)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-1-4)9)", v.z);
                Assert.AreEqual("(12)", v.w);
                Assert.AreEqual("(12)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-9)", "(1-9)", "5", "((-1-9)-7)");
                var v = ov.swizzle.agaba;
                Assert.AreEqual("((-1-9)-7)", v.x);
                Assert.AreEqual("(1-9)", v.y);
                Assert.AreEqual("((-1-9)-7)", v.z);
                Assert.AreEqual("5", v.w);
                Assert.AreEqual("((-1-9)-7)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-4-1)", "-6", "((10)-2)");
                var v = ov.swizzle.agaa;
                Assert.AreEqual("((10)-2)", v.x);
                Assert.AreEqual("(-4-1)", v.y);
                Assert.AreEqual("((10)-2)", v.z);
                Assert.AreEqual("((10)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((21)4)", "((10)-4)", "(-47)", "(-47)");
                var v = ov.swizzle.agaar;
                Assert.AreEqual("(-47)", v.x);
                Assert.AreEqual("((10)-4)", v.y);
                Assert.AreEqual("(-47)", v.z);
                Assert.AreEqual("(-47)", v.w);
                Assert.AreEqual("((21)4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-83)-1)", "((70)-2)", "((70)-2)", "");
                var v = ov.swizzle.agaag;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((70)-2)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((70)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "((66)-9)", "((9-1)-2)", "((9-1)-2)");
                var v = ov.swizzle.agaab;
                Assert.AreEqual("((9-1)-2)", v.x);
                Assert.AreEqual("((66)-9)", v.y);
                Assert.AreEqual("((9-1)-2)", v.z);
                Assert.AreEqual("((9-1)-2)", v.w);
                Assert.AreEqual("((9-1)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "-4", "(-75)", "((87)3)");
                var v = ov.swizzle.agaaa;
                Assert.AreEqual("((87)3)", v.x);
                Assert.AreEqual("-4", v.y);
                Assert.AreEqual("((87)3)", v.z);
                Assert.AreEqual("((87)3)", v.w);
                Assert.AreEqual("((87)3)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-5)", "1", "0", "");
                var v = ov.swizzle.ab;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("0", v.y);
            }
            {
                var ov = new gvec4<string>("6", "4", "((22)-5)", "6");
                var v = ov.swizzle.abr;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("((22)-5)", v.y);
                Assert.AreEqual("6", v.z);
            }
            {
                var ov = new gvec4<string>("(-6-8)", "((08)-7)", "((-6-5)0)", "(78)");
                var v = ov.swizzle.abrr;
                Assert.AreEqual("(78)", v.x);
                Assert.AreEqual("((-6-5)0)", v.y);
                Assert.AreEqual("(-6-8)", v.z);
                Assert.AreEqual("(-6-8)", v.w);
            }
            {
                var ov = new gvec4<string>("((8-6)3)", "(-35)", "-7", "");
                var v = ov.swizzle.abrrr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("((8-6)3)", v.z);
                Assert.AreEqual("((8-6)3)", v.w);
                Assert.AreEqual("((8-6)3)", v.v);
            }
            {
                var ov = new gvec4<string>("((33)-5)", "(8-6)", "5", "((3-8)4)");
                var v = ov.swizzle.abrrg;
                Assert.AreEqual("((3-8)4)", v.x);
                Assert.AreEqual("5", v.y);
                Assert.AreEqual("((33)-5)", v.z);
                Assert.AreEqual("((33)-5)", v.w);
                Assert.AreEqual("(8-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((-79)6)", null, "((-79)6)", "((-79)6)");
                var v = ov.swizzle.abrrb;
                Assert.AreEqual("((-79)6)", v.x);
                Assert.AreEqual("((-79)6)", v.y);
                Assert.AreEqual("((-79)6)", v.z);
                Assert.AreEqual("((-79)6)", v.w);
                Assert.AreEqual("((-79)6)", v.v);
            }
            {
                var ov = new gvec4<string>("0", "-1", "(32)", "0");
                var v = ov.swizzle.abrra;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("(32)", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-6)", "(69)", "", "1");
                var v = ov.swizzle.abrg;
                Assert.AreEqual("1", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(-5-6)", v.z);
                Assert.AreEqual("(69)", v.w);
            }
            {
                var ov = new gvec4<string>("((9-2)-6)", "(-9-1)", "(60)", "-9");
                var v = ov.swizzle.abrgr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("(60)", v.y);
                Assert.AreEqual("((9-2)-6)", v.z);
                Assert.AreEqual("(-9-1)", v.w);
                Assert.AreEqual("((9-2)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("-3", "-3", "(-8-8)", "(-98)");
                var v = ov.swizzle.abrgg;
                Assert.AreEqual("(-98)", v.x);
                Assert.AreEqual("(-8-8)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(6-5)", "((-2-9)0)", "-9", "(6-5)");
                var v = ov.swizzle.abrgb;
                Assert.AreEqual("(6-5)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(6-5)", v.z);
                Assert.AreEqual("((-2-9)0)", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((-87)9)", "7", "", null);
                var v = ov.swizzle.abrga;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-87)9)", v.z);
                Assert.AreEqual("7", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "-3", "-3", "(-33)");
                var v = ov.swizzle.abrb;
                Assert.AreEqual("(-33)", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("-3", v.w);
            }
            {
                var ov = new gvec4<string>("8", "((-8-3)4)", "", "(0-4)");
                var v = ov.swizzle.abrbr;
                Assert.AreEqual("(0-4)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("8", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((8-8)-5)", "4", "((69)7)");
                var v = ov.swizzle.abrbg;
                Assert.AreEqual("((69)7)", v.x);
                Assert.AreEqual("4", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("4", v.w);
                Assert.AreEqual("((8-8)-5)", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-2)-4)", "-1", "((-2-2)-4)", "2");
                var v = ov.swizzle.abrbb;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("((-2-2)-4)", v.y);
                Assert.AreEqual("((-2-2)-4)", v.z);
                Assert.AreEqual("((-2-2)-4)", v.w);
                Assert.AreEqual("((-2-2)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("((-96)-8)", "-5", "(13)", "((-96)-8)");
                var v = ov.swizzle.abrba;
                Assert.AreEqual("((-96)-8)", v.x);
                Assert.AreEqual("(13)", v.y);
                Assert.AreEqual("((-96)-8)", v.z);
                Assert.AreEqual("(13)", v.w);
                Assert.AreEqual("((-96)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("", "((-36)4)", "((-36)4)", "(-2-8)");
                var v = ov.swizzle.abra;
                Assert.AreEqual("(-2-8)", v.x);
                Assert.AreEqual("((-36)4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-2-8)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "(-5-6)", "(-3-3)", "");
                var v = ov.swizzle.abrar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(-3-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "", "", "((-39)-6)");
                var v = ov.swizzle.abrag;
                Assert.AreEqual("((-39)-6)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-39)-6)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("5", "((6-5)6)", "(-4-8)", "(6-6)");
                var v = ov.swizzle.abrab;
                Assert.AreEqual("(6-6)", v.x);
                Assert.AreEqual("(-4-8)", v.y);
                Assert.AreEqual("5", v.z);
                Assert.AreEqual("(6-6)", v.w);
                Assert.AreEqual("(-4-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-7)", "(09)", "-1", "");
                var v = ov.swizzle.abraa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("(-1-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((91)-7)", "(-43)", "(-43)", null);
                var v = ov.swizzle.abg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(-43)", v.y);
                Assert.AreEqual("(-43)", v.z);
            }
            {
                var ov = new gvec4<string>("((-8-8)-2)", "((-15)-3)", "((-8-8)-2)", "9");
                var v = ov.swizzle.abgr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("((-8-8)-2)", v.y);
                Assert.AreEqual("((-15)-3)", v.z);
                Assert.AreEqual("((-8-8)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("(8-8)", "((82)7)", "((-65)0)", null);
                var v = ov.swizzle.abgrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-65)0)", v.y);
                Assert.AreEqual("((82)7)", v.z);
                Assert.AreEqual("(8-8)", v.w);
                Assert.AreEqual("(8-8)", v.v);
            }
            {
                var ov = new gvec4<string>("-7", "(1-3)", null, "((90)-8)");
                var v = ov.swizzle.abgrg;
                Assert.AreEqual("((90)-8)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(1-3)", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("(1-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-14)2)", "7", "(-69)", "7");
                var v = ov.swizzle.abgrb;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(-69)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-14)2)", v.w);
                Assert.AreEqual("(-69)", v.v);
            }
            {
                var ov = new gvec4<string>("((50)-2)", "((-4-6)-9)", "((50)-2)", null);
                var v = ov.swizzle.abgra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((50)-2)", v.y);
                Assert.AreEqual("((-4-6)-9)", v.z);
                Assert.AreEqual("((50)-2)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((5-6)-1)", "(06)", "(-1-1)", "-7");
                var v = ov.swizzle.abgg;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("(06)", v.z);
                Assert.AreEqual("(06)", v.w);
            }
            {
                var ov = new gvec4<string>("(-82)", "-6", "((06)-8)", "((91)-9)");
                var v = ov.swizzle.abggr;
                Assert.AreEqual("((91)-9)", v.x);
                Assert.AreEqual("((06)-8)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("(-82)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-4)", "((-8-6)-1)", "", "(49)");
                var v = ov.swizzle.abggg;
                Assert.AreEqual("(49)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-8-6)-1)", v.z);
                Assert.AreEqual("((-8-6)-1)", v.w);
                Assert.AreEqual("((-8-6)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-3)", null, "(-77)", "((8-2)2)");
                var v = ov.swizzle.abggb;
                Assert.AreEqual("((8-2)2)", v.x);
                Assert.AreEqual("(-77)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(-77)", v.v);
            }
            {
                var ov = new gvec4<string>("((83)-4)", "(7-7)", "((8-1)8)", "((8-1)8)");
                var v = ov.swizzle.abgga;
                Assert.AreEqual("((8-1)8)", v.x);
                Assert.AreEqual("((8-1)8)", v.y);
                Assert.AreEqual("(7-7)", v.z);
                Assert.AreEqual("(7-7)", v.w);
                Assert.AreEqual("((8-1)8)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "((-26)-3)", "(36)", "");
                var v = ov.swizzle.abgb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("(36)", v.y);
                Assert.AreEqual("((-26)-3)", v.z);
                Assert.AreEqual("(36)", v.w);
            }
            {
                var ov = new gvec4<string>("(-85)", "((82)3)", "(-71)", "((-95)-3)");
                var v = ov.swizzle.abgbr;
                Assert.AreEqual("((-95)-3)", v.x);
                Assert.AreEqual("(-71)", v.y);
                Assert.AreEqual("((82)3)", v.z);
                Assert.AreEqual("(-71)", v.w);
                Assert.AreEqual("(-85)", v.v);
            }
            {
                var ov = new gvec4<string>("6", null, "", "(52)");
                var v = ov.swizzle.abgbg;
                Assert.AreEqual("(52)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("9", "-1", "-1", "(05)");
                var v = ov.swizzle.abgbb;
                Assert.AreEqual("(05)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("-1", v.v);
            }
            {
                var ov = new gvec4<string>("5", "-3", "(-58)", "((-45)8)");
                var v = ov.swizzle.abgba;
                Assert.AreEqual("((-45)8)", v.x);
                Assert.AreEqual("(-58)", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("(-58)", v.w);
                Assert.AreEqual("((-45)8)", v.v);
            }
            {
                var ov = new gvec4<string>("((-93)-5)", "(87)", "((-39)-7)", "((-93)-5)");
                var v = ov.swizzle.abga;
                Assert.AreEqual("((-93)-5)", v.x);
                Assert.AreEqual("((-39)-7)", v.y);
                Assert.AreEqual("(87)", v.z);
                Assert.AreEqual("((-93)-5)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((-65)-6)", null, "((14)-5)");
                var v = ov.swizzle.abgar;
                Assert.AreEqual("((14)-5)", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((-65)-6)", v.z);
                Assert.AreEqual("((14)-5)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("-2", "((1-2)5)", "((1-2)5)", "((1-2)5)");
                var v = ov.swizzle.abgag;
                Assert.AreEqual("((1-2)5)", v.x);
                Assert.AreEqual("((1-2)5)", v.y);
                Assert.AreEqual("((1-2)5)", v.z);
                Assert.AreEqual("((1-2)5)", v.w);
                Assert.AreEqual("((1-2)5)", v.v);
            }
            {
                var ov = new gvec4<string>("(-96)", "((34)-8)", "8", "((30)2)");
                var v = ov.swizzle.abgab;
                Assert.AreEqual("((30)2)", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("((34)-8)", v.z);
                Assert.AreEqual("((30)2)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-43)9)", "((-43)9)", "", "((-43)9)");
                var v = ov.swizzle.abgaa;
                Assert.AreEqual("((-43)9)", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-43)9)", v.z);
                Assert.AreEqual("((-43)9)", v.w);
                Assert.AreEqual("((-43)9)", v.v);
            }
            {
                var ov = new gvec4<string>("((6-9)1)", "0", "-1", "(-6-6)");
                var v = ov.swizzle.abb;
                Assert.AreEqual("(-6-6)", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-1", v.z);
            }
            {
                var ov = new gvec4<string>("(9-7)", "((55)-3)", null, "");
                var v = ov.swizzle.abbr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(9-7)", v.w);
            }
            {
                var ov = new gvec4<string>("-2", "-1", "((7-3)-5)", "(-36)");
                var v = ov.swizzle.abbrr;
                Assert.AreEqual("(-36)", v.x);
                Assert.AreEqual("((7-3)-5)", v.y);
                Assert.AreEqual("((7-3)-5)", v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((-55)1)", null, "(4-2)", "((-13)-3)");
                var v = ov.swizzle.abbrg;
                Assert.AreEqual("((-13)-3)", v.x);
                Assert.AreEqual("(4-2)", v.y);
                Assert.AreEqual("(4-2)", v.z);
                Assert.AreEqual("((-55)1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("1", "-4", "((25)-6)", "-4");
                var v = ov.swizzle.abbrb;
                Assert.AreEqual("-4", v.x);
                Assert.AreEqual("((25)-6)", v.y);
                Assert.AreEqual("((25)-6)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((25)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(79)", "(93)", null);
                var v = ov.swizzle.abbra;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(93)", v.y);
                Assert.AreEqual("(93)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("3", "(8-9)", "-7", "(5-3)");
                var v = ov.swizzle.abbg;
                Assert.AreEqual("(5-3)", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("-7", v.z);
                Assert.AreEqual("(8-9)", v.w);
            }
            {
                var ov = new gvec4<string>("((9-4)2)", "-3", "(95)", "(-72)");
                var v = ov.swizzle.abbgr;
                Assert.AreEqual("(-72)", v.x);
                Assert.AreEqual("(95)", v.y);
                Assert.AreEqual("(95)", v.z);
                Assert.AreEqual("-3", v.w);
                Assert.AreEqual("((9-4)2)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "(35)", null);
                var v = ov.swizzle.abbgg;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(35)", v.y);
                Assert.AreEqual("(35)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((16)-9)", "(24)", "-2", "9");
                var v = ov.swizzle.abbgb;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("-2", v.y);
                Assert.AreEqual("-2", v.z);
                Assert.AreEqual("(24)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((23)8)", "(16)", "((4-2)1)", "((0-5)5)");
                var v = ov.swizzle.abbga;
                Assert.AreEqual("((0-5)5)", v.x);
                Assert.AreEqual("((4-2)1)", v.y);
                Assert.AreEqual("((4-2)1)", v.z);
                Assert.AreEqual("(16)", v.w);
                Assert.AreEqual("((0-5)5)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "", "(-4-4)", "(-4-4)");
                var v = ov.swizzle.abbb;
                Assert.AreEqual("(-4-4)", v.x);
                Assert.AreEqual("(-4-4)", v.y);
                Assert.AreEqual("(-4-4)", v.z);
                Assert.AreEqual("(-4-4)", v.w);
            }
            {
                var ov = new gvec4<string>(null, "((86)9)", "(-1-1)", "((86)9)");
                var v = ov.swizzle.abbbr;
                Assert.AreEqual("((86)9)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("(-1-1)", v.z);
                Assert.AreEqual("(-1-1)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-5-1)-2)", "-7", "(8-1)", "(-2-4)");
                var v = ov.swizzle.abbbg;
                Assert.AreEqual("(-2-4)", v.x);
                Assert.AreEqual("(8-1)", v.y);
                Assert.AreEqual("(8-1)", v.z);
                Assert.AreEqual("(8-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("((-99)-3)", "-6", "((-99)-3)", "(02)");
                var v = ov.swizzle.abbbb;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("((-99)-3)", v.y);
                Assert.AreEqual("((-99)-3)", v.z);
                Assert.AreEqual("((-99)-3)", v.w);
                Assert.AreEqual("((-99)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("2", "0", "(5-5)", null);
                var v = ov.swizzle.abbba;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("(5-5)", v.y);
                Assert.AreEqual("(5-5)", v.z);
                Assert.AreEqual("(5-5)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "(10)", "((-78)-3)", "((-78)-3)");
                var v = ov.swizzle.abba;
                Assert.AreEqual("((-78)-3)", v.x);
                Assert.AreEqual("((-78)-3)", v.y);
                Assert.AreEqual("((-78)-3)", v.z);
                Assert.AreEqual("((-78)-3)", v.w);
            }
            {
                var ov = new gvec4<string>("8", "(-90)", "-9", "((29)-1)");
                var v = ov.swizzle.abbar;
                Assert.AreEqual("((29)-1)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("-9", v.z);
                Assert.AreEqual("((29)-1)", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-15)6)", "((-15)6)", "((-57)6)", "8");
                var v = ov.swizzle.abbag;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("((-57)6)", v.y);
                Assert.AreEqual("((-57)6)", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("((-15)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-38)", "9", "", "9");
                var v = ov.swizzle.abbab;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("9", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-7-4)-3)", "((-29)-9)", "((-29)-9)", null);
                var v = ov.swizzle.abbaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("((-29)-9)", v.y);
                Assert.AreEqual("((-29)-9)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("((-91)9)", "", "((44)9)", "");
                var v = ov.swizzle.aba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((44)9)", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("((-31)8)", "5", "3", "((28)0)");
                var v = ov.swizzle.abar;
                Assert.AreEqual("((28)0)", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((28)0)", v.z);
                Assert.AreEqual("((-31)8)", v.w);
            }
            {
                var ov = new gvec4<string>("((-80)8)", "(-93)", "", "7");
                var v = ov.swizzle.abarr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("((-80)8)", v.w);
                Assert.AreEqual("((-80)8)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "(15)", "(-29)", "6");
                var v = ov.swizzle.abarg;
                Assert.AreEqual("6", v.x);
                Assert.AreEqual("(-29)", v.y);
                Assert.AreEqual("6", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("(15)", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-2)", "((65)-9)", "1", "((65)-9)");
                var v = ov.swizzle.abarb;
                Assert.AreEqual("((65)-9)", v.x);
                Assert.AreEqual("1", v.y);
                Assert.AreEqual("((65)-9)", v.z);
                Assert.AreEqual("(-3-2)", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("(79)", "-8", "-9", "((6-1)7)");
                var v = ov.swizzle.abara;
                Assert.AreEqual("((6-1)7)", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((6-1)7)", v.z);
                Assert.AreEqual("(79)", v.w);
                Assert.AreEqual("((6-1)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "((-97)6)", "(-4-5)", "(-6-5)");
                var v = ov.swizzle.abag;
                Assert.AreEqual("(-6-5)", v.x);
                Assert.AreEqual("(-4-5)", v.y);
                Assert.AreEqual("(-6-5)", v.z);
                Assert.AreEqual("((-97)6)", v.w);
            }
            {
                var ov = new gvec4<string>("-3", "((-77)-3)", "((4-3)1)", "((-1-8)9)");
                var v = ov.swizzle.abagr;
                Assert.AreEqual("((-1-8)9)", v.x);
                Assert.AreEqual("((4-3)1)", v.y);
                Assert.AreEqual("((-1-8)9)", v.z);
                Assert.AreEqual("((-77)-3)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(-5-6)", "0", "(9-9)", "4");
                var v = ov.swizzle.abagg;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("0", v.v);
            }
            {
                var ov = new gvec4<string>("((-64)-6)", "", "-8", "((-88)-1)");
                var v = ov.swizzle.abagb;
                Assert.AreEqual("((-88)-1)", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("((-88)-1)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("(30)", "((-50)-3)", "((32)9)", "(30)");
                var v = ov.swizzle.abaga;
                Assert.AreEqual("(30)", v.x);
                Assert.AreEqual("((32)9)", v.y);
                Assert.AreEqual("(30)", v.z);
                Assert.AreEqual("((-50)-3)", v.w);
                Assert.AreEqual("(30)", v.v);
            }
            {
                var ov = new gvec4<string>("(06)", "(06)", "((-3-1)5)", "((8-9)-2)");
                var v = ov.swizzle.abab;
                Assert.AreEqual("((8-9)-2)", v.x);
                Assert.AreEqual("((-3-1)5)", v.y);
                Assert.AreEqual("((8-9)-2)", v.z);
                Assert.AreEqual("((-3-1)5)", v.w);
            }
            {
                var ov = new gvec4<string>("((-86)7)", "((5-3)2)", "(9-9)", "((2-4)5)");
                var v = ov.swizzle.ababr;
                Assert.AreEqual("((2-4)5)", v.x);
                Assert.AreEqual("(9-9)", v.y);
                Assert.AreEqual("((2-4)5)", v.z);
                Assert.AreEqual("(9-9)", v.w);
                Assert.AreEqual("((-86)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-1", null, "(68)", "7");
                var v = ov.swizzle.ababg;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("(68)", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(68)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("", "(60)", "((-5-4)4)", "(82)");
                var v = ov.swizzle.ababb;
                Assert.AreEqual("(82)", v.x);
                Assert.AreEqual("((-5-4)4)", v.y);
                Assert.AreEqual("(82)", v.z);
                Assert.AreEqual("((-5-4)4)", v.w);
                Assert.AreEqual("((-5-4)4)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-5)", "(92)", "((-7-3)-7)", "4");
                var v = ov.swizzle.ababa;
                Assert.AreEqual("4", v.x);
                Assert.AreEqual("((-7-3)-7)", v.y);
                Assert.AreEqual("4", v.z);
                Assert.AreEqual("((-7-3)-7)", v.w);
                Assert.AreEqual("4", v.v);
            }
            {
                var ov = new gvec4<string>("-5", null, "", null);
                var v = ov.swizzle.abaa;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
            }
            {
                var ov = new gvec4<string>("((-23)-8)", "((-13)8)", "((-13)8)", "");
                var v = ov.swizzle.abaar;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("((-13)8)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("((-23)-8)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(-29)", "((-70)-4)", "((93)-1)");
                var v = ov.swizzle.abaag;
                Assert.AreEqual("((93)-1)", v.x);
                Assert.AreEqual("((-70)-4)", v.y);
                Assert.AreEqual("((93)-1)", v.z);
                Assert.AreEqual("((93)-1)", v.w);
                Assert.AreEqual("(-29)", v.v);
            }
            {
                var ov = new gvec4<string>("(-96)", null, "(7-3)", "((42)4)");
                var v = ov.swizzle.abaab;
                Assert.AreEqual("((42)4)", v.x);
                Assert.AreEqual("(7-3)", v.y);
                Assert.AreEqual("((42)4)", v.z);
                Assert.AreEqual("((42)4)", v.w);
                Assert.AreEqual("(7-3)", v.v);
            }
            {
                var ov = new gvec4<string>("3", "", "2", "((-73)5)");
                var v = ov.swizzle.abaaa;
                Assert.AreEqual("((-73)5)", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-73)5)", v.z);
                Assert.AreEqual("((-73)5)", v.w);
                Assert.AreEqual("((-73)5)", v.v);
            }
            {
                var ov = new gvec4<string>("((1-3)9)", "((1-3)9)", "(-17)", "((-7-6)1)");
                var v = ov.swizzle.aa;
                Assert.AreEqual("((-7-6)1)", v.x);
                Assert.AreEqual("((-7-6)1)", v.y);
            }
            {
                var ov = new gvec4<string>("((87)-4)", "", "((87)-4)", "((25)4)");
                var v = ov.swizzle.aar;
                Assert.AreEqual("((25)4)", v.x);
                Assert.AreEqual("((25)4)", v.y);
                Assert.AreEqual("((87)-4)", v.z);
            }
            {
                var ov = new gvec4<string>("", "((-7-6)-1)", "(52)", "((-7-6)-1)");
                var v = ov.swizzle.aarr;
                Assert.AreEqual("((-7-6)-1)", v.x);
                Assert.AreEqual("((-7-6)-1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
            }
            {
                var ov = new gvec4<string>("(3-7)", null, "(3-7)", null);
                var v = ov.swizzle.aarrr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(3-7)", v.z);
                Assert.AreEqual("(3-7)", v.w);
                Assert.AreEqual("(3-7)", v.v);
            }
            {
                var ov = new gvec4<string>("(-8-9)", "-2", "", "((-5-9)1)");
                var v = ov.swizzle.aarrg;
                Assert.AreEqual("((-5-9)1)", v.x);
                Assert.AreEqual("((-5-9)1)", v.y);
                Assert.AreEqual("(-8-9)", v.z);
                Assert.AreEqual("(-8-9)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("((-1-2)4)", "(-7-1)", "", "((-11)-3)");
                var v = ov.swizzle.aarrb;
                Assert.AreEqual("((-11)-3)", v.x);
                Assert.AreEqual("((-11)-3)", v.y);
                Assert.AreEqual("((-1-2)4)", v.z);
                Assert.AreEqual("((-1-2)4)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(58)", "(39)", "-6", "-6");
                var v = ov.swizzle.aarra;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("(58)", v.z);
                Assert.AreEqual("(58)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>(null, "(77)", "", "((-63)-3)");
                var v = ov.swizzle.aarg;
                Assert.AreEqual("((-63)-3)", v.x);
                Assert.AreEqual("((-63)-3)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("(77)", v.w);
            }
            {
                var ov = new gvec4<string>("(-32)", "", "9", null);
                var v = ov.swizzle.aargr;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(-32)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-32)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "-9", "", "3");
                var v = ov.swizzle.aargg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-9", v.w);
                Assert.AreEqual("-9", v.v);
            }
            {
                var ov = new gvec4<string>("((-4-4)7)", "2", "-4", "");
                var v = ov.swizzle.aargb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-4-4)7)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("9", "((-10)0)", "((-10)0)", "");
                var v = ov.swizzle.aarga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-10)0)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("", "4", "(00)", "8");
                var v = ov.swizzle.aarb;
                Assert.AreEqual("8", v.x);
                Assert.AreEqual("8", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(00)", v.w);
            }
            {
                var ov = new gvec4<string>("(-6-7)", "-4", "(-2-2)", "(-2-2)");
                var v = ov.swizzle.aarbr;
                Assert.AreEqual("(-2-2)", v.x);
                Assert.AreEqual("(-2-2)", v.y);
                Assert.AreEqual("(-6-7)", v.z);
                Assert.AreEqual("(-2-2)", v.w);
                Assert.AreEqual("(-6-7)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-2", "((-85)3)", "((3-4)9)");
                var v = ov.swizzle.aarbg;
                Assert.AreEqual("((3-4)9)", v.x);
                Assert.AreEqual("((3-4)9)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-85)3)", v.w);
                Assert.AreEqual("-2", v.v);
            }
            {
                var ov = new gvec4<string>("1", null, "8", "(-33)");
                var v = ov.swizzle.aarbb;
                Assert.AreEqual("(-33)", v.x);
                Assert.AreEqual("(-33)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("8", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("((-6-8)8)", null, "2", "2");
                var v = ov.swizzle.aarba;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("((-6-8)8)", v.z);
                Assert.AreEqual("2", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "(93)", "2", "(6-7)");
                var v = ov.swizzle.aara;
                Assert.AreEqual("(6-7)", v.x);
                Assert.AreEqual("(6-7)", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("(6-7)", v.w);
            }
            {
                var ov = new gvec4<string>("((-51)6)", "(-99)", "3", "3");
                var v = ov.swizzle.aarar;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-51)6)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-51)6)", v.v);
            }
            {
                var ov = new gvec4<string>("(-1-5)", "(-1-5)", "(-7-6)", "((5-7)-2)");
                var v = ov.swizzle.aarag;
                Assert.AreEqual("((5-7)-2)", v.x);
                Assert.AreEqual("((5-7)-2)", v.y);
                Assert.AreEqual("(-1-5)", v.z);
                Assert.AreEqual("((5-7)-2)", v.w);
                Assert.AreEqual("(-1-5)", v.v);
            }
            {
                var ov = new gvec4<string>("(6-3)", "-4", "((-3-6)-1)", "((2-2)-8)");
                var v = ov.swizzle.aarab;
                Assert.AreEqual("((2-2)-8)", v.x);
                Assert.AreEqual("((2-2)-8)", v.y);
                Assert.AreEqual("(6-3)", v.z);
                Assert.AreEqual("((2-2)-8)", v.w);
                Assert.AreEqual("((-3-6)-1)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "((13)-1)", "-4", "");
                var v = ov.swizzle.aaraa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-18)9)", "((3-8)-2)", "((3-8)-2)", "((4-4)-9)");
                var v = ov.swizzle.aag;
                Assert.AreEqual("((4-4)-9)", v.x);
                Assert.AreEqual("((4-4)-9)", v.y);
                Assert.AreEqual("((3-8)-2)", v.z);
            }
            {
                var ov = new gvec4<string>("(1-4)", "((-1-8)-8)", "(1-4)", "((90)9)");
                var v = ov.swizzle.aagr;
                Assert.AreEqual("((90)9)", v.x);
                Assert.AreEqual("((90)9)", v.y);
                Assert.AreEqual("((-1-8)-8)", v.z);
                Assert.AreEqual("(1-4)", v.w);
            }
            {
                var ov = new gvec4<string>("6", "((8-2)1)", "6", "(-34)");
                var v = ov.swizzle.aagrr;
                Assert.AreEqual("(-34)", v.x);
                Assert.AreEqual("(-34)", v.y);
                Assert.AreEqual("((8-2)1)", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("6", v.v);
            }
            {
                var ov = new gvec4<string>("-1", "((-36)-2)", "(-5-7)", "(-4-6)");
                var v = ov.swizzle.aagrg;
                Assert.AreEqual("(-4-6)", v.x);
                Assert.AreEqual("(-4-6)", v.y);
                Assert.AreEqual("((-36)-2)", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((-36)-2)", v.v);
            }
            {
                var ov = new gvec4<string>("-2", null, "8", "");
                var v = ov.swizzle.aagrb;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("-2", v.w);
                Assert.AreEqual("8", v.v);
            }
            {
                var ov = new gvec4<string>("(-44)", "(-44)", "-9", "((20)-8)");
                var v = ov.swizzle.aagra;
                Assert.AreEqual("((20)-8)", v.x);
                Assert.AreEqual("((20)-8)", v.y);
                Assert.AreEqual("(-44)", v.z);
                Assert.AreEqual("(-44)", v.w);
                Assert.AreEqual("((20)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("1", "1", "(9-4)", "((60)2)");
                var v = ov.swizzle.aagg;
                Assert.AreEqual("((60)2)", v.x);
                Assert.AreEqual("((60)2)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("1", v.w);
            }
            {
                var ov = new gvec4<string>("((59)2)", "(-5-4)", "(-3-1)", "9");
                var v = ov.swizzle.aaggr;
                Assert.AreEqual("9", v.x);
                Assert.AreEqual("9", v.y);
                Assert.AreEqual("(-5-4)", v.z);
                Assert.AreEqual("(-5-4)", v.w);
                Assert.AreEqual("((59)2)", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "", "((24)-7)");
                var v = ov.swizzle.aaggg;
                Assert.AreEqual("((24)-7)", v.x);
                Assert.AreEqual("((24)-7)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(-3-6)", "((7-7)7)", null, "(-39)");
                var v = ov.swizzle.aaggb;
                Assert.AreEqual("(-39)", v.x);
                Assert.AreEqual("(-39)", v.y);
                Assert.AreEqual("((7-7)7)", v.z);
                Assert.AreEqual("((7-7)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-49)", null, "", "-8");
                var v = ov.swizzle.aagga;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("-8", v.v);
            }
            {
                var ov = new gvec4<string>("", "", "(-59)", "((1-7)1)");
                var v = ov.swizzle.aagb;
                Assert.AreEqual("((1-7)1)", v.x);
                Assert.AreEqual("((1-7)1)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("(-59)", v.w);
            }
            {
                var ov = new gvec4<string>("", "((0-4)-7)", "((-52)7)", "(17)");
                var v = ov.swizzle.aagbr;
                Assert.AreEqual("(17)", v.x);
                Assert.AreEqual("(17)", v.y);
                Assert.AreEqual("((0-4)-7)", v.z);
                Assert.AreEqual("((-52)7)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("3", "3", "-7", "(-1-4)");
                var v = ov.swizzle.aagbg;
                Assert.AreEqual("(-1-4)", v.x);
                Assert.AreEqual("(-1-4)", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("", "((4-1)-7)", "", "((4-1)-7)");
                var v = ov.swizzle.aagbb;
                Assert.AreEqual("((4-1)-7)", v.x);
                Assert.AreEqual("((4-1)-7)", v.y);
                Assert.AreEqual("((4-1)-7)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-4)-6)", "", null, "((-2-4)-6)");
                var v = ov.swizzle.aagba;
                Assert.AreEqual("((-2-4)-6)", v.x);
                Assert.AreEqual("((-2-4)-6)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((-2-4)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("(5-6)", "((-59)0)", null, "((-1-5)7)");
                var v = ov.swizzle.aaga;
                Assert.AreEqual("((-1-5)7)", v.x);
                Assert.AreEqual("((-1-5)7)", v.y);
                Assert.AreEqual("((-59)0)", v.z);
                Assert.AreEqual("((-1-5)7)", v.w);
            }
            {
                var ov = new gvec4<string>("((9-8)-9)", "-5", "-1", "-1");
                var v = ov.swizzle.aagar;
                Assert.AreEqual("-1", v.x);
                Assert.AreEqual("-1", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("-1", v.w);
                Assert.AreEqual("((9-8)-9)", v.v);
            }
            {
                var ov = new gvec4<string>("((49)-4)", null, "(0-3)", "((-36)7)");
                var v = ov.swizzle.aagag;
                Assert.AreEqual("((-36)7)", v.x);
                Assert.AreEqual("((-36)7)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-36)7)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(56)", "(56)", "(9-6)", null);
                var v = ov.swizzle.aagab;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("(56)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("(9-6)", v.v);
            }
            {
                var ov = new gvec4<string>("((83)-1)", "-1", "((83)-1)", "-6");
                var v = ov.swizzle.aagaa;
                Assert.AreEqual("-6", v.x);
                Assert.AreEqual("-6", v.y);
                Assert.AreEqual("-1", v.z);
                Assert.AreEqual("-6", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-7-1)", "", "-5");
                var v = ov.swizzle.aab;
                Assert.AreEqual("-5", v.x);
                Assert.AreEqual("-5", v.y);
                Assert.AreEqual("", v.z);
            }
            {
                var ov = new gvec4<string>("(82)", "", "((-27)1)", "");
                var v = ov.swizzle.aabr;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-27)1)", v.z);
                Assert.AreEqual("(82)", v.w);
            }
            {
                var ov = new gvec4<string>("((0-8)-4)", "0", "((0-8)-4)", "(-4-2)");
                var v = ov.swizzle.aabrr;
                Assert.AreEqual("(-4-2)", v.x);
                Assert.AreEqual("(-4-2)", v.y);
                Assert.AreEqual("((0-8)-4)", v.z);
                Assert.AreEqual("((0-8)-4)", v.w);
                Assert.AreEqual("((0-8)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("", "-5", "-4", "((-90)-7)");
                var v = ov.swizzle.aabrg;
                Assert.AreEqual("((-90)-7)", v.x);
                Assert.AreEqual("((-90)-7)", v.y);
                Assert.AreEqual("-4", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("", "-9", "-5", "((25)9)");
                var v = ov.swizzle.aabrb;
                Assert.AreEqual("((25)9)", v.x);
                Assert.AreEqual("((25)9)", v.y);
                Assert.AreEqual("-5", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("-5", v.v);
            }
            {
                var ov = new gvec4<string>("((-2-6)-1)", null, "9", "-7");
                var v = ov.swizzle.aabra;
                Assert.AreEqual("-7", v.x);
                Assert.AreEqual("-7", v.y);
                Assert.AreEqual("9", v.z);
                Assert.AreEqual("((-2-6)-1)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("4", "4", "(42)", "");
                var v = ov.swizzle.aabg;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("(42)", v.z);
                Assert.AreEqual("4", v.w);
            }
            {
                var ov = new gvec4<string>("", "((-96)9)", "((-96)9)", "-9");
                var v = ov.swizzle.aabgr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("((-96)9)", v.z);
                Assert.AreEqual("((-96)9)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(75)", "-7", "1", "(-1-1)");
                var v = ov.swizzle.aabgg;
                Assert.AreEqual("(-1-1)", v.x);
                Assert.AreEqual("(-1-1)", v.y);
                Assert.AreEqual("1", v.z);
                Assert.AreEqual("-7", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-8", "((-1-8)-5)", "-6", "((-73)-5)");
                var v = ov.swizzle.aabgb;
                Assert.AreEqual("((-73)-5)", v.x);
                Assert.AreEqual("((-73)-5)", v.y);
                Assert.AreEqual("-6", v.z);
                Assert.AreEqual("((-1-8)-5)", v.w);
                Assert.AreEqual("-6", v.v);
            }
            {
                var ov = new gvec4<string>("((33)-3)", null, "((5-7)-4)", "");
                var v = ov.swizzle.aabga;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((5-7)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("((-5-1)5)", "(-15)", "((4-2)-2)", "((-5-1)5)");
                var v = ov.swizzle.aabb;
                Assert.AreEqual("((-5-1)5)", v.x);
                Assert.AreEqual("((-5-1)5)", v.y);
                Assert.AreEqual("((4-2)-2)", v.z);
                Assert.AreEqual("((4-2)-2)", v.w);
            }
            {
                var ov = new gvec4<string>("((-5-5)-1)", "(-2-9)", "(-2-9)", "-9");
                var v = ov.swizzle.aabbr;
                Assert.AreEqual("-9", v.x);
                Assert.AreEqual("-9", v.y);
                Assert.AreEqual("(-2-9)", v.z);
                Assert.AreEqual("(-2-9)", v.w);
                Assert.AreEqual("((-5-5)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("(-72)", "3", "-8", "-8");
                var v = ov.swizzle.aabbg;
                Assert.AreEqual("-8", v.x);
                Assert.AreEqual("-8", v.y);
                Assert.AreEqual("-8", v.z);
                Assert.AreEqual("-8", v.w);
                Assert.AreEqual("3", v.v);
            }
            {
                var ov = new gvec4<string>("(4-8)", "(50)", "(4-8)", "((3-6)-1)");
                var v = ov.swizzle.aabbb;
                Assert.AreEqual("((3-6)-1)", v.x);
                Assert.AreEqual("((3-6)-1)", v.y);
                Assert.AreEqual("(4-8)", v.z);
                Assert.AreEqual("(4-8)", v.w);
                Assert.AreEqual("(4-8)", v.v);
            }
            {
                var ov = new gvec4<string>("(-68)", "(-68)", "((-7-8)-1)", "");
                var v = ov.swizzle.aabba;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("((-7-8)-1)", v.z);
                Assert.AreEqual("((-7-8)-1)", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("(89)", "", null, "((-92)5)");
                var v = ov.swizzle.aaba;
                Assert.AreEqual("((-92)5)", v.x);
                Assert.AreEqual("((-92)5)", v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("((-92)5)", v.w);
            }
            {
                var ov = new gvec4<string>("((20)-1)", "(83)", "((30)-4)", null);
                var v = ov.swizzle.aabar;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual("((30)-4)", v.z);
                Assert.AreEqual(null, v.w);
                Assert.AreEqual("((20)-1)", v.v);
            }
            {
                var ov = new gvec4<string>("((-9-6)6)", "((5-6)2)", "((5-6)2)", "((-9-6)6)");
                var v = ov.swizzle.aabag;
                Assert.AreEqual("((-9-6)6)", v.x);
                Assert.AreEqual("((-9-6)6)", v.y);
                Assert.AreEqual("((5-6)2)", v.z);
                Assert.AreEqual("((-9-6)6)", v.w);
                Assert.AreEqual("((5-6)2)", v.v);
            }
            {
                var ov = new gvec4<string>(null, "3", "((-55)7)", "3");
                var v = ov.swizzle.aabab;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("((-55)7)", v.z);
                Assert.AreEqual("3", v.w);
                Assert.AreEqual("((-55)7)", v.v);
            }
            {
                var ov = new gvec4<string>("-5", "-1", "", "((-7-1)-4)");
                var v = ov.swizzle.aabaa;
                Assert.AreEqual("((-7-1)-4)", v.x);
                Assert.AreEqual("((-7-1)-4)", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("((-7-1)-4)", v.w);
                Assert.AreEqual("((-7-1)-4)", v.v);
            }
            {
                var ov = new gvec4<string>("4", "(-5-2)", "(65)", "(65)");
                var v = ov.swizzle.aaa;
                Assert.AreEqual("(65)", v.x);
                Assert.AreEqual("(65)", v.y);
                Assert.AreEqual("(65)", v.z);
            }
            {
                var ov = new gvec4<string>("(-26)", "(55)", "(-26)", "(55)");
                var v = ov.swizzle.aaar;
                Assert.AreEqual("(55)", v.x);
                Assert.AreEqual("(55)", v.y);
                Assert.AreEqual("(55)", v.z);
                Assert.AreEqual("(-26)", v.w);
            }
            {
                var ov = new gvec4<string>("(94)", "2", "(59)", "7");
                var v = ov.swizzle.aaarr;
                Assert.AreEqual("7", v.x);
                Assert.AreEqual("7", v.y);
                Assert.AreEqual("7", v.z);
                Assert.AreEqual("(94)", v.w);
                Assert.AreEqual("(94)", v.v);
            }
            {
                var ov = new gvec4<string>("", "(-3-2)", "((-94)9)", "3");
                var v = ov.swizzle.aaarg;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("(-3-2)", v.v);
            }
            {
                var ov = new gvec4<string>("6", "6", "-4", "-3");
                var v = ov.swizzle.aaarb;
                Assert.AreEqual("-3", v.x);
                Assert.AreEqual("-3", v.y);
                Assert.AreEqual("-3", v.z);
                Assert.AreEqual("6", v.w);
                Assert.AreEqual("-4", v.v);
            }
            {
                var ov = new gvec4<string>("(61)", "(61)", "((-92)-9)", "((3-7)-6)");
                var v = ov.swizzle.aaara;
                Assert.AreEqual("((3-7)-6)", v.x);
                Assert.AreEqual("((3-7)-6)", v.y);
                Assert.AreEqual("((3-7)-6)", v.z);
                Assert.AreEqual("(61)", v.w);
                Assert.AreEqual("((3-7)-6)", v.v);
            }
            {
                var ov = new gvec4<string>("9", "5", "9", null);
                var v = ov.swizzle.aaag;
                Assert.AreEqual(null, v.x);
                Assert.AreEqual(null, v.y);
                Assert.AreEqual(null, v.z);
                Assert.AreEqual("5", v.w);
            }
            {
                var ov = new gvec4<string>("-7", "((5-6)-7)", "((-55)9)", "3");
                var v = ov.swizzle.aaagr;
                Assert.AreEqual("3", v.x);
                Assert.AreEqual("3", v.y);
                Assert.AreEqual("3", v.z);
                Assert.AreEqual("((5-6)-7)", v.w);
                Assert.AreEqual("-7", v.v);
            }
            {
                var ov = new gvec4<string>("-4", "", "((6-9)0)", "(02)");
                var v = ov.swizzle.aaagg;
                Assert.AreEqual("(02)", v.x);
                Assert.AreEqual("(02)", v.y);
                Assert.AreEqual("(02)", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
            {
                var ov = new gvec4<string>("6", "1", "((91)-8)", "((91)-8)");
                var v = ov.swizzle.aaagb;
                Assert.AreEqual("((91)-8)", v.x);
                Assert.AreEqual("((91)-8)", v.y);
                Assert.AreEqual("((91)-8)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("((91)-8)", v.v);
            }
            {
                var ov = new gvec4<string>("((84)-8)", "(-68)", "", "2");
                var v = ov.swizzle.aaaga;
                Assert.AreEqual("2", v.x);
                Assert.AreEqual("2", v.y);
                Assert.AreEqual("2", v.z);
                Assert.AreEqual("(-68)", v.w);
                Assert.AreEqual("2", v.v);
            }
            {
                var ov = new gvec4<string>("6", "-9", "(-50)", "(-50)");
                var v = ov.swizzle.aaab;
                Assert.AreEqual("(-50)", v.x);
                Assert.AreEqual("(-50)", v.y);
                Assert.AreEqual("(-50)", v.z);
                Assert.AreEqual("(-50)", v.w);
            }
            {
                var ov = new gvec4<string>("-3", "((-6-1)-8)", "((02)-2)", "(-68)");
                var v = ov.swizzle.aaabr;
                Assert.AreEqual("(-68)", v.x);
                Assert.AreEqual("(-68)", v.y);
                Assert.AreEqual("(-68)", v.z);
                Assert.AreEqual("((02)-2)", v.w);
                Assert.AreEqual("-3", v.v);
            }
            {
                var ov = new gvec4<string>("(08)", null, "((-57)3)", "(08)");
                var v = ov.swizzle.aaabg;
                Assert.AreEqual("(08)", v.x);
                Assert.AreEqual("(08)", v.y);
                Assert.AreEqual("(08)", v.z);
                Assert.AreEqual("((-57)3)", v.w);
                Assert.AreEqual(null, v.v);
            }
            {
                var ov = new gvec4<string>("(-30)", "(-40)", "1", "((-71)8)");
                var v = ov.swizzle.aaabb;
                Assert.AreEqual("((-71)8)", v.x);
                Assert.AreEqual("((-71)8)", v.y);
                Assert.AreEqual("((-71)8)", v.z);
                Assert.AreEqual("1", v.w);
                Assert.AreEqual("1", v.v);
            }
            {
                var ov = new gvec4<string>("-9", "((19)2)", "(1-6)", "(9-3)");
                var v = ov.swizzle.aaaba;
                Assert.AreEqual("(9-3)", v.x);
                Assert.AreEqual("(9-3)", v.y);
                Assert.AreEqual("(9-3)", v.z);
                Assert.AreEqual("(1-6)", v.w);
                Assert.AreEqual("(9-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((-41)8)", "((5-1)-9)", "5", "((-41)8)");
                var v = ov.swizzle.aaaa;
                Assert.AreEqual("((-41)8)", v.x);
                Assert.AreEqual("((-41)8)", v.y);
                Assert.AreEqual("((-41)8)", v.z);
                Assert.AreEqual("((-41)8)", v.w);
            }
            {
                var ov = new gvec4<string>("((57)-3)", "((-33)0)", "(8-1)", "((-6-9)-6)");
                var v = ov.swizzle.aaaar;
                Assert.AreEqual("((-6-9)-6)", v.x);
                Assert.AreEqual("((-6-9)-6)", v.y);
                Assert.AreEqual("((-6-9)-6)", v.z);
                Assert.AreEqual("((-6-9)-6)", v.w);
                Assert.AreEqual("((57)-3)", v.v);
            }
            {
                var ov = new gvec4<string>("((16)3)", "((74)7)", "((74)7)", "(-51)");
                var v = ov.swizzle.aaaag;
                Assert.AreEqual("(-51)", v.x);
                Assert.AreEqual("(-51)", v.y);
                Assert.AreEqual("(-51)", v.z);
                Assert.AreEqual("(-51)", v.w);
                Assert.AreEqual("((74)7)", v.v);
            }
            {
                var ov = new gvec4<string>("(1-1)", "(-2-7)", "((6-6)5)", "0");
                var v = ov.swizzle.aaaab;
                Assert.AreEqual("0", v.x);
                Assert.AreEqual("0", v.y);
                Assert.AreEqual("0", v.z);
                Assert.AreEqual("0", v.w);
                Assert.AreEqual("((6-6)5)", v.v);
            }
            {
                var ov = new gvec4<string>("(62)", "((-8-5)-8)", "((7-9)-1)", "");
                var v = ov.swizzle.aaaaa;
                Assert.AreEqual("", v.x);
                Assert.AreEqual("", v.y);
                Assert.AreEqual("", v.z);
                Assert.AreEqual("", v.w);
                Assert.AreEqual("", v.v);
            }
        }

        [Test]
        public void InlineXYZW()
        {
            {
                var v0 = new gvec4<string>("", "((-48)7)", "1", "(-35)");
                var v1 = new gvec2<string>("(95)", "");
                var v2 = v0.xy;
                v0.xy = v1;
                var v3 = v0.xy;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(95)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("1", v0.z);
                Assert.AreEqual("(-35)", v0.w);
            
                Assert.AreEqual("", v2.x);
                Assert.AreEqual("((-48)7)", v2.y);
            }
            {
                var v0 = new gvec4<string>("((-5-3)-1)", "((-5-3)-1)", "((-2-4)-2)", "((6-6)-9)");
                var v1 = new gvec2<string>("(7-4)", "((-16)4)");
                var v2 = v0.xz;
                v0.xz = v1;
                var v3 = v0.xz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(7-4)", v0.x);
                Assert.AreEqual("((-5-3)-1)", v0.y);
                Assert.AreEqual("((-16)4)", v0.z);
                Assert.AreEqual("((6-6)-9)", v0.w);
            
                Assert.AreEqual("((-5-3)-1)", v2.x);
                Assert.AreEqual("((-2-4)-2)", v2.y);
            }
            {
                var v0 = new gvec4<string>("((-87)-1)", "((-87)-1)", "9", "9");
                var v1 = new gvec2<string>("(0-4)", "-9");
                var v2 = v0.yz;
                v0.yz = v1;
                var v3 = v0.yz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-87)-1)", v0.x);
                Assert.AreEqual("(0-4)", v0.y);
                Assert.AreEqual("-9", v0.z);
                Assert.AreEqual("9", v0.w);
            
                Assert.AreEqual("((-87)-1)", v2.x);
                Assert.AreEqual("9", v2.y);
            }
            {
                var v0 = new gvec4<string>("((-6-5)4)", "", "((-6-5)4)", "(-7-5)");
                var v1 = new gvec3<string>(null, "8", "8");
                var v2 = v0.xyz;
                v0.xyz = v1;
                var v3 = v0.xyz;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("8", v0.y);
                Assert.AreEqual("8", v0.z);
                Assert.AreEqual("(-7-5)", v0.w);
            
                Assert.AreEqual("((-6-5)4)", v2.x);
                Assert.AreEqual("", v2.y);
                Assert.AreEqual("((-6-5)4)", v2.z);
            }
            {
                var v0 = new gvec4<string>("((-1-5)9)", "((4-5)-5)", "8", null);
                var v1 = new gvec2<string>("", "((57)1)");
                var v2 = v0.xw;
                v0.xw = v1;
                var v3 = v0.xw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("((4-5)-5)", v0.y);
                Assert.AreEqual("8", v0.z);
                Assert.AreEqual("((57)1)", v0.w);
            
                Assert.AreEqual("((-1-5)9)", v2.x);
                Assert.AreEqual(null, v2.y);
            }
            {
                var v0 = new gvec4<string>("", "(75)", "((2-9)8)", null);
                var v1 = new gvec2<string>("((-5-7)0)", "");
                var v2 = v0.yw;
                v0.yw = v1;
                var v3 = v0.yw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("((-5-7)0)", v0.y);
                Assert.AreEqual("((2-9)8)", v0.z);
                Assert.AreEqual("", v0.w);
            
                Assert.AreEqual("(75)", v2.x);
                Assert.AreEqual(null, v2.y);
            }
            {
                var v0 = new gvec4<string>("(27)", "-1", "-1", "(27)");
                var v1 = new gvec3<string>("", null, "-8");
                var v2 = v0.xyw;
                v0.xyw = v1;
                var v3 = v0.xyw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("-1", v0.z);
                Assert.AreEqual("-8", v0.w);
            
                Assert.AreEqual("(27)", v2.x);
                Assert.AreEqual("-1", v2.y);
                Assert.AreEqual("(27)", v2.z);
            }
            {
                var v0 = new gvec4<string>("(4-2)", "-9", null, "((-97)5)");
                var v1 = new gvec2<string>("-8", "");
                var v2 = v0.zw;
                v0.zw = v1;
                var v3 = v0.zw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(4-2)", v0.x);
                Assert.AreEqual("-9", v0.y);
                Assert.AreEqual("-8", v0.z);
                Assert.AreEqual("", v0.w);
            
                Assert.AreEqual(null, v2.x);
                Assert.AreEqual("((-97)5)", v2.y);
            }
            {
                var v0 = new gvec4<string>("(-10)", "(78)", "((-6-7)1)", "(78)");
                var v1 = new gvec3<string>("", "(35)", "(35)");
                var v2 = v0.xzw;
                v0.xzw = v1;
                var v3 = v0.xzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("", v0.x);
                Assert.AreEqual("(78)", v0.y);
                Assert.AreEqual("(35)", v0.z);
                Assert.AreEqual("(35)", v0.w);
            
                Assert.AreEqual("(-10)", v2.x);
                Assert.AreEqual("((-6-7)1)", v2.y);
                Assert.AreEqual("(78)", v2.z);
            }
            {
                var v0 = new gvec4<string>("((6-8)0)", "(26)", "(26)", "-9");
                var v1 = new gvec3<string>("", "((-87)5)", "((-46)-7)");
                var v2 = v0.yzw;
                v0.yzw = v1;
                var v3 = v0.yzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((6-8)0)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("((-87)5)", v0.z);
                Assert.AreEqual("((-46)-7)", v0.w);
            
                Assert.AreEqual("(26)", v2.x);
                Assert.AreEqual("(26)", v2.y);
                Assert.AreEqual("-9", v2.z);
            }
            {
                var v0 = new gvec4<string>("(0-6)", "(-43)", "", "((-4-4)-4)");
                var v1 = new gvec4<string>("((-4-7)-7)", "-8", "(7-3)", "6");
                var v2 = v0.xyzw;
                v0.xyzw = v1;
                var v3 = v0.xyzw;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-4-7)-7)", v0.x);
                Assert.AreEqual("-8", v0.y);
                Assert.AreEqual("(7-3)", v0.z);
                Assert.AreEqual("6", v0.w);
            
                Assert.AreEqual("(0-6)", v2.x);
                Assert.AreEqual("(-43)", v2.y);
                Assert.AreEqual("", v2.z);
                Assert.AreEqual("((-4-4)-4)", v2.w);
            }
        }

        [Test]
        public void InlineRGBA()
        {
            {
                var v0 = new gvec4<string>(null, "", "(6-9)", "((32)-8)");
                var v1 = "(30)";
                var v2 = v0.r;
                v0.r = v1;
                var v3 = v0.r;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(30)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("(6-9)", v0.z);
                Assert.AreEqual("((32)-8)", v0.w);
            
                Assert.AreEqual(null, v2);
            }
            {
                var v0 = new gvec4<string>("4", "(-38)", "((54)5)", "(-66)");
                var v1 = "1";
                var v2 = v0.g;
                v0.g = v1;
                var v3 = v0.g;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("4", v0.x);
                Assert.AreEqual("1", v0.y);
                Assert.AreEqual("((54)5)", v0.z);
                Assert.AreEqual("(-66)", v0.w);
            
                Assert.AreEqual("(-38)", v2);
            }
            {
                var v0 = new gvec4<string>("((6-2)-5)", "(-7-4)", "((6-2)-5)", "8");
                var v1 = new gvec2<string>("4", null);
                var v2 = v0.rg;
                v0.rg = v1;
                var v3 = v0.rg;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("4", v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("((6-2)-5)", v0.z);
                Assert.AreEqual("8", v0.w);
            
                Assert.AreEqual("((6-2)-5)", v2.x);
                Assert.AreEqual("(-7-4)", v2.y);
            }
            {
                var v0 = new gvec4<string>("((5-3)-1)", "", "8", "-5");
                var v1 = "4";
                var v2 = v0.b;
                v0.b = v1;
                var v3 = v0.b;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((5-3)-1)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("4", v0.z);
                Assert.AreEqual("-5", v0.w);
            
                Assert.AreEqual("8", v2);
            }
            {
                var v0 = new gvec4<string>(null, "(91)", "-3", "(91)");
                var v1 = new gvec2<string>("((-5-6)-5)", "-3");
                var v2 = v0.rb;
                v0.rb = v1;
                var v3 = v0.rb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((-5-6)-5)", v0.x);
                Assert.AreEqual("(91)", v0.y);
                Assert.AreEqual("-3", v0.z);
                Assert.AreEqual("(91)", v0.w);
            
                Assert.AreEqual(null, v2.x);
                Assert.AreEqual("-3", v2.y);
            }
            {
                var v0 = new gvec4<string>("(1-8)", "(-9-8)", "((0-6)6)", "(1-8)");
                var v1 = new gvec2<string>("((-6-6)8)", "((-6-6)8)");
                var v2 = v0.gb;
                v0.gb = v1;
                var v3 = v0.gb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(1-8)", v0.x);
                Assert.AreEqual("((-6-6)8)", v0.y);
                Assert.AreEqual("((-6-6)8)", v0.z);
                Assert.AreEqual("(1-8)", v0.w);
            
                Assert.AreEqual("(-9-8)", v2.x);
                Assert.AreEqual("((0-6)6)", v2.y);
            }
            {
                var v0 = new gvec4<string>("((0-8)1)", "(20)", "(20)", "1");
                var v1 = new gvec3<string>("-5", "(-11)", "((-13)-4)");
                var v2 = v0.rgb;
                v0.rgb = v1;
                var v3 = v0.rgb;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("-5", v0.x);
                Assert.AreEqual("(-11)", v0.y);
                Assert.AreEqual("((-13)-4)", v0.z);
                Assert.AreEqual("1", v0.w);
            
                Assert.AreEqual("((0-8)1)", v2.x);
                Assert.AreEqual("(20)", v2.y);
                Assert.AreEqual("(20)", v2.z);
            }
            {
                var v0 = new gvec4<string>("((9-5)7)", "(66)", "((3-4)4)", "(66)");
                var v1 = "(68)";
                var v2 = v0.a;
                v0.a = v1;
                var v3 = v0.a;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((9-5)7)", v0.x);
                Assert.AreEqual("(66)", v0.y);
                Assert.AreEqual("((3-4)4)", v0.z);
                Assert.AreEqual("(68)", v0.w);
            
                Assert.AreEqual("(66)", v2);
            }
            {
                var v0 = new gvec4<string>("((4-9)-8)", "-1", "(-9-4)", "((-91)-8)");
                var v1 = new gvec2<string>("((05)7)", "((05)7)");
                var v2 = v0.ra;
                v0.ra = v1;
                var v3 = v0.ra;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("((05)7)", v0.x);
                Assert.AreEqual("-1", v0.y);
                Assert.AreEqual("(-9-4)", v0.z);
                Assert.AreEqual("((05)7)", v0.w);
            
                Assert.AreEqual("((4-9)-8)", v2.x);
                Assert.AreEqual("((-91)-8)", v2.y);
            }
            {
                var v0 = new gvec4<string>("(-4-9)", "0", "((-2-4)9)", "-9");
                var v1 = new gvec2<string>("", "8");
                var v2 = v0.ga;
                v0.ga = v1;
                var v3 = v0.ga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(-4-9)", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("((-2-4)9)", v0.z);
                Assert.AreEqual("8", v0.w);
            
                Assert.AreEqual("0", v2.x);
                Assert.AreEqual("-9", v2.y);
            }
            {
                var v0 = new gvec4<string>("((-5-1)4)", "-8", "((-4-9)6)", "(-9-7)");
                var v1 = new gvec3<string>(null, "(8-1)", "-1");
                var v2 = v0.rga;
                v0.rga = v1;
                var v3 = v0.rga;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual("(8-1)", v0.y);
                Assert.AreEqual("((-4-9)6)", v0.z);
                Assert.AreEqual("-1", v0.w);
            
                Assert.AreEqual("((-5-1)4)", v2.x);
                Assert.AreEqual("-8", v2.y);
                Assert.AreEqual("(-9-7)", v2.z);
            }
            {
                var v0 = new gvec4<string>("(8-1)", "(3-6)", "(3-6)", "-7");
                var v1 = new gvec2<string>("", "");
                var v2 = v0.ba;
                v0.ba = v1;
                var v3 = v0.ba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("(8-1)", v0.x);
                Assert.AreEqual("(3-6)", v0.y);
                Assert.AreEqual("", v0.z);
                Assert.AreEqual("", v0.w);
            
                Assert.AreEqual("(3-6)", v2.x);
                Assert.AreEqual("-7", v2.y);
            }
            {
                var v0 = new gvec4<string>("-8", "", "(-39)", null);
                var v1 = new gvec3<string>("8", "5", "((9-9)5)");
                var v2 = v0.rba;
                v0.rba = v1;
                var v3 = v0.rba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("8", v0.x);
                Assert.AreEqual("", v0.y);
                Assert.AreEqual("5", v0.z);
                Assert.AreEqual("((9-9)5)", v0.w);
            
                Assert.AreEqual("-8", v2.x);
                Assert.AreEqual("(-39)", v2.y);
                Assert.AreEqual(null, v2.z);
            }
            {
                var v0 = new gvec4<string>(null, "-3", "7", "");
                var v1 = new gvec3<string>(null, "((6-4)-5)", null);
                var v2 = v0.gba;
                v0.gba = v1;
                var v3 = v0.gba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual(null, v0.x);
                Assert.AreEqual(null, v0.y);
                Assert.AreEqual("((6-4)-5)", v0.z);
                Assert.AreEqual(null, v0.w);
            
                Assert.AreEqual("-3", v2.x);
                Assert.AreEqual("7", v2.y);
                Assert.AreEqual("", v2.z);
            }
            {
                var v0 = new gvec4<string>("(88)", "(88)", "((88)8)", "((88)8)");
                var v1 = new gvec4<string>("4", "-1", "-1", "4");
                var v2 = v0.rgba;
                v0.rgba = v1;
                var v3 = v0.rgba;
            
                Assert.AreEqual(v1, v3);
            
                Assert.AreEqual("4", v0.x);
                Assert.AreEqual("-1", v0.y);
                Assert.AreEqual("-1", v0.z);
                Assert.AreEqual("4", v0.w);
            
                Assert.AreEqual("(88)", v2.x);
                Assert.AreEqual("(88)", v2.y);
                Assert.AreEqual("((88)8)", v2.z);
                Assert.AreEqual("((88)8)", v2.w);
            }
        }

    }
}
